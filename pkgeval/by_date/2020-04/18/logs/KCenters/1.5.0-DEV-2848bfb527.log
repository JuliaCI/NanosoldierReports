Julia Version 1.5.0-DEV.642
Commit 2848bfb527 (2020-04-18 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed KCenters ──────────────────── v0.2.2
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.12
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Tables ────────────────────── v1.0.4
  Installed TableTraits ───────────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.1.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed MLDataPattern ─────────────── v0.5.1
  Installed DataFrames ────────────────── v0.20.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed Compat ────────────────────── v3.8.0
  Installed Reexport ──────────────────── v0.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MLDataUtils ───────────────── v0.5.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.12
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_NdZKNA/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_NdZKNA/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.12
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9326678744951884
[ Info: 0.8321307849884033
[ Info: 0.5561528046429157
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.34152678986390433
mean(cdnet.distances) = 0.39825087080399196
mean(crand.distances) = 0.33231126464903354
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6881680819180825,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.0234375,"distances_sum":1526.4897588051838}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.6796875,"distances_sum":524.6293769325812}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5400390625,"f1":0.6881680819180825,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.0234375,"distances_sum":1526.4897588051838}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8428972069597077,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.2421875,"distances_sum":2318.5386681071964}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9097413003663012,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.546875,"distances_sum":2859.521889829666}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9097413003663012,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.546875,"distances_sum":2859.521889829666}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522206959706965,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7734375,"distances_sum":3193.8793761464312}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9522206959706965,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7734375,"distances_sum":3193.8793761464312}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9522206959706965,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7734375,"distances_sum":3193.8793761464312}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.66796875,"f1":null,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.2734375,"distances_sum":1950.7014924669056}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.51171875,"f1":0.6629710567210572,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.53125,"distances_sum":1487.916505147626}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.66796875,"f1":null,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.2734375,"distances_sum":1950.7014924669056}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8679461163836172,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3984375,"distances_sum":2363.756925565464}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9410256410256415,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6015625,"distances_sum":2912.430938292497}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8651915792540801,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3984375,"distances_sum":2369.838432545354}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9410256410256415,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6015625,"distances_sum":2912.430938292497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9594150641025644,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.84375,"distances_sum":3069.2843242391455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662259615384621,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":3120.379613526972}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662259615384621,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":3120.379613526972}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662259615384621,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":3120.379613526972}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7922690157065165,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":7.1875,"distances_sum":1893.2835455966401}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7922690157065165,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":7.1875,"distances_sum":1893.2835455966401}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9311698717948723,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.4765625,"distances_sum":2770.47326326189}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.794535499223,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":7.1484375,"distances_sum":1927.8258619562546}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9311698717948723,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.4765625,"distances_sum":2770.47326326189}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586538461538466,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.7421875,"distances_sum":2997.9192742526775}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9360582126207133,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.4609375,"distances_sum":2856.9924179880204}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586538461538466,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.7421875,"distances_sum":2997.9192742526775}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9586538461538466,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.7421875,"distances_sum":2997.9192742526775}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.197265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.197265625,"f1":null,"seconds":3.2391399145126343e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":4.9375,"distances_sum":590.3215777197354}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.197265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.197265625,"f1":null,"seconds":3.2391399145126343e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":4.9375,"distances_sum":590.3215777197354}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.296875,"distances_sum":513.0241306393692}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.451171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.451171875,"f1":null,"seconds":4.049390554428101e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.90625,"distances_sum":899.1731637388444}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8623173701298711,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.40625,"distances_sum":1635.915469117897}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8623173701298711,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.40625,"distances_sum":1635.915469117897}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.916981456043957,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":1889.5355074358752}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.916981456043957,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6875,"distances_sum":1889.5355074358752}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590831043956048,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2148.2237314019417}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2235.97132729579}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.942010073260074,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9140625,"distances_sum":2025.4279375849421}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9370936355311361,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2003.1448311093197}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2235.97132729579}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2235.97132729579}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8794991466866475,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5390625,"distances_sum":1502.7650302619393}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8530547577422587,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4296875,"distances_sum":1392.3523425692122}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.8794991466866475,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5390625,"distances_sum":1502.7650302619393}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9461429195804202,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":1875.7619162386525}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548248626373629,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":1922.1889919197918}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9548248626373629,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":1922.1889919197918}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975784111721612,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.96875,"distances_sum":2035.6634682013}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975784111721612,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.96875,"distances_sum":2035.6634682013}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975784111721612,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.96875,"distances_sum":2035.6634682013}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6857992701742707,"seconds":4.438683390617371e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.125,"distances_sum":971.6054912115935}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.541015625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.541015625,"f1":0.6857992701742707,"seconds":4.438683390617371e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.125,"distances_sum":971.6054912115935}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8967777014652022,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.2890625,"distances_sum":1578.3159964665763}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9055033508158514,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3125,"distances_sum":1655.8518133085727}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9055033508158514,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3125,"distances_sum":1655.8518133085727}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9477767024642029,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7578125,"distances_sum":1896.4066606691329}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693108974358978,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2015.5771140565707}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.922576902264403,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.515625,"distances_sum":1709.1979107645416}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9326007326007334,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.5390625,"distances_sum":1776.4740626928133}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9091434607059616,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.4453125,"distances_sum":1605.3299326820336}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693108974358978,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2015.5771140565707}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693108974358978,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2015.5771140565707}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7910495754245763,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9921875,"distances_sum":1254.2809485290531}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.7910495754245763,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9921875,"distances_sum":1254.2809485290531}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8907967032967041,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.53125,"distances_sum":1646.1805230766274}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8154296875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8154296875,"f1":0.8907967032967041,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.53125,"distances_sum":1646.1805230766274}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9565366924741928,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.890625,"distances_sum":2011.4054301834685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975394917582418,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2138.1592797337776}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9071605477855487,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5625,"distances_sum":1713.9664995379217}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975394917582418,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2138.1592797337776}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.975394917582418,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9140625,"distances_sum":2138.1592797337776}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7683550824175832,"seconds":4.7869980335235596e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7265625,"distances_sum":1320.9162979974092}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7705736971361979,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.765625,"distances_sum":1325.0985908941116}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.33984375,"f1":null,"seconds":3.719702363014221e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.140625,"distances_sum":751.2436081377865}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.49609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.49609375,"f1":null,"seconds":4.1369348764419556e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.2578125,"distances_sum":1075.7092375529921}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7705736971361979,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.765625,"distances_sum":1325.0985908941116}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8643497127872137,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.40625,"distances_sum":1658.9193783698408}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8747053293928302,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.515625,"distances_sum":1699.1579756205947}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8580596486846495,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4375,"distances_sum":1651.4884223743238}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9341117216117222,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6484375,"distances_sum":2046.9648532816416}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9419044497169503,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2059.050596287735}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8982611138861146,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6015625,"distances_sum":1774.0808268577912}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7835081585081592,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.71875,"distances_sum":1344.1517135742708}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7963716838716848,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.921875,"distances_sum":1410.0172026622347}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9419044497169503,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2059.050596287735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670615842490844,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8828125,"distances_sum":2200.551624230132}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545844780219785,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.859375,"distances_sum":2099.4773513835416}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9671531593406599,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8984375,"distances_sum":2181.783099457183}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609603937728942,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8671875,"distances_sum":2146.717503436892}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670615842490844,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8828125,"distances_sum":2200.551624230132}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670615842490844,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8828125,"distances_sum":2200.551624230132}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7720793095793104,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.390625,"distances_sum":1197.4469356148409}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5302734375,"f1":0.6781308968808974,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.15625,"distances_sum":926.1144947113572}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.51953125,"f1":0.6687326562326567,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.109375,"distances_sum":943.9789380169694}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7720793095793104,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.390625,"distances_sum":1197.4469356148409}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.774381174381175,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.53125,"distances_sum":1187.8904143010557}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7869859307359314,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.625,"distances_sum":1229.0982413374022}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9390370046620051,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7109375,"distances_sum":1886.083327434269}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9390370046620051,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7109375,"distances_sum":1886.083327434269}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660027472527479,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.859375,"distances_sum":2019.8887476218717}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660199175824181,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.84375,"distances_sum":2019.278493074128}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431375915750921,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.6953125,"distances_sum":1910.1270074364686}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9660027472527479,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.859375,"distances_sum":2019.8887476218717}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9660027472527479,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.859375,"distances_sum":2019.8887476218717}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7989281551781561,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1338.1720897421296}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7827705280830288,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9140625,"distances_sum":1303.9407990653217}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":4.6137720346450806e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.09375,"distances_sum":722.298107023507}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7898152195027203,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.921875,"distances_sum":1339.2466097907115}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7989281551781561,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1338.1720897421296}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8684450965700974,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.2109375,"distances_sum":1679.2464246443812}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8912524975024984,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3984375,"distances_sum":1759.5697366295942}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.914340347152848,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5078125,"distances_sum":1873.2540391204602}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8607408216783224,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.265625,"distances_sum":1613.2830765314102}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8584233474858483,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1953125,"distances_sum":1612.0555240567849}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.914340347152848,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5078125,"distances_sum":1873.2540391204602}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500457875457882,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7734375,"distances_sum":2102.8868691357593}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9185954670329677,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5390625,"distances_sum":1871.582698926803}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322349,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2256.4743182625284}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9319456585081592,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4609375,"distances_sum":1999.0778457378271}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9555663086913092,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.796875,"distances_sum":2140.757858035168}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9510874542124547,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.796875,"distances_sum":2129.4416226110634}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9401842948717956,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.515625,"distances_sum":2025.8363353658597}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9278991841491848,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.546875,"distances_sum":1950.930235321377}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322349,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2256.4743182625284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322349,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2256.4743182625284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7844431610056615,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.8125,"distances_sum":1412.0621210970803}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":3.159046173095703e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":4.5703125,"distances_sum":400.2200319732784}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7844431610056615,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.8125,"distances_sum":1412.0621210970803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9242533508158515,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.484375,"distances_sum":2024.8828818405962}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9242533508158515,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.484375,"distances_sum":2024.8828818405962}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545043498168501,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":2182.2419882713216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9566626082251085,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7578125,"distances_sum":2219.2653248947627}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9566626082251085,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7578125,"distances_sum":2219.2653248947627}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9566626082251085,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7578125,"distances_sum":2219.2653248947627}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":2.9001384973526e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.7109375,"distances_sum":401.9950349507009}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8571922868797877,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.203125,"distances_sum":1700.4753190306067}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8571922868797877,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.203125,"distances_sum":1700.4753190306067}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8640234765234772,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.171875,"distances_sum":1777.946040880889}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9475160256410263,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.734375,"distances_sum":2257.8354888880335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.953079212454213,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":2323.7530266812123}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.953079212454213,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7421875,"distances_sum":2323.7530266812123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719894688644694,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.890625,"distances_sum":2398.3465076535663}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9685840201465203,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8671875,"distances_sum":2376.0059481208186}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663003663003668,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8984375,"distances_sum":2353.266241500065}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9710393772893777,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.875,"distances_sum":2396.924677242007}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679716117216121,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2364.4254766251142}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719894688644694,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.890625,"distances_sum":2398.3465076535663}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719894688644694,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.890625,"distances_sum":2398.3465076535663}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8339509448884457,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.9765625,"distances_sum":1638.4381267501017}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7660219988344996,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.5625,"distances_sum":1372.3971196534544}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7314453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7314453125,"f1":0.8339509448884457,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.9765625,"distances_sum":1638.4381267501017}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9352678571428577,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6875,"distances_sum":2136.088342965059}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556261446886452,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.734375,"distances_sum":2258.1035028950123}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8705117798867807,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.2578125,"distances_sum":1811.8423926950213}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8366565725940736,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.953125,"distances_sum":1646.0071383622067}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9556261446886452,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.734375,"distances_sum":2258.1035028950123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685325091575098,"seconds":8.560158312320709e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2312.5671693093195}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696657509157511,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2319.987752882172}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696657509157511,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2319.987752882172}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696657509157511,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2319.987752882172}}, n: 9
mean(cfft.distances) = 1.2381041944755442
mean(cdnet.distances) = 0.3596701169286329
mean(crand.distances) = 0.38004916800962446
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8777777777777779
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8622222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9177777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.92
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9177777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.88
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8466666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 3, 1, 2, 2, 3, 1, 2, 3, 3, 1]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.5628811813394229] ***
*** center 1: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.22273526829317794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22273526829317794, 0.1673974881344405] ***
*** starting iteration: 2; err: [Inf, 0.22273526829317794, 0.1673974881344405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788] ***
*** starting iteration: 3; err: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088] ***
*** starting iteration: 4; err: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088, 0.15081987884797593] ***
*** starting iteration: 5; err: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088, 0.15081987884797593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088, 0.15081987884797593, 0.14975075929652196] ***
*** starting iteration: 6; err: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088, 0.15081987884797593, 0.14975075929652196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088, 0.15081987884797593, 0.14975075929652196, 0.1490004435950728] ***
*** finished computation of 7 references, err: [Inf, 0.22273526829317794, 0.1673974881344405, 0.1554096268808788, 0.15209048561886088, 0.15081987884797593, 0.14975075929652196, 0.1490004435950728] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 70, 18]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 70), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 61, 0]]
** centroid: 2, normalized-entropy: 0.9753130577847331, [(1, 42), (2, 61)]
*** center 3: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 85, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 42, 0]]
** centroid: 5, normalized-entropy: 0.9753130577847331, [(1, 61), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [87, 4, 0]]
** centroid: 6, normalized-entropy: 0.26014536394771426, [(1, 87), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2338494510812939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338494510812939, 0.1619325985586078] ***
*** starting iteration: 2; err: [Inf, 0.2338494510812939, 0.1619325985586078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338494510812939, 0.1619325985586078, 0.1514669907222763] ***
*** starting iteration: 3; err: [Inf, 0.2338494510812939, 0.1619325985586078, 0.1514669907222763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338494510812939, 0.1619325985586078, 0.1514669907222763, 0.1496798106136898] ***
*** starting iteration: 4; err: [Inf, 0.2338494510812939, 0.1619325985586078, 0.1514669907222763, 0.1496798106136898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2338494510812939, 0.1619325985586078, 0.1514669907222763, 0.1496798106136898, 0.14923239405360492] ***
*** finished computation of 7 references, err: [Inf, 0.2338494510812939, 0.1619325985586078, 0.1514669907222763, 0.1496798106136898, 0.14923239405360492] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 85, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 49, 0]]
** centroid: 3, normalized-entropy: 0.9886994082884974, [(1, 63), (2, 49)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 21]]
** centroid: 4, normalized-entropy: 0.8354065254460503, [(2, 58), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 32, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 64), (2, 32)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [69, 25, 0]]
** centroid: 7, normalized-entropy: 0.8356038276131503, [(1, 69), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19497100377352028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497100377352028, 0.15756659071635584] ***
*** starting iteration: 2; err: [Inf, 0.19497100377352028, 0.15756659071635584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497100377352028, 0.15756659071635584, 0.15121315211766975] ***
*** starting iteration: 3; err: [Inf, 0.19497100377352028, 0.15756659071635584, 0.15121315211766975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497100377352028, 0.15756659071635584, 0.15121315211766975, 0.15015035514395847] ***
*** starting iteration: 4; err: [Inf, 0.19497100377352028, 0.15756659071635584, 0.15121315211766975, 0.15015035514395847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19497100377352028, 0.15756659071635584, 0.15121315211766975, 0.15015035514395847, 0.14948195853093263] ***
*** finished computation of 7 references, err: [Inf, 0.19497100377352028, 0.15756659071635584, 0.15121315211766975, 0.15015035514395847, 0.14948195853093263] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 79, 0]]
** centroid: 1, normalized-entropy: 0.5357150195407704, [(1, 11), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 17, 0]]
** centroid: 2, normalized-entropy: 0.9117517586347538, [(1, 35), (2, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [88, 30, 0]]
** centroid: 4, normalized-entropy: 0.8179252501386403, [(1, 88), (2, 30)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 115, 17]]
** centroid: 5, normalized-entropy: 0.5541045423898253, [(2, 115), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 24, 0]]
** centroid: 6, normalized-entropy: 0.7990485210442682, [(1, 75), (2, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3468352719049274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3468352719049274, 0.30460421021680933] ***
*** starting iteration: 2; err: [Inf, 0.3468352719049274, 0.30460421021680933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3468352719049274, 0.30460421021680933, 0.2988765070832953] ***
*** starting iteration: 3; err: [Inf, 0.3468352719049274, 0.30460421021680933, 0.2988765070832953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3468352719049274, 0.30460421021680933, 0.2988765070832953, 0.296763778185925] ***
*** finished computation of 3 references, err: [Inf, 0.3468352719049274, 0.30460421021680933, 0.2988765070832953, 0.296763778185925] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [110, 88, 0]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(1, 110), (2, 88)]
*** center 2: selecting labels [1] (freq >= 2) [from [221, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [55, 174, 18]]
** centroid: 3, normalized-entropy: 0.7028125859341934, [(1, 55), (2, 174), (3, 18)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4338581953469993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4338581953469993, 0.30076062459934283] ***
*** starting iteration: 2; err: [Inf, 0.4338581953469993, 0.30076062459934283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4338581953469993, 0.30076062459934283, 0.29397101829357647] ***
*** starting iteration: 3; err: [Inf, 0.4338581953469993, 0.30076062459934283, 0.29397101829357647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4338581953469993, 0.30076062459934283, 0.29397101829357647, 0.2929435440491343] ***
*** finished computation of 3 references, err: [Inf, 0.4338581953469993, 0.30076062459934283, 0.29397101829357647, 0.2929435440491343] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [5, 178, 21]]
** centroid: 1, normalized-entropy: 0.4040607524670258, [(1, 5), (2, 178), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [247, 7, 0]]
** centroid: 2, normalized-entropy: 0.18199889678862793, [(1, 247), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 64, 0]]
** centroid: 3, normalized-entropy: 0.8887619165202822, [(1, 145), (2, 64)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5516049471925357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5516049471925357, 0.3374446448486025] ***
*** starting iteration: 2; err: [Inf, 0.5516049471925357, 0.3374446448486025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5516049471925357, 0.3374446448486025, 0.3167360229515422] ***
*** starting iteration: 3; err: [Inf, 0.5516049471925357, 0.3374446448486025, 0.3167360229515422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5516049471925357, 0.3374446448486025, 0.3167360229515422, 0.3101213235195832] ***
*** finished computation of 3 references, err: [Inf, 0.5516049471925357, 0.3374446448486025, 0.3167360229515422, 0.3101213235195832] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 172, 17]]
** centroid: 1, normalized-entropy: 0.436293185543736, [(2, 172), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [273, 20, 0]]
** centroid: 2, normalized-entropy: 0.359394187634306, [(1, 273), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [112, 73, 0]]
** centroid: 3, normalized-entropy: 0.9677006817666208, [(1, 112), (2, 73)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3066617650771374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3066617650771374, 0.2692871098308726] ***
*** starting iteration: 2; err: [Inf, 0.3066617650771374, 0.2692871098308726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3066617650771374, 0.2692871098308726, 0.2541961550919546] ***
*** starting iteration: 3; err: [Inf, 0.3066617650771374, 0.2692871098308726, 0.2541961550919546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3066617650771374, 0.2692871098308726, 0.2541961550919546, 0.23945055494235978] ***
*** finished computation of 3 references, err: [Inf, 0.3066617650771374, 0.2692871098308726, 0.2541961550919546, 0.23945055494235978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [140, 86, 0]]
** centroid: 1, normalized-entropy: 0.9584161691555605, [(1, 140), (2, 86)]
*** center 2: selecting labels [1] (freq >= 1) [from [222, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [24, 176, 18]]
** centroid: 3, normalized-entropy: 0.5658295761461117, [(1, 24), (2, 176), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29332629833901036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29332629833901036, 0.23731453329913954] ***
*** starting iteration: 2; err: [Inf, 0.29332629833901036, 0.23731453329913954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29332629833901036, 0.23731453329913954, 0.23308141151306289] ***
*** starting iteration: 3; err: [Inf, 0.29332629833901036, 0.23731453329913954, 0.23308141151306289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29332629833901036, 0.23731453329913954, 0.23308141151306289, 0.23225000832296874] ***
*** finished computation of 3 references, err: [Inf, 0.29332629833901036, 0.23731453329913954, 0.23308141151306289, 0.23225000832296874] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [268, 7, 0]]
** centroid: 1, normalized-entropy: 0.17105730842261746, [(1, 268), (2, 7)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [2, 179, 21]]
** centroid: 2, normalized-entropy: 0.353311383919392, [(1, 2), (2, 179), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [127, 63, 0]]
** centroid: 3, normalized-entropy: 0.9165314483280015, [(1, 127), (2, 63)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2807278341531329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2807278341531329, 0.2510803666906892] ***
*** starting iteration: 2; err: [Inf, 0.2807278341531329, 0.2510803666906892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2807278341531329, 0.2510803666906892, 0.24279299998625198] ***
*** starting iteration: 3; err: [Inf, 0.2807278341531329, 0.2510803666906892, 0.24279299998625198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2807278341531329, 0.2510803666906892, 0.24279299998625198, 0.24147541702877187] ***
*** finished computation of 3 references, err: [Inf, 0.2807278341531329, 0.2510803666906892, 0.24279299998625198, 0.24147541702877187] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [104, 83, 0]]
** centroid: 1, normalized-entropy: 0.9908837460455601, [(1, 104), (2, 83)]
*** center 2: selecting labels [1] (freq >= 1) [from [239, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [42, 182, 17]]
** centroid: 3, normalized-entropy: 0.64041596687119, [(1, 42), (2, 182), (3, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19403701650912877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19403701650912877, 0.1644496972974692] ***
*** finished computation of 7 references, err: [Inf, 0.19403701650912877, 0.1644496972974692] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 82, 14]]
** centroid: 1, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [3, 75, 2]]
** centroid: 2, normalized-entropy: 0.25109393981835704, [(1, 3), (2, 75), (3, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 4, 0]]
** centroid: 3, normalized-entropy: 0.20432467098027943, [(1, 121), (2, 4)]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [4, 96, 2]]
** centroid: 4, normalized-entropy: 0.2377181546750611, [(1, 4), (2, 96), (3, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [70, 4, 0]]
** centroid: 7, normalized-entropy: 0.30337483608641397, [(1, 70), (2, 4)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20421444853932513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20421444853932513, 0.15676823177136134] ***
*** finished computation of 7 references, err: [Inf, 0.20421444853932513, 0.15676823177136134] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [106, 7, 0]]
** centroid: 1, normalized-entropy: 0.3351253992461406, [(1, 106), (2, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [97, 20, 0]]
** centroid: 3, normalized-entropy: 0.6598509794988008, [(1, 97), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 99, 0]]
** centroid: 4, normalized-entropy: 0.6367368786558286, [(1, 19), (2, 99)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 32, 21]]
** centroid: 5, normalized-entropy: 0.9687003436508602, [(2, 32), (3, 21)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 91, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18532165158553973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532165158553973, 0.15492572926677417] ***
*** finished computation of 7 references, err: [Inf, 0.18532165158553973, 0.15492572926677417] ***
*** center 1: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [98, 3, 0]]
** centroid: 2, normalized-entropy: 0.192900074578984, [(1, 98), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [24, 91, 0]]
** centroid: 3, normalized-entropy: 0.7389821181149047, [(1, 24), (2, 91)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 17]]
** centroid: 4, normalized-entropy: 0.7615877869576693, [(2, 60), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 34, 0]]
** centroid: 5, normalized-entropy: 0.9052002969560479, [(1, 72), (2, 34)]
*** center 6: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23230677084646303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23230677084646303, 0.18785492071949011] ***
*** finished computation of 7 references, err: [Inf, 0.23230677084646303, 0.18785492071949011] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 9, 0]]
** centroid: 2, normalized-entropy: 0.6226343162547099, [(1, 49), (2, 9)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [4, 96, 2]]
** centroid: 3, normalized-entropy: 0.2377181546750611, [(1, 4), (2, 96), (3, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [79, 52, 0]]
** centroid: 4, normalized-entropy: 0.9691364026876187, [(1, 79), (2, 52)]
*** center 5: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [179, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 39, 16]]
** centroid: 7, normalized-entropy: 0.8698926856041562, [(2, 39), (3, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22375386011698792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375386011698792, 0.15480513374196894] ***
*** finished computation of 7 references, err: [Inf, 0.22375386011698792, 0.15480513374196894] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 43, 0]]
** centroid: 1, normalized-entropy: 0.9891571023188154, [(1, 55), (2, 43)]
*** center 2: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 20, 0]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(1, 54), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 99, 21]]
** centroid: 5, normalized-entropy: 0.6690158350565576, [(2, 99), (3, 21)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 62, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [72, 25, 0]]
** centroid: 7, normalized-entropy: 0.8233045447828534, [(1, 72), (2, 25)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2269879634823019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2269879634823019, 0.18643946416195722] ***
*** finished computation of 7 references, err: [Inf, 0.2269879634823019, 0.18643946416195722] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [149, 14, 0]]
** centroid: 1, normalized-entropy: 0.4225988385398597, [(1, 149), (2, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [17, 137, 15]]
** centroid: 3, normalized-entropy: 0.5608480258216769, [(1, 17), (2, 137), (3, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [25, 2, 0]]
** centroid: 4, normalized-entropy: 0.38094658570539014, [(1, 25), (2, 2)]
*** center 5: selecting labels [1, 2, 3] (freq >= 2) [from [13, 112, 2]]
** centroid: 5, normalized-entropy: 0.37276267598243074, [(1, 13), (2, 112), (3, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2725088261340552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2725088261340552, 0.21677356695912936] ***
*** finished computation of 7 references, err: [Inf, 0.2725088261340552, 0.21677356695912936] ***
*** center 1: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [161, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [10, 62, 0]]
** centroid: 3, normalized-entropy: 0.581321498763703, [(1, 10), (2, 62)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 18]]
** centroid: 4, normalized-entropy: 0.9994110647387552, [(2, 17), (3, 18)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 69, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [16, 73, 0]]
** centroid: 6, normalized-entropy: 0.6795851972782937, [(1, 16), (2, 73)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [78, 41, 0]]
** centroid: 7, normalized-entropy: 0.9290950300256173, [(1, 78), (2, 41)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28056997939039474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28056997939039474, 0.2222360660607551] ***
*** finished computation of 7 references, err: [Inf, 0.28056997939039474, 0.2222360660607551] ***
*** center 1: selecting labels [1] (freq >= 1) [from [178, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 135, 21]]
** centroid: 3, normalized-entropy: 0.5699613760403499, [(2, 135), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [28, 45, 0]]
** centroid: 4, normalized-entropy: 0.9605187074766162, [(1, 28), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 18, 0]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(1, 8), (2, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 51, 0]]
** centroid: 6, normalized-entropy: 0.9604481737024744, [(1, 82), (2, 51)]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2665328735281815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2665328735281815, 0.2128305599258199] ***
*** finished computation of 7 references, err: [Inf, 0.2665328735281815, 0.2128305599258199] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [109, 25, 0]]
** centroid: 1, normalized-entropy: 0.6942347416140927, [(1, 109), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [29, 10, 0]]
** centroid: 2, normalized-entropy: 0.8212809417449864, [(1, 29), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 1) [from [5, 120, 4]]
** centroid: 4, normalized-entropy: 0.2739497185749103, [(1, 5), (2, 120), (3, 4)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 94, 13]]
** centroid: 5, normalized-entropy: 0.5336439173027161, [(2, 94), (3, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 16, 0]]
** centroid: 7, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5131497541917963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5131497541917963, 0.3344101435399975] ***
*** finished computation of 3 references, err: [Inf, 0.5131497541917963, 0.3344101435399975] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [142, 98, 0]]
** centroid: 1, normalized-entropy: 0.975617030221205, [(1, 142), (2, 98)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [73, 164, 18]]
** centroid: 2, normalized-entropy: 0.754655708724878, [(1, 73), (2, 164), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [171, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39228330341040685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39228330341040685, 0.3127752199302661] ***
*** finished computation of 3 references, err: [Inf, 0.39228330341040685, 0.3127752199302661] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 14, 0]]
** centroid: 1, normalized-entropy: 0.30166203063033736, [(1, 247), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [101, 132, 0]]
** centroid: 2, normalized-entropy: 0.9871930823656659, [(1, 101), (2, 132)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [49, 103, 21]]
** centroid: 3, normalized-entropy: 0.8392521120499425, [(1, 49), (2, 103), (3, 21)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39492575169681965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39492575169681965, 0.32573004348854206] ***
*** finished computation of 3 references, err: [Inf, 0.39492575169681965, 0.32573004348854206] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [56, 115, 17]]
** centroid: 1, normalized-entropy: 0.7998464431481784, [(1, 56), (2, 115), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 145, 0]]
** centroid: 2, normalized-entropy: 0.8677059401846617, [(1, 59), (2, 145)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [270, 5, 0]]
** centroid: 3, normalized-entropy: 0.13110652958234514, [(1, 270), (2, 5)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36053280833851287] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36053280833851287, 0.23461646813893686] ***
*** starting iteration: 2; err: [Inf, 0.36053280833851287, 0.23461646813893686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36053280833851287, 0.23461646813893686, 0.2331881176221657] ***
*** starting iteration: 3; err: [Inf, 0.36053280833851287, 0.23461646813893686, 0.2331881176221657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36053280833851287, 0.23461646813893686, 0.2331881176221657, 0.23299738886142457] ***
*** finished computation of 3 references, err: [Inf, 0.36053280833851287, 0.23461646813893686, 0.2331881176221657, 0.23299738886142457] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [63, 175, 18]]
** centroid: 1, normalized-entropy: 0.7206666218686156, [(1, 63), (2, 175), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [216, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [107, 87, 0]]
** centroid: 3, normalized-entropy: 0.9923197922708283, [(1, 107), (2, 87)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3007870473545687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3007870473545687, 0.24088263124607315] ***
*** starting iteration: 2; err: [Inf, 0.3007870473545687, 0.24088263124607315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3007870473545687, 0.24088263124607315, 0.23604658024519615] ***
*** starting iteration: 3; err: [Inf, 0.3007870473545687, 0.24088263124607315, 0.23604658024519615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3007870473545687, 0.24088263124607315, 0.23604658024519615, 0.2351864874321057] ***
*** finished computation of 3 references, err: [Inf, 0.3007870473545687, 0.24088263124607315, 0.23604658024519615, 0.2351864874321057] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [82, 179, 21]]
** centroid: 1, normalized-entropy: 0.7656008749192922, [(1, 82), (2, 179), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 70, 0]]
** centroid: 2, normalized-entropy: 0.9654811259411691, [(1, 109), (2, 70)]
*** center 3: selecting labels [1] (freq >= 1) [from [206, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3873335349092866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3873335349092866, 0.24467846783467273] ***
*** starting iteration: 2; err: [Inf, 0.3873335349092866, 0.24467846783467273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3873335349092866, 0.24467846783467273, 0.24349626268761448] ***
*** starting iteration: 3; err: [Inf, 0.3873335349092866, 0.24467846783467273, 0.24349626268761448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3873335349092866, 0.24467846783467273, 0.24349626268761448, 0.2431881832492271] ***
*** finished computation of 3 references, err: [Inf, 0.3873335349092866, 0.24467846783467273, 0.24349626268761448, 0.2431881832492271] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [244, 22, 0]]
** centroid: 1, normalized-entropy: 0.41164557093214904, [(1, 244), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [141, 50, 0]]
** centroid: 2, normalized-entropy: 0.8294207119259784, [(1, 141), (2, 50)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 193, 17]]
** centroid: 3, normalized-entropy: 0.40552610578995474, [(2, 193), (3, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36352494362931886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36352494362931886, 0.3030989901470328] ***
*** starting iteration: 2; err: [Inf, 0.36352494362931886, 0.3030989901470328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36352494362931886, 0.3030989901470328, 0.2977183419307722] ***
*** starting iteration: 3; err: [Inf, 0.36352494362931886, 0.3030989901470328, 0.2977183419307722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36352494362931886, 0.3030989901470328, 0.2977183419307722, 0.2959133673923554] ***
*** finished computation of 3 references, err: [Inf, 0.36352494362931886, 0.3030989901470328, 0.2977183419307722, 0.2959133673923554] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [86, 174, 18]]
** centroid: 1, normalized-entropy: 0.758649977947573, [(1, 86), (2, 174), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [206, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 88, 0]]
** centroid: 3, normalized-entropy: 0.9992158792218827, [(1, 94), (2, 88)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4216792333153435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4216792333153435, 0.29674047488346417] ***
*** starting iteration: 2; err: [Inf, 0.4216792333153435, 0.29674047488346417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4216792333153435, 0.29674047488346417, 0.2934655379797185] ***
*** starting iteration: 3; err: [Inf, 0.4216792333153435, 0.29674047488346417, 0.2934655379797185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4216792333153435, 0.29674047488346417, 0.2934655379797185, 0.2928018836985933] ***
*** finished computation of 3 references, err: [Inf, 0.4216792333153435, 0.29674047488346417, 0.2934655379797185, 0.2928018836985933] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [260, 17, 0]]
** centroid: 1, normalized-entropy: 0.3328667159096434, [(1, 260), (2, 17)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [1, 170, 21]]
** centroid: 2, normalized-entropy: 0.3433233011202995, [(1, 1), (2, 170), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [136, 62, 0]]
** centroid: 3, normalized-entropy: 0.8967550157663144, [(1, 136), (2, 62)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3665853943005539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3665853943005539, 0.29374369287603663] ***
*** starting iteration: 2; err: [Inf, 0.3665853943005539, 0.29374369287603663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3665853943005539, 0.29374369287603663, 0.2905527068863342] ***
*** starting iteration: 3; err: [Inf, 0.3665853943005539, 0.29374369287603663, 0.2905527068863342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3665853943005539, 0.29374369287603663, 0.2905527068863342, 0.2896754751470627] ***
*** finished computation of 3 references, err: [Inf, 0.3665853943005539, 0.29374369287603663, 0.2905527068863342, 0.2896754751470627] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [74, 181, 17]]
** centroid: 1, normalized-entropy: 0.7268017794020656, [(1, 74), (2, 181), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [113, 84, 0]]
** centroid: 2, normalized-entropy: 0.984311280033371, [(1, 113), (2, 84)]
*** center 3: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2408893038113196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408893038113196, 0.19475386758662155] ***
*** finished computation of 7 references, err: [Inf, 0.2408893038113196, 0.19475386758662155] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [100, 15, 0]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(1, 100), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 18]]
** centroid: 2, normalized-entropy: 0.9426831892554921, [(2, 32), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [84, 3, 0]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(1, 84), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 4, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 108, 0]]
** centroid: 6, normalized-entropy: 0.07526826758743464, [(1, 1), (2, 108)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 103, 0]]
** centroid: 7, normalized-entropy: 0.07823246525771242, [(1, 1), (2, 103)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22543686722311704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22543686722311704, 0.1995703707179655] ***
*** finished computation of 7 references, err: [Inf, 0.22543686722311704, 0.1995703707179655] ***
*** center 1: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 13, 0]]
** centroid: 2, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 42, 21]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 42), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 74, 0]]
** centroid: 5, normalized-entropy: 0.9121156307204275, [(1, 36), (2, 74)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [32, 65, 0]]
** centroid: 6, normalized-entropy: 0.9148210087144519, [(1, 32), (2, 65)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2435115387710719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2435115387710719, 0.1936010449169681] ***
*** finished computation of 7 references, err: [Inf, 0.2435115387710719, 0.1936010449169681] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 17]]
** centroid: 1, normalized-entropy: 0.6819353204567525, [(2, 77), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 6, 0]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(1, 69), (2, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [95, 36, 0]]
** centroid: 5, normalized-entropy: 0.8482811477713184, [(1, 95), (2, 36)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [13, 57, 0]]
** centroid: 6, normalized-entropy: 0.6924194863274741, [(1, 13), (2, 57)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 89, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.224927178222907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.224927178222907, 0.19319582206837543] ***
*** starting iteration: 2; err: [Inf, 0.224927178222907, 0.19319582206837543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.224927178222907, 0.19319582206837543, 0.19164538241198492] ***
*** starting iteration: 3; err: [Inf, 0.224927178222907, 0.19319582206837543, 0.19164538241198492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.224927178222907, 0.19319582206837543, 0.19164538241198492, 0.19091597998895132] ***
*** finished computation of 7 references, err: [Inf, 0.224927178222907, 0.19319582206837543, 0.19164538241198492, 0.19091597998895132] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 87, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 25, 0]]
** centroid: 2, normalized-entropy: 0.8233045447828534, [(1, 72), (2, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 61, 0]]
** centroid: 4, normalized-entropy: 0.9942417967729406, [(1, 51), (2, 61)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 87, 18]]
** centroid: 5, normalized-entropy: 0.6609623351442084, [(2, 87), (3, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [92, 2, 0]]
** centroid: 7, normalized-entropy: 0.14854949043034832, [(1, 92), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24033149067072318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24033149067072318, 0.19219131908818277] ***
*** starting iteration: 2; err: [Inf, 0.24033149067072318, 0.19219131908818277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24033149067072318, 0.19219131908818277, 0.1871597905290024] ***
*** starting iteration: 3; err: [Inf, 0.24033149067072318, 0.19219131908818277, 0.1871597905290024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24033149067072318, 0.19219131908818277, 0.1871597905290024, 0.18551444239227444] ***
*** finished computation of 7 references, err: [Inf, 0.24033149067072318, 0.19219131908818277, 0.1871597905290024, 0.18551444239227444] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [57, 36, 0]]
** centroid: 1, normalized-entropy: 0.9629004147713269, [(1, 57), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [40, 50, 0]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(1, 40), (2, 50)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 82, 21]]
** centroid: 3, normalized-entropy: 0.7296274178915987, [(2, 82), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [25, 72, 0]]
** centroid: 5, normalized-entropy: 0.8233045447828534, [(1, 25), (2, 72)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [86, 9, 0]]
** centroid: 7, normalized-entropy: 0.4520861986745138, [(1, 86), (2, 9)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22935023339293517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22935023339293517, 0.1909591244461051] ***
*** starting iteration: 2; err: [Inf, 0.22935023339293517, 0.1909591244461051] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22935023339293517, 0.1909591244461051, 0.18931280215294555] ***
*** starting iteration: 3; err: [Inf, 0.22935023339293517, 0.1909591244461051, 0.18931280215294555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22935023339293517, 0.1909591244461051, 0.18931280215294555, 0.18934226193572806] ***
*** finished computation of 7 references, err: [Inf, 0.22935023339293517, 0.1909591244461051, 0.18931280215294555, 0.18934226193572806] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 90, 17]]
** centroid: 1, normalized-entropy: 0.6316198184485629, [(2, 90), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 17, 0]]
** centroid: 3, normalized-entropy: 0.6991413063352633, [(1, 73), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 35, 0]]
** centroid: 4, normalized-entropy: 0.9554189905653109, [(1, 58), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 20, 0]]
** centroid: 5, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [88, 3, 0]]
** centroid: 6, normalized-entropy: 0.20905980566852464, [(1, 88), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 100, 0]]
** centroid: 7, normalized-entropy: 0.13923299905509884, [(1, 2), (2, 100)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20217655964095044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217655964095044, 0.1511096019205545] ***
*** starting iteration: 2; err: [Inf, 0.20217655964095044, 0.1511096019205545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217655964095044, 0.1511096019205545, 0.14864106906449293] ***
*** starting iteration: 3; err: [Inf, 0.20217655964095044, 0.1511096019205545, 0.14864106906449293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217655964095044, 0.1511096019205545, 0.14864106906449293, 0.14839404969204878] ***
*** finished computation of 7 references, err: [Inf, 0.20217655964095044, 0.1511096019205545, 0.14864106906449293, 0.14839404969204878] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 96, 0]]
** centroid: 1, normalized-entropy: 0.35826863860424546, [(1, 7), (2, 96)]
*** center 2: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 20, 0]]
** centroid: 4, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 5: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 59, 18]]
** centroid: 6, normalized-entropy: 0.7845191388986644, [(2, 59), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 87, 0]]
** centroid: 7, normalized-entropy: 0.08970338978685011, [(1, 1), (2, 87)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21106914450963218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21106914450963218, 0.15352023056445774] ***
*** starting iteration: 2; err: [Inf, 0.21106914450963218, 0.15352023056445774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21106914450963218, 0.15352023056445774, 0.15036621771339534] ***
*** starting iteration: 3; err: [Inf, 0.21106914450963218, 0.15352023056445774, 0.15036621771339534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21106914450963218, 0.15352023056445774, 0.15036621771339534, 0.14978795507545772] ***
*** finished computation of 7 references, err: [Inf, 0.21106914450963218, 0.15352023056445774, 0.15036621771339534, 0.14978795507545772] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [101, 10, 0]]
** centroid: 1, normalized-entropy: 0.436770454577089, [(1, 101), (2, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 53, 21]]
** centroid: 3, normalized-entropy: 0.8605553930586318, [(2, 53), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 25, 0]]
** centroid: 5, normalized-entropy: 0.7956792965030224, [(1, 79), (2, 25)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 89, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 72, 0]]
** centroid: 7, normalized-entropy: 0.1792560669283214, [(1, 2), (2, 72)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18891000814842007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18891000814842007, 0.15189809518666572] ***
*** starting iteration: 2; err: [Inf, 0.18891000814842007, 0.15189809518666572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18891000814842007, 0.15189809518666572, 0.14899219758389728] ***
*** starting iteration: 3; err: [Inf, 0.18891000814842007, 0.15189809518666572, 0.14899219758389728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18891000814842007, 0.15189809518666572, 0.14899219758389728, 0.14851280483884968] ***
*** finished computation of 7 references, err: [Inf, 0.18891000814842007, 0.15189809518666572, 0.14899219758389728, 0.14851280483884968] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 120, 3]]
** centroid: 1, normalized-entropy: 0.16542703399626665, [(2, 120), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [80, 22, 0]]
** centroid: 3, normalized-entropy: 0.7522121733341471, [(1, 80), (2, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 80, 14]]
** centroid: 5, normalized-entropy: 0.607171654871303, [(2, 80), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [80, 23, 0]]
** centroid: 6, normalized-entropy: 0.7661493370832159, [(1, 80), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 20, 0]]
** centroid: 7, normalized-entropy: 0.9127341558073343, [(1, 41), (2, 20)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9559919200637764, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.908003812195429, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 14
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9559919200637764, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.908003812195429, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 14
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9559919200637764, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.908003812195429, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.213100610013531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213100610013531, 0.195169603754137] ***
*** starting iteration: 2; err: [Inf, 0.213100610013531, 0.195169603754137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213100610013531, 0.195169603754137, 0.19372305684434893] ***
*** starting iteration: 3; err: [Inf, 0.213100610013531, 0.195169603754137, 0.19372305684434893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213100610013531, 0.195169603754137, 0.19372305684434893, 0.19265083947174205] ***
*** starting iteration: 4; err: [Inf, 0.213100610013531, 0.195169603754137, 0.19372305684434893, 0.19265083947174205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213100610013531, 0.195169603754137, 0.19372305684434893, 0.19265083947174205, 0.1918448738239191] ***
*** finished computation of 7 references, err: [Inf, 0.213100610013531, 0.195169603754137, 0.19372305684434893, 0.19265083947174205, 0.1918448738239191] ***
*** center 1: selecting labels [1] (freq >= 2) [from [118, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 18]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 66), (3, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 17, 0]]
** centroid: 4, normalized-entropy: 0.7363230272021651, [(1, 65), (2, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 93, 0]]
** centroid: 5, normalized-entropy: 0.581321498763703, [(1, 15), (2, 93)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [14, 85, 0]]
** centroid: 6, normalized-entropy: 0.5879303728017198, [(1, 14), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22205447816224336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22205447816224336, 0.1961424869570373] ***
*** starting iteration: 2; err: [Inf, 0.22205447816224336, 0.1961424869570373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544] ***
*** starting iteration: 3; err: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544, 0.19098168121709458] ***
*** starting iteration: 4; err: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544, 0.19098168121709458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544, 0.19098168121709458, 0.18986275030797098] ***
*** starting iteration: 5; err: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544, 0.19098168121709458, 0.18986275030797098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544, 0.19098168121709458, 0.18986275030797098, 0.1893009336182158] ***
*** finished computation of 7 references, err: [Inf, 0.22205447816224336, 0.1961424869570373, 0.19242932364439544, 0.19098168121709458, 0.18986275030797098, 0.1893009336182158] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 87, 21]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 87), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [58, 18, 0]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(1, 58), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [56, 42, 0]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(1, 56), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 9, 0]]
** centroid: 5, normalized-entropy: 0.442571064839798, [(1, 89), (2, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 93, 0]]
** centroid: 7, normalized-entropy: 0.36592365090022316, [(1, 7), (2, 93)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22991324493848625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22991324493848625, 0.19476265688824734] ***
*** starting iteration: 2; err: [Inf, 0.22991324493848625, 0.19476265688824734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22991324493848625, 0.19476265688824734, 0.192082312644349] ***
*** starting iteration: 3; err: [Inf, 0.22991324493848625, 0.19476265688824734, 0.192082312644349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22991324493848625, 0.19476265688824734, 0.192082312644349, 0.19177098908340154] ***
*** finished computation of 7 references, err: [Inf, 0.22991324493848625, 0.19476265688824734, 0.192082312644349, 0.19177098908340154] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [19, 83, 0]]
** centroid: 1, normalized-entropy: 0.6936126404300949, [(1, 19), (2, 83)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 17, 0]]
** centroid: 2, normalized-entropy: 0.6904285855304167, [(1, 75), (2, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 56, 17]]
** centroid: 4, normalized-entropy: 0.7829924501610913, [(2, 56), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [100, 4, 0]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(1, 100), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [70, 4, 0]]
** centroid: 6, normalized-entropy: 0.30337483608641397, [(1, 70), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 101, 0]]
** centroid: 7, normalized-entropy: 0.13815722856252646, [(1, 2), (2, 101)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1937485296718284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937485296718284, 0.15550506706055892] ***
*** starting iteration: 2; err: [Inf, 0.1937485296718284, 0.15550506706055892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937485296718284, 0.15550506706055892, 0.1516505763565355] ***
*** starting iteration: 3; err: [Inf, 0.1937485296718284, 0.15550506706055892, 0.1516505763565355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937485296718284, 0.15550506706055892, 0.1516505763565355, 0.151161663190884] ***
*** finished computation of 7 references, err: [Inf, 0.1937485296718284, 0.15550506706055892, 0.1516505763565355, 0.151161663190884] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 11, 0]]
** centroid: 1, normalized-entropy: 0.4901757916273403, [(1, 92), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 55, 18]]
** centroid: 2, normalized-entropy: 0.8058049113482652, [(2, 55), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [88, 7, 0]]
** centroid: 3, normalized-entropy: 0.3795243778626806, [(1, 88), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 4, 0]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(1, 80), (2, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 95, 0]]
** centroid: 6, normalized-entropy: 0.24414164238829597, [(1, 4), (2, 95)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 90, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19173108557493299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19173108557493299, 0.15196125363900342] ***
*** starting iteration: 2; err: [Inf, 0.19173108557493299, 0.15196125363900342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19173108557493299, 0.15196125363900342, 0.14878549732231552] ***
*** starting iteration: 3; err: [Inf, 0.19173108557493299, 0.15196125363900342, 0.14878549732231552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19173108557493299, 0.15196125363900342, 0.14878549732231552, 0.14794325483669674] ***
*** finished computation of 7 references, err: [Inf, 0.19173108557493299, 0.15196125363900342, 0.14878549732231552, 0.14794325483669674] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 82, 17]]
** centroid: 1, normalized-entropy: 0.6616179061408356, [(2, 82), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 22, 0]]
** centroid: 3, normalized-entropy: 0.8582307926411409, [(1, 56), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [88, 28, 0]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(1, 88), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 36, 0]]
** centroid: 5, normalized-entropy: 0.9336337717211408, [(1, 67), (2, 36)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 81, 4]]
** centroid: 6, normalized-entropy: 0.2737691686829417, [(2, 81), (3, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19294270123473775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294270123473775, 0.1570517513244741] ***
*** starting iteration: 2; err: [Inf, 0.19294270123473775, 0.1570517513244741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294270123473775, 0.1570517513244741, 0.15245707207282577] ***
*** starting iteration: 3; err: [Inf, 0.19294270123473775, 0.1570517513244741, 0.15245707207282577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294270123473775, 0.1570517513244741, 0.15245707207282577, 0.1516179161961714] ***
*** finished computation of 7 references, err: [Inf, 0.19294270123473775, 0.1570517513244741, 0.15245707207282577, 0.1516179161961714] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 104, 0]]
** centroid: 1, normalized-entropy: 0.40093068188727266, [(1, 9), (2, 104)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 9, 0]]
** centroid: 2, normalized-entropy: 0.5858732928619204, [(1, 55), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [114, 8, 0]]
** centroid: 4, normalized-entropy: 0.34918437350730797, [(1, 114), (2, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [99, 8, 0]]
** centroid: 6, normalized-entropy: 0.3834641323087979, [(1, 99), (2, 8)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 47, 17]]
** centroid: 7, normalized-entropy: 0.8351164948421137, [(2, 47), (3, 17)]
finished with 8 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9559919200637764, 0.9409978841116566, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.909007810205415, 0.908003812195429, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.17117819074798632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17117819074798632, 0.15275435058634962] ***
*** finished computation of 7 references, err: [Inf, 0.17117819074798632, 0.15275435058634962] ***
*** center 1: selecting labels [1] (freq >= 1) [from [130, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [101, 6, 0]]
** centroid: 2, normalized-entropy: 0.31166198862303296, [(1, 101), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [110, 6, 0]]
** centroid: 3, normalized-entropy: 0.29367630985136944, [(1, 110), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 47, 0]]
** centroid: 4, normalized-entropy: 0.9996590716691399, [(1, 45), (2, 47)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 94, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 81, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 28, 18]]
** centroid: 7, normalized-entropy: 0.9656361333706099, [(2, 28), (3, 18)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24437220397543558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24437220397543558, 0.17728034372831034] ***
*** finished computation of 7 references, err: [Inf, 0.24437220397543558, 0.17728034372831034] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [164, 4, 0]]
** centroid: 2, normalized-entropy: 0.1623261801753929, [(1, 164), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 82, 21]]
** centroid: 3, normalized-entropy: 0.7296274178915987, [(2, 82), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 61, 0]]
** centroid: 5, normalized-entropy: 0.8063495153650776, [(1, 20), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 102, 0]]
** centroid: 6, normalized-entropy: 0.9266587989971917, [(1, 53), (2, 102)]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36101930118773295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36101930118773295, 0.22315715706587463] ***
*** finished computation of 7 references, err: [Inf, 0.36101930118773295, 0.22315715706587463] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [174, 50, 0]]
** centroid: 2, normalized-entropy: 0.765993414171823, [(1, 174), (2, 50)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 183, 17]]
** centroid: 3, normalized-entropy: 0.29192727711368965, [(1, 1), (2, 183), (3, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [138, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 32, 0]]
** centroid: 5, normalized-entropy: 0.9985532860835362, [(1, 35), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 17)
[0.9559919200637764, 0.9409978841116566, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.9179628730526934, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.909007810205415, 0.908003812195429, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.3986704715460472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986704715460472, 0.2460661610663944] ***
*** starting iteration: 2; err: [Inf, 0.3986704715460472, 0.2460661610663944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986704715460472, 0.2460661610663944, 0.24464257351226276] ***
*** starting iteration: 3; err: [Inf, 0.3986704715460472, 0.2460661610663944, 0.24464257351226276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986704715460472, 0.2460661610663944, 0.24464257351226276, 0.24418058729375358] ***
*** finished computation of 3 references, err: [Inf, 0.3986704715460472, 0.2460661610663944, 0.24464257351226276, 0.24418058729375358] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [231, 24, 0]]
** centroid: 1, normalized-entropy: 0.4500666580964382, [(1, 231), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [155, 43, 0]]
** centroid: 2, normalized-entropy: 0.7549694116467964, [(1, 155), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 195, 18]]
** centroid: 3, normalized-entropy: 0.4178642624458583, [(2, 195), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35262763412806136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35262763412806136, 0.23525840608679552] ***
*** starting iteration: 2; err: [Inf, 0.35262763412806136, 0.23525840608679552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35262763412806136, 0.23525840608679552, 0.23286130853943984] ***
*** starting iteration: 3; err: [Inf, 0.35262763412806136, 0.23525840608679552, 0.23286130853943984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35262763412806136, 0.23525840608679552, 0.23286130853943984, 0.23228099647870307] ***
*** finished computation of 3 references, err: [Inf, 0.35262763412806136, 0.23525840608679552, 0.23286130853943984, 0.23228099647870307] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [260, 7, 0]]
** centroid: 1, normalized-entropy: 0.17505130306657482, [(1, 260), (2, 7)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [2, 181, 21]]
** centroid: 2, normalized-entropy: 0.350920649511702, [(1, 2), (2, 181), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [135, 61, 0]]
** centroid: 3, normalized-entropy: 0.894581868639707, [(1, 135), (2, 61)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34517138721239843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34517138721239843, 0.2504676430565731] ***
*** starting iteration: 2; err: [Inf, 0.34517138721239843, 0.2504676430565731] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34517138721239843, 0.2504676430565731, 0.2443117477094707] ***
*** starting iteration: 3; err: [Inf, 0.34517138721239843, 0.2504676430565731, 0.2443117477094707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34517138721239843, 0.2504676430565731, 0.2443117477094707, 0.24342053822581022] ***
*** finished computation of 3 references, err: [Inf, 0.34517138721239843, 0.2504676430565731, 0.2443117477094707, 0.24342053822581022] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [244, 30, 0]]
** centroid: 1, normalized-entropy: 0.49837285583060054, [(1, 244), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [141, 48, 0]]
** centroid: 2, normalized-entropy: 0.8175072881213616, [(1, 141), (2, 48)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 187, 17]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 187), (3, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4057592255575163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4057592255575163, 0.2990087943519368] ***
*** starting iteration: 2; err: [Inf, 0.4057592255575163, 0.2990087943519368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4057592255575163, 0.2990087943519368, 0.29641250739336944] ***
*** starting iteration: 3; err: [Inf, 0.4057592255575163, 0.2990087943519368, 0.29641250739336944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4057592255575163, 0.2990087943519368, 0.29641250739336944, 0.29586469040143193] ***
*** finished computation of 3 references, err: [Inf, 0.4057592255575163, 0.2990087943519368, 0.29641250739336944, 0.29586469040143193] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [75, 173, 18]]
** centroid: 1, normalized-entropy: 0.7454800139207932, [(1, 75), (2, 173), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [96, 89, 0]]
** centroid: 3, normalized-entropy: 0.9989669987582561, [(1, 96), (2, 89)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3774962330389226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774962330389226, 0.30492325264240044] ***
*** starting iteration: 2; err: [Inf, 0.3774962330389226, 0.30492325264240044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774962330389226, 0.30492325264240044, 0.29590242024025193] ***
*** starting iteration: 3; err: [Inf, 0.3774962330389226, 0.30492325264240044, 0.29590242024025193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774962330389226, 0.30492325264240044, 0.29590242024025193, 0.2931498036590004] ***
*** starting iteration: 4; err: [Inf, 0.3774962330389226, 0.30492325264240044, 0.29590242024025193, 0.2931498036590004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774962330389226, 0.30492325264240044, 0.29590242024025193, 0.2931498036590004, 0.2928198826858129] ***
*** finished computation of 3 references, err: [Inf, 0.3774962330389226, 0.30492325264240044, 0.29590242024025193, 0.2931498036590004, 0.2928198826858129] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [69, 168, 21]]
** centroid: 1, normalized-entropy: 0.7611762788623848, [(1, 69), (2, 168), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [112, 81, 0]]
** centroid: 2, normalized-entropy: 0.9813088429462864, [(1, 112), (2, 81)]
*** center 3: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40118317560165717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40118317560165717, 0.3031835151861409] ***
*** starting iteration: 2; err: [Inf, 0.40118317560165717, 0.3031835151861409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078] ***
*** starting iteration: 3; err: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078, 0.29821856838205585] ***
*** starting iteration: 4; err: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078, 0.29821856838205585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078, 0.29821856838205585, 0.2968136024210362] ***
*** starting iteration: 5; err: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078, 0.29821856838205585, 0.2968136024210362] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078, 0.29821856838205585, 0.2968136024210362, 0.2961234025506378] ***
*** finished computation of 3 references, err: [Inf, 0.40118317560165717, 0.3031835151861409, 0.2993126879495078, 0.29821856838205585, 0.2968136024210362, 0.2961234025506378] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [101, 142, 17]]
** centroid: 1, normalized-entropy: 0.7973625005906845, [(1, 101), (2, 142), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 123, 0]]
** centroid: 2, normalized-entropy: 0.9593795191444577, [(1, 76), (2, 123)]
*** center 3: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9559919200637764, 0.9409978841116566, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.9179628730526934, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.909007810205415, 0.9080158002313691, 0.908003812195429, 0.9060078042113971, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 19
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 19)
[0.9559919200637764, 0.9409978841116566, 0.9359868850886816, 0.9329868790946635, 0.9209898521275767, 0.9179628730526934, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.909007810205415, 0.9080158002313691, 0.908003812195429, 0.9060078042113971, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.23671094737052023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23671094737052023, 0.18857591142094843] ***
*** starting iteration: 2; err: [Inf, 0.23671094737052023, 0.18857591142094843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23671094737052023, 0.18857591142094843, 0.18798274166921192] ***
*** finished computation of 7 references, err: [Inf, 0.23671094737052023, 0.18857591142094843, 0.18798274166921192] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 88, 0]]
** centroid: 1, normalized-entropy: 0.08887969568457589, [(1, 1), (2, 88)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 27, 0]]
** centroid: 2, normalized-entropy: 0.9018043446575508, [(1, 58), (2, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 65, 0]]
** centroid: 4, normalized-entropy: 0.9857436088270686, [(1, 49), (2, 65)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 81, 18]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 81), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 1, 0]]
** centroid: 6, normalized-entropy: 0.08214305133815322, [(1, 97), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25924781978415185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25924781978415185, 0.19406646912962175] ***
*** starting iteration: 2; err: [Inf, 0.25924781978415185, 0.19406646912962175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25924781978415185, 0.19406646912962175, 0.18965529467536324] ***
*** starting iteration: 3; err: [Inf, 0.25924781978415185, 0.19406646912962175, 0.18965529467536324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25924781978415185, 0.19406646912962175, 0.18965529467536324, 0.18927620907874032] ***
*** finished computation of 7 references, err: [Inf, 0.25924781978415185, 0.19406646912962175, 0.18965529467536324, 0.18927620907874032] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 41, 0]]
** centroid: 1, normalized-entropy: 0.9626983787500768, [(1, 65), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 10, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 85, 21]]
** centroid: 3, normalized-entropy: 0.7181384220154764, [(2, 85), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 27, 0]]
** centroid: 5, normalized-entropy: 0.8531935252328874, [(1, 70), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [86, 6, 0]]
** centroid: 6, normalized-entropy: 0.3478169135710632, [(1, 86), (2, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 80, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24043679796438525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24043679796438525, 0.19454452026959346] ***
*** starting iteration: 2; err: [Inf, 0.24043679796438525, 0.19454452026959346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24043679796438525, 0.19454452026959346, 0.19251362888653506] ***
*** starting iteration: 3; err: [Inf, 0.24043679796438525, 0.19454452026959346, 0.19251362888653506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24043679796438525, 0.19454452026959346, 0.19251362888653506, 0.19214278793540493] ***
*** finished computation of 7 references, err: [Inf, 0.24043679796438525, 0.19454452026959346, 0.19251362888653506, 0.19214278793540493] ***
*** center 1: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 72, 17]]
** centroid: 2, normalized-entropy: 0.7035821005719904, [(2, 72), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 4, 0]]
** centroid: 3, normalized-entropy: 0.27866980356389914, [(1, 79), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 23, 0]]
** centroid: 4, normalized-entropy: 0.8377698690066789, [(1, 63), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 84, 0]]
** centroid: 5, normalized-entropy: 0.8408400584625579, [(1, 31), (2, 84)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 82, 0]]
** centroid: 6, normalized-entropy: 0.2713895875081112, [(1, 4), (2, 82)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 20)
[0.9559919200637764, 0.9409978841116566, 0.9359868850886816, 0.9329868790946635, 0.9309908711106316, 0.9209898521275767, 0.9179628730526934, 0.917009824195453, 0.916014817212422, 0.9130058201914489, 0.9129968291644938, 0.9099878321435207, 0.909007810205415, 0.9080158002313691, 0.908003812195429, 0.9060078042113971, 0.881983780187373, 0.87896878914843, 0.8760107412802024, 0.8119676562790336]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9559919200637764
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.27369887701584955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693] ***
*** starting iteration: 2; err: [Inf, 0.27369887701584955, 0.1742014440940693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387] ***
*** starting iteration: 3; err: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693] ***
*** starting iteration: 4; err: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036] ***
*** starting iteration: 5; err: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036, 0.1503404227141291] ***
*** starting iteration: 6; err: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036, 0.1503404227141291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036, 0.1503404227141291, 0.14928951671510005] ***
*** starting iteration: 7; err: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036, 0.1503404227141291, 0.14928951671510005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036, 0.1503404227141291, 0.14928951671510005, 0.1487390040680766] ***
*** finished computation of 7 references, err: [Inf, 0.27369887701584955, 0.1742014440940693, 0.16062922724336387, 0.15682229214906693, 0.15293832293665036, 0.1503404227141291, 0.14928951671510005, 0.1487390040680766] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [79, 72, 0]]
** centroid: 1, normalized-entropy: 0.9984492478692008, [(1, 79), (2, 72)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 129, 24]]
** centroid: 2, normalized-entropy: 0.6267511370265896, [(2, 129), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 63, 0]]
** centroid: 3, normalized-entropy: 0.9392547207311595, [(1, 114), (2, 63)]
*** center 4: selecting labels [1] (freq >= 2) [from [138, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 110, 4]]
** centroid: 5, normalized-entropy: 0.2192973081321754, [(2, 110), (3, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [135, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [118, 14, 0]]
** centroid: 7, normalized-entropy: 0.48791799258948565, [(1, 118), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18466777094639839] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18466777094639839, 0.1503817042671144] ***
*** starting iteration: 2; err: [Inf, 0.18466777094639839, 0.1503817042671144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18466777094639839, 0.1503817042671144, 0.14734840164706112] ***
*** starting iteration: 3; err: [Inf, 0.18466777094639839, 0.1503817042671144, 0.14734840164706112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18466777094639839, 0.1503817042671144, 0.14734840164706112, 0.146870355383493] ***
*** finished computation of 7 references, err: [Inf, 0.18466777094639839, 0.1503817042671144, 0.14734840164706112, 0.146870355383493] ***
*** center 1: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [29, 39, 0]]
** centroid: 2, normalized-entropy: 0.9843432030984676, [(1, 29), (2, 39)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 24, 0]]
** centroid: 3, normalized-entropy: 0.9366673818775627, [(1, 44), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 47, 0]]
** centroid: 4, normalized-entropy: 0.9985746465403509, [(1, 43), (2, 47)]
*** center 5: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 76, 15]]
** centroid: 6, normalized-entropy: 0.6457523329916605, [(2, 76), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18383965392783283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18383965392783283, 0.14827540395315736] ***
*** starting iteration: 2; err: [Inf, 0.18383965392783283, 0.14827540395315736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18383965392783283, 0.14827540395315736, 0.1467200862187892] ***
*** starting iteration: 3; err: [Inf, 0.18383965392783283, 0.14827540395315736, 0.1467200862187892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18383965392783283, 0.14827540395315736, 0.1467200862187892, 0.14599835592508317] ***
*** finished computation of 7 references, err: [Inf, 0.18383965392783283, 0.14827540395315736, 0.1467200862187892, 0.14599835592508317] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 15, 0]]
** centroid: 3, normalized-entropy: 0.6864381668766382, [(1, 67), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 34, 0]]
** centroid: 4, normalized-entropy: 0.9788698505067782, [(1, 48), (2, 34)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 62, 11]]
** centroid: 5, normalized-entropy: 0.6115516951951333, [(2, 62), (3, 11)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 22, 0]]
** centroid: 6, normalized-entropy: 0.8829589691462253, [(1, 51), (2, 22)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21607803275249898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394] ***
*** starting iteration: 2; err: [Inf, 0.21607803275249898, 0.18118726304825394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964] ***
*** starting iteration: 3; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494] ***
*** starting iteration: 4; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857] ***
*** starting iteration: 5; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654] ***
*** starting iteration: 6; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739] ***
*** starting iteration: 7; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739, 0.14947126199677588] ***
*** starting iteration: 8; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739, 0.14947126199677588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739, 0.14947126199677588, 0.14810758659179554] ***
*** starting iteration: 9; err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739, 0.14947126199677588, 0.14810758659179554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739, 0.14947126199677588, 0.14810758659179554, 0.14760138910263776] ***
*** finished computation of 7 references, err: [Inf, 0.21607803275249898, 0.18118726304825394, 0.1712720576263964, 0.1642675464367494, 0.15962072707153857, 0.15585252320207654, 0.1517985753081739, 0.14947126199677588, 0.14810758659179554, 0.14760138910263776] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [40, 6, 0]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(1, 40), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 54, 0]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(1, 2), (2, 54)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 81, 12]]
** centroid: 3, normalized-entropy: 0.5547781633412736, [(2, 81), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 33, 0]]
** centroid: 5, normalized-entropy: 0.9606276613221153, [(1, 53), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 34, 0]]
** centroid: 7, normalized-entropy: 0.9937071066045081, [(1, 41), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2409909015111625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2409909015111625, 0.16605152598582207] ***
*** starting iteration: 2; err: [Inf, 0.2409909015111625, 0.16605152598582207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563] ***
*** starting iteration: 3; err: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563, 0.15346400597365573] ***
*** starting iteration: 4; err: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563, 0.15346400597365573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563, 0.15346400597365573, 0.15148660145979376] ***
*** starting iteration: 5; err: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563, 0.15346400597365573, 0.15148660145979376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563, 0.15346400597365573, 0.15148660145979376, 0.15097912760265172] ***
*** finished computation of 7 references, err: [Inf, 0.2409909015111625, 0.16605152598582207, 0.15710646306164563, 0.15346400597365573, 0.15148660145979376, 0.15097912760265172] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 57, 0]]
** centroid: 1, normalized-entropy: 0.5746356978376794, [(1, 9), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 26, 0]]
** centroid: 2, normalized-entropy: 0.9225641366401655, [(1, 51), (2, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 20]]
** centroid: 3, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [68, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 75, 0]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(1, 5), (2, 75)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2148203351330012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148203351330012, 0.16391587027907373] ***
*** starting iteration: 2; err: [Inf, 0.2148203351330012, 0.16391587027907373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508] ***
*** starting iteration: 3; err: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508, 0.15162095999903977] ***
*** starting iteration: 4; err: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508, 0.15162095999903977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508, 0.15162095999903977, 0.15004863066645338] ***
*** starting iteration: 5; err: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508, 0.15162095999903977, 0.15004863066645338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508, 0.15162095999903977, 0.15004863066645338, 0.14938992791064085] ***
*** finished computation of 7 references, err: [Inf, 0.2148203351330012, 0.16391587027907373, 0.15443362695537508, 0.15162095999903977, 0.15004863066645338, 0.14938992791064085] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 15]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 25), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [5, 77, 0]]
** centroid: 2, normalized-entropy: 0.3313056130577883, [(1, 5), (2, 77)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 10, 0]]
** centroid: 5, normalized-entropy: 0.7467366074830678, [(1, 37), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 7, 0]]
** centroid: 6, normalized-entropy: 0.3852851190780996, [(1, 86), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [73, 8, 0]]
** centroid: 7, normalized-entropy: 0.46506984488164627, [(1, 73), (2, 8)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2293193721808493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293193721808493, 0.16140328605845572] ***
*** starting iteration: 2; err: [Inf, 0.2293193721808493, 0.16140328605845572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165] ***
*** starting iteration: 3; err: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165, 0.15270720710232855] ***
*** starting iteration: 4; err: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165, 0.15270720710232855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165, 0.15270720710232855, 0.15152785787242465] ***
*** starting iteration: 5; err: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165, 0.15270720710232855, 0.15152785787242465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165, 0.15270720710232855, 0.15152785787242465, 0.15099078313424252] ***
*** finished computation of 7 references, err: [Inf, 0.2293193721808493, 0.16140328605845572, 0.1552741882596165, 0.15270720710232855, 0.15152785787242465, 0.15099078313424252] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 12, 0]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(1, 45), (2, 12)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 61, 20]]
** centroid: 3, normalized-entropy: 0.8063495153650776, [(2, 61), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 10, 0]]
** centroid: 5, normalized-entropy: 0.6436394131461666, [(1, 51), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [34, 54, 0]]
** centroid: 6, normalized-entropy: 0.9624127354629922, [(1, 34), (2, 54)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 6, 0]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(1, 51), (2, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2878036103323102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477] ***
*** starting iteration: 2; err: [Inf, 0.2878036103323102, 0.1754970721276477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564] ***
*** starting iteration: 3; err: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352] ***
*** starting iteration: 4; err: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154] ***
*** starting iteration: 5; err: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154, 0.1545128432381898] ***
*** starting iteration: 6; err: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154, 0.1545128432381898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154, 0.1545128432381898, 0.1532621686384082] ***
*** starting iteration: 7; err: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154, 0.1545128432381898, 0.1532621686384082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154, 0.1545128432381898, 0.1532621686384082, 0.15272134130634368] ***
*** finished computation of 7 references, err: [Inf, 0.2878036103323102, 0.1754970721276477, 0.16224516642291564, 0.15868247029930352, 0.15658241787250154, 0.1545128432381898, 0.1532621686384082, 0.15272134130634368] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 20, 0]]
** centroid: 1, normalized-entropy: 0.847107490529376, [(1, 53), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 55, 1]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [57, 29, 0]]
** centroid: 6, normalized-entropy: 0.9221231306777973, [(1, 57), (2, 29)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [8, 50, 0]]
** centroid: 7, normalized-entropy: 0.5787946246321198, [(1, 8), (2, 50)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19248792461957784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19248792461957784, 0.167036643397063] ***
*** starting iteration: 2; err: [Inf, 0.19248792461957784, 0.167036643397063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398] ***
*** starting iteration: 3; err: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398, 0.15328759507462383] ***
*** starting iteration: 4; err: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398, 0.15328759507462383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398, 0.15328759507462383, 0.14909802958369256] ***
*** starting iteration: 5; err: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398, 0.15328759507462383, 0.14909802958369256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398, 0.15328759507462383, 0.14909802958369256, 0.14812976333405822] ***
*** finished computation of 7 references, err: [Inf, 0.19248792461957784, 0.167036643397063, 0.15987121638469398, 0.15328759507462383, 0.14909802958369256, 0.14812976333405822] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 66, 16]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 66), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [36, 33, 0]]
** centroid: 2, normalized-entropy: 0.9986359641585719, [(1, 36), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 27, 0]]
** centroid: 3, normalized-entropy: 0.8894663896628687, [(1, 61), (2, 27)]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 12, 0]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(1, 44), (2, 12)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27598125784285366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115] ***
*** starting iteration: 2; err: [Inf, 0.27598125784285366, 0.21763240658678115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714] ***
*** starting iteration: 3; err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995] ***
*** starting iteration: 4; err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053] ***
*** starting iteration: 5; err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872] ***
*** starting iteration: 6; err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872, 0.1511602022945881] ***
*** starting iteration: 7; err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872, 0.1511602022945881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872, 0.1511602022945881, 0.1500423882715404] ***
*** starting iteration: 8; err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872, 0.1511602022945881, 0.1500423882715404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872, 0.1511602022945881, 0.1500423882715404, 0.14935690340399743] ***
*** finished computation of 7 references, err: [Inf, 0.27598125784285366, 0.21763240658678115, 0.19719999040290714, 0.17811790922190995, 0.160502475772053, 0.15369980438239872, 0.1511602022945881, 0.1500423882715404, 0.14935690340399743] ***
*** center 1: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 24, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 60), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [26, 48, 0]]
** centroid: 4, normalized-entropy: 0.9352691398683568, [(1, 26), (2, 48)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 34, 16]]
** centroid: 6, normalized-entropy: 0.9043814577244941, [(2, 34), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 27, 0]]
** centroid: 7, normalized-entropy: 0.9505668528932193, [(1, 46), (2, 27)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18094179652817546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884] ***
*** starting iteration: 2; err: [Inf, 0.18094179652817546, 0.1635559433437884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237] ***
*** starting iteration: 3; err: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083] ***
*** starting iteration: 4; err: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353] ***
*** starting iteration: 5; err: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353, 0.15423797093797476] ***
*** starting iteration: 6; err: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353, 0.15423797093797476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353, 0.15423797093797476, 0.1527945552719757] ***
*** starting iteration: 7; err: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353, 0.15423797093797476, 0.1527945552719757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353, 0.15423797093797476, 0.1527945552719757, 0.15203487919270992] ***
*** finished computation of 7 references, err: [Inf, 0.18094179652817546, 0.1635559433437884, 0.15886966303922237, 0.1568891208177083, 0.15553285723901353, 0.15423797093797476, 0.1527945552719757, 0.15203487919270992] ***
*** center 1: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 77, 12]]
** centroid: 2, normalized-entropy: 0.5705411428522262, [(2, 77), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 38, 0]]
** centroid: 4, normalized-entropy: 0.9607079018756469, [(1, 61), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 9, 0]]
** centroid: 5, normalized-entropy: 0.5858732928619204, [(1, 55), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [38, 25, 0]]
** centroid: 6, normalized-entropy: 0.9690632527820694, [(1, 38), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [31, 41, 0]]
** centroid: 7, normalized-entropy: 0.9860400318404435, [(1, 31), (2, 41)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19501919381693006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19501919381693006, 0.15660513906367124] ***
*** starting iteration: 2; err: [Inf, 0.19501919381693006, 0.15660513906367124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19501919381693006, 0.15660513906367124, 0.15344561894237996] ***
*** starting iteration: 3; err: [Inf, 0.19501919381693006, 0.15660513906367124, 0.15344561894237996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19501919381693006, 0.15660513906367124, 0.15344561894237996, 0.15228951916424557] ***
*** starting iteration: 4; err: [Inf, 0.19501919381693006, 0.15660513906367124, 0.15344561894237996, 0.15228951916424557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19501919381693006, 0.15660513906367124, 0.15344561894237996, 0.15228951916424557, 0.1517232239190489] ***
*** finished computation of 7 references, err: [Inf, 0.19501919381693006, 0.15660513906367124, 0.15344561894237996, 0.15228951916424557, 0.1517232239190489] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 45, 0]]
** centroid: 1, normalized-entropy: 0.9605187074766162, [(1, 28), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [39, 31, 0]]
** centroid: 2, normalized-entropy: 0.9905577004075262, [(1, 39), (2, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 43, 0]]
** centroid: 4, normalized-entropy: 0.9725523165688429, [(1, 29), (2, 43)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [39, 5, 0]]
** centroid: 6, normalized-entropy: 0.5107878229540133, [(1, 39), (2, 5)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 72, 15]]
** centroid: 7, normalized-entropy: 0.6631968402398286, [(2, 72), (3, 15)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17150125838350505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17150125838350505, 0.1486548859635368] ***
*** starting iteration: 2; err: [Inf, 0.17150125838350505, 0.1486548859635368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17150125838350505, 0.1486548859635368, 0.14758901220932602] ***
*** starting iteration: 3; err: [Inf, 0.17150125838350505, 0.1486548859635368, 0.14758901220932602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17150125838350505, 0.1486548859635368, 0.14758901220932602, 0.14726762752234937] ***
*** finished computation of 7 references, err: [Inf, 0.17150125838350505, 0.1486548859635368, 0.14758901220932602, 0.14726762752234937] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [67, 19, 0]]
** centroid: 2, normalized-entropy: 0.7618624463753669, [(1, 67), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 56, 15]]
** centroid: 4, normalized-entropy: 0.743898745288434, [(2, 56), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 50, 0]]
** centroid: 5, normalized-entropy: 0.9599377175669783, [(1, 31), (2, 50)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [64, 6, 0]]
** centroid: 7, normalized-entropy: 0.4220005168831531, [(1, 64), (2, 6)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27680899572558704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054] ***
*** starting iteration: 2; err: [Inf, 0.27680899572558704, 0.17513147509098054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586] ***
*** starting iteration: 3; err: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185] ***
*** starting iteration: 4; err: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433] ***
*** starting iteration: 5; err: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433, 0.14841082632914185] ***
*** starting iteration: 6; err: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433, 0.14841082632914185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433, 0.14841082632914185, 0.14472922104690225] ***
*** starting iteration: 7; err: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433, 0.14841082632914185, 0.14472922104690225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433, 0.14841082632914185, 0.14472922104690225, 0.1441122563323006] ***
*** finished computation of 7 references, err: [Inf, 0.27680899572558704, 0.17513147509098054, 0.16367810678854586, 0.1587710973881185, 0.1544357748888433, 0.14841082632914185, 0.14472922104690225, 0.1441122563323006] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 50, 9]]
** centroid: 1, normalized-entropy: 0.6161661934005354, [(2, 50), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 6, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 54, 0]]
** centroid: 3, normalized-entropy: 0.974677061681131, [(1, 37), (2, 54)]
*** center 4: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 49, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [12, 45, 0]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(1, 12), (2, 45)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1912663547322154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1912663547322154, 0.1537924121711403] ***
*** starting iteration: 2; err: [Inf, 0.1912663547322154, 0.1537924121711403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1912663547322154, 0.1537924121711403, 0.15023523743171244] ***
*** starting iteration: 3; err: [Inf, 0.1912663547322154, 0.1537924121711403, 0.15023523743171244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1912663547322154, 0.1537924121711403, 0.15023523743171244, 0.14926039586495607] ***
*** finished computation of 7 references, err: [Inf, 0.1912663547322154, 0.1537924121711403, 0.15023523743171244, 0.14926039586495607] ***
*** center 1: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 2, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 37, 0]]
** centroid: 3, normalized-entropy: 0.9931231770192241, [(1, 45), (2, 37)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 64, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [81, 3, 0]]
** centroid: 6, normalized-entropy: 0.2222848306856879, [(1, 81), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 4, 0]]
** centroid: 7, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2250489399433136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2250489399433136, 0.165066137554124] ***
*** starting iteration: 2; err: [Inf, 0.2250489399433136, 0.165066137554124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904] ***
*** starting iteration: 3; err: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904, 0.1543271805923432] ***
*** starting iteration: 4; err: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904, 0.1543271805923432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904, 0.1543271805923432, 0.15262779335305093] ***
*** starting iteration: 5; err: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904, 0.1543271805923432, 0.15262779335305093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904, 0.1543271805923432, 0.15262779335305093, 0.15185997814498842] ***
*** finished computation of 7 references, err: [Inf, 0.2250489399433136, 0.165066137554124, 0.15704509335476904, 0.1543271805923432, 0.15262779335305093, 0.15185997814498842] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 46, 15]]
** centroid: 1, normalized-entropy: 0.8047175193210769, [(2, 46), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 37, 0]]
** centroid: 5, normalized-entropy: 0.9921116920021501, [(1, 30), (2, 37)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 52, 0]]
** centroid: 6, normalized-entropy: 0.4288109647301171, [(1, 5), (2, 52)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 57, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.191169505180791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191169505180791, 0.1538936932310462] ***
*** starting iteration: 2; err: [Inf, 0.191169505180791, 0.1538936932310462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191169505180791, 0.1538936932310462, 0.14799364166893064] ***
*** starting iteration: 3; err: [Inf, 0.191169505180791, 0.1538936932310462, 0.14799364166893064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.191169505180791, 0.1538936932310462, 0.14799364166893064, 0.14727896412275732] ***
*** finished computation of 7 references, err: [Inf, 0.191169505180791, 0.1538936932310462, 0.14799364166893064, 0.14727896412275732] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [40, 36, 0]]
** centroid: 2, normalized-entropy: 0.9980008838722993, [(1, 40), (2, 36)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 59, 0]]
** centroid: 3, normalized-entropy: 0.5969995167604553, [(1, 10), (2, 59)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [24, 48, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 24), (2, 48)]
*** center 6: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 55, 15]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 55), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2044532859902829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2044532859902829, 0.16710228057205678] ***
*** starting iteration: 2; err: [Inf, 0.2044532859902829, 0.16710228057205678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2044532859902829, 0.16710228057205678, 0.16241809040680527] ***
*** starting iteration: 3; err: [Inf, 0.2044532859902829, 0.16710228057205678, 0.16241809040680527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2044532859902829, 0.16710228057205678, 0.16241809040680527, 0.16124786732904614] ***
*** starting iteration: 4; err: [Inf, 0.2044532859902829, 0.16710228057205678, 0.16241809040680527, 0.16124786732904614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2044532859902829, 0.16710228057205678, 0.16241809040680527, 0.16124786732904614, 0.1604921004222706] ***
*** finished computation of 7 references, err: [Inf, 0.2044532859902829, 0.16710228057205678, 0.16241809040680527, 0.16124786732904614, 0.1604921004222706] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 11, 0]]
** centroid: 1, normalized-entropy: 0.5776539033535634, [(1, 69), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 55, 0]]
** centroid: 2, normalized-entropy: 0.9975977315497319, [(1, 49), (2, 55)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 100, 16]]
** centroid: 6, normalized-entropy: 0.5787946246321198, [(2, 100), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 29, 0]]
** centroid: 7, normalized-entropy: 0.9725523165688429, [(1, 43), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24382362236641347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923] ***
*** starting iteration: 2; err: [Inf, 0.24382362236641347, 0.18688029296509923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291] ***
*** starting iteration: 3; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596] ***
*** starting iteration: 4; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584] ***
*** starting iteration: 5; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823] ***
*** starting iteration: 6; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395] ***
*** starting iteration: 7; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269] ***
*** starting iteration: 8; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269, 0.15244775190204382] ***
*** starting iteration: 9; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269, 0.15244775190204382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269, 0.15244775190204382, 0.1508986356863752] ***
*** starting iteration: 10; err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269, 0.15244775190204382, 0.1508986356863752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269, 0.15244775190204382, 0.1508986356863752, 0.1499860109547153] ***
*** finished computation of 7 references, err: [Inf, 0.24382362236641347, 0.18688029296509923, 0.1714441078901291, 0.1651926241889596, 0.1625462431013584, 0.15887512365169823, 0.15559436438046395, 0.1537891784189269, 0.15244775190204382, 0.1508986356863752, 0.1499860109547153] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 54, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 38, 0]]
** centroid: 4, normalized-entropy: 0.9934472383802028, [(1, 46), (2, 38)]
*** center 5: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 52, 0]]
** centroid: 6, normalized-entropy: 0.22853814395352806, [(1, 2), (2, 52)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 48, 12]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 48), (3, 12)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19966859260946512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966859260946512, 0.164658549008891] ***
*** starting iteration: 2; err: [Inf, 0.19966859260946512, 0.164658549008891] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762] ***
*** starting iteration: 3; err: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758] ***
*** starting iteration: 4; err: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758, 0.15157576835528017] ***
*** starting iteration: 5; err: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758, 0.15157576835528017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758, 0.15157576835528017, 0.1502382066268474] ***
*** starting iteration: 6; err: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758, 0.15157576835528017, 0.1502382066268474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758, 0.15157576835528017, 0.1502382066268474, 0.14942513043247163] ***
*** finished computation of 7 references, err: [Inf, 0.19966859260946512, 0.164658549008891, 0.15657936896383762, 0.15295346373412758, 0.15157576835528017, 0.1502382066268474, 0.14942513043247163] ***
*** center 1: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 17, 0]]
** centroid: 2, normalized-entropy: 0.7035821005719904, [(1, 72), (2, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 90, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 22, 0]]
** centroid: 4, normalized-entropy: 0.8779620013943914, [(1, 52), (2, 22)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 42, 10]]
** centroid: 5, normalized-entropy: 0.7062740891876008, [(2, 42), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [40, 25, 0]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(1, 40), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20339886479172856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20339886479172856, 0.1599448541663587] ***
*** starting iteration: 2; err: [Inf, 0.20339886479172856, 0.1599448541663587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20339886479172856, 0.1599448541663587, 0.15062370717339219] ***
*** starting iteration: 3; err: [Inf, 0.20339886479172856, 0.1599448541663587, 0.15062370717339219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20339886479172856, 0.1599448541663587, 0.15062370717339219, 0.14842539449594916] ***
*** starting iteration: 4; err: [Inf, 0.20339886479172856, 0.1599448541663587, 0.15062370717339219, 0.14842539449594916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20339886479172856, 0.1599448541663587, 0.15062370717339219, 0.14842539449594916, 0.14787184896413236] ***
*** finished computation of 7 references, err: [Inf, 0.20339886479172856, 0.1599448541663587, 0.15062370717339219, 0.14842539449594916, 0.14787184896413236] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [72, 6, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [8, 48, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 8), (2, 48)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 48, 14]]
** centroid: 6, normalized-entropy: 0.7706290693639406, [(2, 48), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 39, 0]]
** centroid: 7, normalized-entropy: 0.9998783322990061, [(1, 38), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19643476978037505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643476978037505, 0.16626626133918762] ***
*** starting iteration: 2; err: [Inf, 0.19643476978037505, 0.16626626133918762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643476978037505, 0.16626626133918762, 0.15196906373277305] ***
*** starting iteration: 3; err: [Inf, 0.19643476978037505, 0.16626626133918762, 0.15196906373277305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643476978037505, 0.16626626133918762, 0.15196906373277305, 0.14940534690627827] ***
*** starting iteration: 4; err: [Inf, 0.19643476978037505, 0.16626626133918762, 0.15196906373277305, 0.14940534690627827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19643476978037505, 0.16626626133918762, 0.15196906373277305, 0.14940534690627827, 0.14862280501425265] ***
*** finished computation of 7 references, err: [Inf, 0.19643476978037505, 0.16626626133918762, 0.15196906373277305, 0.14940534690627827, 0.14862280501425265] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 42, 0]]
** centroid: 1, normalized-entropy: 0.7889406572966208, [(1, 13), (2, 42)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 79, 1]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 7, 0]]
** centroid: 3, normalized-entropy: 0.43180499427520785, [(1, 72), (2, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 37, 10]]
** centroid: 6, normalized-entropy: 0.7467366074830678, [(2, 37), (3, 10)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 19, 0]]
** centroid: 7, normalized-entropy: 0.7304472862481346, [(1, 74), (2, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21056737677566706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21056737677566706, 0.1621798693332821] ***
*** starting iteration: 2; err: [Inf, 0.21056737677566706, 0.1621798693332821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21056737677566706, 0.1621798693332821, 0.15496710939332842] ***
*** starting iteration: 3; err: [Inf, 0.21056737677566706, 0.1621798693332821, 0.15496710939332842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21056737677566706, 0.1621798693332821, 0.15496710939332842, 0.1523680179938674] ***
*** starting iteration: 4; err: [Inf, 0.21056737677566706, 0.1621798693332821, 0.15496710939332842, 0.1523680179938674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21056737677566706, 0.1621798693332821, 0.15496710939332842, 0.1523680179938674, 0.15154321217536926] ***
*** finished computation of 7 references, err: [Inf, 0.21056737677566706, 0.1621798693332821, 0.15496710939332842, 0.1523680179938674, 0.15154321217536926] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 10, 0]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(1, 52), (2, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 18, 0]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(1, 56), (2, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 31, 0]]
** centroid: 5, normalized-entropy: 0.9290083681703216, [(1, 59), (2, 31)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 51, 13]]
** centroid: 6, normalized-entropy: 0.7281342378690551, [(2, 51), (3, 13)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 93, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22250403950130568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903] ***
*** starting iteration: 2; err: [Inf, 0.22250403950130568, 0.19433316625095903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423] ***
*** starting iteration: 3; err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127] ***
*** starting iteration: 4; err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268] ***
*** starting iteration: 5; err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212] ***
*** starting iteration: 6; err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212, 0.1490189242120832] ***
*** starting iteration: 7; err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212, 0.1490189242120832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212, 0.1490189242120832, 0.14791413071751594] ***
*** starting iteration: 8; err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212, 0.1490189242120832, 0.14791413071751594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212, 0.1490189242120832, 0.14791413071751594, 0.14707056026719512] ***
*** finished computation of 7 references, err: [Inf, 0.22250403950130568, 0.19433316625095903, 0.18072121780342423, 0.16788783809170127, 0.15598773525655268, 0.15061753888428212, 0.1490189242120832, 0.14791413071751594, 0.14707056026719512] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 36, 0]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 10, 0]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(1, 62), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 30, 0]]
** centroid: 3, normalized-entropy: 0.9071657675730821, [(1, 63), (2, 30)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 49, 15]]
** centroid: 6, normalized-entropy: 0.7855602922535471, [(2, 49), (3, 15)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18071835184842347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18071835184842347, 0.15165227988362312] ***
*** starting iteration: 2; err: [Inf, 0.18071835184842347, 0.15165227988362312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18071835184842347, 0.15165227988362312, 0.14919003240764142] ***
*** starting iteration: 3; err: [Inf, 0.18071835184842347, 0.15165227988362312, 0.14919003240764142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18071835184842347, 0.15165227988362312, 0.14919003240764142, 0.14886304120905697] ***
*** finished computation of 7 references, err: [Inf, 0.18071835184842347, 0.15165227988362312, 0.14919003240764142, 0.14886304120905697] ***
*** center 1: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 12]]
** centroid: 3, normalized-entropy: 0.6006085754131871, [(2, 70), (3, 12)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [53, 35, 0]]
** centroid: 4, normalized-entropy: 0.9696055994904408, [(1, 53), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 57, 0]]
** centroid: 5, normalized-entropy: 0.6079696120060726, [(1, 10), (2, 57)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 5, 0]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(1, 65), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 26, 0]]
** centroid: 7, normalized-entropy: 0.9477073729342067, [(1, 45), (2, 26)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18298265568166971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18298265568166971, 0.15316913537401705] ***
*** starting iteration: 2; err: [Inf, 0.18298265568166971, 0.15316913537401705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18298265568166971, 0.15316913537401705, 0.14868023247644305] ***
*** starting iteration: 3; err: [Inf, 0.18298265568166971, 0.15316913537401705, 0.14868023247644305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18298265568166971, 0.15316913537401705, 0.14868023247644305, 0.14611566729145126] ***
*** starting iteration: 4; err: [Inf, 0.18298265568166971, 0.15316913537401705, 0.14868023247644305, 0.14611566729145126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18298265568166971, 0.15316913537401705, 0.14868023247644305, 0.14611566729145126, 0.14548874336108567] ***
*** finished computation of 7 references, err: [Inf, 0.18298265568166971, 0.15316913537401705, 0.14868023247644305, 0.14611566729145126, 0.14548874336108567] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 14]]
** centroid: 3, normalized-entropy: 0.6739468651941155, [(2, 65), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [30, 36, 0]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(1, 30), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 47, 0]]
** centroid: 5, normalized-entropy: 0.9777945702913884, [(1, 33), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [7, 44, 0]]
** centroid: 6, normalized-entropy: 0.577004250315725, [(1, 7), (2, 44)]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17976889935554938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17976889935554938, 0.15640918947360477] ***
*** starting iteration: 2; err: [Inf, 0.17976889935554938, 0.15640918947360477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043] ***
*** starting iteration: 3; err: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043, 0.14754552878253163] ***
*** starting iteration: 4; err: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043, 0.14754552878253163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043, 0.14754552878253163, 0.1462939323168248] ***
*** starting iteration: 5; err: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043, 0.14754552878253163, 0.1462939323168248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043, 0.14754552878253163, 0.1462939323168248, 0.1458899418246001] ***
*** finished computation of 7 references, err: [Inf, 0.17976889935554938, 0.15640918947360477, 0.15010499324277043, 0.14754552878253163, 0.1462939323168248, 0.1458899418246001] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 54, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 12]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 60), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 10, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [62, 26, 0]]
** centroid: 6, normalized-entropy: 0.8756633923230399, [(1, 62), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [35, 36, 0]]
** centroid: 7, normalized-entropy: 0.9998568991526107, [(1, 35), (2, 36)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18596918353065847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18596918353065847, 0.15438617694331333] ***
*** starting iteration: 2; err: [Inf, 0.18596918353065847, 0.15438617694331333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18596918353065847, 0.15438617694331333, 0.14695827685669063] ***
*** starting iteration: 3; err: [Inf, 0.18596918353065847, 0.15438617694331333, 0.14695827685669063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18596918353065847, 0.15438617694331333, 0.14695827685669063, 0.14498958189040423] ***
*** starting iteration: 4; err: [Inf, 0.18596918353065847, 0.15438617694331333, 0.14695827685669063, 0.14498958189040423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18596918353065847, 0.15438617694331333, 0.14695827685669063, 0.14498958189040423, 0.14444648679345845] ***
*** finished computation of 7 references, err: [Inf, 0.18596918353065847, 0.15438617694331333, 0.14695827685669063, 0.14498958189040423, 0.14444648679345845] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 57, 13]]
** centroid: 1, normalized-entropy: 0.6924194863274741, [(2, 57), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 66, 3]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 66), (3, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 36, 0]]
** centroid: 4, normalized-entropy: 0.9980008838722993, [(1, 40), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 23, 0]]
** centroid: 5, normalized-entropy: 0.9037762882345833, [(1, 49), (2, 23)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [73, 6, 0]]
** centroid: 6, normalized-entropy: 0.3877431810559867, [(1, 73), (2, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20059388122987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734] ***
*** starting iteration: 2; err: [Inf, 0.20059388122987, 0.166877271970734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975] ***
*** starting iteration: 3; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858] ***
*** starting iteration: 4; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077] ***
*** starting iteration: 5; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998] ***
*** starting iteration: 6; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712] ***
*** starting iteration: 7; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915] ***
*** starting iteration: 8; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915, 0.15104218225739896] ***
*** starting iteration: 9; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915, 0.15104218225739896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915, 0.15104218225739896, 0.1490869437365327] ***
*** starting iteration: 10; err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915, 0.15104218225739896, 0.1490869437365327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915, 0.15104218225739896, 0.1490869437365327, 0.14812499352544545] ***
*** finished computation of 7 references, err: [Inf, 0.20059388122987, 0.166877271970734, 0.16244957558996975, 0.16035420653130858, 0.1577256713733077, 0.15563464270438998, 0.15402507987804712, 0.152393669731915, 0.15104218225739896, 0.1490869437365327, 0.14812499352544545] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 51, 0]]
** centroid: 1, normalized-entropy: 0.9379626436434424, [(1, 28), (2, 51)]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 30, 0]]
** centroid: 3, normalized-entropy: 0.9145891955877994, [(1, 61), (2, 30)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 55, 13]]
** centroid: 5, normalized-entropy: 0.7039260680195971, [(2, 55), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 52, 0]]
** centroid: 6, normalized-entropy: 0.4288109647301171, [(1, 5), (2, 52)]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 1, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16366263829544186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16366263829544186, 0.15108106706663965] ***
*** starting iteration: 2; err: [Inf, 0.16366263829544186, 0.15108106706663965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16366263829544186, 0.15108106706663965, 0.15007287462800742] ***
*** starting iteration: 3; err: [Inf, 0.16366263829544186, 0.15108106706663965, 0.15007287462800742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16366263829544186, 0.15108106706663965, 0.15007287462800742, 0.1496642992105335] ***
*** finished computation of 7 references, err: [Inf, 0.16366263829544186, 0.15108106706663965, 0.15007287462800742, 0.1496642992105335] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 54, 10]]
** centroid: 1, normalized-entropy: 0.625262405223423, [(2, 54), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 24, 0]]
** centroid: 2, normalized-entropy: 0.8904916402194913, [(1, 54), (2, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 42, 0]]
** centroid: 4, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 68, 3]]
** centroid: 5, normalized-entropy: 0.25253077151613923, [(2, 68), (3, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 27, 0]]
** centroid: 7, normalized-entropy: 0.9656361333706099, [(1, 42), (2, 27)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22488307326473295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791] ***
*** starting iteration: 2; err: [Inf, 0.22488307326473295, 0.1639095498006791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126] ***
*** starting iteration: 3; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168] ***
*** starting iteration: 4; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677] ***
*** starting iteration: 5; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347] ***
*** starting iteration: 6; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843] ***
*** starting iteration: 7; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843, 0.14756301446817816] ***
*** starting iteration: 8; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843, 0.14756301446817816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843, 0.14756301446817816, 0.1464299818528816] ***
*** starting iteration: 9; err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843, 0.14756301446817816, 0.1464299818528816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843, 0.14756301446817816, 0.1464299818528816, 0.1458201967468485] ***
*** finished computation of 7 references, err: [Inf, 0.22488307326473295, 0.1639095498006791, 0.15930638722889126, 0.15708572970121168, 0.15541472061164677, 0.15349660804588347, 0.15017181771434843, 0.14756301446817816, 0.1464299818528816, 0.1458201967468485] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 72, 16]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 72), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 35, 0]]
** centroid: 3, normalized-entropy: 1.0, [(1, 35), (2, 35)]
*** center 4: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 36, 0]]
** centroid: 5, normalized-entropy: 0.9975025463691153, [(1, 32), (2, 36)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 65, 0]]
** centroid: 6, normalized-entropy: 0.260862909647207, [(1, 3), (2, 65)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 388,3 => 28,1 => 584), Dict(2 => 353,3 => 34,1 => 613))
[ Info: ===== scores for single classifier: {"micro_f1":0.931,"precision":0.931,"recall":0.931,"macro_recall":0.9524667766537732,"macro_f1":0.8735735648350227,"accuracy":0.931,"class_f1":{"2":0.9048275862068965,"3":0.7555555555555554,"1":0.9603375527426161},"class_precision":{"2":0.8817204301075269,"3":0.6071428571428571,"1":0.9947552447552448},"class_recall":{"2":0.9291784702549575,"3":1.0,"1":0.9282218597063622}}
[ Info: ===== scores for 1: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.97996817459914,"macro_f1":0.9659337485124034,"accuracy":0.972,"class_f1":{"2":0.9605633802816901,"3":0.9577464788732395,"1":0.9794913863822805},"class_precision":{"2":0.9551820728291317,"3":0.918918918918919,"1":0.9851485148514851},"class_recall":{"2":0.9660056657223796,"3":1.0,"1":0.9738988580750407}}
[ Info: ===== scores for 5: {"micro_f1":0.955,"precision":0.955,"recall":0.955,"macro_recall":0.969522480347892,"macro_f1":0.9375639633440492,"accuracy":0.955,"class_f1":{"2":0.9375866851595007,"3":0.9066666666666667,"1":0.9684385382059801},"class_precision":{"2":0.9184782608695652,"3":0.8292682926829268,"1":0.9864636209813875},"class_recall":{"2":0.9575070821529745,"3":1.0,"1":0.9510603588907015}}
[ Info: ===== scores for 7: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.9728991153277969,"macro_f1":0.9368505264160026,"accuracy":0.959,"class_f1":{"2":0.9432918395573997,"3":0.8947368421052632,"1":0.9725228975853455},"class_precision":{"2":0.9216216216216216,"3":0.8095238095238095,"1":0.9931972789115646},"class_recall":{"2":0.9660056657223796,"3":1.0,"1":0.9526916802610114}}
[ Info: ===== scores for 9: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9753314632444349,"macro_f1":0.9319787989347753,"accuracy":0.962,"class_f1":{"2":0.9475138121546961,"3":0.8717948717948718,"1":0.9766277128547579},"class_precision":{"2":0.9245283018867925,"3":0.7727272727272727,"1":1.0},"class_recall":{"2":0.9716713881019831,"3":1.0,"1":0.9543230016313213}}
[ Info: ===== scores for 11: {"micro_f1":0.96,"precision":0.96,"recall":0.96,"macro_recall":0.9738434023910642,"macro_f1":0.927094546710935,"accuracy":0.96,"class_f1":{"2":0.9447513812154696,"3":0.8607594936708861,"1":0.9757727652464495},"class_precision":{"2":0.921832884097035,"3":0.7555555555555555,"1":1.0},"class_recall":{"2":0.9688385269121813,"3":1.0,"1":0.9526916802610114}}
(score = 0.976, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.951, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.951, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.955, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.955, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.955, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.955, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.976,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9744851750736849,"macro_f1":0.9685509157755489,"accuracy":0.976,"class_f1":{"2":0.9663865546218487,"3":0.9565217391304348,"1":0.9827444535743631},"class_precision":{"2":0.9556786703601108,"3":0.9428571428571428,"1":0.9900662251655629},"class_recall":{"2":0.9773371104815864,"3":0.9705882352941176,"1":0.9755301794453507}}
Test Summary: | Pass  Total
AKNC          |    8      8
[1035, 1, 1, 1, 1, 7, 3, 2, 4, 6, 1, 4, 2, 2, 8, 2, 2, 2, 2, 2, 1, 5, 2, 15, 3, 11, 7, 6, 4, 25, 4, 24, 1, 2, 3, 8, 6, 7, 16, 6, 15, 4, 2, 6, 14, 26, 16, 12, 13, 6, 6, 13, 7, 6, 5, 7, 12, 5, 3, 4, 8, 10, 44, 5, 3, 42, 17, 34, 4, 7, 77, 9, 12, 42, 5, 21, 34, 55, 19, 3, 1, 16, 13, 41, 6, 2, 3, 14, 16, 5, 10, 1, 20, 9, 6, 5, 61, 17, 7, 2, 28, 44, 11, 53, 51, 2, 8, 24, 29, 30, 66, 7, 4, 24, 4, 29, 23, 3, 8, 412, 24, 12, 7, 31, 32, 68, 19, 133, 3, 41, 36, 29, 17, 19, 15, 55, 12, 11, 6, 2, 18, 3, 43, 168, 349, 1, 6, 12, 14, 242, 7, 34, 38, 9, 21, 9, 18, 4, 23, 17, 28, 3, 12, 52, 8, 59, 4, 138, 16, 15, 36, 4, 131, 4, 46, 26, 130, 7, 15, 13, 5, 94, 11, 6, 58, 13, 12, 54, 23, 3, 13, 11, 11, 45, 14, 51, 59, 13, 29, 24, 17, 32, 10, 4, 15, 11, 52, 44, 7, 18, 149, 25, 60, 5, 23, 17, 6, 142, 2, 7, 19, 11, 7, 9, 4, 31, 19, 28, 13, 24, 13, 13, 4, 34, 9, 18, 19, 67, 13, 9, 28, 28, 57, 10, 10, 80, 145, 31, 2, 33, 265, 103, 12, 12, 82, 96, 29, 2, 2, 39, 62, 25, 26, 44, 24, 4, 64, 38, 9, 58, 33, 129, 29, 54, 4, 58, 15, 25, 11, 3, 212, 5, 22, 10, 20, 83, 21, 96, 430, 5, 41, 32, 26, 2, 95, 131, 33, 10, 10, 29]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6719999999999997, speedup = 0.338332668048053, eval_ratio = 0.080479)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3828125,"f1":null,"seconds":0.00019379518926143646,"exhaustive_search_seconds":0.00038743577897548676,"evaluations":522.2734375,"distances_sum":1729.8672364255444}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.578125,"recall":0.578125,"f1":null,"seconds":0.0005494784563779831,"exhaustive_search_seconds":0.00038743577897548676,"evaluations":702.53125,"distances_sum":1648.2059581205078}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6579861111111108,"recall":0.6579861111111108,"f1":null,"seconds":0.00039082393050193787,"exhaustive_search_seconds":0.00038743577897548676,"evaluations":832.6328125,"distances_sum":1607.1428691219307}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7343749999999996,"recall":0.7343749999999996,"f1":0.7343749999999996,"seconds":0.0004774630069732666,"exhaustive_search_seconds":0.00038743577897548676,"evaluations":937.4765625,"distances_sum":1579.191721921376}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.793402777777777,"recall":0.793402777777777,"f1":0.793402777777777,"seconds":0.000561518594622612,"exhaustive_search_seconds":0.00038743577897548676,"evaluations":1064.015625,"distances_sum":1558.1064834150154}
KCenters.DeloneInvIndex> reached performance {"precision":0.8272569444444438,"recall":0.8272569444444438,"f1":0.8272569444444438,"seconds":0.0006547067314386368,"exhaustive_search_seconds":0.00038743577897548676,"evaluations":1188.8671875,"distances_sum":1547.9683193463652}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8479999999999996, speedup = 0.5090126657150531, eval_ratio = 0.119046)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
