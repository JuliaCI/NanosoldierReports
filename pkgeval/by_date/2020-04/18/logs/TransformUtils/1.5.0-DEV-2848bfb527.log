Julia Version 1.5.0-DEV.642
Commit 2848bfb527 (2020-04-18 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_jCR6Ii/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_jCR6Ii/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.06723808620331494 0.005184043248502938; 0.06723808620331494 0.0 0.04601995332623433; -0.005184043248502938 -0.04601995332623433 0.0])
dAA = so3([0.0 -0.04962432841498604 -0.013038209056660567; 0.04962432841498604 0.0 0.0335650114658073; 0.013038209056660567 -0.0335650114658073 0.0])
dAA = so3([0.0 -0.020501324092209956 -0.0037551405816296348; 0.020501324092209956 0.0 0.11776486556161625; 0.0037551405816296348 -0.11776486556161625 0.0])
dAA = Quaternion(0.9892463572989433, [0.08001789251548365, 0.1211704731745178, -0.017507080819359973])
dAA = SO3([0.9992942431157915 -0.020321738376563536 -0.03159181262593606; 0.015760086921251144 0.9902414636203684 -0.13846827574295045; 0.03409743884622945 0.13787266109111573 0.989862866253595])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9917893169389181 -0.12221068178562124 -0.03766298001124892; 0.12494050349570712 0.9888057431782981 0.08156637079000728; 0.02727308915530678 -0.08560228685676205 0.9959560367269327]), [-0.46019953326234325, 0.05184043248502938, 0.6723808620331493])
xj = SE3(SO3([0.8199380123843565 0.1526204545045607 0.5517324104255723; 0.0808702871878774 0.9232572131597582 -0.37557438011481425; -0.5667112602528214 0.3525664692158035 0.7446712242912041]), [-1.1776486556161625, -0.037551405816296346, 0.20501324092209955])
Dx = SE3(SO3([0.8078537689078397 0.27633513414030336 0.5205873430088938; 0.028271600773531254 0.8640896889698382 -0.5025432578452427; -0.5887045138701597 0.4206993024188044 0.6902456753165719]), [-0.7354735950823609, 0.03929652045364977, -0.44574769949044213])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
