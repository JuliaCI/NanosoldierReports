Julia Version 1.5.0-DEV.701
Commit 5cb3f3fbc1 (2020-04-28 13:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed LearnBase ─────────────────── v0.2.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed OrderedCollections ────────── v1.1.0
  Installed Tables ────────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.13
  Installed MLDataPattern ─────────────── v0.5.2
  Installed DataFrames ────────────────── v0.20.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MappedArrays ──────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Compat ────────────────────── v3.8.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed Reexport ──────────────────── v0.2.0
  Installed JSON ──────────────────────── v0.21.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.2
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_2yTDar/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_2yTDar/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9360659371813138
[ Info: 0.8307796732584636
[ Info: 0.5576448714236418
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33083040051162244
mean(cdnet.distances) = 0.3653124431769053
mean(crand.distances) = 0.3474876185754935
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7739239926739934,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":7.3671875,"distances_sum":1899.095721281803}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3486328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3486328125,"f1":null,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":5.1015625,"distances_sum":1005.2869737516758}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.486328125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.486328125,"f1":0.6418338605838607,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":6.1171875,"distances_sum":1437.1622275867019}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7739239926739934,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":7.3671875,"distances_sum":1899.095721281803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9102309149184158,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.390625,"distances_sum":2620.513171127309}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9229686979686985,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.4140625,"distances_sum":2751.506697959164}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.901514631202132,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.375,"distances_sum":2533.595330062719}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8720985611610618,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.09375,"distances_sum":2393.430460483045}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9229686979686985,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.4140625,"distances_sum":2751.506697959164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000003,"seconds":6.882473826408386e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.859375,"distances_sum":3052.0944309008014}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360920329670337,"seconds":6.504356861114502e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.6640625,"distances_sum":2781.598143284201}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611664377289383,"seconds":6.821006536483765e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.75,"distances_sum":2993.150598636479}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000003,"seconds":6.882473826408386e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.859375,"distances_sum":3052.0944309008014}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000003,"seconds":6.882473826408386e-6,"exhaustive_search_seconds":1.0076910257339478e-6,"evaluations":8.859375,"distances_sum":3052.0944309008014}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.15234375,"f1":null,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":4.234375,"distances_sum":404.89668093543224}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7882097069597077,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.2734375,"distances_sum":1891.9840291782127}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.525390625,"f1":null,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.8359375,"distances_sum":1404.1552706913576}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7882097069597077,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.2734375,"distances_sum":1891.9840291782127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8326543248418256,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.640625,"distances_sum":2146.9477299943505}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8326543248418256,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.640625,"distances_sum":2146.9477299943505}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9226419413919422,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5,"distances_sum":2655.3813641275224}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9324550449550454,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5625,"distances_sum":2685.69721959896}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8794934232434239,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.1484375,"distances_sum":2417.688850725951}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8750431859806868,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.0390625,"distances_sum":2361.550360412801}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9324550449550454,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5625,"distances_sum":2685.69721959896}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8837890625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9324550449550454,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5625,"distances_sum":2685.69721959896}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8304459429459438,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.8203125,"distances_sum":1993.0238875986302}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.8203125,"distances_sum":987.0820989685199}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8381264568764576,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.7734375,"distances_sum":2068.2738505801917}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8381264568764576,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.7734375,"distances_sum":2068.2738505801917}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9133330211455221,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.40625,"distances_sum":2486.3851889774032}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9373397435897441,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6484375,"distances_sum":2627.683363892231}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959563873626374,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8125,"distances_sum":2760.439914251888}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8584795412920421,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.9765625,"distances_sum":2116.791630326155}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.959563873626374,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8125,"distances_sum":2760.439914251888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977552655677656,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.875,"distances_sum":2908.878292437074}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977604166666667,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8984375,"distances_sum":2893.2641953499783}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977552655677656,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.875,"distances_sum":2908.878292437074}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977552655677656,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.875,"distances_sum":2908.878292437074}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8483844280719288,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0078125,"distances_sum":2156.004556489405}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8483844280719288,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0078125,"distances_sum":2156.004556489405}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9490212912087916,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.75,"distances_sum":2841.0786899814334}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9490212912087916,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.75,"distances_sum":2841.0786899814334}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9495249542124549,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.734375,"distances_sum":2853.019943348675}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689560439560445,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.890625,"distances_sum":2977.8574844687573}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9762305402930407,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":3030.9787804513285}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762305402930407,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":3030.9787804513285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9762305402930407,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":3030.9787804513285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.772980665168166,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.515625,"distances_sum":1383.0548549863381}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5400390625,"f1":null,"seconds":4.101544618606567e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.8359375,"distances_sum":1071.5614138526919}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.772980665168166,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.515625,"distances_sum":1383.0548549863381}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8949805402930411,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.3125,"distances_sum":1946.4576930831074}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947035256410257,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6796875,"distances_sum":2174.7520309956717}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947035256410257,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6796875,"distances_sum":2174.7520309956717}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9609375,"distances_sum":2345.931196511917}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2351.9020661737327}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574633699633703,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7578125,"distances_sum":2249.917614667603}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9609375,"distances_sum":2345.931196511917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9609375,"distances_sum":2345.931196511917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.3359375,"distances_sum":458.3393141586181}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2119140625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.3359375,"distances_sum":458.3393141586181}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2119140625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.3359375,"distances_sum":458.3393141586181}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.0546875,"distances_sum":931.4652181874998}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7610616813741823,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.4765625,"distances_sum":1386.7117360241093}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.630859375,"f1":0.7610616813741823,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.4765625,"distances_sum":1386.7117360241093}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557692307692315,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2411.417250085613}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9557692307692315,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2411.417250085613}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626888736263741,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2433.2547640763146}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626888736263741,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2433.2547640763146}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9626888736263741,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2433.2547640763146}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8430761946386954,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.2734375,"distances_sum":1689.1931841863718}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.6991458194583201,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.1796875,"distances_sum":1290.0712665948909}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8430761946386954,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.2734375,"distances_sum":1689.1931841863718}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.846830253080254,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.296875,"distances_sum":1724.375009839123}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8918019480519487,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.59375,"distances_sum":1945.7039091047886}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9285485347985356,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2149.165858502492}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9285485347985356,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2149.165858502492}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703525641025645,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2442.8764914960857}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591575091575096,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2371.969271889314}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.960943223443224,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.828125,"distances_sum":2396.1927061241126}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577609890109895,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.828125,"distances_sum":2375.76024877664}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703525641025645,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2442.8764914960857}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703525641025645,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":2442.8764914960857}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8487470862470871,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.6015625,"distances_sum":1669.3038310216027}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.796875,"distances_sum":868.8923137700368}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7691667707292715,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.1015625,"distances_sum":1372.7540883230308}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8487470862470871,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.6015625,"distances_sum":1669.3038310216027}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9436698717948724,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6484375,"distances_sum":2314.33555525956}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502461080586085,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7265625,"distances_sum":2336.6493400050394}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8814222236097244,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.03125,"distances_sum":1827.6698507694778}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8515031843156851,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.671875,"distances_sum":1663.448106281633}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9502461080586085,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7265625,"distances_sum":2336.6493400050394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95761217948718,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8203125,"distances_sum":2337.1319474676407}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650354853479859,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.84375,"distances_sum":2390.0181103355503}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640109890109894,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8671875,"distances_sum":2370.0750401857194}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.955248397435898,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.765625,"distances_sum":2339.376525573382}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633702,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8046875,"distances_sum":2389.8289867359176}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633702,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8046875,"distances_sum":2389.8289867359176}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633702,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8046875,"distances_sum":2389.8289867359176}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2744140625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2744140625,"f1":null,"seconds":3.1813979148864746e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.6171875,"distances_sum":668.315350029718}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.6640625,"distances_sum":921.3789782715592}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7978573509823519,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7265625,"distances_sum":1497.4772936954362}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7978573509823519,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7265625,"distances_sum":1497.4772936954362}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8671687687312695,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9921875,"distances_sum":1816.9721381423394}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.892754641192142,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4375,"distances_sum":1981.2931354888813}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.892754641192142,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4375,"distances_sum":1981.2931354888813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8953353937728947,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.40625,"distances_sum":1977.32512132076}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618532509157514,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2464.930009135899}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9437817390942395,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6640625,"distances_sum":2397.837673060916}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9296245421245426,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6875,"distances_sum":2249.5513849228287}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9486893315018322,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8125,"distances_sum":2354.0096487087385}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9618532509157514,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2464.930009135899}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9618532509157514,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2464.930009135899}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":5.9296875,"distances_sum":927.7446061092124}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.44921875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.44921875,"f1":null,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":5.9296875,"distances_sum":927.7446061092124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9023237179487189,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.2265625,"distances_sum":1943.4836175592568}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7008429070929079,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":6.546875,"distances_sum":1165.248557357642}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.537109375,"f1":null,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":6.375,"distances_sum":1070.0371928080601}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8540386696636707,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.671875,"distances_sum":1662.3500742365236}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.619140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.619140625,"f1":0.7549013486513494,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.21875,"distances_sum":1280.6868027900343}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9023237179487189,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.2265625,"distances_sum":1943.4836175592568}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9653159340659344,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.859375,"distances_sum":2392.0771112374887}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9373225732600738,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.734375,"distances_sum":2191.065551724003}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802203,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8515625,"distances_sum":2341.0772248212184}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428170787545793,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6875,"distances_sum":2269.185522563618}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9436641483516488,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.7421875,"distances_sum":2240.5462869537273}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9618131868131872,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.890625,"distances_sum":2320.5875070752477}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9215373168498175,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6484375,"distances_sum":2065.2041083781114}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9242845695970703,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6796875,"distances_sum":2090.6213967941294}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9653159340659344,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.859375,"distances_sum":2392.0771112374887}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9653159340659344,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.859375,"distances_sum":2392.0771112374887}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7786676864801875,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":7.1640625,"distances_sum":1400.0605057494397}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7786676864801875,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":7.1640625,"distances_sum":1400.0605057494397}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.877078130203131,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":7.9296875,"distances_sum":1856.228133731281}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.877078130203131,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":7.9296875,"distances_sum":1856.228133731281}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558092948717953,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8359375,"distances_sum":2330.826690643869}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558092948717953,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8359375,"distances_sum":2330.826690643869}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558092948717953,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.1641532182693481e-6,"evaluations":8.8359375,"distances_sum":2330.826690643869}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7749354811854818,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.28125,"distances_sum":1403.8376479666954}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":5.8984375,"distances_sum":938.7443528722478}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7749354811854818,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.28125,"distances_sum":1403.8376479666954}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.946365613553114,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.765625,"distances_sum":2259.109322682294}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.946365613553114,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.765625,"distances_sum":2259.109322682294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9700950091575095,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.890625,"distances_sum":2388.664224930034}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.9609375,"distances_sum":2420.7287977685546}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970707417582418,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.9296875,"distances_sum":2408.3445534798648}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.9609375,"distances_sum":2420.7287977685546}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.9609375,"distances_sum":2420.7287977685546}}, n: 9
mean(cfft.distances) = 0.33616175413308713
mean(cdnet.distances) = 0.7252143513302426
mean(crand.distances) = 0.3482745876918715
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8688888888888888
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.86
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9177777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8933333333333332
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9022222222222224
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9400000000000001
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8666666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9177777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.9466666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 10, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 3, 1, 2]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.554153057038784] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 18]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(2, 22), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 11: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 14 centroids; started with 12
acc = 0.9133333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2781379632415829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2781379632415829, 0.23939284393368093] ***
*** starting iteration: 2; err: [Inf, 0.2781379632415829, 0.23939284393368093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2781379632415829, 0.23939284393368093, 0.2376519359869172] ***
*** starting iteration: 3; err: [Inf, 0.2781379632415829, 0.23939284393368093, 0.2376519359869172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2781379632415829, 0.23939284393368093, 0.2376519359869172, 0.23742386901348428] ***
*** finished computation of 3 references, err: [Inf, 0.2781379632415829, 0.23939284393368093, 0.2376519359869172, 0.23742386901348428] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [168, 53, 0]]
** centroid: 1, normalized-entropy: 0.7947391606643669, [(1, 168), (2, 53)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [220, 31, 0]]
** centroid: 2, normalized-entropy: 0.5393554161124522, [(1, 220), (2, 31)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 169, 25]]
** centroid: 3, normalized-entropy: 0.5543199067435336, [(2, 169), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36907842312834743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36907842312834743, 0.25705586663465474] ***
*** starting iteration: 2; err: [Inf, 0.36907842312834743, 0.25705586663465474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36907842312834743, 0.25705586663465474, 0.24208691085073009] ***
*** starting iteration: 3; err: [Inf, 0.36907842312834743, 0.25705586663465474, 0.24208691085073009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36907842312834743, 0.25705586663465474, 0.24208691085073009, 0.23910464191979644] ***
*** starting iteration: 4; err: [Inf, 0.36907842312834743, 0.25705586663465474, 0.24208691085073009, 0.23910464191979644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36907842312834743, 0.25705586663465474, 0.24208691085073009, 0.23910464191979644, 0.23813891332914894] ***
*** finished computation of 3 references, err: [Inf, 0.36907842312834743, 0.25705586663465474, 0.24208691085073009, 0.23910464191979644, 0.23813891332914894] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 197, 18]]
** centroid: 1, normalized-entropy: 0.41515629861798253, [(2, 197), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [228, 7, 0]]
** centroid: 2, normalized-entropy: 0.19332372237791742, [(1, 228), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [172, 45, 0]]
** centroid: 3, normalized-entropy: 0.7364317525200729, [(1, 172), (2, 45)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3270014551338339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3270014551338339, 0.24596462934941188] ***
*** starting iteration: 2; err: [Inf, 0.3270014551338339, 0.24596462934941188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3270014551338339, 0.24596462934941188, 0.2389237222302219] ***
*** starting iteration: 3; err: [Inf, 0.3270014551338339, 0.24596462934941188, 0.2389237222302219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3270014551338339, 0.24596462934941188, 0.2389237222302219, 0.2369616543758951] ***
*** starting iteration: 4; err: [Inf, 0.3270014551338339, 0.24596462934941188, 0.2389237222302219, 0.2369616543758951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3270014551338339, 0.24596462934941188, 0.2389237222302219, 0.2369616543758951, 0.236186133160059] ***
*** finished computation of 3 references, err: [Inf, 0.3270014551338339, 0.24596462934941188, 0.2389237222302219, 0.2369616543758951, 0.236186133160059] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [138, 53, 0]]
** centroid: 1, normalized-entropy: 0.8520039111392206, [(1, 138), (2, 53)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [249, 2, 0]]
** centroid: 2, normalized-entropy: 0.06699980460833328, [(1, 249), (2, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [23, 177, 25]]
** centroid: 3, normalized-entropy: 0.6062428909961083, [(1, 23), (2, 177), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2205280274021308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2205280274021308, 0.19106563477002242] ***
*** finished computation of 7 references, err: [Inf, 0.2205280274021308, 0.19106563477002242] ***
*** center 1: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [26, 108, 0]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(1, 26), (2, 108)]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 100, 25]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 100), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [86, 26, 0]]
** centroid: 6, normalized-entropy: 0.7817281222714539, [(1, 86), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [74, 19, 0]]
** centroid: 7, normalized-entropy: 0.7304472862481346, [(1, 74), (2, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31578279273358284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31578279273358284, 0.2547061554703588] ***
*** finished computation of 7 references, err: [Inf, 0.31578279273358284, 0.2547061554703588] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 24, 0]]
** centroid: 1, normalized-entropy: 0.8323322690121193, [(1, 67), (2, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 58, 0]]
** centroid: 3, normalized-entropy: 0.9999473039445343, [(1, 59), (2, 58)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [31, 67, 0]]
** centroid: 4, normalized-entropy: 0.9003418708227195, [(1, 31), (2, 67)]
*** center 5: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 99, 18]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(2, 99), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [65, 1, 0]]
** centroid: 7, normalized-entropy: 0.11327430349709665, [(1, 65), (2, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3180446177092695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3180446177092695, 0.2279890152329727] ***
*** finished computation of 7 references, err: [Inf, 0.3180446177092695, 0.2279890152329727] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [122, 66, 0]]
** centroid: 1, normalized-entropy: 0.9350145588035413, [(1, 122), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [92, 8, 0]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(1, 92), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 67, 9]]
** centroid: 3, normalized-entropy: 0.524805134842907, [(2, 67), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 16]]
** centroid: 4, normalized-entropy: 1.0, [(2, 16), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [165, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 75, 0]]
** centroid: 7, normalized-entropy: 0.8718686865520275, [(1, 31), (2, 75)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18790642035476215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18790642035476215, 0.15542069863050464] ***
*** starting iteration: 2; err: [Inf, 0.18790642035476215, 0.15542069863050464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18790642035476215, 0.15542069863050464, 0.1527583575478892] ***
*** starting iteration: 3; err: [Inf, 0.18790642035476215, 0.15542069863050464, 0.1527583575478892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18790642035476215, 0.15542069863050464, 0.1527583575478892, 0.15229044654252785] ***
*** finished computation of 7 references, err: [Inf, 0.18790642035476215, 0.15542069863050464, 0.1527583575478892, 0.15229044654252785] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 73, 0]]
** centroid: 1, normalized-entropy: 0.7175106531195438, [(1, 18), (2, 73)]
*** center 2: selecting labels [1] (freq >= 1) [from [132, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 41, 0]]
** centroid: 3, normalized-entropy: 0.9786239947589973, [(1, 58), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [10, 72, 0]]
** centroid: 4, normalized-entropy: 0.5349436990971067, [(1, 10), (2, 72)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [92, 7, 0]]
** centroid: 5, normalized-entropy: 0.3685567775377064, [(1, 92), (2, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 60, 25]]
** centroid: 6, normalized-entropy: 0.8739810481273581, [(2, 60), (3, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19605863086231376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19605863086231376, 0.16115252205311717] ***
*** starting iteration: 2; err: [Inf, 0.19605863086231376, 0.16115252205311717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19605863086231376, 0.16115252205311717, 0.14980954415237493] ***
*** starting iteration: 3; err: [Inf, 0.19605863086231376, 0.16115252205311717, 0.14980954415237493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19605863086231376, 0.16115252205311717, 0.14980954415237493, 0.1491484384127855] ***
*** finished computation of 7 references, err: [Inf, 0.19605863086231376, 0.16115252205311717, 0.14980954415237493, 0.1491484384127855] ***
*** center 1: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 74, 18]]
** centroid: 2, normalized-entropy: 0.7131467486384921, [(2, 74), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 45, 0]]
** centroid: 3, normalized-entropy: 0.9605187074766162, [(1, 28), (2, 45)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 56, 0]]
** centroid: 5, normalized-entropy: 0.9886994082884974, [(1, 72), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [16, 74, 0]]
** centroid: 6, normalized-entropy: 0.6751914401458716, [(1, 16), (2, 74)]
*** center 7: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17373955001596592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17373955001596592, 0.15076578884333863] ***
*** starting iteration: 2; err: [Inf, 0.17373955001596592, 0.15076578884333863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17373955001596592, 0.15076578884333863, 0.14794244230312967] ***
*** starting iteration: 3; err: [Inf, 0.17373955001596592, 0.15076578884333863, 0.14794244230312967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17373955001596592, 0.15076578884333863, 0.14794244230312967, 0.1471945829954797] ***
*** finished computation of 7 references, err: [Inf, 0.17373955001596592, 0.15076578884333863, 0.14794244230312967, 0.1471945829954797] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 79, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 55, 25]]
** centroid: 2, normalized-entropy: 0.8960382325345574, [(2, 55), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 41, 0]]
** centroid: 3, normalized-entropy: 0.9602553596067602, [(1, 66), (2, 41)]
*** center 4: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [47, 49, 0]]
** centroid: 5, normalized-entropy: 0.999686892486842, [(1, 47), (2, 49)]
*** center 6: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [103, 8, 0]]
** centroid: 7, normalized-entropy: 0.3736090708557681, [(1, 103), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2689553462178656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2689553462178656, 0.2102073316151897] ***
*** starting iteration: 2; err: [Inf, 0.2689553462178656, 0.2102073316151897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775] ***
*** starting iteration: 3; err: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366] ***
*** starting iteration: 4; err: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366, 0.19427511930555194] ***
*** starting iteration: 5; err: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366, 0.19427511930555194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366, 0.19427511930555194, 0.1929998243417781] ***
*** starting iteration: 6; err: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366, 0.19427511930555194, 0.1929998243417781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366, 0.19427511930555194, 0.1929998243417781, 0.19208593467284027] ***
*** finished computation of 7 references, err: [Inf, 0.2689553462178656, 0.2102073316151897, 0.19926517718826775, 0.19591365500448366, 0.19427511930555194, 0.1929998243417781, 0.19208593467284027] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 52, 0]]
** centroid: 1, normalized-entropy: 0.9990102708804813, [(1, 56), (2, 52)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 85, 25]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 85), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 61, 0]]
** centroid: 3, normalized-entropy: 0.5864477034453907, [(1, 10), (2, 61)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 55, 0]]
** centroid: 6, normalized-entropy: 0.999941453025042, [(1, 56), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19790567056941932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19790567056941932, 0.1920595207636285] ***
*** starting iteration: 2; err: [Inf, 0.19790567056941932, 0.1920595207636285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19790567056941932, 0.1920595207636285, 0.1907899635348251] ***
*** starting iteration: 3; err: [Inf, 0.19790567056941932, 0.1920595207636285, 0.1907899635348251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19790567056941932, 0.1920595207636285, 0.1907899635348251, 0.18980573467642203] ***
*** finished computation of 7 references, err: [Inf, 0.19790567056941932, 0.1920595207636285, 0.1907899635348251, 0.18980573467642203] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 11, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(1, 66), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 60, 18]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 60), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [98, 10, 0]]
** centroid: 3, normalized-entropy: 0.44506485705083854, [(1, 98), (2, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [26, 81, 0]]
** centroid: 6, normalized-entropy: 0.7999783611177544, [(1, 26), (2, 81)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 87, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2735769224186977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2735769224186977, 0.21313514045790127] ***
*** starting iteration: 2; err: [Inf, 0.2735769224186977, 0.21313514045790127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2735769224186977, 0.21313514045790127, 0.19302807543203346] ***
*** starting iteration: 3; err: [Inf, 0.2735769224186977, 0.21313514045790127, 0.19302807543203346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2735769224186977, 0.21313514045790127, 0.19302807543203346, 0.19037150646765147] ***
*** starting iteration: 4; err: [Inf, 0.2735769224186977, 0.21313514045790127, 0.19302807543203346, 0.19037150646765147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2735769224186977, 0.21313514045790127, 0.19302807543203346, 0.19037150646765147, 0.18950934914140397] ***
*** finished computation of 7 references, err: [Inf, 0.2735769224186977, 0.21313514045790127, 0.19302807543203346, 0.19037150646765147, 0.18950934914140397] ***
*** center 1: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 80, 25]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 80), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [102, 31, 0]]
** centroid: 3, normalized-entropy: 0.7833465670569363, [(1, 102), (2, 31)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 45, 0]]
** centroid: 5, normalized-entropy: 0.9992492479956566, [(1, 48), (2, 45)]
*** center 6: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [85, 9, 0]]
** centroid: 7, normalized-entropy: 0.45535954758523894, [(1, 85), (2, 9)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21864364657260188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21864364657260188, 0.17114541958598] ***
*** finished computation of 7 references, err: [Inf, 0.21864364657260188, 0.17114541958598] ***
*** center 1: selecting labels [1] (freq >= 1) [from [118, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [104, 42, 0]]
** centroid: 2, normalized-entropy: 0.8656939941993219, [(1, 104), (2, 42)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [106, 34, 0]]
** centroid: 4, normalized-entropy: 0.7997594113291759, [(1, 106), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [24, 42, 0]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(1, 24), (2, 42)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 60, 9]]
** centroid: 6, normalized-entropy: 0.5586293734521991, [(2, 60), (3, 9)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 75, 16]]
** centroid: 7, normalized-entropy: 0.6708561590207726, [(2, 75), (3, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22154157064894195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22154157064894195, 0.1596123499564011] ***
*** finished computation of 7 references, err: [Inf, 0.22154157064894195, 0.1596123499564011] ***
*** center 1: selecting labels [1] (freq >= 1) [from [133, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [4, 94, 0]]
** centroid: 2, normalized-entropy: 0.2460225782203316, [(1, 4), (2, 94)]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 81, 18]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 81), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 22, 0]]
** centroid: 5, normalized-entropy: 0.7807536250860868, [(1, 73), (2, 22)]
*** center 6: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [15, 52, 0]]
** centroid: 7, normalized-entropy: 0.7671903206448686, [(1, 15), (2, 52)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1837869316061632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837869316061632, 0.1540407833044251] ***
*** finished computation of 7 references, err: [Inf, 0.1837869316061632, 0.1540407833044251] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 72, 24]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 72), (3, 24)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [8, 113, 1]]
** centroid: 2, normalized-entropy: 0.2630756372635399, [(1, 8), (2, 113), (3, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [77, 11, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 77), (2, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [97, 16, 0]]
** centroid: 5, normalized-entropy: 0.5883953722191577, [(1, 97), (2, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 20, 0]]
** centroid: 7, normalized-entropy: 0.8263541679009075, [(1, 57), (2, 20)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22765578123931032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22765578123931032, 0.16783682058122032] ***
*** starting iteration: 2; err: [Inf, 0.22765578123931032, 0.16783682058122032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22765578123931032, 0.16783682058122032, 0.16144819858668558] ***
*** starting iteration: 3; err: [Inf, 0.22765578123931032, 0.16783682058122032, 0.16144819858668558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22765578123931032, 0.16783682058122032, 0.16144819858668558, 0.15970731068922728] ***
*** finished computation of 7 references, err: [Inf, 0.22765578123931032, 0.16783682058122032, 0.16144819858668558, 0.15970731068922728] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [94, 72, 0]]
** centroid: 1, normalized-entropy: 0.9872927315785851, [(1, 94), (2, 72)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [9, 22, 0]]
** centroid: 2, normalized-entropy: 0.8691375806126381, [(1, 9), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 25]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 70), (3, 25)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 83, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [111, 6, 0]]
** centroid: 6, normalized-entropy: 0.29181825659888555, [(1, 111), (2, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2073077560881379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073077560881379, 0.16066464411117126] ***
*** starting iteration: 2; err: [Inf, 0.2073077560881379, 0.16066464411117126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073077560881379, 0.16066464411117126, 0.15281516480129742] ***
*** starting iteration: 3; err: [Inf, 0.2073077560881379, 0.16066464411117126, 0.15281516480129742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2073077560881379, 0.16066464411117126, 0.15281516480129742, 0.15069428077344593] ***
*** finished computation of 7 references, err: [Inf, 0.2073077560881379, 0.16066464411117126, 0.15281516480129742, 0.15069428077344593] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 12, 0]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(1, 66), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 86, 2]]
** centroid: 2, normalized-entropy: 0.1564910629057016, [(2, 86), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [125, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [101, 6, 0]]
** centroid: 5, normalized-entropy: 0.31166198862303296, [(1, 101), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 101, 16]]
** centroid: 6, normalized-entropy: 0.5756693370369834, [(2, 101), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 44, 0]]
** centroid: 7, normalized-entropy: 0.9999089303498087, [(1, 45), (2, 44)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20441822948233074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20441822948233074, 0.1577154771987533] ***
*** starting iteration: 2; err: [Inf, 0.20441822948233074, 0.1577154771987533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20441822948233074, 0.1577154771987533, 0.15503220263354736] ***
*** starting iteration: 3; err: [Inf, 0.20441822948233074, 0.1577154771987533, 0.15503220263354736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20441822948233074, 0.1577154771987533, 0.15503220263354736, 0.15419978780792035] ***
*** finished computation of 7 references, err: [Inf, 0.20441822948233074, 0.1577154771987533, 0.15503220263354736, 0.15419978780792035] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [89, 29, 0]]
** centroid: 4, normalized-entropy: 0.804492844152443, [(1, 89), (2, 29)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 36, 25]]
** centroid: 5, normalized-entropy: 0.9764143081154868, [(2, 36), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [114, 13, 0]]
** centroid: 6, normalized-entropy: 0.47643919109803384, [(1, 114), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [77, 2, 0]]
** centroid: 7, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2729987367832412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2729987367832412, 0.21367467516982877] ***
*** starting iteration: 2; err: [Inf, 0.2729987367832412, 0.21367467516982877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472] ***
*** starting iteration: 3; err: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472, 0.19965568753994173] ***
*** starting iteration: 4; err: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472, 0.19965568753994173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472, 0.19965568753994173, 0.19828684346934966] ***
*** starting iteration: 5; err: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472, 0.19965568753994173, 0.19828684346934966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472, 0.19965568753994173, 0.19828684346934966, 0.19802560035542055] ***
*** finished computation of 7 references, err: [Inf, 0.2729987367832412, 0.21367467516982877, 0.20267479105743472, 0.19965568753994173, 0.19828684346934966, 0.19802560035542055] ***
*** center 1: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [84, 58, 0]]
** centroid: 2, normalized-entropy: 0.9756797868933086, [(1, 84), (2, 58)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 111, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [65, 9, 0]]
** centroid: 5, normalized-entropy: 0.5340042729285396, [(1, 65), (2, 9)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 59, 25]]
** centroid: 6, normalized-entropy: 0.8783609387702275, [(2, 59), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 16, 0]]
** centroid: 7, normalized-entropy: 0.7698205808588191, [(1, 55), (2, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2931469273229857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563] ***
*** starting iteration: 2; err: [Inf, 0.2931469273229857, 0.2286139082392563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874] ***
*** starting iteration: 3; err: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715] ***
*** starting iteration: 4; err: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423] ***
*** starting iteration: 5; err: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423, 0.19987093687135687] ***
*** starting iteration: 6; err: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423, 0.19987093687135687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423, 0.19987093687135687, 0.19804627968716076] ***
*** starting iteration: 7; err: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423, 0.19987093687135687, 0.19804627968716076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423, 0.19987093687135687, 0.19804627968716076, 0.19717445385899265] ***
*** finished computation of 7 references, err: [Inf, 0.2931469273229857, 0.2286139082392563, 0.21715065172483874, 0.20973224670666715, 0.2040441287695423, 0.19987093687135687, 0.19804627968716076, 0.19717445385899265] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 28, 0]]
** centroid: 1, normalized-entropy: 0.898419774686072, [(1, 61), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [93, 38, 0]]
** centroid: 2, normalized-entropy: 0.868819834026739, [(1, 93), (2, 38)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 79, 18]]
** centroid: 3, normalized-entropy: 0.6921053253628727, [(2, 79), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 94, 0]]
** centroid: 4, normalized-entropy: 0.2460225782203316, [(1, 4), (2, 94)]
*** center 5: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 10, 0]]
** centroid: 7, normalized-entropy: 0.5969995167604553, [(1, 59), (2, 10)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28314446561552326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28314446561552326, 0.1989163918800462] ***
*** starting iteration: 2; err: [Inf, 0.28314446561552326, 0.1989163918800462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413] ***
*** starting iteration: 3; err: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169] ***
*** starting iteration: 4; err: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169, 0.18972446026512305] ***
*** starting iteration: 5; err: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169, 0.18972446026512305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169, 0.18972446026512305, 0.188693732804461] ***
*** starting iteration: 6; err: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169, 0.18972446026512305, 0.188693732804461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169, 0.18972446026512305, 0.188693732804461, 0.1882053187285931] ***
*** finished computation of 7 references, err: [Inf, 0.28314446561552326, 0.1989163918800462, 0.19312095234374413, 0.1913683111863169, 0.18972446026512305, 0.188693732804461, 0.1882053187285931] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 55, 25]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 55), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 49, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 49), (2, 49)]
*** center 3: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 89, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [91, 10, 0]]
** centroid: 6, normalized-entropy: 0.46584917377204255, [(1, 91), (2, 10)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [93, 29, 0]]
** centroid: 7, normalized-entropy: 0.7912027614010296, [(1, 93), (2, 29)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23935355682641984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23935355682641984, 0.20241087337804808] ***
*** starting iteration: 2; err: [Inf, 0.23935355682641984, 0.20241087337804808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23935355682641984, 0.20241087337804808, 0.19424593512230348] ***
*** starting iteration: 3; err: [Inf, 0.23935355682641984, 0.20241087337804808, 0.19424593512230348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23935355682641984, 0.20241087337804808, 0.19424593512230348, 0.19292573928665202] ***
*** starting iteration: 4; err: [Inf, 0.23935355682641984, 0.20241087337804808, 0.19424593512230348, 0.19292573928665202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23935355682641984, 0.20241087337804808, 0.19424593512230348, 0.19292573928665202, 0.192400008667954] ***
*** finished computation of 7 references, err: [Inf, 0.23935355682641984, 0.20241087337804808, 0.19424593512230348, 0.19292573928665202, 0.192400008667954] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [24, 88, 0]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(1, 24), (2, 88)]
*** center 2: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [7, 62, 0]]
** centroid: 4, normalized-entropy: 0.47357292491745173, [(1, 7), (2, 62)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 34, 0]]
** centroid: 5, normalized-entropy: 0.9117517586347538, [(1, 70), (2, 34)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 69, 25]]
** centroid: 6, normalized-entropy: 0.8356038276131503, [(2, 69), (3, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23844337532913934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23844337532913934, 0.2076160184469359] ***
*** starting iteration: 2; err: [Inf, 0.23844337532913934, 0.2076160184469359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335] ***
*** starting iteration: 3; err: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614] ***
*** starting iteration: 4; err: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614, 0.2023428272926479] ***
*** starting iteration: 5; err: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614, 0.2023428272926479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614, 0.2023428272926479, 0.20106588251053772] ***
*** starting iteration: 6; err: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614, 0.2023428272926479, 0.20106588251053772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614, 0.2023428272926479, 0.20106588251053772, 0.20031302320076966] ***
*** finished computation of 7 references, err: [Inf, 0.23844337532913934, 0.2076160184469359, 0.20550025194587335, 0.2037872338403614, 0.2023428272926479, 0.20106588251053772, 0.20031302320076966] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 44, 0]]
** centroid: 1, normalized-entropy: 0.9621461334087003, [(1, 70), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [3, 91, 0]]
** centroid: 2, normalized-entropy: 0.2039058755048202, [(1, 3), (2, 91)]
*** center 3: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 75, 18]]
** centroid: 6, normalized-entropy: 0.708835673332196, [(2, 75), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 39, 0]]
** centroid: 7, normalized-entropy: 0.9744894033980525, [(1, 57), (2, 39)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.394672898963831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806] ***
*** starting iteration: 2; err: [Inf, 0.394672898963831, 0.22995597906368806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243] ***
*** starting iteration: 3; err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046] ***
*** starting iteration: 4; err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364] ***
*** starting iteration: 5; err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514] ***
*** starting iteration: 6; err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514, 0.1889792995714489] ***
*** starting iteration: 7; err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514, 0.1889792995714489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514, 0.1889792995714489, 0.18791069387077078] ***
*** starting iteration: 8; err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514, 0.1889792995714489, 0.18791069387077078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514, 0.1889792995714489, 0.18791069387077078, 0.1872966610163316] ***
*** finished computation of 7 references, err: [Inf, 0.394672898963831, 0.22995597906368806, 0.206439517464243, 0.1983884773629046, 0.19382959772655364, 0.19113471877036514, 0.1889792995714489, 0.18791069387077078, 0.1872966610163316] ***
*** center 1: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 3, 0]]
** centroid: 2, normalized-entropy: 0.17800689613931453, [(1, 109), (2, 3)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 73, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [67, 35, 0]]
** centroid: 5, normalized-entropy: 0.9277892502681174, [(1, 67), (2, 35)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 64, 25]]
** centroid: 6, normalized-entropy: 0.8566727035015875, [(2, 64), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 57, 0]]
** centroid: 7, normalized-entropy: 0.993320421638792, [(1, 47), (2, 57)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40946006355807185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753] ***
*** starting iteration: 2; err: [Inf, 0.40946006355807185, 0.33203767963290753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324] ***
*** starting iteration: 3; err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104] ***
*** starting iteration: 4; err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063] ***
*** starting iteration: 5; err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981] ***
*** starting iteration: 6; err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981, 0.3082250716631768] ***
*** starting iteration: 7; err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981, 0.3082250716631768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981, 0.3082250716631768, 0.2971726199779827] ***
*** starting iteration: 8; err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981, 0.3082250716631768, 0.2971726199779827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981, 0.3082250716631768, 0.2971726199779827, 0.2971164156842205] ***
*** finished computation of 3 references, err: [Inf, 0.40946006355807185, 0.33203767963290753, 0.3261109169631324, 0.3223469671947104, 0.31910278076759063, 0.3152432404926981, 0.3082250716631768, 0.2971726199779827, 0.2971164156842205] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [105, 126, 25]]
** centroid: 1, normalized-entropy: 0.8571046273311482, [(1, 105), (2, 126), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [85, 127, 0]]
** centroid: 2, normalized-entropy: 0.9714997715831533, [(1, 85), (2, 127)]
*** center 3: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3589414837986588] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195] ***
*** starting iteration: 2; err: [Inf, 0.3589414837986588, 0.3377201465144195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923] ***
*** starting iteration: 3; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694] ***
*** starting iteration: 4; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487] ***
*** starting iteration: 5; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673] ***
*** starting iteration: 6; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645] ***
*** starting iteration: 7; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645, 0.3035553139222526] ***
*** starting iteration: 8; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645, 0.3035553139222526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645, 0.3035553139222526, 0.3016608903433072] ***
*** starting iteration: 9; err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645, 0.3035553139222526, 0.3016608903433072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645, 0.3035553139222526, 0.3016608903433072, 0.3007483627532666] ***
*** finished computation of 3 references, err: [Inf, 0.3589414837986588, 0.3377201465144195, 0.3332197648232923, 0.32953842739243694, 0.32465025395255487, 0.3205890843443673, 0.31071366110573645, 0.3035553139222526, 0.3016608903433072, 0.3007483627532666] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [260, 4, 0]]
** centroid: 1, normalized-entropy: 0.11327430349709665, [(1, 260), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [134, 60, 0]]
** centroid: 2, normalized-entropy: 0.892338681064176, [(1, 134), (2, 60)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [6, 185, 18]]
** centroid: 3, normalized-entropy: 0.38327945081437953, [(1, 6), (2, 185), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42845414285694644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42845414285694644, 0.3190781076730549] ***
*** starting iteration: 2; err: [Inf, 0.42845414285694644, 0.3190781076730549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42845414285694644, 0.3190781076730549, 0.30069340063703026] ***
*** starting iteration: 3; err: [Inf, 0.42845414285694644, 0.3190781076730549, 0.30069340063703026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42845414285694644, 0.3190781076730549, 0.30069340063703026, 0.29560161159112713] ***
*** starting iteration: 4; err: [Inf, 0.42845414285694644, 0.3190781076730549, 0.30069340063703026, 0.29560161159112713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42845414285694644, 0.3190781076730549, 0.30069340063703026, 0.29560161159112713, 0.2946677314343749] ***
*** finished computation of 3 references, err: [Inf, 0.42845414285694644, 0.3190781076730549, 0.30069340063703026, 0.29560161159112713, 0.2946677314343749] ***
*** center 1: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [119, 84, 0]]
** centroid: 2, normalized-entropy: 0.9784493292686188, [(1, 119), (2, 84)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [87, 148, 25]]
** centroid: 3, normalized-entropy: 0.8303619030914047, [(1, 87), (2, 148), (3, 25)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 10)
[0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9389779000557444
finished with 11
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.21874533205463723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21874533205463723, 0.1613837407996973] ***
*** starting iteration: 2; err: [Inf, 0.21874533205463723, 0.1613837407996973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21874533205463723, 0.1613837407996973, 0.15297501587641757] ***
*** starting iteration: 3; err: [Inf, 0.21874533205463723, 0.1613837407996973, 0.15297501587641757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21874533205463723, 0.1613837407996973, 0.15297501587641757, 0.15080156392003927] ***
*** starting iteration: 4; err: [Inf, 0.21874533205463723, 0.1613837407996973, 0.15297501587641757, 0.15080156392003927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21874533205463723, 0.1613837407996973, 0.15297501587641757, 0.15080156392003927, 0.149944255589969] ***
*** finished computation of 7 references, err: [Inf, 0.21874533205463723, 0.1613837407996973, 0.15297501587641757, 0.15080156392003927, 0.149944255589969] ***
*** center 1: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [4, 110, 0]]
** centroid: 2, normalized-entropy: 0.2192973081321754, [(1, 4), (2, 110)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 25]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 55), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [78, 21, 0]]
** centroid: 6, normalized-entropy: 0.7455178428108284, [(1, 78), (2, 21)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 4, 0]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29405936901771773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066] ***
*** starting iteration: 2; err: [Inf, 0.29405936901771773, 0.1895897305449066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885] ***
*** starting iteration: 3; err: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615] ***
*** starting iteration: 4; err: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031] ***
*** starting iteration: 5; err: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031, 0.15781833292327185] ***
*** starting iteration: 6; err: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031, 0.15781833292327185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031, 0.15781833292327185, 0.15676552752127823] ***
*** starting iteration: 7; err: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031, 0.15781833292327185, 0.15676552752127823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031, 0.15781833292327185, 0.15676552752127823, 0.1561026141229693] ***
*** finished computation of 7 references, err: [Inf, 0.29405936901771773, 0.1895897305449066, 0.1705918221425885, 0.16351515190840615, 0.1595736907284031, 0.15781833292327185, 0.15676552752127823, 0.1561026141229693] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [107, 8, 0]]
** centroid: 1, normalized-entropy: 0.36429902881461246, [(1, 107), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [105, 34, 0]]
** centroid: 2, normalized-entropy: 0.8026136197921807, [(1, 105), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 117, 18]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 117), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 13, 0]]
** centroid: 5, normalized-entropy: 0.943601631299382, [(1, 23), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 77, 0]]
** centroid: 6, normalized-entropy: 0.3313056130577883, [(1, 5), (2, 77)]
*** center 7: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.204266425791843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.204266425791843, 0.16287432204110958] ***
*** starting iteration: 2; err: [Inf, 0.204266425791843, 0.16287432204110958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474] ***
*** starting iteration: 3; err: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474, 0.15422750695788678] ***
*** starting iteration: 4; err: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474, 0.15422750695788678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474, 0.15422750695788678, 0.1521894083122899] ***
*** starting iteration: 5; err: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474, 0.15422750695788678, 0.1521894083122899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474, 0.15422750695788678, 0.1521894083122899, 0.15166133581877111] ***
*** finished computation of 7 references, err: [Inf, 0.204266425791843, 0.16287432204110958, 0.15794751449799474, 0.15422750695788678, 0.1521894083122899, 0.15166133581877111] ***
*** center 1: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 50, 0]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(1, 80), (2, 50)]
*** center 3: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 103, 25]]
** centroid: 4, normalized-entropy: 0.7124534449668779, [(2, 103), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 47, 0]]
** centroid: 5, normalized-entropy: 0.9992158792218827, [(1, 44), (2, 47)]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 32, 0]]
** centroid: 7, normalized-entropy: 0.9321115676166747, [(1, 60), (2, 32)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 11)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 12
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3407359957826455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3407359957826455, 0.3086320864380681] ***
*** starting iteration: 2; err: [Inf, 0.3407359957826455, 0.3086320864380681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612] ***
*** starting iteration: 3; err: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612, 0.3028192475603127] ***
*** starting iteration: 4; err: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612, 0.3028192475603127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612, 0.3028192475603127, 0.30145208538976964] ***
*** starting iteration: 5; err: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612, 0.3028192475603127, 0.30145208538976964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612, 0.3028192475603127, 0.30145208538976964, 0.3008576815097674] ***
*** finished computation of 3 references, err: [Inf, 0.3407359957826455, 0.3086320864380681, 0.3050527200270612, 0.3028192475603127, 0.30145208538976964, 0.3008576815097674] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 163, 25]]
** centroid: 1, normalized-entropy: 0.5655511182519258, [(2, 163), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [232, 27, 0]]
** centroid: 2, normalized-entropy: 0.4823158034085216, [(1, 232), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [156, 63, 0]]
** centroid: 3, normalized-entropy: 0.8656939941993219, [(1, 156), (2, 63)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4078501040364491] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4078501040364491, 0.30331001682919095] ***
*** starting iteration: 2; err: [Inf, 0.4078501040364491, 0.30331001682919095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4078501040364491, 0.30331001682919095, 0.300737170016636] ***
*** starting iteration: 3; err: [Inf, 0.4078501040364491, 0.30331001682919095, 0.300737170016636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4078501040364491, 0.30331001682919095, 0.300737170016636, 0.30024084287403763] ***
*** finished computation of 3 references, err: [Inf, 0.4078501040364491, 0.30331001682919095, 0.300737170016636, 0.30024084287403763] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [150, 45, 0]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(1, 150), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [249, 16, 0]]
** centroid: 2, normalized-entropy: 0.3289410736582891, [(1, 249), (2, 16)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 188, 18]]
** centroid: 3, normalized-entropy: 0.29635546556962034, [(1, 1), (2, 188), (3, 18)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3471985636265024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3471985636265024, 0.3023822001730283] ***
*** starting iteration: 2; err: [Inf, 0.3471985636265024, 0.3023822001730283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3471985636265024, 0.3023822001730283, 0.29887899682428437] ***
*** starting iteration: 3; err: [Inf, 0.3471985636265024, 0.3023822001730283, 0.29887899682428437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3471985636265024, 0.3023822001730283, 0.29887899682428437, 0.29869788069371556] ***
*** finished computation of 3 references, err: [Inf, 0.3471985636265024, 0.3023822001730283, 0.29887899682428437, 0.29869788069371556] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [123, 115, 0]]
** centroid: 1, normalized-entropy: 0.9991848220670628, [(1, 123), (2, 115)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [78, 117, 25]]
** centroid: 2, normalized-entropy: 0.8652590341792319, [(1, 78), (2, 117), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 12)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8760077442712172, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 13
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8760077442712172, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014, 0.7850275425125725]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 15
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.4229311281581816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4229311281581816, 0.29409881013895833] ***
*** finished computation of 3 references, err: [Inf, 0.4229311281581816, 0.29409881013895833] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [79, 174, 25]]
** centroid: 1, normalized-entropy: 0.7895662963471464, [(1, 79), (2, 174), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 79, 0]]
** centroid: 2, normalized-entropy: 0.9815528383442538, [(1, 109), (2, 79)]
*** center 3: selecting labels [1] (freq >= 1) [from [200, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4508079440029955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4508079440029955, 0.2945938742345386] ***
*** finished computation of 3 references, err: [Inf, 0.4508079440029955, 0.2945938742345386] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [79, 180, 18]]
** centroid: 1, normalized-entropy: 0.7423462389905298, [(1, 79), (2, 180), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 69, 0]]
** centroid: 3, normalized-entropy: 0.9421631690835511, [(1, 123), (2, 69)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41623575025066356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41623575025066356, 0.31744678932726605] ***
*** finished computation of 3 references, err: [Inf, 0.41623575025066356, 0.31744678932726605] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [255, 72, 0]]
** centroid: 1, normalized-entropy: 0.7605024019419504, [(1, 255), (2, 72)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [155, 40, 0]]
** centroid: 2, normalized-entropy: 0.7320666900931937, [(1, 155), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 120, 25]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 120), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3388659117251142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388659117251142, 0.23970703561384757] ***
*** finished computation of 3 references, err: [Inf, 0.3388659117251142, 0.23970703561384757] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [260, 42, 0]]
** centroid: 1, normalized-entropy: 0.5818055236161183, [(1, 260), (2, 42)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 163, 25]]
** centroid: 2, normalized-entropy: 0.5655511182519258, [(2, 163), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [128, 48, 0]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(1, 128), (2, 48)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37992513947177686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37992513947177686, 0.23937955259651258] ***
*** finished computation of 3 references, err: [Inf, 0.37992513947177686, 0.23937955259651258] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [61, 199, 18]]
** centroid: 1, normalized-entropy: 0.6820933703975911, [(1, 61), (2, 199), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [229, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [110, 50, 0]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(1, 110), (2, 50)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34668057847969136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34668057847969136, 0.24377801113397532] ***
*** finished computation of 3 references, err: [Inf, 0.34668057847969136, 0.24377801113397532] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [262, 41, 0]]
** centroid: 1, normalized-entropy: 0.5718325359740948, [(1, 262), (2, 41)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 136, 25]]
** centroid: 2, normalized-entropy: 0.6228960634909259, [(2, 136), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [148, 55, 0]]
** centroid: 3, normalized-entropy: 0.8428044770032017, [(1, 148), (2, 55)]
finished with 5 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9119808431185676, 0.911009812207417, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8760077442712172, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014, 0.7850275425125725]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 15
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9119808431185676, 0.911009812207417, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8760077442712172, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014, 0.7850275425125725]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 15
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9119808431185676, 0.911009812207417, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8760077442712172, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014, 0.7850275425125725]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 15
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9439829050607494, 0.9389779000557444, 0.9359988731246217, 0.9269898641156126, 0.9219908531285776, 0.9119808431185676, 0.911009812207417, 0.9009578440716165, 0.8939598280915645, 0.8880137622652593, 0.8760077442712172, 0.8719647791504079, 0.8680506854159549, 0.8650177123231014, 0.7850275425125725]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9439829050607494
finished with 16
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.22607293808497153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607293808497153, 0.16030844324058643] ***
*** finished computation of 7 references, err: [Inf, 0.22607293808497153, 0.16030844324058643] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 61, 25]]
** centroid: 1, normalized-entropy: 0.869620774054375, [(2, 61), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [127, 9, 0]]
** centroid: 2, normalized-entropy: 0.35149019247794344, [(1, 127), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 128, 0]]
** centroid: 3, normalized-entropy: 0.15743149388734748, [(1, 3), (2, 128)]
*** center 4: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 51, 0]]
** centroid: 6, normalized-entropy: 0.9871377743721862, [(1, 39), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [54, 4, 0]]
** centroid: 7, normalized-entropy: 0.36205125173399805, [(1, 54), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19513971470799046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19513971470799046, 0.1573737347072669] ***
*** finished computation of 7 references, err: [Inf, 0.19513971470799046, 0.1573737347072669] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 124, 18]]
** centroid: 1, normalized-entropy: 0.5484866088431741, [(2, 124), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 46, 0]]
** centroid: 2, normalized-entropy: 0.9787603904449517, [(1, 65), (2, 46)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [80, 19, 0]]
** centroid: 3, normalized-entropy: 0.7054690408228712, [(1, 80), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 8, 0]]
** centroid: 4, normalized-entropy: 0.5127091420308771, [(1, 62), (2, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 52, 0]]
** centroid: 7, normalized-entropy: 0.9978527766088781, [(1, 58), (2, 52)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19423866141280313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19423866141280313, 0.1605126349495604] ***
*** finished computation of 7 references, err: [Inf, 0.19423866141280313, 0.1605126349495604] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 75, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [123, 7, 0]]
** centroid: 2, normalized-entropy: 0.302515746788995, [(1, 123), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 30, 0]]
** centroid: 3, normalized-entropy: 0.9108783787500366, [(1, 62), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [53, 14, 0]]
** centroid: 4, normalized-entropy: 0.7394809367166378, [(1, 53), (2, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 71, 25]]
** centroid: 6, normalized-entropy: 0.8273744775003173, [(2, 71), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 35, 0]]
** centroid: 7, normalized-entropy: 0.961236604722876, [(1, 56), (2, 35)]
finished with 12 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.1998457662165165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1998457662165165, 0.1614104153732769] ***
*** starting iteration: 2; err: [Inf, 0.1998457662165165, 0.1614104153732769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239] ***
*** starting iteration: 3; err: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239, 0.15314142770785838] ***
*** starting iteration: 4; err: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239, 0.15314142770785838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239, 0.15314142770785838, 0.1513143229461275] ***
*** starting iteration: 5; err: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239, 0.15314142770785838, 0.1513143229461275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239, 0.15314142770785838, 0.1513143229461275, 0.15032311165286227] ***
*** finished computation of 7 references, err: [Inf, 0.1998457662165165, 0.1614104153732769, 0.15595928704296239, 0.15314142770785838, 0.1513143229461275, 0.15032311165286227] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 113, 1]]
** centroid: 1, normalized-entropy: 0.07253718299881001, [(2, 113), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [156, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 112, 33]]
** centroid: 3, normalized-entropy: 0.7737797299509303, [(2, 112), (3, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [80, 76, 0]]
** centroid: 4, normalized-entropy: 0.9995256892936492, [(1, 80), (2, 76)]
*** center 5: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 45, 0]]
** centroid: 6, normalized-entropy: 0.9009799714273107, [(1, 97), (2, 45)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [154, 21, 0]]
** centroid: 7, normalized-entropy: 0.5293608652873645, [(1, 154), (2, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20864642321038993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978] ***
*** starting iteration: 2; err: [Inf, 0.20864642321038993, 0.17908429902791978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647] ***
*** starting iteration: 3; err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873] ***
*** starting iteration: 4; err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172] ***
*** starting iteration: 5; err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227] ***
*** starting iteration: 6; err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227, 0.1486903219120577] ***
*** starting iteration: 7; err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227, 0.1486903219120577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227, 0.1486903219120577, 0.1476758889760822] ***
*** starting iteration: 8; err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227, 0.1486903219120577, 0.1476758889760822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227, 0.1486903219120577, 0.1476758889760822, 0.14736067605018616] ***
*** finished computation of 7 references, err: [Inf, 0.20864642321038993, 0.17908429902791978, 0.16397045066207647, 0.1567642754064873, 0.15348323323950172, 0.150622030637227, 0.1486903219120577, 0.1476758889760822, 0.14736067605018616] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 63, 17]]
** centroid: 1, normalized-entropy: 0.7462343013654809, [(2, 63), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 39, 0]]
** centroid: 2, normalized-entropy: 0.9906649266228326, [(1, 49), (2, 39)]
*** center 3: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [46, 17, 0]]
** centroid: 4, normalized-entropy: 0.8412367762002599, [(1, 46), (2, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 1, 0]]
** centroid: 6, normalized-entropy: 0.10802319526362848, [(1, 69), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [12, 73, 0]]
** centroid: 7, normalized-entropy: 0.5873116089977589, [(1, 12), (2, 73)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2376228959131986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2376228959131986, 0.1663924541398883] ***
*** starting iteration: 2; err: [Inf, 0.2376228959131986, 0.1663924541398883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546] ***
*** starting iteration: 3; err: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137] ***
*** starting iteration: 4; err: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137, 0.15208016548119485] ***
*** starting iteration: 5; err: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137, 0.15208016548119485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137, 0.15208016548119485, 0.15044621791224927] ***
*** starting iteration: 6; err: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137, 0.15208016548119485, 0.15044621791224927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137, 0.15208016548119485, 0.15044621791224927, 0.14954793671704827] ***
*** finished computation of 7 references, err: [Inf, 0.2376228959131986, 0.1663924541398883, 0.15758057828247546, 0.1538811877251137, 0.15208016548119485, 0.15044621791224927, 0.14954793671704827] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [78, 24, 0]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(1, 78), (2, 24)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 13, 0]]
** centroid: 3, normalized-entropy: 0.7607859931846075, [(1, 46), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 26, 0]]
** centroid: 4, normalized-entropy: 0.9672947789468944, [(1, 40), (2, 26)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 40, 20]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 40), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1708340651136823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658] ***
*** starting iteration: 2; err: [Inf, 0.1708340651136823, 0.15428397303819658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622] ***
*** starting iteration: 3; err: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107] ***
*** starting iteration: 4; err: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725] ***
*** starting iteration: 5; err: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725, 0.14676010875217615] ***
*** starting iteration: 6; err: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725, 0.14676010875217615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725, 0.14676010875217615, 0.14575311584584416] ***
*** starting iteration: 7; err: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725, 0.14676010875217615, 0.14575311584584416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725, 0.14676010875217615, 0.14575311584584416, 0.14546247557085007] ***
*** finished computation of 7 references, err: [Inf, 0.1708340651136823, 0.15428397303819658, 0.15195965147856622, 0.1504617387941107, 0.1483983794003725, 0.14676010875217615, 0.14575311584584416, 0.14546247557085007] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 53, 0]]
** centroid: 2, normalized-entropy: 0.13303964861069897, [(1, 1), (2, 53)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 40, 0]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(1, 32), (2, 40)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 13, 0]]
** centroid: 4, normalized-entropy: 0.6812908868842175, [(1, 59), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 18, 0]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(1, 60), (2, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 22]]
** centroid: 7, normalized-entropy: 0.8829589691462253, [(2, 51), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22853467585891485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22853467585891485, 0.18519134226627648] ***
*** starting iteration: 2; err: [Inf, 0.22853467585891485, 0.18519134226627648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255] ***
*** starting iteration: 3; err: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329] ***
*** starting iteration: 4; err: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329, 0.1540422800090164] ***
*** starting iteration: 5; err: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329, 0.1540422800090164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329, 0.1540422800090164, 0.15231792089063675] ***
*** starting iteration: 6; err: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329, 0.1540422800090164, 0.15231792089063675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329, 0.1540422800090164, 0.15231792089063675, 0.15141449100151658] ***
*** finished computation of 7 references, err: [Inf, 0.22853467585891485, 0.18519134226627648, 0.16758888780046255, 0.1577208437435329, 0.1540422800090164, 0.15231792089063675, 0.15141449100151658] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 42, 15]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 42), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 20, 0]]
** centroid: 2, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [26, 48, 0]]
** centroid: 5, normalized-entropy: 0.9352691398683568, [(1, 26), (2, 48)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 47, 2]]
** centroid: 6, normalized-entropy: 0.2460225782203316, [(2, 47), (3, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [66, 19, 0]]
** centroid: 7, normalized-entropy: 0.7665599404543365, [(1, 66), (2, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22787494084890933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408] ***
*** starting iteration: 2; err: [Inf, 0.22787494084890933, 0.17235380757134408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194] ***
*** starting iteration: 3; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784] ***
*** starting iteration: 4; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356] ***
*** starting iteration: 5; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812] ***
*** starting iteration: 6; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285] ***
*** starting iteration: 7; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536] ***
*** starting iteration: 8; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536, 0.15113741108146497] ***
*** starting iteration: 9; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536, 0.15113741108146497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536, 0.15113741108146497, 0.149833450242877] ***
*** starting iteration: 10; err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536, 0.15113741108146497, 0.149833450242877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536, 0.15113741108146497, 0.149833450242877, 0.1488029221445322] ***
*** finished computation of 7 references, err: [Inf, 0.22787494084890933, 0.17235380757134408, 0.1650090174116194, 0.1614813255313784, 0.15860287554748356, 0.15628926816675812, 0.15476101825386285, 0.15300867854617536, 0.15113741108146497, 0.149833450242877, 0.1488029221445322] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [24, 50, 0]]
** centroid: 1, normalized-entropy: 0.9090221560878149, [(1, 24), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 34, 0]]
** centroid: 2, normalized-entropy: 0.9052002969560479, [(1, 72), (2, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 53, 15]]
** centroid: 4, normalized-entropy: 0.7612401496918493, [(2, 53), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [15, 42, 0]]
** centroid: 7, normalized-entropy: 0.8314743880097292, [(1, 15), (2, 42)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33976646749675277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33976646749675277, 0.18352492407057433] ***
*** starting iteration: 2; err: [Inf, 0.33976646749675277, 0.18352492407057433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595] ***
*** starting iteration: 3; err: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595, 0.1518060760386288] ***
*** starting iteration: 4; err: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595, 0.1518060760386288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595, 0.1518060760386288, 0.14909688529092818] ***
*** starting iteration: 5; err: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595, 0.1518060760386288, 0.14909688529092818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595, 0.1518060760386288, 0.14909688529092818, 0.14813985501788557] ***
*** finished computation of 7 references, err: [Inf, 0.33976646749675277, 0.18352492407057433, 0.15958641008939595, 0.1518060760386288, 0.14909688529092818, 0.14813985501788557] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 1, 0]]
** centroid: 2, normalized-entropy: 0.1000009430103234, [(1, 76), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 35, 0]]
** centroid: 3, normalized-entropy: 0.9886994082884974, [(1, 45), (2, 35)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 60, 13]]
** centroid: 4, normalized-entropy: 0.6758635715876156, [(2, 60), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 39, 0]]
** centroid: 5, normalized-entropy: 0.9876925088958032, [(1, 30), (2, 39)]
*** center 6: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [67, 4, 0]]
** centroid: 7, normalized-entropy: 0.3127333763966432, [(1, 67), (2, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18532387330010533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118] ***
*** starting iteration: 2; err: [Inf, 0.18532387330010533, 0.15504465105757118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944] ***
*** starting iteration: 3; err: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045] ***
*** starting iteration: 4; err: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927] ***
*** starting iteration: 5; err: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927, 0.145594455845654] ***
*** starting iteration: 6; err: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927, 0.145594455845654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927, 0.145594455845654, 0.14435200368240475] ***
*** starting iteration: 7; err: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927, 0.145594455845654, 0.14435200368240475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927, 0.145594455845654, 0.14435200368240475, 0.1435624602334574] ***
*** finished computation of 7 references, err: [Inf, 0.18532387330010533, 0.15504465105757118, 0.1511183491013944, 0.148918043917045, 0.1466730540636927, 0.145594455845654, 0.14435200368240475, 0.1435624602334574] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 10, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 60), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 78, 0]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(1, 3), (2, 78)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 7, 0]]
** centroid: 4, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 34, 0]]
** centroid: 6, normalized-entropy: 0.9966132830150962, [(1, 39), (2, 34)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 54, 17]]
** centroid: 7, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20579348429106176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20579348429106176, 0.16515888527594508] ***
*** starting iteration: 2; err: [Inf, 0.20579348429106176, 0.16515888527594508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444] ***
*** starting iteration: 3; err: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521] ***
*** starting iteration: 4; err: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521, 0.15473957406869157] ***
*** starting iteration: 5; err: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521, 0.15473957406869157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521, 0.15473957406869157, 0.15301037831697614] ***
*** starting iteration: 6; err: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521, 0.15473957406869157, 0.15301037831697614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521, 0.15473957406869157, 0.15301037831697614, 0.15214756072498858] ***
*** finished computation of 7 references, err: [Inf, 0.20579348429106176, 0.16515888527594508, 0.16118412611214444, 0.1573935593259521, 0.15473957406869157, 0.15301037831697614, 0.15214756072498858] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 16, 0]]
** centroid: 2, normalized-entropy: 0.7930490047779772, [(1, 51), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 69, 14]]
** centroid: 3, normalized-entropy: 0.6546640527143932, [(2, 69), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [74, 12, 0]]
** centroid: 4, normalized-entropy: 0.5830194167347007, [(1, 74), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 10, 0]]
** centroid: 5, normalized-entropy: 0.5713549744279549, [(1, 64), (2, 10)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 52, 5]]
** centroid: 6, normalized-entropy: 0.4288109647301171, [(2, 52), (3, 5)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 22, 0]]
** centroid: 7, normalized-entropy: 0.9333572600179806, [(1, 41), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20850584764033556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850584764033556, 0.16486539443489165] ***
*** starting iteration: 2; err: [Inf, 0.20850584764033556, 0.16486539443489165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629] ***
*** starting iteration: 3; err: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629, 0.1528044980922714] ***
*** starting iteration: 4; err: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629, 0.1528044980922714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629, 0.1528044980922714, 0.15170629923418164] ***
*** starting iteration: 5; err: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629, 0.1528044980922714, 0.15170629923418164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629, 0.1528044980922714, 0.15170629923418164, 0.15122669630497693] ***
*** finished computation of 7 references, err: [Inf, 0.20850584764033556, 0.16486539443489165, 0.1565077058337629, 0.1528044980922714, 0.15170629923418164, 0.15122669630497693] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 40, 0]]
** centroid: 1, normalized-entropy: 0.9661773513883509, [(1, 62), (2, 40)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 7, 0]]
** centroid: 4, normalized-entropy: 0.54991090463341, [(1, 48), (2, 7)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 56, 18]]
** centroid: 5, normalized-entropy: 0.8003922080453356, [(2, 56), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 80, 0]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(1, 4), (2, 80)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20288678334094584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20288678334094584, 0.1551606026571244] ***
*** starting iteration: 2; err: [Inf, 0.20288678334094584, 0.1551606026571244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20288678334094584, 0.1551606026571244, 0.15149176737293601] ***
*** starting iteration: 3; err: [Inf, 0.20288678334094584, 0.1551606026571244, 0.15149176737293601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20288678334094584, 0.1551606026571244, 0.15149176737293601, 0.15094130479171872] ***
*** finished computation of 7 references, err: [Inf, 0.20288678334094584, 0.1551606026571244, 0.15149176737293601, 0.15094130479171872] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [92, 6, 0]]
** centroid: 1, normalized-entropy: 0.3322866302216152, [(1, 92), (2, 6)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 44, 0]]
** centroid: 4, normalized-entropy: 0.8536576732793314, [(1, 17), (2, 44)]
*** center 5: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 27, 20]]
** centroid: 6, normalized-entropy: 0.9839393951635759, [(2, 27), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 44, 0]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(1, 2), (2, 44)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18578717083111404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18578717083111404, 0.15761904478445649] ***
*** starting iteration: 2; err: [Inf, 0.18578717083111404, 0.15761904478445649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18578717083111404, 0.15761904478445649, 0.15121229549497367] ***
*** starting iteration: 3; err: [Inf, 0.18578717083111404, 0.15761904478445649, 0.15121229549497367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18578717083111404, 0.15761904478445649, 0.15121229549497367, 0.14908850249648095] ***
*** starting iteration: 4; err: [Inf, 0.18578717083111404, 0.15761904478445649, 0.15121229549497367, 0.14908850249648095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18578717083111404, 0.15761904478445649, 0.15121229549497367, 0.14908850249648095, 0.1486145149692893] ***
*** finished computation of 7 references, err: [Inf, 0.18578717083111404, 0.15761904478445649, 0.15121229549497367, 0.14908850249648095, 0.1486145149692893] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [8, 77, 0]]
** centroid: 3, normalized-entropy: 0.4500666580964382, [(1, 8), (2, 77)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 3, 0]]
** centroid: 4, normalized-entropy: 0.2899860470332091, [(1, 56), (2, 3)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 39, 13]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 39), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 51, 0]]
** centroid: 6, normalized-entropy: 0.9225641366401655, [(1, 26), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 6, 0]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25590552828460933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599] ***
*** starting iteration: 2; err: [Inf, 0.25590552828460933, 0.18723363487515599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388] ***
*** starting iteration: 3; err: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605] ***
*** starting iteration: 4; err: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783] ***
*** starting iteration: 5; err: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783, 0.15844921618280933] ***
*** starting iteration: 6; err: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783, 0.15844921618280933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783, 0.15844921618280933, 0.15692039838759228] ***
*** starting iteration: 7; err: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783, 0.15844921618280933, 0.15692039838759228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783, 0.15844921618280933, 0.15692039838759228, 0.1561794759761542] ***
*** finished computation of 7 references, err: [Inf, 0.25590552828460933, 0.18723363487515599, 0.17233467915095388, 0.16491791767347605, 0.16006591241480783, 0.15844921618280933, 0.15692039838759228, 0.1561794759761542] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [86, 35, 0]]
** centroid: 1, normalized-entropy: 0.8677584893617495, [(1, 86), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 85, 0]]
** centroid: 3, normalized-entropy: 0.09140162014739266, [(1, 1), (2, 85)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 53, 13]]
** centroid: 4, normalized-entropy: 0.7158259310602146, [(2, 53), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 1, 0]]
** centroid: 5, normalized-entropy: 0.1537421803287618, [(1, 44), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [32, 14, 0]]
** centroid: 7, normalized-entropy: 0.8865408928220899, [(1, 32), (2, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23152392431534827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718] ***
*** starting iteration: 2; err: [Inf, 0.23152392431534827, 0.19401949900388718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247] ***
*** starting iteration: 3; err: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058] ***
*** starting iteration: 4; err: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602] ***
*** starting iteration: 5; err: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602, 0.15365761786140503] ***
*** starting iteration: 6; err: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602, 0.15365761786140503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602, 0.15365761786140503, 0.15234202287718654] ***
*** starting iteration: 7; err: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602, 0.15365761786140503, 0.15234202287718654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602, 0.15365761786140503, 0.15234202287718654, 0.15134259352460502] ***
*** finished computation of 7 references, err: [Inf, 0.23152392431534827, 0.19401949900388718, 0.17845506596565247, 0.16576405057311058, 0.1572071300316602, 0.15365761786140503, 0.15234202287718654, 0.15134259352460502] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 34, 0]]
** centroid: 2, normalized-entropy: 0.9952525494396791, [(1, 40), (2, 34)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 37, 0]]
** centroid: 3, normalized-entropy: 0.9921116920021501, [(1, 30), (2, 37)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 35, 0]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(1, 63), (2, 35)]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 15]]
** centroid: 6, normalized-entropy: 0.6543524423071835, [(2, 74), (3, 15)]
*** center 7: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1728315319120884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1728315319120884, 0.15151490782760083] ***
*** starting iteration: 2; err: [Inf, 0.1728315319120884, 0.15151490782760083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1728315319120884, 0.15151490782760083, 0.1501794339027256] ***
*** starting iteration: 3; err: [Inf, 0.1728315319120884, 0.15151490782760083, 0.1501794339027256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1728315319120884, 0.15151490782760083, 0.1501794339027256, 0.14980011156760156] ***
*** finished computation of 7 references, err: [Inf, 0.1728315319120884, 0.15151490782760083, 0.1501794339027256, 0.14980011156760156] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 64, 4]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 64), (3, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 11, 0]]
** centroid: 2, normalized-entropy: 0.6873150928309273, [(1, 49), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [71, 16, 0]]
** centroid: 3, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [46, 42, 0]]
** centroid: 4, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 57, 14]]
** centroid: 7, normalized-entropy: 0.7162583911075451, [(2, 57), (3, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28817850578413345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28817850578413345, 0.17764531500078737] ***
*** starting iteration: 2; err: [Inf, 0.28817850578413345, 0.17764531500078737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924] ***
*** starting iteration: 3; err: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924, 0.15117965283803642] ***
*** starting iteration: 4; err: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924, 0.15117965283803642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924, 0.15117965283803642, 0.1497489383686334] ***
*** starting iteration: 5; err: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924, 0.15117965283803642, 0.1497489383686334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924, 0.15117965283803642, 0.1497489383686334, 0.14940169472713025] ***
*** finished computation of 7 references, err: [Inf, 0.28817850578413345, 0.17764531500078737, 0.1554152346625924, 0.15117965283803642, 0.1497489383686334, 0.14940169472713025] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 8, 0]]
** centroid: 1, normalized-entropy: 0.42304881571335795, [(1, 85), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 43, 0]]
** centroid: 2, normalized-entropy: 0.9943290455933883, [(1, 36), (2, 43)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 54, 0]]
** centroid: 6, normalized-entropy: 0.13110652958234514, [(1, 1), (2, 54)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 23, 16]]
** centroid: 7, normalized-entropy: 0.9766349114440099, [(2, 23), (3, 16)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2941422774177045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941422774177045, 0.18368143438827247] ***
*** starting iteration: 2; err: [Inf, 0.2941422774177045, 0.18368143438827247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795] ***
*** starting iteration: 3; err: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878] ***
*** starting iteration: 4; err: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878, 0.15318696183711292] ***
*** starting iteration: 5; err: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878, 0.15318696183711292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878, 0.15318696183711292, 0.1510478957630694] ***
*** starting iteration: 6; err: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878, 0.15318696183711292, 0.1510478957630694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878, 0.15318696183711292, 0.1510478957630694, 0.15025118581578137] ***
*** finished computation of 7 references, err: [Inf, 0.2941422774177045, 0.18368143438827247, 0.17005693532386795, 0.15867187447100878, 0.15318696183711292, 0.1510478957630694, 0.15025118581578137] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [51, 12, 0]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(1, 51), (2, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 54, 21]]
** centroid: 4, normalized-entropy: 0.8554508105601307, [(2, 54), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 21, 0]]
** centroid: 5, normalized-entropy: 0.7837769474847011, [(1, 69), (2, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 34, 0]]
** centroid: 7, normalized-entropy: 0.9966132830150962, [(1, 39), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3090818171966821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3090818171966821, 0.17918996846675872] ***
*** starting iteration: 2; err: [Inf, 0.3090818171966821, 0.17918996846675872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267] ***
*** starting iteration: 3; err: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267, 0.15560090358741582] ***
*** starting iteration: 4; err: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267, 0.15560090358741582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267, 0.15560090358741582, 0.15327341178804635] ***
*** starting iteration: 5; err: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267, 0.15560090358741582, 0.15327341178804635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267, 0.15560090358741582, 0.15327341178804635, 0.15232645795308053] ***
*** finished computation of 7 references, err: [Inf, 0.3090818171966821, 0.17918996846675872, 0.1602778996648267, 0.15560090358741582, 0.15327341178804635, 0.15232645795308053] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 15, 0]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(1, 48), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 51, 0]]
** centroid: 2, normalized-entropy: 0.9805263709614215, [(1, 71), (2, 51)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 59, 16]]
** centroid: 4, normalized-entropy: 0.7478061583312324, [(2, 59), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [12, 57, 0]]
** centroid: 5, normalized-entropy: 0.6665783579949205, [(1, 12), (2, 57)]
*** center 6: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21325510774645953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21325510774645953, 0.16760926629509776] ***
*** starting iteration: 2; err: [Inf, 0.21325510774645953, 0.16760926629509776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745] ***
*** starting iteration: 3; err: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745, 0.14844281113054603] ***
*** starting iteration: 4; err: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745, 0.14844281113054603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745, 0.14844281113054603, 0.14707022594101726] ***
*** starting iteration: 5; err: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745, 0.14844281113054603, 0.14707022594101726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745, 0.14844281113054603, 0.14707022594101726, 0.1461978561282158] ***
*** finished computation of 7 references, err: [Inf, 0.21325510774645953, 0.16760926629509776, 0.15410805291868745, 0.14844281113054603, 0.14707022594101726, 0.1461978561282158] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 15, 0]]
** centroid: 1, normalized-entropy: 0.7114160189012126, [(1, 62), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 43, 0]]
** centroid: 2, normalized-entropy: 0.9770012394218561, [(1, 30), (2, 43)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 13, 0]]
** centroid: 4, normalized-entropy: 0.6041234581483739, [(1, 75), (2, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 52, 5]]
** centroid: 6, normalized-entropy: 0.4288109647301171, [(2, 52), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 7]]
** centroid: 7, normalized-entropy: 0.5313400141801669, [(2, 51), (3, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21953694385662675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698] ***
*** starting iteration: 2; err: [Inf, 0.21953694385662675, 0.19729356169048698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902] ***
*** starting iteration: 3; err: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936] ***
*** starting iteration: 4; err: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509] ***
*** starting iteration: 5; err: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509, 0.1468392759785056] ***
*** starting iteration: 6; err: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509, 0.1468392759785056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509, 0.1468392759785056, 0.14569328951090574] ***
*** starting iteration: 7; err: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509, 0.1468392759785056, 0.14569328951090574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509, 0.1468392759785056, 0.14569328951090574, 0.14538421274535357] ***
*** finished computation of 7 references, err: [Inf, 0.21953694385662675, 0.19729356169048698, 0.17986587336286902, 0.164055711844936, 0.1513786061387509, 0.1468392759785056, 0.14569328951090574, 0.14538421274535357] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 28, 0]]
** centroid: 2, normalized-entropy: 0.8904916402194913, [(1, 63), (2, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 47, 17]]
** centroid: 3, normalized-entropy: 0.8351164948421137, [(2, 47), (3, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [21, 45, 0]]
** centroid: 5, normalized-entropy: 0.9023932827949788, [(1, 21), (2, 45)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2374910745145753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374910745145753, 0.16754751053266229] ***
*** starting iteration: 2; err: [Inf, 0.2374910745145753, 0.16754751053266229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227] ***
*** starting iteration: 3; err: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227, 0.1522681752797216] ***
*** starting iteration: 4; err: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227, 0.1522681752797216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227, 0.1522681752797216, 0.15025465820915998] ***
*** starting iteration: 5; err: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227, 0.1522681752797216, 0.15025465820915998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227, 0.1522681752797216, 0.15025465820915998, 0.14973663602396844] ***
*** finished computation of 7 references, err: [Inf, 0.2374910745145753, 0.16754751053266229, 0.15725113472156227, 0.1522681752797216, 0.15025465820915998, 0.14973663602396844] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [52, 29, 0]]
** centroid: 1, normalized-entropy: 0.9410313090323237, [(1, 52), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 38, 0]]
** centroid: 2, normalized-entropy: 0.992563136012236, [(1, 31), (2, 38)]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 51, 22]]
** centroid: 4, normalized-entropy: 0.8829589691462253, [(2, 51), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [4, 59, 0]]
** centroid: 5, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21058649379387498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21058649379387498, 0.1682973787635565] ***
*** starting iteration: 2; err: [Inf, 0.21058649379387498, 0.1682973787635565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306] ***
*** starting iteration: 3; err: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457] ***
*** starting iteration: 4; err: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457, 0.15167554180696607] ***
*** starting iteration: 5; err: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457, 0.15167554180696607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457, 0.15167554180696607, 0.14944693542830645] ***
*** starting iteration: 6; err: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457, 0.15167554180696607, 0.14944693542830645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457, 0.15167554180696607, 0.14944693542830645, 0.1488216946143657] ***
*** finished computation of 7 references, err: [Inf, 0.21058649379387498, 0.1682973787635565, 0.16011289785057306, 0.15529889940470457, 0.15167554180696607, 0.14944693542830645, 0.1488216946143657] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 22, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 44), (2, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 60, 15]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 60), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [12, 73, 0]]
** centroid: 6, normalized-entropy: 0.5873116089977589, [(1, 12), (2, 73)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [61, 36, 0]]
** centroid: 7, normalized-entropy: 0.9515388458648668, [(1, 61), (2, 36)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2739070560708642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739070560708642, 0.18275050735101103] ***
*** starting iteration: 2; err: [Inf, 0.2739070560708642, 0.18275050735101103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657] ***
*** starting iteration: 3; err: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657, 0.1647068150267005] ***
*** starting iteration: 4; err: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657, 0.1647068150267005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657, 0.1647068150267005, 0.16277530857920647] ***
*** starting iteration: 5; err: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657, 0.1647068150267005, 0.16277530857920647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657, 0.1647068150267005, 0.16277530857920647, 0.16179668634210248] ***
*** finished computation of 7 references, err: [Inf, 0.2739070560708642, 0.18275050735101103, 0.1708334353803657, 0.1647068150267005, 0.16277530857920647, 0.16179668634210248] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 78, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [7, 43, 0]]
** centroid: 2, normalized-entropy: 0.5842388116428561, [(1, 7), (2, 43)]
*** center 3: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 1, 0]]
** centroid: 4, normalized-entropy: 0.08807225904068142, [(1, 89), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 20]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 12), (3, 20)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 35, 1]]
** centroid: 6, normalized-entropy: 0.18312206830137262, [(2, 35), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 8, 0]]
** centroid: 7, normalized-entropy: 0.4199210973757179, [(1, 86), (2, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24475886832550167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204] ***
*** starting iteration: 2; err: [Inf, 0.24475886832550167, 0.19204199535772204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512] ***
*** starting iteration: 3; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267] ***
*** starting iteration: 4; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461] ***
*** starting iteration: 5; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183] ***
*** starting iteration: 6; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396] ***
*** starting iteration: 7; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396, 0.1470043982733041] ***
*** starting iteration: 8; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396, 0.1470043982733041] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396, 0.1470043982733041, 0.14591740580275656] ***
*** starting iteration: 9; err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396, 0.1470043982733041, 0.14591740580275656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396, 0.1470043982733041, 0.14591740580275656, 0.14497414451278745] ***
*** finished computation of 7 references, err: [Inf, 0.24475886832550167, 0.19204199535772204, 0.16681699969619512, 0.15642089102091267, 0.1524739989731461, 0.15027943164110183, 0.14867629965860396, 0.1470043982733041, 0.14591740580275656, 0.14497414451278745] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 8, 0]]
** centroid: 2, normalized-entropy: 0.4986751363204345, [(1, 65), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 37, 0]]
** centroid: 3, normalized-entropy: 0.9971085167216716, [(1, 42), (2, 37)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 49, 21]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 49), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 74, 0]]
** centroid: 5, normalized-entropy: 0.340373285759646, [(1, 5), (2, 74)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 9, 0]]
** centroid: 7, normalized-entropy: 0.5638560041131417, [(1, 59), (2, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1790321763418615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043] ***
*** starting iteration: 2; err: [Inf, 0.1790321763418615, 0.15549688312225043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013] ***
*** starting iteration: 3; err: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165] ***
*** starting iteration: 4; err: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198] ***
*** starting iteration: 5; err: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198, 0.14792225206270815] ***
*** starting iteration: 6; err: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198, 0.14792225206270815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198, 0.14792225206270815, 0.14676639727689325] ***
*** starting iteration: 7; err: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198, 0.14792225206270815, 0.14676639727689325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198, 0.14792225206270815, 0.14676639727689325, 0.1461495226523839] ***
*** finished computation of 7 references, err: [Inf, 0.1790321763418615, 0.15549688312225043, 0.1523898731051013, 0.15104195817001165, 0.14934278584644198, 0.14792225206270815, 0.14676639727689325, 0.1461495226523839] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 20, 0]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(1, 54), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [7, 79, 0]]
** centroid: 2, normalized-entropy: 0.40707680632541937, [(1, 7), (2, 79)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 9, 0]]
** centroid: 3, normalized-entropy: 0.524805134842907, [(1, 67), (2, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 21, 0]]
** centroid: 5, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 61, 17]]
** centroid: 6, normalized-entropy: 0.7564041945982506, [(2, 61), (3, 17)]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20058182719256729] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058182719256729, 0.1576653355564922] ***
*** starting iteration: 2; err: [Inf, 0.20058182719256729, 0.1576653355564922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196] ***
*** starting iteration: 3; err: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196, 0.14932544074952603] ***
*** starting iteration: 4; err: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196, 0.14932544074952603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196, 0.14932544074952603, 0.14769079497270285] ***
*** starting iteration: 5; err: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196, 0.14932544074952603, 0.14769079497270285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196, 0.14932544074952603, 0.14769079497270285, 0.14726431033201515] ***
*** finished computation of 7 references, err: [Inf, 0.20058182719256729, 0.1576653355564922, 0.15247349979542196, 0.14932544074952603, 0.14769079497270285, 0.14726431033201515] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [47, 26, 0]]
** centroid: 1, normalized-entropy: 0.9394532068181357, [(1, 47), (2, 26)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 46, 14]]
** centroid: 3, normalized-entropy: 0.7837769474847011, [(2, 46), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 41, 0]]
** centroid: 5, normalized-entropy: 0.9860400318404435, [(1, 31), (2, 41)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 7, 0]]
** centroid: 6, normalized-entropy: 0.4280696292293062, [(1, 73), (2, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20176062271930278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647] ***
*** starting iteration: 2; err: [Inf, 0.20176062271930278, 0.16810501390043647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665] ***
*** starting iteration: 3; err: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523] ***
*** starting iteration: 4; err: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638] ***
*** starting iteration: 5; err: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638, 0.1496305461358279] ***
*** starting iteration: 6; err: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638, 0.1496305461358279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638, 0.1496305461358279, 0.14862535018287598] ***
*** starting iteration: 7; err: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638, 0.1496305461358279, 0.14862535018287598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638, 0.1496305461358279, 0.14862535018287598, 0.14823074824549257] ***
*** finished computation of 7 references, err: [Inf, 0.20176062271930278, 0.16810501390043647, 0.15901600294187665, 0.15441923340782523, 0.15183639187272638, 0.1496305461358279, 0.14862535018287598, 0.14823074824549257] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 67, 0]]
** centroid: 4, normalized-entropy: 0.11058084476988722, [(1, 1), (2, 67)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [7, 79, 0]]
** centroid: 5, normalized-entropy: 0.40707680632541937, [(1, 7), (2, 79)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 16, 0]]
** centroid: 6, normalized-entropy: 0.8238116333123173, [(1, 46), (2, 16)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 31, 17]]
** centroid: 7, normalized-entropy: 0.9377342939868042, [(2, 31), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20806680289749055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20806680289749055, 0.1650810347935185] ***
*** starting iteration: 2; err: [Inf, 0.20806680289749055, 0.1650810347935185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805] ***
*** starting iteration: 3; err: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658] ***
*** starting iteration: 4; err: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658, 0.14893380672112108] ***
*** starting iteration: 5; err: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658, 0.14893380672112108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658, 0.14893380672112108, 0.14789005354978144] ***
*** starting iteration: 6; err: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658, 0.14893380672112108, 0.14789005354978144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658, 0.14893380672112108, 0.14789005354978144, 0.14738335016276688] ***
*** finished computation of 7 references, err: [Inf, 0.20806680289749055, 0.1650810347935185, 0.1581957615520805, 0.15198970466479658, 0.14893380672112108, 0.14789005354978144, 0.14738335016276688] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 27, 0]]
** centroid: 1, normalized-entropy: 0.9224062617590724, [(1, 53), (2, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [83, 4, 0]]
** centroid: 3, normalized-entropy: 0.2690553027246505, [(1, 83), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 44, 0]]
** centroid: 4, normalized-entropy: 0.1537421803287618, [(1, 1), (2, 44)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 39, 0]]
** centroid: 5, normalized-entropy: 0.9978913098356861, [(1, 35), (2, 39)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 66, 15]]
** centroid: 6, normalized-entropy: 0.6912898694057888, [(2, 66), (3, 15)]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28316922119818627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498] ***
*** starting iteration: 2; err: [Inf, 0.28316922119818627, 0.18704438081942498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374] ***
*** starting iteration: 3; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867] ***
*** starting iteration: 4; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246] ***
*** starting iteration: 5; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956] ***
*** starting iteration: 6; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566] ***
*** starting iteration: 7; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433] ***
*** starting iteration: 8; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433, 0.15268094410840422] ***
*** starting iteration: 9; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433, 0.15268094410840422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433, 0.15268094410840422, 0.1511259908331558] ***
*** starting iteration: 10; err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433, 0.15268094410840422, 0.1511259908331558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433, 0.15268094410840422, 0.1511259908331558, 0.1504859374333173] ***
*** finished computation of 7 references, err: [Inf, 0.28316922119818627, 0.18704438081942498, 0.16743875462934374, 0.1603557535437867, 0.15803530475497246, 0.15646273755840956, 0.15526070877490566, 0.15372482217941433, 0.15268094410840422, 0.1511259908331558, 0.1504859374333173] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [46, 6, 0]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(1, 46), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 16, 0]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(1, 70), (2, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [61, 39, 0]]
** centroid: 3, normalized-entropy: 0.9647995485050873, [(1, 61), (2, 39)]
*** center 4: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 66, 13]]
** centroid: 5, normalized-entropy: 0.6451006442088483, [(2, 66), (3, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23832945733144878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23832945733144878, 0.18747662518545985] ***
*** starting iteration: 2; err: [Inf, 0.23832945733144878, 0.18747662518545985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727] ***
*** starting iteration: 3; err: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727, 0.1558725913837552] ***
*** starting iteration: 4; err: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727, 0.1558725913837552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727, 0.1558725913837552, 0.15361878497339784] ***
*** starting iteration: 5; err: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727, 0.1558725913837552, 0.15361878497339784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727, 0.1558725913837552, 0.15361878497339784, 0.1529978032745421] ***
*** finished computation of 7 references, err: [Inf, 0.23832945733144878, 0.18747662518545985, 0.1642785440515727, 0.1558725913837552, 0.15361878497339784, 0.1529978032745421] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 77, 0]]
** centroid: 3, normalized-entropy: 0.2837689703721877, [(1, 4), (2, 77)]
*** center 4: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [15, 31, 0]]
** centroid: 5, normalized-entropy: 0.9108783787500366, [(1, 15), (2, 31)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 53, 19]]
** centroid: 6, normalized-entropy: 0.8325582396745668, [(2, 53), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 21, 0]]
** centroid: 7, normalized-entropy: 0.7143881566559658, [(1, 86), (2, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2098945021722466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2098945021722466, 0.1583449736055918] ***
*** starting iteration: 2; err: [Inf, 0.2098945021722466, 0.1583449736055918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256] ***
*** starting iteration: 3; err: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256, 0.14777954256162049] ***
*** starting iteration: 4; err: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256, 0.14777954256162049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256, 0.14777954256162049, 0.14644926547072828] ***
*** starting iteration: 5; err: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256, 0.14777954256162049, 0.14644926547072828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256, 0.14777954256162049, 0.14644926547072828, 0.14592976394668222] ***
*** finished computation of 7 references, err: [Inf, 0.2098945021722466, 0.1583449736055918, 0.15041144531965256, 0.14777954256162049, 0.14644926547072828, 0.14592976394668222] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 35, 0]]
** centroid: 1, normalized-entropy: 0.9993759069576513, [(1, 33), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 47, 20]]
** centroid: 3, normalized-entropy: 0.8794587736429037, [(2, 47), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 29, 0]]
** centroid: 4, normalized-entropy: 0.8687212463394044, [(1, 71), (2, 29)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [71, 5, 0]]
** centroid: 6, normalized-entropy: 0.35001059292688486, [(1, 71), (2, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 367,3 => 34,1 => 599), Dict(2 => 379,3 => 37,1 => 584))
[ Info: ===== scores for single classifier: {"micro_f1":0.94,"precision":0.94,"recall":0.94,"macro_recall":0.949081938771822,"macro_f1":0.8801312187603086,"accuracy":0.94,"class_f1":{"2":0.9154929577464789,"3":0.7551020408163265,"1":0.9697986577181208},"class_precision":{"2":0.9818731117824774,"3":0.6065573770491803,"1":0.9506578947368421},"class_recall":{"2":0.8575197889182058,"3":1.0,"1":0.9897260273972602}}
[ Info: ===== scores for 1: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9661961090016175,"macro_f1":0.9602096182683791,"accuracy":0.968,"class_f1":{"2":0.9569892473118281,"3":0.9473684210526315,"1":0.9762711864406781},"class_precision":{"2":0.9753424657534246,"3":0.9230769230769231,"1":0.9664429530201343},"class_recall":{"2":0.9393139841688655,"3":0.972972972972973,"1":0.9863013698630136}}
[ Info: ===== scores for 5: {"micro_f1":0.982,"precision":0.982,"recall":0.982,"macro_recall":0.9875649088565198,"macro_f1":0.9710089786522041,"accuracy":0.982,"class_f1":{"2":0.9763779527559053,"3":0.9487179487179488,"1":0.9879310344827587},"class_precision":{"2":0.9712793733681462,"3":0.9024390243902439,"1":0.9947916666666666},"class_recall":{"2":0.9815303430079155,"3":1.0,"1":0.9811643835616438}}
[ Info: ===== scores for 7: {"micro_f1":0.9810000000000001,"precision":0.981,"recall":0.981,"macro_recall":0.9866854013807064,"macro_f1":0.9629387618353308,"accuracy":0.981,"class_f1":{"2":0.9750328515111696,"3":0.9249999999999999,"1":0.988783433994823},"class_precision":{"2":0.9712041884816754,"3":0.8604651162790697,"1":0.9965217391304347},"class_recall":{"2":0.978891820580475,"3":1.0,"1":0.9811643835616438}}
[ Info: ===== scores for 9: {"micro_f1":0.984,"precision":0.984,"recall":0.984,"macro_recall":0.9887064613679354,"macro_f1":0.9651088929219599,"accuracy":0.984,"class_f1":{"2":0.9789473684210526,"3":0.9249999999999999,"1":0.9913793103448276},"class_precision":{"2":0.9763779527559056,"3":0.8604651162790697,"1":0.9982638888888888},"class_recall":{"2":0.9815303430079155,"3":1.0,"1":0.9845890410958904}}
[ Info: ===== scores for 11: {"micro_f1":0.9810000000000001,"precision":0.981,"recall":0.981,"macro_recall":0.9866854013807064,"macro_f1":0.9629387618353308,"accuracy":0.981,"class_f1":{"2":0.9750328515111696,"3":0.9249999999999999,"1":0.988783433994823},"class_precision":{"2":0.9712041884816754,"3":0.8604651162790697,"1":0.9965217391304347},"class_recall":{"2":0.978891820580475,"3":1.0,"1":0.9811643835616438}}
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.982, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.982, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.981, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.981, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.982,"k":5,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.982,"precision":0.982,"recall":0.982,"macro_recall":0.9875649088565198,"macro_f1":0.9710089786522041,"accuracy":0.982,"class_f1":{"2":0.9763779527559053,"3":0.9487179487179488,"1":0.9879310344827587},"class_precision":{"2":0.9712793733681462,"3":0.9024390243902439,"1":0.9947916666666666},"class_recall":{"2":0.9815303430079155,"3":1.0,"1":0.9811643835616438}}
Test Summary: | Pass  Total
AKNC          |    8      8
[936, 3, 3, 1, 3, 3, 1, 2, 6, 7, 2, 1, 6, 5, 9, 5, 10, 3, 1, 2, 4, 7, 20, 4, 10, 9, 7, 5, 4, 24, 5, 7, 8, 14, 3, 1, 4, 15, 7, 1, 10, 14, 19, 7, 16, 7, 9, 43, 14, 12, 3, 21, 13, 1, 4, 6, 3, 21, 1, 15, 5, 20, 15, 2, 6, 11, 46, 17, 4, 14, 10, 44, 8, 44, 34, 47, 15, 7, 13, 4, 19, 6, 40, 5, 31, 25, 4, 11, 32, 23, 30, 18, 22, 51, 76, 5, 23, 18, 8, 19, 7, 2, 20, 11, 26, 7, 39, 23, 9, 37, 38, 9, 11, 26, 10, 5, 4, 6, 17, 177, 2, 42, 7, 10, 19, 45, 76, 37, 19, 57, 25, 9, 22, 19, 517, 70, 5, 24, 8, 4, 107, 121, 5, 14, 15, 59, 12, 14, 9, 6, 16, 24, 125, 8, 53, 7, 24, 61, 8, 13, 2, 23, 2, 26, 4, 48, 19, 13, 14, 27, 45, 7, 5, 12, 7, 82, 14, 218, 6, 26, 45, 175, 14, 7, 1, 25, 12, 40, 10, 5, 4, 45, 14, 3, 22, 137, 13, 117, 35, 43, 1, 6, 2, 32, 13, 5, 11, 5, 37, 41, 27, 24, 48, 9, 4, 23, 6, 5, 82, 16, 34, 13, 6, 37, 27, 5, 18, 13, 24, 23, 5, 4, 67, 54, 35, 5, 35, 3, 6, 91, 149, 40, 116, 13, 52, 18, 17, 92, 145, 1, 176, 13, 38, 32, 29, 90, 132, 19, 9, 35, 15, 49, 7, 119, 13, 5, 16, 36, 32, 4, 24, 36, 90, 52, 10, 25, 77, 48, 43, 14, 4, 24, 41, 694, 39, 24, 48, 16, 23, 25, 85, 35, 11, 62, 16, 14, 29, 16, 108, 45]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6609999999999998, speedup = 0.3462521452757549, eval_ratio = 0.087437)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3551432291666668,"recall":0.35069444444444453,"f1":null,"seconds":0.00017285719513893127,"exhaustive_search_seconds":0.0003544129431247711,"evaluations":492.6640625,"distances_sum":1781.5923902597867}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5086805555555557,"recall":0.5086805555555557,"f1":null,"seconds":0.00029619596898555756,"exhaustive_search_seconds":0.0003544129431247711,"evaluations":675.6328125,"distances_sum":1678.0687146698747}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6276041666666665,"recall":0.6276041666666665,"f1":null,"seconds":0.00042533501982688904,"exhaustive_search_seconds":0.0003544129431247711,"evaluations":833.9609375,"distances_sum":1614.413099924319}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.716145833333333,"recall":0.716145833333333,"f1":0.716145833333333,"seconds":0.0005215592682361603,"exhaustive_search_seconds":0.0003544129431247711,"evaluations":973.3515625,"distances_sum":1576.1100099987157}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7664930555555552,"recall":0.7664930555555552,"f1":0.7664930555555552,"seconds":0.0006439182907342911,"exhaustive_search_seconds":0.0003544129431247711,"evaluations":1089.625,"distances_sum":1557.9486601018002}
KCenters.DeloneInvIndex> reached performance {"precision":0.8107638888888883,"recall":0.8107638888888883,"f1":0.8107638888888883,"seconds":0.0008541848510503769,"exhaustive_search_seconds":0.0003544129431247711,"evaluations":1212.859375,"distances_sum":1544.7722904276561}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8300000000000002, speedup = 0.5034938385684705, eval_ratio = 0.12381800000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
