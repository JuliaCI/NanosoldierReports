Julia Version 1.5.0-DEV.701
Commit 5cb3f3fbc1 (2020-04-28 13:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_VjDypD/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_VjDypD/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21716684503879166
curgen: 20 fitness: 0.21723362378984284
curgen: 30 fitness: 0.21723362378984284
curgen: 40 fitness: 0.21723362378984284
curgen: 50 fitness: 0.21723362378984284
CoordinateCreature{Array{Float64,1}}([-0.2225581513410909], -0.21723362378984284) -0.2225581513410909 -0.21723362378984284
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579029015995453
curgen: 100 fitness: 3.2582681474104263
curgen: 150 fitness: 3.2583465123756885
curgen: 200 fitness: 3.2583689056382337
curgen: 250 fitness: 3.2584007789142433
curgen: 300 fitness: 3.2584113388663662
curgen: 350 fitness: 3.2584524918854014
curgen: 400 fitness: 3.2584566934950545
curgen: 450 fitness: 3.258473719666859
curgen: 500 fitness: 3.258473719666859
CoordinateCreature{Array{Float64,1}}([0.22260447464385769, -0.22247543594445005, 0.22255689854862212, -0.22276072937380875, -0.2222125563514876, -0.2225718807259252, 0.22234667692920063, 0.2223751255861105, -0.2226893475054434, 0.22258240586870637, 0.2224844369997584, 0.22245307200944556, -0.22285434897626166, 0.22198802230637776, 0.22243365304439197], -3.258473719666859) [0.22260447464385769, -0.22247543594445005, 0.22255689854862212, -0.22276072937380875, -0.2222125563514876, -0.2225718807259252, 0.22234667692920063, 0.2223751255861105, -0.2226893475054434, 0.22258240586870637, 0.2224844369997584, 0.22245307200944556, -0.22285434897626166, 0.22198802230637776, 0.22243365304439197] -3.258473719666859
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0010582781404764319
curgen: 100 fitness: -0.000983405292288353
curgen: 150 fitness: -0.000983405292288353
curgen: 200 fitness: -0.000983405292288353
curgen: 250 fitness: -0.0008617083422279848
curgen: 300 fitness: -0.0007679472120400987
curgen: 350 fitness: -0.0007679472120400987
curgen: 400 fitness: -0.0007679472120400987
curgen: 450 fitness: -0.0007679472120400987
curgen: 500 fitness: -0.0005536915603556736
CoordinateCreature{Array{Float64,1}}([-0.0005264095973636709, 0.00043700407611669016, 0.0005265203962655778, -6.717603164079706e-5, 0.000285057302084017, 0.00046178433548967036, -0.0004959125204376288, -0.0007559742827651292, 0.0002492386072247344, 4.139464309155802e-6, 0.0007200402095868768, 0.00010547542345122618, 7.766329658188404e-5, 0.0002655813285281699, 0.0005107531613429625], 0.0005536915603556736) [-0.0005264095973636709, 0.00043700407611669016, 0.0005265203962655778, -6.717603164079706e-5, 0.000285057302084017, 0.00046178433548967036, -0.0004959125204376288, -0.0007559742827651292, 0.0002492386072247344, 4.139464309155802e-6, 0.0007200402095868768, 0.00010547542345122618, 7.766329658188404e-5, 0.0002655813285281699, 0.0005107531613429625] 0.0005536915603556736
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
