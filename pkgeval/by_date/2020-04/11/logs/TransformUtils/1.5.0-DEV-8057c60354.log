Julia Version 1.5.0-DEV.611
Commit 8057c60354 (2020-04-10 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_gUBCUc/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_gUBCUc/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04155788168335966 0.0897790649055869; -0.04155788168335966 0.0 -0.05904643195425524; -0.0897790649055869 0.05904643195425524 0.0])
dAA = so3([0.0 0.008664457990807147 -0.01837205018422094; -0.008664457990807147 0.0 0.10466191972148542; 0.01837205018422094 -0.10466191972148542 0.0])
dAA = so3([0.0 -0.07238403604287864 0.017406393003026314; 0.07238403604287864 0.0 -0.03440606209193067; -0.017406393003026314 0.03440606209193067 0.0])
dAA = Quaternion(0.9982207180806724, [0.018189188806392004, 0.05612867940861305, -0.008609457179031157])
dAA = SO3([0.9922476648728467 0.010054194541225114 0.12386882063905492; 0.007811072023585932 0.9897058899931439 -0.14290289873449488; -0.12403047491735857 0.1427626158523517 0.9819548242188987])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9987182245434088 0.027379008435110083 -0.042571091857872945; -0.015432150025121065 0.9657373436274049 0.2590622162127965; 0.04820535976904893 -0.25807319314604094 0.9649220021685394]), [0.5904643195425524, 0.8977906490558689, -0.41557881683359654])
xj = SE3(SO3([0.9599437636348676 0.04997695964044588 0.27569960856632153; -0.025120001006983028 0.9953522851638483 -0.09296673581724943; -0.27906443020910937 0.08231726382844803 0.9567376400392444]), [0.3440606209193067, 0.17406393003026313, 0.7238403604287864])
Dx = SE3(SO3([0.9456485856461287 0.038520607925742176 0.3229007823318296; 0.0740420339549342 0.9413733123199064 -0.32914140435330264; -0.3166489060036254 0.33516033419376934 0.8873561972003283]), [-0.17999309373705852, -0.999729753494952, 0.922450060558269])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
