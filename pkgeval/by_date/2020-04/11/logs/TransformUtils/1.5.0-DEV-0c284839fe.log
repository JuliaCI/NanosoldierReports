Julia Version 1.5.0-DEV.613
Commit 0c284839fe (2020-04-11 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_wHmnhK/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_wHmnhK/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07821610130614448 -0.016984612523097506; -0.07821610130614448 0.0 0.07752295267512915; 0.016984612523097506 -0.07752295267512915 0.0])
dAA = so3([0.0 -0.17572374459330342 -0.04655765992976172; 0.17572374459330342 0.0 0.03502250403964341; 0.04655765992976172 -0.03502250403964341 0.0])
dAA = so3([0.0 0.09427192536541565 0.0477836420351089; -0.09427192536541565 0.0 0.10371170778103017; -0.0477836420351089 -0.10371170778103017 0.0])
dAA = Quaternion(0.9982336691829753, [0.04221873744436138, -0.03997364734585846, -0.012215868203594262])
dAA = SO3([0.9843226200328937 0.06510691059606519 -0.16392092570570752; -0.06008641729937786 0.9975650170061853 0.03540705157980008; 0.16582702478096004 -0.02500254063261516 0.9858378521918346])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8985601586370389 -0.4187874648269317 -0.13117431384997272; 0.4287978797953931 0.9014487877864427 0.059350326716276595; 0.09339175334661672 -0.10957710665182135 0.9895811427592283]), [-0.7752295267512914, -0.16984612523097506, -0.7821610130614447])
xj = SE3(SO3([0.9783058580936832 0.04765460746003174 -0.2016102338856155; -0.08954615389643143 0.9748470945608175 -0.2040946558552899; 0.18681310002764503 0.2177204184594612 0.9579659101679445]), [-1.0371170778103016, 0.477836420351089, -0.9427192536541564])
Dx = SE3(SO3([0.8581162690692813 0.48116619053073767 -0.17920816345455604; -0.5108939410029525 0.8349604059096636 -0.20452017408960255; 0.05122352784696413 0.26705845362636904 0.9623179996973994]), [0.027408367298220937, 0.7111213766163818, -0.08609231670040618])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
