Julia Version 1.5.0-DEV.613
Commit 0c284839fe (2020-04-11 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InplaceOps ─────────────────── v0.3.0
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Rmath ──────────────────────── v0.6.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.11
  Installed DataAPI ────────────────────── v1.1.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed Missings ───────────────────── v0.4.3
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed LazyArrays ─────────────────── v0.15.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed FillArrays ─────────────────── v0.8.7
  Installed Parameters ─────────────────── v0.12.0
  Installed ProgressMeter ──────────────── v1.2.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed StaticArrays ───────────────── v0.12.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_jUvyHH/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.15
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_jUvyHH/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.3
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.27.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.171818547
│   t_steps = 0.007557426
└   t_step / t_steps = 22.735061778970774
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:43:42[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0004153115749331729
  log_density:                   -10.809311058579329
  hamiltonian_energy:            16.19843760934746
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  7.7864815364586235
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:31[K
  iterations:                    1101
  n_steps:                       127
  is_accept:                     true
  acceptance_rate:               0.9745896680906356
  log_density:                   -14.69066840681971
  hamiltonian_energy:            19.346793960269377
  hamiltonian_energy_error:      -0.01883254683578528
  max_hamiltonian_energy_error:  -0.2904555703777909
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7676098750705658
  nom_step_size:                 0.7676098750705658
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8886513187911345, 0.9491 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:25[K
  iterations:                    1360
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5536323758056352
  log_density:                   -12.675972058792526
  hamiltonian_energy:            17.886589453376835
  hamiltonian_energy_error:      0.21009797490825832
  max_hamiltonian_energy_error:  0.9089443456191404
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8974590039795881
  nom_step_size:                 0.8974590039795881
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8886513187911345, 0.9491 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▉                           |  ETA: 0:00:24[K
  iterations:                    1488
  n_steps:                       11
  is_accept:                     true
  acceptance_rate:               0.9448184193187413
  log_density:                   -14.507560195033488
  hamiltonian_energy:            19.869307790178173
  hamiltonian_energy_error:      -0.49070130361253206
  max_hamiltonian_energy_error:  -0.9975623206033504
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8236374687449319
  nom_step_size:                 0.8236374687449319
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8886513187911345, 0.9491 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 15%|████▋                          |  ETA: 0:00:20[K
  iterations:                    1767
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.387603174377718
  hamiltonian_energy:            16.700982344934644
  hamiltonian_energy_error:      -0.42078883601636363
  max_hamiltonian_energy_error:  -0.42078883601636363
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8982499703095815
  nom_step_size:                 0.8982499703095815
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8886513187911345, 0.9491 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:18[K
  iterations:                    1944
  n_steps:                       63
  is_accept:                     true
  acceptance_rate:               0.9885052047053766
  log_density:                   -13.93893820833313
  hamiltonian_energy:            19.13824114582674
  hamiltonian_energy_error:      -0.32828184612235134
  max_hamiltonian_energy_error:  -0.4987149077745947
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7860169603303329
  nom_step_size:                 0.7860169603303329
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8886513187911345, 0.9491 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▊                         |  ETA: 0:00:16[K
  iterations:                    2219
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6912363682608826
  log_density:                   -16.215791361971327
  hamiltonian_energy:            19.394501416631826
  hamiltonian_energy_error:      0.5252720551972061
  max_hamiltonian_energy_error:  0.6574106293569386
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:13[K
  iterations:                    2621
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.82506440811558
  log_density:                   -13.276516905952224
  hamiltonian_energy:            17.74084694847286
  hamiltonian_energy_error:      0.1211738508800444
  max_hamiltonian_energy_error:  0.46222343863126625
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 23%|███████▎                       |  ETA: 0:00:13[K
  iterations:                    2790
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9723200750024069
  log_density:                   -14.716707651192067
  hamiltonian_energy:            17.100376383544333
  hamiltonian_energy_error:      0.10326829725227782
  max_hamiltonian_energy_error:  -0.27950311467448685
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 27%|████████▎                      |  ETA: 0:00:11[K
  iterations:                    3188
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8729045568736647
  log_density:                   -15.723361945368854
  hamiltonian_energy:            18.093618968138394
  hamiltonian_energy_error:      0.3292494617221351
  max_hamiltonian_energy_error:  0.33090888743251057
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 29%|█████████▏                     |  ETA: 0:00:10[K
  iterations:                    3529
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9734825108811351
  log_density:                   -14.39571180986635
  hamiltonian_energy:            19.271832951713158
  hamiltonian_energy_error:      -0.07870905741340906
  max_hamiltonian_energy_error:  -0.22109880382033964
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 32%|██████████                     |  ETA: 0:00:09[K
  iterations:                    3847
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8711718534358076
  log_density:                   -14.620948608598454
  hamiltonian_energy:            20.05672828227642
  hamiltonian_energy_error:      0.07166609563479298
  max_hamiltonian_energy_error:  0.27360654147507546
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:08[K
  iterations:                    4167
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.873759184798753
  log_density:                   -13.52532715620552
  hamiltonian_energy:            18.995333901165427
  hamiltonian_energy_error:      -0.046498400363546466
  max_hamiltonian_energy_error:  0.2772328292452251
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 36%|███████████▎                   |  ETA: 0:00:08[K
  iterations:                    4372
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9324619994567077
  log_density:                   -16.739618875286496
  hamiltonian_energy:            20.419891195630516
  hamiltonian_energy_error:      0.218803120203944
  max_hamiltonian_energy_error:  -0.2613817176730784
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 40%|████████████▎                  |  ETA: 0:00:07[K
  iterations:                    4740
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9302752347606386
  log_density:                   -12.732812448838235
  hamiltonian_energy:            17.27750924091655
  hamiltonian_energy_error:      -0.061578078082909826
  max_hamiltonian_energy_error:  0.18970875436044565
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:06[K
  iterations:                    5139
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8165657135635467
  log_density:                   -13.641944584855437
  hamiltonian_energy:            20.033492385468787
  hamiltonian_energy_error:      -0.027088742799431742
  max_hamiltonian_energy_error:  0.40067753932190797
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5589
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9731594892916068
  log_density:                   -17.089386078689166
  hamiltonian_energy:            24.400279591155815
  hamiltonian_energy_error:      -0.14377046272996097
  max_hamiltonian_energy_error:  -0.32743045440933116
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▎               |  ETA: 0:00:05[K
  iterations:                    5924
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9077577898689285
  log_density:                   -12.56300402090922
  hamiltonian_energy:            15.02040566049932
  hamiltonian_energy_error:      0.1216492127970934
  max_hamiltonian_energy_error:  0.1795641772602643
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:04[K
  iterations:                    6378
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9840207344549251
  log_density:                   -13.238863781664602
  hamiltonian_energy:            15.047079776791284
  hamiltonian_energy_error:      -0.003032559418794989
  max_hamiltonian_energy_error:  -0.3541486507364233
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▍             |  ETA: 0:00:04[K
  iterations:                    6712
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9691228968501264
  log_density:                   -11.319991495532163
  hamiltonian_energy:            12.84255125794652
  hamiltonian_energy_error:      0.05318624693482832
  max_hamiltonian_energy_error:  0.057688170257533145
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7185
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.164285079463152
  hamiltonian_energy:            16.021752773618346
  hamiltonian_energy_error:      -0.007432160867594462
  max_hamiltonian_energy_error:  -0.37284816949856747
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7541
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.10917394460596
  hamiltonian_energy:            14.487941917767737
  hamiltonian_energy_error:      -0.14692919150489914
  max_hamiltonian_energy_error:  -0.30260307549190024
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▋          |  ETA: 0:00:03[K
  iterations:                    7965
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7695759959769249
  log_density:                   -12.86088207016925
  hamiltonian_energy:            19.065287546310632
  hamiltonian_energy_error:      0.006566253123626353
  max_hamiltonian_energy_error:  0.455618095188683
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8301
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -18.21744861916634
  hamiltonian_energy:            24.396228090721923
  hamiltonian_energy_error:      -0.05806787794343293
  max_hamiltonian_energy_error:  -0.3993951217909668
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 72%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8686
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8631408224567787
  log_density:                   -13.661213737296892
  hamiltonian_energy:            17.37113926172354
  hamiltonian_energy_error:      0.13001246264854416
  max_hamiltonian_energy_error:  0.3559440564701255
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9105
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.993263176897863
  log_density:                   -12.288425991031453
  hamiltonian_energy:            14.768315400854478
  hamiltonian_energy_error:      -0.026915663164865933
  max_hamiltonian_energy_error:  -0.09030163013296821
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:02[K
  iterations:                    9466
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8304214821300612
  log_density:                   -13.503350764962967
  hamiltonian_energy:            16.812864231116798
  hamiltonian_energy_error:      0.2195010277891214
  max_hamiltonian_energy_error:  0.3854037802746362
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▍     |  ETA: 0:00:01[K
  iterations:                    9844
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7566707998100927
  log_density:                   -15.561827699039874
  hamiltonian_energy:            21.7267272701991
  hamiltonian_energy_error:      0.2016746568091854
  max_hamiltonian_energy_error:  0.7124965144729885
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9905
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.141867080524243
  hamiltonian_energy:            16.26058864012843
  hamiltonian_energy_error:      -0.044689552956455714
  max_hamiltonian_energy_error:  -0.14648394786321717
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|██████████████████████████▉    |  ETA: 0:00:01[K
  iterations:                    10387
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9729877176646179
  log_density:                   -13.87035120808036
  hamiltonian_energy:            17.604074985287703
  hamiltonian_energy_error:      -0.07748266710305174
  max_hamiltonian_energy_error:  -0.3139069045307217
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 90%|███████████████████████████▉   |  ETA: 0:00:01[K
  iterations:                    10813
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9098927407548378
  log_density:                   -13.019781851482147
  hamiltonian_energy:            21.185392427101974
  hamiltonian_energy_error:      -0.4433721895682581
  max_hamiltonian_energy_error:  -0.5332013936466922
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11281
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8826498494136498
  log_density:                   -12.42430750983914
  hamiltonian_energy:            17.288532354868273
  hamiltonian_energy_error:      -0.07240649810152888
  max_hamiltonian_energy_error:  0.26108961894932037
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11782
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9524340743583399
  log_density:                   -18.39678626439806
  hamiltonian_energy:            21.23391368191351
  hamiltonian_energy_error:      0.1875036088783908
  max_hamiltonian_energy_error:  -0.5756534494420578
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.686986221151322
  log_density:                   -12.689539049589179
  hamiltonian_energy:            18.95662547744704
  hamiltonian_energy_error:      0.09489837312219862
  max_hamiltonian_energy_error:  0.6645142898675758
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7152141703184145
  nom_step_size:                 0.7152141703184145
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9888003462972739, 0.9552 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.881022434 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9888003462972739, 0.9552 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.715), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.111711336616387
└   average_acceptance_rate = 0.8625826211766484
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.257880742 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀⢰⠁⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠈⢆⡎⠀⠀⢱│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠣⡀⠀⡠⠒⠉⠣⡀⡸⠀⠀⠈⠁⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠈⠊⠀⠀⠀⠀⠑⠃⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⡰⢆⠜⠁⠀⠀⠀⠀⠀⢀⣀⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⢠⡣⠃⠱⢄⣀⢀⠤⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠉⠢⡗⠁⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2874   2874
    Testing AdvancedHMC tests passed 
