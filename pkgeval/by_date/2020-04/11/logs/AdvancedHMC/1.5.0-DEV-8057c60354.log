Julia Version 1.5.0-DEV.611
Commit 8057c60354 (2020-04-10 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed ProgressMeter ──────────────── v1.2.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed Parameters ─────────────────── v0.12.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Requires ───────────────────── v1.0.1
  Installed DataAPI ────────────────────── v1.1.0
  Installed Missings ───────────────────── v0.4.3
  Installed ArgCheck ───────────────────── v2.0.0
  Installed FillArrays ─────────────────── v0.8.7
  Installed StatsBase ──────────────────── v0.32.2
  Installed MacroTools ─────────────────── v0.5.5
  Installed SpecialFunctions ───────────── v0.10.0
  Installed LazyArrays ─────────────────── v0.15.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed DataStructures ─────────────── v0.17.11
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.11
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_papG2T/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.15
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_papG2T/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.3
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.11
  [2b5f629d] DiffEqBase v6.27.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.1.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.199370367
│   t_steps = 0.007962786
└   t_step / t_steps = 25.037765299733035
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:06:06[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.010390466124709306
  log_density:                   -11.340222612812465
  hamiltonian_energy:            15.449131827667975
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  4.566866612056392
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling  9%|██▉                            |  ETA: 0:00:27[K
  iterations:                    1124
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.3093207907093239
  log_density:                   -18.733974866003027
  hamiltonian_energy:            23.043439010754422
  hamiltonian_energy_error:      1.2091348899369443
  max_hamiltonian_energy_error:  1.3518524381103738
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.9251145124172676
  nom_step_size:                 0.9251145124172676
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2286032009797376, 1.0639 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 11%|███▌                           |  ETA: 0:00:23[K
  iterations:                    1360
  n_steps:                       19
  is_accept:                     true
  acceptance_rate:               0.9444520624011882
  log_density:                   -12.275600301053485
  hamiltonian_energy:            20.689816489550722
  hamiltonian_energy_error:      -0.9448563654836839
  max_hamiltonian_energy_error:  -1.2641091224012264
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.8122065640016893
  nom_step_size:                 0.8122065640016893
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2286032009797376, 1.0639 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████▏                          |  ETA: 0:00:20[K
  iterations:                    1576
  n_steps:                       15
  is_accept:                     true
  acceptance_rate:               0.9549998045994779
  log_density:                   -13.653704422061981
  hamiltonian_energy:            17.980880006281318
  hamiltonian_energy_error:      -0.17938472107173808
  max_hamiltonian_energy_error:  -0.36631286373728145
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8094888520431535
  nom_step_size:                 0.8094888520431535
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2286032009797376, 1.0639 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|████▉                          |  ETA: 0:00:17[K
  iterations:                    1870
  n_steps:                       67
  is_accept:                     true
  acceptance_rate:               0.9766885376531791
  log_density:                   -16.959762584577348
  hamiltonian_energy:            22.021135026877534
  hamiltonian_energy_error:      -0.06056647805359816
  max_hamiltonian_energy_error:  -0.8037688838037234
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8016988460089689
  nom_step_size:                 0.8016988460089689
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.2286032009797376, 1.0639 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:16[K
  iterations:                    2052
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7699201594965974
  log_density:                   -13.050505864686421
  hamiltonian_energy:            19.59860616790712
  hamiltonian_energy_error:      -0.020009148617376127
  max_hamiltonian_energy_error:  0.5047675614730807
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:13[K
  iterations:                    2534
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7450666557343298
  log_density:                   -16.44954775193301
  hamiltonian_energy:            18.931881202663014
  hamiltonian_energy_error:      0.5730071486686228
  max_hamiltonian_energy_error:  0.5788414963249195
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 24%|███████▌                       |  ETA: 0:00:11[K
  iterations:                    2887
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.140437388434737
  hamiltonian_energy:            16.82232150727806
  hamiltonian_energy_error:      -0.6430505558599648
  max_hamiltonian_energy_error:  -0.6430505558599648
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▋                      |  ETA: 0:00:09[K
  iterations:                    3352
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7418297637592932
  log_density:                   -13.011054163831421
  hamiltonian_energy:            17.199188725016782
  hamiltonian_energy_error:      0.23394504093016977
  max_hamiltonian_energy_error:  0.5888292355183289
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▋                     |  ETA: 0:00:08[K
  iterations:                    3715
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9081068834762218
  log_density:                   -15.09539327576604
  hamiltonian_energy:            22.503373293852032
  hamiltonian_energy_error:      -0.14288014363958368
  max_hamiltonian_energy_error:  0.31550837080544625
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 35%|██████████▊                    |  ETA: 0:00:07[K
  iterations:                    4185
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7537323474858724
  log_density:                   -13.445241817150377
  hamiltonian_energy:            18.955154599631868
  hamiltonian_energy_error:      0.11170629029717105
  max_hamiltonian_energy_error:  0.5599444661689006
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4573
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9786415748108457
  log_density:                   -12.862700670600766
  hamiltonian_energy:            14.475847213004254
  hamiltonian_energy_error:      0.07895480112803988
  max_hamiltonian_energy_error:  -0.15927223364671583
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 42%|█████████████                  |  ETA: 0:00:06[K
  iterations:                    5030
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7404654836577793
  log_density:                   -13.127881063082274
  hamiltonian_energy:            18.036019940247698
  hamiltonian_energy_error:      0.15003098215336763
  max_hamiltonian_energy_error:  0.6016328675334357
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 46%|██████████████▎                |  ETA: 0:00:05[K
  iterations:                    5510
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8006625173751029
  log_density:                   -14.34772150434313
  hamiltonian_energy:            18.80159132351664
  hamiltonian_energy_error:      0.14096851275559885
  max_hamiltonian_energy_error:  0.6556697645097103
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 49%|███████████████▏               |  ETA: 0:00:04[K
  iterations:                    5877
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.781971886604316
  log_density:                   -12.497840701081543
  hamiltonian_energy:            21.73422690474946
  hamiltonian_energy_error:      -0.4634499534242096
  max_hamiltonian_energy_error:  0.6782155614508376
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▍              |  ETA: 0:00:04[K
  iterations:                    6342
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9927732443472187
  log_density:                   -16.946665421655318
  hamiltonian_energy:            22.418728183024054
  hamiltonian_energy_error:      -0.1875792900045674
  max_hamiltonian_energy_error:  -0.6121875320511414
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▎             |  ETA: 0:00:04[K
  iterations:                    6662
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9084464358279581
  log_density:                   -16.876819387119717
  hamiltonian_energy:            20.16597638967297
  hamiltonian_energy_error:      0.29851850020163084
  max_hamiltonian_energy_error:  0.32361425995474136
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▌            |  ETA: 0:00:03[K
  iterations:                    7156
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9307705116651991
  log_density:                   -13.694827265802394
  hamiltonian_energy:            17.650994022315533
  hamiltonian_energy_error:      0.06468373890319157
  max_hamiltonian_energy_error:  0.227570185961401
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7545
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -16.21188985977978
  hamiltonian_energy:            25.905915496359896
  hamiltonian_energy_error:      -0.7641640644842589
  max_hamiltonian_energy_error:  -1.0430643061801455
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:02[K
  iterations:                    7925
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -11.65734072822511
  hamiltonian_energy:            15.44657586841511
  hamiltonian_energy_error:      -0.383065278099771
  max_hamiltonian_energy_error:  -0.46665035387472287
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▍         |  ETA: 0:00:02[K
  iterations:                    8287
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9163338393427866
  log_density:                   -13.697002893708392
  hamiltonian_energy:            19.785773810915522
  hamiltonian_energy_error:      -0.08813578062087757
  max_hamiltonian_energy_error:  0.21793141935803462
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▋        |  ETA: 0:00:02[K
  iterations:                    8763
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6837499546957054
  log_density:                   -12.998389820934811
  hamiltonian_energy:            24.852538166138118
  hamiltonian_energy_error:      -0.47461017986522336
  max_hamiltonian_energy_error:  0.8482891003697972
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▊       |  ETA: 0:00:02[K
  iterations:                    9174
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.206999793227514
  hamiltonian_energy:            19.394433035761594
  hamiltonian_energy_error:      -0.6410255536799347
  max_hamiltonian_energy_error:  -0.867906853394441
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 80%|████████████████████████▊      |  ETA: 0:00:01[K
  iterations:                    9563
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.99408777472002
  log_density:                   -11.87586881501389
  hamiltonian_energy:            13.91551401782215
  hamiltonian_energy_error:      -0.11279283839159149
  max_hamiltonian_energy_error:  -0.278157866394416
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 84%|██████████████████████████     |  ETA: 0:00:01[K
  iterations:                    10064
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -10.774961653336653
  hamiltonian_energy:            19.127460692715218
  hamiltonian_energy_error:      -1.1668289082296113
  max_hamiltonian_energy_error:  -1.206045430593086
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10469
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.862619272417396
  hamiltonian_energy:            16.503728067431478
  hamiltonian_energy_error:      -0.06971428873647412
  max_hamiltonian_energy_error:  -0.404067846384887
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▍  |  ETA: 0:00:01[K
  iterations:                    10964
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.381064498882822
  hamiltonian_energy:            19.511517259412745
  hamiltonian_energy_error:      -0.02468110763446063
  max_hamiltonian_energy_error:  -0.2842616373505038
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 95%|█████████████████████████████▍ |  ETA: 0:00:00[K
  iterations:                    11353
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.106939698422854
  hamiltonian_energy:            17.651544614011307
  hamiltonian_energy_error:      -0.3844746708029092
  max_hamiltonian_energy_error:  -0.4716429696027795
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11769
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.447870949511895
  hamiltonian_energy:            18.284394879389932
  hamiltonian_energy_error:      -0.0037605987811737407
  max_hamiltonian_energy_error:  -0.10040889597008729
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9422135162129976
  log_density:                   -17.582333740116585
  hamiltonian_energy:            23.780291398470737
  hamiltonian_energy_error:      0.055876845205247605
  max_hamiltonian_energy_error:  -0.2899893149544148
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7300526546481243
  nom_step_size:                 0.7300526546481243
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([1.0614920803198014, 0.9987 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.814662376 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([1.0614920803198014, 0.9987 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.73), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0742262234623543
└   average_acceptance_rate = 0.8554140957966482
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.172403289 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            5 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⢣⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠱⠤⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢱⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠘⡄│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⡰⠣⡀⡎⠀⠀⢇│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢣⠀⠀⡜⢣⠀⢠⠃⠀⠈⠃⠀⠀⢸│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⢣⡜⠀⠀⢣⡎⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⢠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⡰⠁⠀⢀⣀⣀⣀⣀⡠⠔⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⡀⢀⠔⢁⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠉⠚⠗⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
