Julia Version 1.5.0-DEV.613
Commit 0c284839fe (2020-04-11 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_chPdOG/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_chPdOG/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723289641449048
curgen: 20 fitness: 0.21723289641449048
curgen: 30 fitness: 0.21723337214585206
curgen: 40 fitness: 0.21723337214585206
curgen: 50 fitness: 0.21723337214585206
CoordinateCreature{Array{Float64,1}}([0.22262422152142788], -0.21723337214585206) 0.22262422152142788 -0.21723337214585206
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580353592303752
curgen: 100 fitness: 3.2581004062964443
curgen: 150 fitness: 3.2582251390755625
curgen: 200 fitness: 3.258257200453391
curgen: 250 fitness: 3.258340134257916
curgen: 300 fitness: 3.258376739599873
curgen: 350 fitness: 3.258411458218083
curgen: 400 fitness: 3.2584149406052347
curgen: 450 fitness: 3.2584167488782305
curgen: 500 fitness: 3.2584487623178724
CoordinateCreature{Array{Float64,1}}([-0.22246127240553917, 0.2224572900737175, 0.22236879425430237, 0.2230087856978308, 0.22239825969017796, -0.22270045486735635, -0.22260782996299203, -0.22202349003568814, 0.22278097127047666, 0.22275156695161816, 0.22298858085985393, 0.22251548636029406, 0.2231506654968305, 0.22243266557365393, -0.2224643268248922], -3.2584487623178724) [-0.22246127240553917, 0.2224572900737175, 0.22236879425430237, 0.2230087856978308, 0.22239825969017796, -0.22270045486735635, -0.22260782996299203, -0.22202349003568814, 0.22278097127047666, 0.22275156695161816, 0.22298858085985393, 0.22251548636029406, 0.2231506654968305, 0.22243266557365393, -0.2224643268248922] -3.2584487623178724
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.005373075687003848
curgen: 100 fitness: -0.004582251870544951
curgen: 150 fitness: -0.004582251870544951
curgen: 200 fitness: -0.004388740684618142
curgen: 250 fitness: -0.0019501293178052492
curgen: 300 fitness: -0.0019501293178052492
curgen: 350 fitness: -0.0018917463042953386
curgen: 400 fitness: -0.0018917463042953386
curgen: 450 fitness: -0.0008965771373823372
curgen: 500 fitness: -0.0008788734332370041
CoordinateCreature{Array{Float64,1}}([0.00020264544612274803, -2.793964345709733e-5, 0.00024702106999409477, 0.0008353358521622367, -0.00013167538666768465, -0.0007989609670492109, 3.6930887565856356e-5, 0.0008698759472385011, 0.00041715707566961015, -0.0007014303575534064, 0.0001229859705321876, -6.417307202513612e-5, 0.0004952750785174027, 0.0005012829081841356, -0.0010167425154234602], 0.0008788734332370041) [0.00020264544612274803, -2.793964345709733e-5, 0.00024702106999409477, 0.0008353358521622367, -0.00013167538666768465, -0.0007989609670492109, 3.6930887565856356e-5, 0.0008698759472385011, 0.00041715707566961015, -0.0007014303575534064, 0.0001229859705321876, -6.417307202513612e-5, 0.0004952750785174027, 0.0005012829081841356, -0.0010167425154234602] 0.0008788734332370041
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
