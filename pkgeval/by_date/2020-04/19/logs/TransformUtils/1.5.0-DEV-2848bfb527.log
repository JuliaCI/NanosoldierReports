Julia Version 1.5.0-DEV.642
Commit 2848bfb527 (2020-04-18 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_4AKN7O/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_4AKN7O/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.1073175064693845 0.07164645993782907; 0.1073175064693845 0.0 -0.0331422062447007; -0.07164645993782907 0.0331422062447007 0.0])
dAA = so3([0.0 -0.004709966716456742 0.20215141774576698; 0.004709966716456742 0.0 0.0262853202401337; -0.20215141774576698 -0.0262853202401337 0.0])
dAA = so3([0.0 -0.16035468817160467 0.1390028969243492; 0.16035468817160467 0.0 0.07382762531837085; -0.1390028969243492 -0.07382762531837085 0.0])
dAA = Quaternion(0.9910552713808249, [0.10508428491176061, 0.08159217942532747, -0.010462236352160339])
dAA = SO3([0.9919223376726605 -0.10015738454985539 -0.07783684439991843; 0.1094269676980703 0.9860103336324975 0.12573528029290937; 0.06415461609588359 -0.13323708301393944 0.9890055939900069])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.874970054156231 -0.02752008021142304 0.48339430025083974; -0.00497703616687137 0.9978193983965659 0.06581547914061708; -0.4841514571297249 -0.05999244426319192 0.8729251246186536]), [0.33142206244700695, 0.7164645993782908, 1.073175064693845])
xj = SE3(SO3([0.9183402075495025 0.11300615010374444 0.379316323451373; 0.0961415396791899 0.8659771017240391 -0.490754993492423; -0.383937582877805 0.48714809794185104 0.7843970060661791]), [-0.7382762531837085, 1.390028969243492, 1.6035468817160465])
Dx = SE3(SO3([0.9889256214104645 -0.14128646353522364 -0.0454340240308595; 0.09369245115181299 0.8317536072385469 -0.547181561680244; 0.11509926114051272 0.5368650408318418 0.8357799279819618]), [-1.19608663541961, 0.6697154760969662, -0.009780222560758611])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
