Julia Version 1.5.0-DEV.650
Commit dd738f9ee8 (2020-04-19 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_RvLKMK/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_RvLKMK/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.06048300896853494 0.03480035469777398; 0.06048300896853494 0.0 -0.02598679753070516; -0.03480035469777398 0.02598679753070516 0.0])
dAA = so3([0.0 -0.06846847069833585 -0.06345574607825893; 0.06846847069833585 0.0 0.0880902496566866; 0.06345574607825893 -0.0880902496566866 0.0])
dAA = so3([0.0 0.031533976720053446 -0.09260474243097594; -0.031533976720053446 0.0 0.08894276369144474; 0.09260474243097594 -0.08894276369144474 0.0])
dAA = Quaternion(0.9995586229378401, [0.016707670185751138, -0.005015042548699489, -0.024047087470370626])
dAA = SO3([0.9937798219804839 0.05083921091924643 0.09908097727387824; -0.04820490428356974 0.9984220633932885 -0.028804002022301798; -0.10038900650693922 0.02384864697623872 0.9946623997165838])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9729998608587106 -0.1509299576813223 -0.1746179218844508; 0.18556766753938125 0.9614331824887434 0.2030046215571468; 0.13724398541620536 -0.2299269090034504 0.9634820729952351]), [0.2598679753070516, 0.34800354697773983, 0.6048300896853493])
xj = SE3(SO3([0.992469537873779 0.11924007026036645 -0.028036084550278714; -0.12117601920254592 0.9892029425339846 -0.08242518336243258; 0.017904992678907265 0.08520178476070374 0.9962028242836691]), [-0.8894276369144474, -0.9260474243097593, -0.3153397672005344])
Dx = SE3(SO3([0.945643723566673 0.31127808704637616 0.09414829049805373; -0.2704128707569023 0.9134654513977573 -0.30406865743068967; -0.18065112069391684 0.26208170792224295 0.9479864719312147]), [-1.4809749162640273, -0.8398799309099759, -0.944517785053838])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
