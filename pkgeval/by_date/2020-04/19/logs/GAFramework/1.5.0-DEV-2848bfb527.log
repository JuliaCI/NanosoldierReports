Julia Version 1.5.0-DEV.642
Commit 2848bfb527 (2020-04-18 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_OaY1X3/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_OaY1X3/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722737213664975
curgen: 20 fitness: 0.21722915375444776
curgen: 30 fitness: 0.21723326848958804
curgen: 40 fitness: 0.21723326848958804
curgen: 50 fitness: 0.21723326848958804
CoordinateCreature{Array{Float64,1}}([-0.2226383155765889], -0.21723326848958804) -0.2226383155765889 -0.21723326848958804
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257983895514217
curgen: 100 fitness: 3.258096016026413
curgen: 150 fitness: 3.258268109769466
curgen: 200 fitness: 3.258359302942897
curgen: 250 fitness: 3.2583772524622887
curgen: 300 fitness: 3.258412594402242
curgen: 350 fitness: 3.258423635647597
curgen: 400 fitness: 3.258423635647597
curgen: 450 fitness: 3.258423635647597
curgen: 500 fitness: 3.25842799541544
CoordinateCreature{Array{Float64,1}}([-0.22246310100288702, 0.22198313116909313, -0.2219031887802731, -0.22210981060971502, -0.2218865436527634, -0.22304642943923741, -0.22259733763535378, -0.22237973888384793, -0.22245411820242048, -0.2227204532816756, 0.22255462190503367, -0.22237095432008538, -0.22255762942495444, 0.22253220118763462, 0.22255695486358035], -3.25842799541544) [-0.22246310100288702, 0.22198313116909313, -0.2219031887802731, -0.22210981060971502, -0.2218865436527634, -0.22304642943923741, -0.22259733763535378, -0.22237973888384793, -0.22245411820242048, -0.2227204532816756, 0.22255462190503367, -0.22237095432008538, -0.22255762942495444, 0.22253220118763462, 0.22255695486358035] -3.25842799541544
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0022327253513196865
curgen: 100 fitness: -0.00212766135987863
curgen: 150 fitness: -0.00212766135987863
curgen: 200 fitness: -0.00212766135987863
curgen: 250 fitness: -0.00212766135987863
curgen: 300 fitness: -0.0008618535083826373
curgen: 350 fitness: -0.0008618535083826373
curgen: 400 fitness: -0.0008600875191007162
curgen: 450 fitness: -0.0005723693533639107
curgen: 500 fitness: -0.0005723693533639107
CoordinateCreature{Array{Float64,1}}([-0.000432560557771227, 2.5797000531117722e-5, -0.00036060372311406974, -0.0001063929553353851, -0.00021024606591876665, 0.00035276727435279036, 0.0011537166119194061, 0.00025686225585407757, 0.0003421854740880046, 0.00012689353871093035, 0.0005636652788494042, 0.00013674904440600963, 0.0006895981166068384, 0.000211789669859545, 1.480627855008097e-5], 0.0005723693533639107) [-0.000432560557771227, 2.5797000531117722e-5, -0.00036060372311406974, -0.0001063929553353851, -0.00021024606591876665, 0.00035276727435279036, 0.0011537166119194061, 0.00025686225585407757, 0.0003421854740880046, 0.00012689353871093035, 0.0005636652788494042, 0.00013674904440600963, 0.0006895981166068384, 0.000211789669859545, 1.480627855008097e-5] 0.0005723693533639107
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
