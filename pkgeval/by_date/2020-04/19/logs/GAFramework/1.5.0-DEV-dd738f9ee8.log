Julia Version 1.5.0-DEV.650
Commit dd738f9ee8 (2020-04-19 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_hfl83J/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_hfl83J/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723299183818248
curgen: 20 fitness: 0.21723299183818248
curgen: 30 fitness: 0.21723299183818248
curgen: 40 fitness: 0.21723299183818248
curgen: 50 fitness: 0.21723299183818248
CoordinateCreature{Array{Float64,1}}([-0.2226680839194063], -0.21723299183818248) -0.2226680839194063 -0.21723299183818248
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580586755243686
curgen: 100 fitness: 3.258240340691413
curgen: 150 fitness: 3.2582599027697206
curgen: 200 fitness: 3.258338935431428
curgen: 250 fitness: 3.258339354306991
curgen: 300 fitness: 3.2583511703686834
curgen: 350 fitness: 3.2584063883142758
curgen: 400 fitness: 3.2584583322234177
curgen: 450 fitness: 3.25848301754516
curgen: 500 fitness: 3.2584838330431847
CoordinateCreature{Array{Float64,1}}([0.222577521881451, -0.22280636130405718, -0.22207275982764108, -0.2226660645549176, -0.22257226882065048, -0.22245227611924773, -0.22250493170290098, -0.22271746344448903, -0.22239948206810434, -0.22271477406985812, 0.22262859275656552, 0.22265045312124973, 0.2224483513146158, 0.2224567091764468, 0.22237038419023195], -3.2584838330431847) [0.222577521881451, -0.22280636130405718, -0.22207275982764108, -0.2226660645549176, -0.22257226882065048, -0.22245227611924773, -0.22250493170290098, -0.22271746344448903, -0.22239948206810434, -0.22271477406985812, 0.22262859275656552, 0.22265045312124973, 0.2224483513146158, 0.2224567091764468, 0.22237038419023195] -3.2584838330431847
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0033337297254547593
curgen: 100 fitness: -0.0019196129078409285
curgen: 150 fitness: -0.001833034222642027
curgen: 200 fitness: -0.0014700928338413632
curgen: 250 fitness: -0.0014700928338413632
curgen: 300 fitness: -0.001360272301809573
curgen: 350 fitness: -0.00126470565774639
curgen: 400 fitness: -0.0012403072353777134
curgen: 450 fitness: -0.0012403072353777134
curgen: 500 fitness: -0.0012403072353777134
CoordinateCreature{Array{Float64,1}}([0.0008404380902696017, -0.001159863095507338, 3.093549862760633e-5, -1.2515815198095711e-5, 9.76251110357089e-7, 0.00011387742735808151, 0.0002940358422340581, 0.0016247678989619182, -0.0003289838086090709, -0.0008513299008474631, 4.670078244090655e-5, -0.0006637437446091737, -0.0003087919645904823, 0.00020091477329013365, -0.00021989260952150484], 0.0012403072353777134) [0.0008404380902696017, -0.001159863095507338, 3.093549862760633e-5, -1.2515815198095711e-5, 9.76251110357089e-7, 0.00011387742735808151, 0.0002940358422340581, 0.0016247678989619182, -0.0003289838086090709, -0.0008513299008474631, 4.670078244090655e-5, -0.0006637437446091737, -0.0003087919645904823, 0.00020091477329013365, -0.00021989260952150484] 0.0012403072353777134
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
