Julia Version 1.5.0-DEV.650
Commit dd738f9ee8 (2020-04-19 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.1.0
  Installed Reexport ──────────────────── v0.2.0
  Installed KCenters ──────────────────── v0.2.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SimilaritySearch ──────────── v0.3.19
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MLDataPattern ─────────────── v0.5.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed Tables ────────────────────── v1.0.4
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataFrames ────────────────── v0.20.2
  Installed Compat ────────────────────── v3.8.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed MappedArrays ──────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataStructures ────────────── v0.17.12
  Installed Parsers ───────────────────── v1.0.2
  Installed JSON ──────────────────────── v0.21.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.12
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_JfnwSD/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_JfnwSD/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.12
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9326678744951884
[ Info: 0.8321307849884033
[ Info: 0.5546240802109241
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32481760886808236
mean(cdnet.distances) = 0.38862299151718616
mean(crand.distances) = 0.34013457196454205
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.0234375,"distances_sum":580.2218548961483}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8679778554778562,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.484375,"distances_sum":2223.0356459629393}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8679778554778562,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.484375,"distances_sum":2223.0356459629393}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776562,"seconds":6.9160014390945435e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8984375,"distances_sum":2905.210210324312}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634901556776562,"seconds":6.9160014390945435e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8984375,"distances_sum":2905.210210324312}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.974609375, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.974609375,"f1":0.9862351190476193,"seconds":7.51204788684845e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9921875,"distances_sum":3117.6161086421416}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.974609375,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9862351190476193,"seconds":7.51204788684845e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9921875,"distances_sum":3117.6161086421416}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.974609375,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9862351190476193,"seconds":7.51204788684845e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9921875,"distances_sum":3117.6161086421416}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.58984375,"f1":null,"seconds":4.606321454048157e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.6015625,"distances_sum":1320.626106735038}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7321393883893892,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.53125,"distances_sum":1312.2665994434162}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.59375,"f1":0.7321393883893892,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":7.53125,"distances_sum":1312.2665994434162}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8740530303030312,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.6640625,"distances_sum":1876.2849725385906}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.808097111222112,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.4375,"distances_sum":1562.6996112022769}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8302556818181825,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.390625,"distances_sum":1688.233844961801}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8740530303030312,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.6640625,"distances_sum":1876.2849725385906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9714514652014655,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9296875,"distances_sum":2506.30877760403}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9443166208791214,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9296875,"distances_sum":2290.910865537668}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546932234432238,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.90625,"distances_sum":2394.2887482583315}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9057099150849159,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.8984375,"distances_sum":2061.7078152300355}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9057270854145862,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.890625,"distances_sum":2058.208820280298}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9263881951381956,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.8828125,"distances_sum":2182.3493831455344}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9557177197802204,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9375,"distances_sum":2389.4748487900547}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714514652014655,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9296875,"distances_sum":2506.30877760403}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714514652014655,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.9296875,"distances_sum":2506.30877760403}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.1640625,"distances_sum":1001.3697489824303}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.1640625,"distances_sum":1001.3697489824303}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.80852584915085,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.0078125,"distances_sum":1706.181938786449}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8728053196803205,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.359375,"distances_sum":2006.3370654840303}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8614619755244766,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.171875,"distances_sum":2025.595396580439}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8728053196803205,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.359375,"distances_sum":2006.3370654840303}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9226507867132873,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.578125,"distances_sum":2344.5321291574}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9339374167499174,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.71875,"distances_sum":2450.579130565312}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8962428196803205,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4453125,"distances_sum":2160.6528036551726}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9382898351648358,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7109375,"distances_sum":2453.1878080529627}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9463057775557782,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7421875,"distances_sum":2547.648803124523}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9463057775557782,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7421875,"distances_sum":2547.648803124523}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9463057775557782,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7421875,"distances_sum":2547.648803124523}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8109708000333008,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.6171875,"distances_sum":1737.2677067482514}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8109708000333008,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.6171875,"distances_sum":1737.2677067482514}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9334020146520153,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6640625,"distances_sum":2433.9708987330887}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9334020146520153,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6640625,"distances_sum":2433.9708987330887}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.96875,"distances_sum":2727.94872399675}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9788518772893776,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.9296875,"distances_sum":2696.6423495590725}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.96875,"distances_sum":2727.94872399675}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.96875,"distances_sum":2727.94872399675}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.40625,"distances_sum":805.4741006599751}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.851898622211123,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.2265625,"distances_sum":1595.6774987463182}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7724360708735716,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.453125,"distances_sum":1358.1952037074395}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.851898622211123,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.2265625,"distances_sum":1595.6774987463182}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9119567932067941,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.4140625,"distances_sum":1903.7124007185269}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8585404179154187,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3046875,"distances_sum":1646.8296459622204}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9215003746253753,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5234375,"distances_sum":1921.5212897148185}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9236581127206135,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5859375,"distances_sum":1967.5690187555049}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9234494671994677,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6640625,"distances_sum":1927.1206326006727}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9236581127206135,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5859375,"distances_sum":1967.5690187555049}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9560668498168503,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.71875,"distances_sum":2140.9974434908895}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9391655219780227,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.609375,"distances_sum":2062.960943380204}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9402930402930408,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7265625,"distances_sum":2025.0425234374156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9379750457875462,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6171875,"distances_sum":2029.5401840677957}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9610691391941397,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8125,"distances_sum":2138.0338048110543}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9610691391941397,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8125,"distances_sum":2138.0338048110543}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9610691391941397,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8125,"distances_sum":2138.0338048110543}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7884610181485189,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.0234375,"distances_sum":1323.5826730381568}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.795884844322345,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.09375,"distances_sum":1295.6069302077578}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8123902139527149,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.171875,"distances_sum":1379.7864406878668}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8123902139527149,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.171875,"distances_sum":1379.7864406878668}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8769324425574432,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.40625,"distances_sum":1601.8490207156708}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9453926282051288,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.765625,"distances_sum":1895.6461259520845}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472527472527476,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":1953.5448426285177}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8851169663669671,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5,"distances_sum":1649.7701723484943}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9050225815850823,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.546875,"distances_sum":1712.0020740396594}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9156281218781226,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6484375,"distances_sum":1745.8879856757599}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9242533508158514,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.625,"distances_sum":1815.9904395865462}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9472527472527476,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":1953.5448426285177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590831043956047,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.84375,"distances_sum":1998.6028707095759}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609603937728939,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.859375,"distances_sum":1995.10744635634}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978028,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2078.3038250766404}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635817307692311,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8828125,"distances_sum":2014.078554002992}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9504896145521151,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.828125,"distances_sum":1945.8369620347914}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641597985347989,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8671875,"distances_sum":2019.776682585102}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978028,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2078.3038250766404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978028,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2078.3038250766404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.781465236152737,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.9140625,"distances_sum":1140.0850934667496}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.781465236152737,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.9140625,"distances_sum":1140.0850934667496}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8710060772560779,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.3203125,"distances_sum":1450.8898985852159}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8812593656343666,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.2421875,"distances_sum":1531.8150863986803}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8812593656343666,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.2421875,"distances_sum":1531.8150863986803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559752747252752,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8046875,"distances_sum":1840.1594886241737}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606627747252751,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.84375,"distances_sum":1855.2071523411316}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9224078005328014,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.6484375,"distances_sum":1671.1534076747275}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9606627747252751,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.84375,"distances_sum":1855.2071523411316}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9606627747252751,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.84375,"distances_sum":1855.2071523411316}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.3695250749588013e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0703125,"distances_sum":659.0539625707804}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8059050324675333,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.65625,"distances_sum":1916.9135424738063}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.564453125,"f1":null,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.671875,"distances_sum":1518.2205093175453}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8059050324675333,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.65625,"distances_sum":1916.9135424738063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8109988969363976,"seconds":4.41819429397583e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.6953125,"distances_sum":1973.5129822612266}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8570975899100906,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.984375,"distances_sum":2232.203497797447}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8570975899100906,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.984375,"distances_sum":2232.203497797447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958413461538462,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":3081.610175268614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9352080211455217,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2913.5905090793026}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.958413461538462,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":3081.610175268614}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.958413461538462,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":3081.610175268614}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.16015625,"f1":null,"seconds":2.99699604511261e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":4.5234375,"distances_sum":430.31124797802397}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8643377455877465,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.5546875,"distances_sum":2244.0726615400936}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8643377455877465,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.5546875,"distances_sum":2244.0726615400936}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9203499625374632,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.59375,"distances_sum":2708.0403847989114}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9203499625374632,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.59375,"distances_sum":2708.0403847989114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358977,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":3110.669194875046}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719150641025646,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":3144.2141969587037}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9373543123543129,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.65625,"distances_sum":2889.936350888474}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719150641025646,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":3144.2141969587037}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719150641025646,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":3144.2141969587037}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7665898337773346,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.046875,"distances_sum":1698.0916305444375}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7960065975690983,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.359375,"distances_sum":1820.140843874845}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5712890625,"f1":null,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.6015625,"distances_sum":1428.216596664681}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7960065975690983,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.359375,"distances_sum":1820.140843874845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8511623792873801,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.8125,"distances_sum":2071.148342358147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8816256660006669,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2357.1635010200175}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8451048951048958,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.796875,"distances_sum":2058.6138872846236}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8816256660006669,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":2357.1635010200175}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644917582417587,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2980.656305296066}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9483547702297705,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2903.0476019223906}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9515510531135539,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2918.220985060913}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.921802503052504,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.75,"distances_sum":2680.301455110337}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644917582417587,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2980.656305296066}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644917582417587,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2980.656305296066}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.0234375,"distances_sum":567.4886559198779}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.0234375,"distances_sum":567.4886559198779}}, n: 9
mean(cfft.distances) = 0.33744031131627156
mean(cdnet.distances) = 0.38111211569430486
mean(crand.distances) = 0.7678539666943174
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9577777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8644444444444446
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9511111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8622222222222221
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.888888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222224
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8488888888888888
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8377777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.6331699234247208] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 9, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.18717896987127514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18717896987127514, 0.15829124688884025] ***
*** starting iteration: 2; err: [Inf, 0.18717896987127514, 0.15829124688884025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014] ***
*** starting iteration: 3; err: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014, 0.1490273134987074] ***
*** starting iteration: 4; err: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014, 0.1490273134987074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014, 0.1490273134987074, 0.14734093004637663] ***
*** starting iteration: 5; err: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014, 0.1490273134987074, 0.14734093004637663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014, 0.1490273134987074, 0.14734093004637663, 0.14668297825672022] ***
*** finished computation of 7 references, err: [Inf, 0.18717896987127514, 0.15829124688884025, 0.1515172583753014, 0.1490273134987074, 0.14734093004637663, 0.14668297825672022] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 74, 20]]
** centroid: 1, normalized-entropy: 0.7467366074830678, [(2, 74), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 19, 0]]
** centroid: 2, normalized-entropy: 0.748088105780153, [(1, 70), (2, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [44, 29, 0]]
** centroid: 6, normalized-entropy: 0.9693253797191861, [(1, 44), (2, 29)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [82, 55, 0]]
** centroid: 7, normalized-entropy: 0.9717981514091462, [(1, 82), (2, 55)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20731826363315714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20731826363315714, 0.15919399431262954] ***
*** starting iteration: 2; err: [Inf, 0.20731826363315714, 0.15919399431262954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561] ***
*** starting iteration: 3; err: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464] ***
*** starting iteration: 4; err: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464, 0.1481919355855939] ***
*** starting iteration: 5; err: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464, 0.1481919355855939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464, 0.1481919355855939, 0.14645253939238534] ***
*** starting iteration: 6; err: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464, 0.1481919355855939, 0.14645253939238534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464, 0.1481919355855939, 0.14645253939238534, 0.1455339023234627] ***
*** finished computation of 7 references, err: [Inf, 0.20731826363315714, 0.15919399431262954, 0.1529259880602561, 0.1503400576246464, 0.1481919355855939, 0.14645253939238534, 0.1455339023234627] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 89, 1]]
** centroid: 1, normalized-entropy: 0.08807225904068142, [(2, 89), (3, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 24, 0]]
** centroid: 2, normalized-entropy: 0.8497511372532974, [(1, 63), (2, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [61, 22, 0]]
** centroid: 3, normalized-entropy: 0.8342867421739538, [(1, 61), (2, 22)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 77, 20]]
** centroid: 4, normalized-entropy: 0.7341280428958428, [(2, 77), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [103, 40, 0]]
** centroid: 5, normalized-entropy: 0.8550693920555504, [(1, 103), (2, 40)]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22093903014891553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636] ***
*** starting iteration: 2; err: [Inf, 0.22093903014891553, 0.17721257497056636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299] ***
*** starting iteration: 3; err: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656] ***
*** starting iteration: 4; err: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397] ***
*** starting iteration: 5; err: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397, 0.1512716493698122] ***
*** starting iteration: 6; err: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397, 0.1512716493698122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397, 0.1512716493698122, 0.15016540590145888] ***
*** starting iteration: 7; err: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397, 0.1512716493698122, 0.15016540590145888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397, 0.1512716493698122, 0.15016540590145888, 0.14956796524705535] ***
*** finished computation of 7 references, err: [Inf, 0.22093903014891553, 0.17721257497056636, 0.16475446582974299, 0.15807470543005656, 0.15362427049041397, 0.1512716493698122, 0.15016540590145888, 0.14956796524705535] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 77, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [102, 1, 0]]
** centroid: 2, normalized-entropy: 0.0788560137745528, [(1, 102), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 50, 25]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 50), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [19, 74, 0]]
** centroid: 4, normalized-entropy: 0.7304472862481346, [(1, 19), (2, 74)]
*** center 5: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 24, 0]]
** centroid: 6, normalized-entropy: 0.8721617883411698, [(1, 58), (2, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [98, 25, 0]]
** centroid: 7, normalized-entropy: 0.7283846722688453, [(1, 98), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4353871056701647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4353871056701647, 0.24694721026530675] ***
*** finished computation of 7 references, err: [Inf, 0.4353871056701647, 0.24694721026530675] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 162, 20]]
** centroid: 1, normalized-entropy: 0.49958440742366095, [(2, 162), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [98, 15, 0]]
** centroid: 2, normalized-entropy: 0.5649141512875933, [(1, 98), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [88, 13, 0]]
** centroid: 4, normalized-entropy: 0.5538976334852961, [(1, 88), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [92, 69, 0]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(1, 92), (2, 69)]
*** center 6: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3279018017527615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3279018017527615, 0.241360351654828] ***
*** finished computation of 7 references, err: [Inf, 0.3279018017527615, 0.241360351654828] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [23, 185, 21]]
** centroid: 1, normalized-entropy: 0.5664358012064967, [(1, 23), (2, 185), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [78, 66, 0]]
** centroid: 6, normalized-entropy: 0.9949848281859699, [(1, 78), (2, 66)]
*** center 7: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32139367135618624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32139367135618624, 0.2251229796536278] ***
*** finished computation of 7 references, err: [Inf, 0.32139367135618624, 0.2251229796536278] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [91, 65, 0]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(1, 91), (2, 65)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 43, 20]]
** centroid: 2, normalized-entropy: 0.9015982354056711, [(2, 43), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [103, 19, 0]]
** centroid: 3, normalized-entropy: 0.6240145748145288, [(1, 103), (2, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [163, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 50, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 34, 5]]
** centroid: 6, normalized-entropy: 0.552495114325111, [(2, 34), (3, 5)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [34, 40, 0]]
** centroid: 7, normalized-entropy: 0.9952525494396791, [(1, 34), (2, 40)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2674736243493676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2674736243493676, 0.22867781638137033] ***
*** finished computation of 3 references, err: [Inf, 0.2674736243493676, 0.22867781638137033] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [131, 57, 0]]
** centroid: 1, normalized-entropy: 0.8851572346095721, [(1, 131), (2, 57)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [44, 199, 20]]
** centroid: 2, normalized-entropy: 0.6426699446770197, [(1, 44), (2, 199), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [212, 3, 0]]
** centroid: 3, normalized-entropy: 0.10598808740545232, [(1, 212), (2, 3)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39671384458146663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39671384458146663, 0.2470357936738559] ***
*** finished computation of 3 references, err: [Inf, 0.39671384458146663, 0.2470357936738559] ***
*** center 1: selecting labels [1] (freq >= 2) [from [143, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [158, 144, 17]]
** centroid: 2, normalized-entropy: 0.7857966970566126, [(1, 158), (2, 144), (3, 17)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [93, 108, 4]]
** centroid: 3, normalized-entropy: 0.7036368695432051, [(1, 93), (2, 108), (3, 4)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3542911741502773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3542911741502773, 0.244548207986681] ***
*** finished computation of 3 references, err: [Inf, 0.3542911741502773, 0.244548207986681] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 136, 25]]
** centroid: 1, normalized-entropy: 0.6228960634909259, [(2, 136), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [228, 37, 0]]
** centroid: 2, normalized-entropy: 0.5832496899870436, [(1, 228), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [163, 78, 0]]
** centroid: 3, normalized-entropy: 0.9083081652302895, [(1, 163), (2, 78)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38550397214219645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38550397214219645, 0.34277939587599365] ***
*** finished computation of 3 references, err: [Inf, 0.38550397214219645, 0.34277939587599365] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [73, 207, 20]]
** centroid: 1, normalized-entropy: 0.7104228062109097, [(1, 73), (2, 207), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [155, 52, 0]]
** centroid: 2, normalized-entropy: 0.813186724838245, [(1, 155), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [159, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4888542378335253] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4888542378335253, 0.353214167064053] ***
*** finished computation of 3 references, err: [Inf, 0.4888542378335253, 0.353214167064053] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [112, 222, 21]]
** centroid: 1, normalized-entropy: 0.7507565750839311, [(1, 112), (2, 222), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [143, 30, 0]]
** centroid: 2, normalized-entropy: 0.665447192795307, [(1, 143), (2, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [139, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4240784578093759] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4240784578093759, 0.3416892370290082] ***
*** finished computation of 3 references, err: [Inf, 0.4240784578093759, 0.3416892370290082] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [35, 232, 25]]
** centroid: 1, normalized-entropy: 0.5893486090253047, [(1, 35), (2, 232), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [221, 19, 0]]
** centroid: 2, normalized-entropy: 0.399236060687958, [(1, 221), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [135, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3507041746272227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3507041746272227, 0.245591253802941] ***
*** starting iteration: 2; err: [Inf, 0.3507041746272227, 0.245591253802941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3507041746272227, 0.245591253802941, 0.22863430075009014] ***
*** starting iteration: 3; err: [Inf, 0.3507041746272227, 0.245591253802941, 0.22863430075009014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3507041746272227, 0.245591253802941, 0.22863430075009014, 0.2274066753595978] ***
*** starting iteration: 4; err: [Inf, 0.3507041746272227, 0.245591253802941, 0.22863430075009014, 0.2274066753595978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3507041746272227, 0.245591253802941, 0.22863430075009014, 0.2274066753595978, 0.22682809408449264] ***
*** finished computation of 3 references, err: [Inf, 0.3507041746272227, 0.245591253802941, 0.22863430075009014, 0.2274066753595978, 0.22682809408449264] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [116, 99, 0]]
** centroid: 1, normalized-entropy: 0.9954854039025779, [(1, 116), (2, 99)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [59, 160, 20]]
** centroid: 2, normalized-entropy: 0.7478343583328738, [(1, 59), (2, 160), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [212, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24447123275447016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24447123275447016, 0.23100541762845672] ***
*** starting iteration: 2; err: [Inf, 0.24447123275447016, 0.23100541762845672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24447123275447016, 0.23100541762845672, 0.23004804243580781] ***
*** finished computation of 3 references, err: [Inf, 0.24447123275447016, 0.23100541762845672, 0.23004804243580781] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [111, 96, 0]]
** centroid: 1, normalized-entropy: 0.9962088839046743, [(1, 111), (2, 96)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [71, 156, 21]]
** centroid: 2, normalized-entropy: 0.7816589415859557, [(1, 71), (2, 156), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [212, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.311642670330928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.311642670330928, 0.2537607977633131] ***
*** starting iteration: 2; err: [Inf, 0.311642670330928, 0.2537607977633131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.311642670330928, 0.2537607977633131, 0.2438244988717351] ***
*** starting iteration: 3; err: [Inf, 0.311642670330928, 0.2537607977633131, 0.2438244988717351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.311642670330928, 0.2537607977633131, 0.2438244988717351, 0.24064388204326873] ***
*** starting iteration: 4; err: [Inf, 0.311642670330928, 0.2537607977633131, 0.2438244988717351, 0.24064388204326873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.311642670330928, 0.2537607977633131, 0.2438244988717351, 0.24064388204326873, 0.23978732727088223] ***
*** finished computation of 3 references, err: [Inf, 0.311642670330928, 0.2537607977633131, 0.2438244988717351, 0.24064388204326873, 0.23978732727088223] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 198, 25]]
** centroid: 1, normalized-entropy: 0.5062406374981934, [(2, 198), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [239, 11, 0]]
** centroid: 2, normalized-entropy: 0.2603406250124503, [(1, 239), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [152, 42, 0]]
** centroid: 3, normalized-entropy: 0.7537153483720096, [(1, 152), (2, 42)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3570173113039127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570173113039127, 0.23682765607434036] ***
*** starting iteration: 2; err: [Inf, 0.3570173113039127, 0.23682765607434036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570173113039127, 0.23682765607434036, 0.212673870432708] ***
*** starting iteration: 3; err: [Inf, 0.3570173113039127, 0.23682765607434036, 0.212673870432708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3570173113039127, 0.23682765607434036, 0.212673870432708, 0.19893402151879505] ***
*** finished computation of 7 references, err: [Inf, 0.3570173113039127, 0.23682765607434036, 0.212673870432708, 0.19893402151879505] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [35, 12, 0]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(1, 35), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 98, 19]]
** centroid: 2, normalized-entropy: 0.6400041428422206, [(2, 98), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [6, 122, 1]]
** centroid: 3, normalized-entropy: 0.2729708579140699, [(1, 6), (2, 122)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 14, 0]]
** centroid: 4, normalized-entropy: 0.710676853856123, [(1, 58), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [66, 13, 0]]
** centroid: 5, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 6: selecting labels [1] (freq >= 2) [from [134, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2628944123846603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2628944123846603, 0.2077696887508169] ***
*** starting iteration: 2; err: [Inf, 0.2628944123846603, 0.2077696887508169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2628944123846603, 0.2077696887508169, 0.19659706670930538] ***
*** starting iteration: 3; err: [Inf, 0.2628944123846603, 0.2077696887508169, 0.19659706670930538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2628944123846603, 0.2077696887508169, 0.19659706670930538, 0.19413947806354315] ***
*** finished computation of 7 references, err: [Inf, 0.2628944123846603, 0.2077696887508169, 0.19659706670930538, 0.19413947806354315] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [96, 38, 0]]
** centroid: 1, normalized-entropy: 0.8602858652332406, [(1, 96), (2, 38)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 90, 21]]
** centroid: 2, normalized-entropy: 0.699772221773307, [(2, 90), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 29, 0]]
** centroid: 3, normalized-entropy: 0.8914467590654126, [(1, 65), (2, 29)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 85, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [73, 10, 0]]
** centroid: 6, normalized-entropy: 0.530744566923854, [(1, 73), (2, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2696424784457152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2696424784457152, 0.23379258273624587] ***
*** starting iteration: 2; err: [Inf, 0.2696424784457152, 0.23379258273624587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2696424784457152, 0.23379258273624587, 0.21034307199819335] ***
*** starting iteration: 3; err: [Inf, 0.2696424784457152, 0.23379258273624587, 0.21034307199819335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2696424784457152, 0.23379258273624587, 0.21034307199819335, 0.19973595182354126] ***
*** finished computation of 7 references, err: [Inf, 0.2696424784457152, 0.23379258273624587, 0.21034307199819335, 0.19973595182354126] ***
*** center 1: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 45, 0]]
** centroid: 2, normalized-entropy: 0.9793399259567798, [(1, 32), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [108, 7, 0]]
** centroid: 3, normalized-entropy: 0.33088714061343766, [(1, 108), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 50, 25]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 50), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [87, 15, 0]]
** centroid: 5, normalized-entropy: 0.6024308020404452, [(1, 87), (2, 15)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [37, 83, 0]]
** centroid: 7, normalized-entropy: 0.8912402011913028, [(1, 37), (2, 83)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3060606003993445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3060606003993445, 0.23773298921992067] ***
*** starting iteration: 2; err: [Inf, 0.3060606003993445, 0.23773298921992067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3060606003993445, 0.23773298921992067, 0.23176814101960835] ***
*** starting iteration: 3; err: [Inf, 0.3060606003993445, 0.23773298921992067, 0.23176814101960835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3060606003993445, 0.23773298921992067, 0.23176814101960835, 0.2307321555537029] ***
*** finished computation of 3 references, err: [Inf, 0.3060606003993445, 0.23773298921992067, 0.23176814101960835, 0.2307321555537029] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [235, 20, 0]]
** centroid: 1, normalized-entropy: 0.3966277727783787, [(1, 235), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 189, 20]]
** centroid: 2, normalized-entropy: 0.4551946341118398, [(2, 189), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [152, 50, 0]]
** centroid: 3, normalized-entropy: 0.8073313266519867, [(1, 152), (2, 50)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3945114541899363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3945114541899363, 0.23252334458840038] ***
*** starting iteration: 2; err: [Inf, 0.3945114541899363, 0.23252334458840038] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3945114541899363, 0.23252334458840038, 0.23156316396172927] ***
*** finished computation of 3 references, err: [Inf, 0.3945114541899363, 0.23252334458840038, 0.23156316396172927] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [230, 1, 0]]
** centroid: 1, normalized-entropy: 0.04022215086538088, [(1, 230), (2, 1)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [24, 175, 21]]
** centroid: 2, normalized-entropy: 0.5898029603956245, [(1, 24), (2, 175), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [140, 76, 0]]
** centroid: 3, normalized-entropy: 0.9357110512652843, [(1, 140), (2, 76)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32175253582364327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32175253582364327, 0.24101059055556243] ***
*** starting iteration: 2; err: [Inf, 0.32175253582364327, 0.24101059055556243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32175253582364327, 0.24101059055556243, 0.23460401362855396] ***
*** starting iteration: 3; err: [Inf, 0.32175253582364327, 0.24101059055556243, 0.23460401362855396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32175253582364327, 0.24101059055556243, 0.23460401362855396, 0.23259685823422993] ***
*** finished computation of 3 references, err: [Inf, 0.32175253582364327, 0.24101059055556243, 0.23460401362855396, 0.23259685823422993] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [49, 173, 25]]
** centroid: 1, normalized-entropy: 0.7301385675236568, [(1, 49), (2, 173), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [219, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 78, 0]]
** centroid: 3, normalized-entropy: 0.9635359835770286, [(1, 123), (2, 78)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3547014397129909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3547014397129909, 0.232750116604137] ***
*** starting iteration: 2; err: [Inf, 0.3547014397129909, 0.232750116604137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3547014397129909, 0.232750116604137, 0.22745647137374939] ***
*** starting iteration: 3; err: [Inf, 0.3547014397129909, 0.232750116604137, 0.22745647137374939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3547014397129909, 0.232750116604137, 0.22745647137374939, 0.2260237916941858] ***
*** starting iteration: 4; err: [Inf, 0.3547014397129909, 0.232750116604137, 0.22745647137374939, 0.2260237916941858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3547014397129909, 0.232750116604137, 0.22745647137374939, 0.2260237916941858, 0.22588157479010812] ***
*** finished computation of 3 references, err: [Inf, 0.3547014397129909, 0.232750116604137, 0.22745647137374939, 0.2260237916941858, 0.22588157479010812] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [57, 173, 20]]
** centroid: 1, normalized-entropy: 0.7226469899418959, [(1, 57), (2, 173), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [127, 86, 0]]
** centroid: 2, normalized-entropy: 0.9731052816134181, [(1, 127), (2, 86)]
*** center 3: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30575113409342636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30575113409342636, 0.24232006103716333] ***
*** starting iteration: 2; err: [Inf, 0.30575113409342636, 0.24232006103716333] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30575113409342636, 0.24232006103716333, 0.23445722502635336] ***
*** starting iteration: 3; err: [Inf, 0.30575113409342636, 0.24232006103716333, 0.23445722502635336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30575113409342636, 0.24232006103716333, 0.23445722502635336, 0.23351492933269918] ***
*** finished computation of 3 references, err: [Inf, 0.30575113409342636, 0.24232006103716333, 0.23445722502635336, 0.23351492933269918] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [239, 38, 0]]
** centroid: 1, normalized-entropy: 0.5768164887269678, [(1, 239), (2, 38)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 165, 21]]
** centroid: 2, normalized-entropy: 0.5086113313826895, [(2, 165), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [155, 49, 0]]
** centroid: 3, normalized-entropy: 0.7953661989364367, [(1, 155), (2, 49)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33267886684809544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33267886684809544, 0.2405897867761139] ***
*** starting iteration: 2; err: [Inf, 0.33267886684809544, 0.2405897867761139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33267886684809544, 0.2405897867761139, 0.2342591617072093] ***
*** starting iteration: 3; err: [Inf, 0.33267886684809544, 0.2405897867761139, 0.2342591617072093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33267886684809544, 0.2405897867761139, 0.2342591617072093, 0.23245742902260225] ***
*** starting iteration: 4; err: [Inf, 0.33267886684809544, 0.2405897867761139, 0.2342591617072093, 0.23245742902260225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33267886684809544, 0.2405897867761139, 0.2342591617072093, 0.23245742902260225, 0.23216589065855076] ***
*** finished computation of 3 references, err: [Inf, 0.33267886684809544, 0.2405897867761139, 0.2342591617072093, 0.23245742902260225, 0.23216589065855076] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [52, 165, 25]]
** centroid: 1, normalized-entropy: 0.7519078431958743, [(1, 52), (2, 165), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [121, 86, 0]]
** centroid: 2, normalized-entropy: 0.979278162259681, [(1, 121), (2, 86)]
*** center 3: selecting labels [1] (freq >= 2) [from [218, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3111527927454796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111527927454796, 0.23987791886100093] ***
*** starting iteration: 2; err: [Inf, 0.3111527927454796, 0.23987791886100093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111527927454796, 0.23987791886100093, 0.22911957861623494] ***
*** starting iteration: 3; err: [Inf, 0.3111527927454796, 0.23987791886100093, 0.22911957861623494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111527927454796, 0.23987791886100093, 0.22911957861623494, 0.2262510782381794] ***
*** starting iteration: 4; err: [Inf, 0.3111527927454796, 0.23987791886100093, 0.22911957861623494, 0.2262510782381794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3111527927454796, 0.23987791886100093, 0.22911957861623494, 0.2262510782381794, 0.22588157479010812] ***
*** finished computation of 3 references, err: [Inf, 0.3111527927454796, 0.23987791886100093, 0.22911957861623494, 0.2262510782381794, 0.22588157479010812] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [57, 173, 20]]
** centroid: 1, normalized-entropy: 0.7226469899418959, [(1, 57), (2, 173), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [127, 86, 0]]
** centroid: 2, normalized-entropy: 0.9731052816134181, [(1, 127), (2, 86)]
*** center 3: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3262558142016495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3262558142016495, 0.2454150707881222] ***
*** starting iteration: 2; err: [Inf, 0.3262558142016495, 0.2454150707881222] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3262558142016495, 0.2454150707881222, 0.23598788250684516] ***
*** starting iteration: 3; err: [Inf, 0.3262558142016495, 0.2454150707881222, 0.23598788250684516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3262558142016495, 0.2454150707881222, 0.23598788250684516, 0.23401753591007737] ***
*** starting iteration: 4; err: [Inf, 0.3262558142016495, 0.2454150707881222, 0.23598788250684516, 0.23401753591007737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3262558142016495, 0.2454150707881222, 0.23598788250684516, 0.23401753591007737, 0.23360340583879596] ***
*** finished computation of 3 references, err: [Inf, 0.3262558142016495, 0.2454150707881222, 0.23598788250684516, 0.23401753591007737, 0.23360340583879596] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [86, 141, 20]]
** centroid: 1, normalized-entropy: 0.8109430412304817, [(1, 86), (2, 141), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [103, 111, 1]]
** centroid: 2, normalized-entropy: 0.9989916804911784, [(1, 103), (2, 111)]
*** center 3: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31021357377965947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31021357377965947, 0.24400306663670016] ***
*** starting iteration: 2; err: [Inf, 0.31021357377965947, 0.24400306663670016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31021357377965947, 0.24400306663670016, 0.2355069244277665] ***
*** starting iteration: 3; err: [Inf, 0.31021357377965947, 0.24400306663670016, 0.2355069244277665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31021357377965947, 0.24400306663670016, 0.2355069244277665, 0.23276483396003986] ***
*** starting iteration: 4; err: [Inf, 0.31021357377965947, 0.24400306663670016, 0.2355069244277665, 0.23276483396003986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31021357377965947, 0.24400306663670016, 0.2355069244277665, 0.23276483396003986, 0.23219093290119916] ***
*** finished computation of 3 references, err: [Inf, 0.31021357377965947, 0.24400306663670016, 0.2355069244277665, 0.23276483396003986, 0.23219093290119916] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [49, 167, 25]]
** centroid: 1, normalized-entropy: 0.7401264836229261, [(1, 49), (2, 167), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [221, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 84, 0]]
** centroid: 3, normalized-entropy: 0.9763722203657299, [(1, 121), (2, 84)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 11)
[0.9349918781056505, 0.918007828187469, 0.9109888331445218, 0.8779677881474289, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 12
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.19173888003089334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19173888003089334, 0.16145275953937568] ***
*** finished computation of 7 references, err: [Inf, 0.19173888003089334, 0.16145275953937568] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 124, 20]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(2, 124), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 4, 0]]
** centroid: 3, normalized-entropy: 0.24793583772272637, [(1, 93), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [10, 80, 0]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(1, 10), (2, 80)]
*** center 5: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [99, 50, 0]]
** centroid: 6, normalized-entropy: 0.9205167427667414, [(1, 99), (2, 50)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.289613375337962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.289613375337962, 0.17692966575314034] ***
*** finished computation of 7 references, err: [Inf, 0.289613375337962, 0.17692966575314034] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [99, 2, 0]]
** centroid: 2, normalized-entropy: 0.1403272709905931, [(1, 99), (2, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [26, 129, 11]]
** centroid: 3, normalized-entropy: 0.6063882933824084, [(1, 26), (2, 129), (3, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [100, 14, 0]]
** centroid: 4, normalized-entropy: 0.5373760853377334, [(1, 100), (2, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 2) [from [34, 107, 10]]
** centroid: 7, normalized-entropy: 0.691386740108662, [(1, 34), (2, 107), (3, 10)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.17905479767171295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17905479767171295, 0.14751655227159788] ***
*** finished computation of 7 references, err: [Inf, 0.17905479767171295, 0.14751655227159788] ***
*** center 1: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 29, 0]]
** centroid: 3, normalized-entropy: 0.857558799850773, [(1, 74), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 39, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 78), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 84, 0]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(1, 6), (2, 84)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 90, 25]]
** centroid: 6, normalized-entropy: 0.7553754125614286, [(2, 90), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 9, 0]]
** centroid: 7, normalized-entropy: 0.5858732928619204, [(1, 55), (2, 9)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9349918781056505, 0.918007828187469, 0.9109888331445218, 0.8959708211205216, 0.8779677881474289, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 12
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9349918781056505, 0.918007828187469, 0.9109888331445218, 0.8959708211205216, 0.8779677881474289, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 12
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9349918781056505, 0.918007828187469, 0.9109888331445218, 0.8959708211205216, 0.8779677881474289, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 13
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.29036281793028695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29036281793028695, 0.27859166636503674] ***
*** finished computation of 3 references, err: [Inf, 0.29036281793028695, 0.27859166636503674] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [50, 254, 20]]
** centroid: 1, normalized-entropy: 0.5926730536026896, [(1, 50), (2, 254), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [263, 5, 0]]
** centroid: 3, normalized-entropy: 0.13383047904615933, [(1, 263), (2, 5)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.294330826148913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.294330826148913, 0.2441467551215701] ***
*** finished computation of 3 references, err: [Inf, 0.294330826148913, 0.2441467551215701] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [180, 50, 0]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(1, 180), (2, 50)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 164, 21]]
** centroid: 2, normalized-entropy: 0.5104236516745839, [(2, 164), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [214, 38, 0]]
** centroid: 3, normalized-entropy: 0.6118228576241159, [(1, 214), (2, 38)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28216319264232487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28216319264232487, 0.23532482216796508] ***
*** finished computation of 3 references, err: [Inf, 0.28216319264232487, 0.23532482216796508] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [46, 192, 25]]
** centroid: 1, normalized-entropy: 0.6902866635729923, [(1, 46), (2, 192), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [115, 59, 0]]
** centroid: 2, normalized-entropy: 0.9239360488892353, [(1, 115), (2, 59)]
*** center 3: selecting labels [1] (freq >= 2) [from [230, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9349918781056505, 0.918007828187469, 0.9109888331445218, 0.8959708211205216, 0.8779677881474289, 0.8759867652083221, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 14
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.4328134682850336] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4328134682850336, 0.2939799587233915] ***
*** starting iteration: 2; err: [Inf, 0.4328134682850336, 0.2939799587233915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4328134682850336, 0.2939799587233915, 0.2885444389649893] ***
*** starting iteration: 3; err: [Inf, 0.4328134682850336, 0.2939799587233915, 0.2885444389649893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4328134682850336, 0.2939799587233915, 0.2885444389649893, 0.28729699713502405] ***
*** starting iteration: 4; err: [Inf, 0.4328134682850336, 0.2939799587233915, 0.2885444389649893, 0.28729699713502405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4328134682850336, 0.2939799587233915, 0.2885444389649893, 0.28729699713502405, 0.28707687585690134] ***
*** finished computation of 3 references, err: [Inf, 0.4328134682850336, 0.2939799587233915, 0.2885444389649893, 0.28729699713502405, 0.28707687585690134] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [54, 175, 20]]
** centroid: 1, normalized-entropy: 0.711699022871417, [(1, 54), (2, 175), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [127, 84, 0]]
** centroid: 3, normalized-entropy: 0.9698308534774176, [(1, 127), (2, 84)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3981352576530766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3981352576530766, 0.3015845483043294] ***
*** starting iteration: 2; err: [Inf, 0.3981352576530766, 0.3015845483043294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3981352576530766, 0.3015845483043294, 0.29763727478202673] ***
*** starting iteration: 3; err: [Inf, 0.3981352576530766, 0.3015845483043294, 0.29763727478202673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3981352576530766, 0.3015845483043294, 0.29763727478202673, 0.2967036913848598] ***
*** finished computation of 3 references, err: [Inf, 0.3981352576530766, 0.3015845483043294, 0.29763727478202673, 0.2967036913848598] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [84, 158, 21]]
** centroid: 1, normalized-entropy: 0.7941678495158129, [(1, 84), (2, 158), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [102, 94, 0]]
** centroid: 2, normalized-entropy: 0.9987979209581141, [(1, 102), (2, 94)]
*** center 3: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4847180350827447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4847180350827447, 0.3036344483511514] ***
*** starting iteration: 2; err: [Inf, 0.4847180350827447, 0.3036344483511514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4847180350827447, 0.3036344483511514, 0.2981187687541681] ***
*** starting iteration: 3; err: [Inf, 0.4847180350827447, 0.3036344483511514, 0.2981187687541681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4847180350827447, 0.3036344483511514, 0.2981187687541681, 0.2959559794509786] ***
*** starting iteration: 4; err: [Inf, 0.4847180350827447, 0.3036344483511514, 0.2981187687541681, 0.2959559794509786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4847180350827447, 0.3036344483511514, 0.2981187687541681, 0.2959559794509786, 0.29561342960265447] ***
*** finished computation of 3 references, err: [Inf, 0.4847180350827447, 0.3036344483511514, 0.2981187687541681, 0.2959559794509786, 0.29561342960265447] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [57, 157, 25]]
** centroid: 1, normalized-entropy: 0.7773914475839544, [(1, 57), (2, 157), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [112, 94, 0]]
** centroid: 2, normalized-entropy: 0.994485462483463, [(1, 112), (2, 94)]
*** center 3: selecting labels [1] (freq >= 2) [from [222, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9349918781056505, 0.918007828187469, 0.9109888331445218, 0.9060048072024119, 0.8959708211205216, 0.8779677881474289, 0.8759867652083221, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 15
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.25461673750905683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25461673750905683, 0.21706860170450745] ***
*** starting iteration: 2; err: [Inf, 0.25461673750905683, 0.21706860170450745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105] ***
*** starting iteration: 3; err: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705] ***
*** starting iteration: 4; err: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705, 0.19079740409314208] ***
*** starting iteration: 5; err: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705, 0.19079740409314208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705, 0.19079740409314208, 0.1871299542089527] ***
*** starting iteration: 6; err: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705, 0.19079740409314208, 0.1871299542089527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705, 0.19079740409314208, 0.1871299542089527, 0.18642542274198956] ***
*** finished computation of 7 references, err: [Inf, 0.25461673750905683, 0.21706860170450745, 0.20855962700216105, 0.19747251498529705, 0.19079740409314208, 0.1871299542089527, 0.18642542274198956] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 90, 0]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(1, 18), (2, 90)]
*** center 2: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 26, 0]]
** centroid: 4, normalized-entropy: 0.8548640967818041, [(1, 67), (2, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 102, 20]]
** centroid: 6, normalized-entropy: 0.6436394131461666, [(2, 102), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 41, 0]]
** centroid: 7, normalized-entropy: 0.995533068899466, [(1, 48), (2, 41)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27755375595964393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27755375595964393, 0.20781413481237068] ***
*** starting iteration: 2; err: [Inf, 0.27755375595964393, 0.20781413481237068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27755375595964393, 0.20781413481237068, 0.19902075487056348] ***
*** starting iteration: 3; err: [Inf, 0.27755375595964393, 0.20781413481237068, 0.19902075487056348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27755375595964393, 0.20781413481237068, 0.19902075487056348, 0.19670348584853012] ***
*** starting iteration: 4; err: [Inf, 0.27755375595964393, 0.20781413481237068, 0.19902075487056348, 0.19670348584853012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27755375595964393, 0.20781413481237068, 0.19902075487056348, 0.19670348584853012, 0.19607348019477802] ***
*** finished computation of 7 references, err: [Inf, 0.27755375595964393, 0.20781413481237068, 0.19902075487056348, 0.19670348584853012, 0.19607348019477802] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 77, 0]]
** centroid: 1, normalized-entropy: 0.6415410585827175, [(1, 15), (2, 77)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 49, 20]]
** centroid: 2, normalized-entropy: 0.868533960265235, [(2, 49), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 57, 0]]
** centroid: 3, normalized-entropy: 0.9562452501523095, [(1, 94), (2, 57)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 57, 1]]
** centroid: 4, normalized-entropy: 0.12565805017256745, [(2, 57), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 12, 0]]
** centroid: 6, normalized-entropy: 0.5705411428522262, [(1, 77), (2, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24343341439711055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736] ***
*** starting iteration: 2; err: [Inf, 0.24343341439711055, 0.1990425395995736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496] ***
*** starting iteration: 3; err: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166] ***
*** starting iteration: 4; err: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538] ***
*** starting iteration: 5; err: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538, 0.19073760891793998] ***
*** starting iteration: 6; err: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538, 0.19073760891793998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538, 0.19073760891793998, 0.1895126290745039] ***
*** starting iteration: 7; err: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538, 0.19073760891793998, 0.1895126290745039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538, 0.19073760891793998, 0.1895126290745039, 0.18883368112858961] ***
*** finished computation of 7 references, err: [Inf, 0.24343341439711055, 0.1990425395995736, 0.1957463118620496, 0.19346030665257166, 0.19188674711908538, 0.19073760891793998, 0.1895126290745039, 0.18883368112858961] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 29, 0]]
** centroid: 1, normalized-entropy: 0.8914467590654126, [(1, 65), (2, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 87, 1]]
** centroid: 2, normalized-entropy: 0.08970338978685011, [(2, 87), (3, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 37, 0]]
** centroid: 3, normalized-entropy: 0.9897525351939971, [(1, 47), (2, 37)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 74, 24]]
** centroid: 4, normalized-entropy: 0.8030909760146977, [(2, 74), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 23, 0]]
** centroid: 5, normalized-entropy: 0.8027381019527042, [(1, 71), (2, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [105, 1, 0]]
** centroid: 6, normalized-entropy: 0.07701687574298331, [(1, 105), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9349918781056505, 0.9309908711106316, 0.918007828187469, 0.9109888331445218, 0.9060048072024119, 0.8959708211205216, 0.8779677881474289, 0.8759867652083221, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 15
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9349918781056505, 0.9309908711106316, 0.918007828187469, 0.9109888331445218, 0.9060048072024119, 0.8959708211205216, 0.8779677881474289, 0.8759867652083221, 0.8729927532322742, 0.8710506914099728, 0.8690067312821803, 0.8539917162671653, 0.8430256603909299, 0.7910065754377132, 0.756966547385709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349918781056505
finished with 16
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.47424397671416224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47424397671416224, 0.33628340086175335] ***
*** starting iteration: 2; err: [Inf, 0.47424397671416224, 0.33628340086175335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47424397671416224, 0.33628340086175335, 0.3346159003518365] ***
*** starting iteration: 3; err: [Inf, 0.47424397671416224, 0.33628340086175335, 0.3346159003518365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47424397671416224, 0.33628340086175335, 0.3346159003518365, 0.3340876478276722] ***
*** finished computation of 3 references, err: [Inf, 0.47424397671416224, 0.33628340086175335, 0.3346159003518365, 0.3340876478276722] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [176, 6, 0]]
** centroid: 1, normalized-entropy: 0.20905980566852464, [(1, 176), (2, 6)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [81, 153, 20]]
** centroid: 2, normalized-entropy: 0.7918395899148075, [(1, 81), (2, 153), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [130, 100, 0]]
** centroid: 3, normalized-entropy: 0.9876925088958032, [(1, 130), (2, 100)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35091196547221876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35091196547221876, 0.29956425232966355] ***
*** starting iteration: 2; err: [Inf, 0.35091196547221876, 0.29956425232966355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35091196547221876, 0.29956425232966355, 0.29674542147939886] ***
*** starting iteration: 3; err: [Inf, 0.35091196547221876, 0.29956425232966355, 0.29674542147939886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35091196547221876, 0.29956425232966355, 0.29674542147939886, 0.29655788809052674] ***
*** finished computation of 3 references, err: [Inf, 0.35091196547221876, 0.29956425232966355, 0.29674542147939886, 0.29655788809052674] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [58, 149, 21]]
** centroid: 1, normalized-entropy: 0.7699591374978472, [(1, 58), (2, 149), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 103, 0]]
** centroid: 2, normalized-entropy: 0.9997382707861502, [(1, 107), (2, 103)]
*** center 3: selecting labels [1] (freq >= 2) [from [229, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.47014874182473954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47014874182473954, 0.34778447422398623] ***
*** starting iteration: 2; err: [Inf, 0.47014874182473954, 0.34778447422398623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359] ***
*** starting iteration: 3; err: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359, 0.2987243311090124] ***
*** starting iteration: 4; err: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359, 0.2987243311090124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359, 0.2987243311090124, 0.29623985688329146] ***
*** starting iteration: 5; err: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359, 0.2987243311090124, 0.29623985688329146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359, 0.2987243311090124, 0.29623985688329146, 0.29566285392545955] ***
*** finished computation of 3 references, err: [Inf, 0.47014874182473954, 0.34778447422398623, 0.3078284077709359, 0.2987243311090124, 0.29623985688329146, 0.29566285392545955] ***
*** center 1: selecting labels [1] (freq >= 2) [from [222, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [57, 157, 25]]
** centroid: 2, normalized-entropy: 0.7773914475839544, [(1, 57), (2, 157), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [112, 94, 0]]
** centroid: 3, normalized-entropy: 0.994485462483463, [(1, 112), (2, 94)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.19863959150621668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863959150621668, 0.15444959129928612] ***
*** starting iteration: 2; err: [Inf, 0.19863959150621668, 0.15444959129928612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863959150621668, 0.15444959129928612, 0.1487438711654395] ***
*** starting iteration: 3; err: [Inf, 0.19863959150621668, 0.15444959129928612, 0.1487438711654395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863959150621668, 0.15444959129928612, 0.1487438711654395, 0.147002117135562] ***
*** starting iteration: 4; err: [Inf, 0.19863959150621668, 0.15444959129928612, 0.1487438711654395, 0.147002117135562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863959150621668, 0.15444959129928612, 0.1487438711654395, 0.147002117135562, 0.14624273312371225] ***
*** finished computation of 7 references, err: [Inf, 0.19863959150621668, 0.15444959129928612, 0.1487438711654395, 0.147002117135562, 0.14624273312371225] ***
*** center 1: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 128, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 128, 33]]
** centroid: 3, normalized-entropy: 0.7317553505442508, [(2, 128), (3, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [109, 28, 0]]
** centroid: 4, normalized-entropy: 0.7306012127539728, [(1, 109), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [127, 51, 0]]
** centroid: 5, normalized-entropy: 0.8641792306258844, [(1, 127), (2, 51)]
*** center 6: selecting labels [1] (freq >= 1) [from [130, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [99, 46, 0]]
** centroid: 7, normalized-entropy: 0.9013562943838728, [(1, 99), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2617471919693053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617471919693053, 0.17888861860893668] ***
*** starting iteration: 2; err: [Inf, 0.2617471919693053, 0.17888861860893668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767] ***
*** starting iteration: 3; err: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767, 0.1556582726277411] ***
*** starting iteration: 4; err: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767, 0.1556582726277411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767, 0.1556582726277411, 0.15434693041071296] ***
*** starting iteration: 5; err: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767, 0.1556582726277411, 0.15434693041071296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767, 0.1556582726277411, 0.15434693041071296, 0.15363615862093866] ***
*** finished computation of 7 references, err: [Inf, 0.2617471919693053, 0.17888861860893668, 0.16167580419033767, 0.1556582726277411, 0.15434693041071296, 0.15363615862093866] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 68, 0]]
** centroid: 1, normalized-entropy: 0.9552751009754172, [(1, 41), (2, 68)]
*** center 2: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 15, 0]]
** centroid: 5, normalized-entropy: 0.8314743880097292, [(1, 42), (2, 15)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 76, 18]]
** centroid: 6, normalized-entropy: 0.7045767128725937, [(2, 76), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [30, 27, 0]]
** centroid: 7, normalized-entropy: 0.9980008838722993, [(1, 30), (2, 27)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21505457069352268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21505457069352268, 0.17373599755484612] ***
*** starting iteration: 2; err: [Inf, 0.21505457069352268, 0.17373599755484612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299] ***
*** starting iteration: 3; err: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437] ***
*** starting iteration: 4; err: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437, 0.15165456541627645] ***
*** starting iteration: 5; err: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437, 0.15165456541627645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437, 0.15165456541627645, 0.1502781547680497] ***
*** starting iteration: 6; err: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437, 0.15165456541627645, 0.1502781547680497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437, 0.15165456541627645, 0.1502781547680497, 0.14956343012303114] ***
*** finished computation of 7 references, err: [Inf, 0.21505457069352268, 0.17373599755484612, 0.16270447869552299, 0.15457415281422437, 0.15165456541627645, 0.1502781547680497, 0.14956343012303114] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [52, 8, 0]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(1, 52), (2, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [76, 4, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 76), (2, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 52, 16]]
** centroid: 5, normalized-entropy: 0.787126586201269, [(2, 52), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [31, 61, 0]]
** centroid: 6, normalized-entropy: 0.9218764863469129, [(1, 31), (2, 61)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 67, 0]]
** centroid: 7, normalized-entropy: 0.11058084476988722, [(1, 1), (2, 67)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20808382231323047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042] ***
*** starting iteration: 2; err: [Inf, 0.20808382231323047, 0.16570944835199042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938] ***
*** starting iteration: 3; err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363] ***
*** starting iteration: 4; err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383] ***
*** starting iteration: 5; err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895] ***
*** starting iteration: 6; err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895, 0.14695811203308404] ***
*** starting iteration: 7; err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895, 0.14695811203308404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895, 0.14695811203308404, 0.14577840215619653] ***
*** starting iteration: 8; err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895, 0.14695811203308404, 0.14577840215619653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895, 0.14695811203308404, 0.14577840215619653, 0.14523673837818205] ***
*** finished computation of 7 references, err: [Inf, 0.20808382231323047, 0.16570944835199042, 0.15802886148029938, 0.15376686094049363, 0.15099136584438383, 0.14880129235982895, 0.14695811203308404, 0.14577840215619653, 0.14523673837818205] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 46, 0]]
** centroid: 3, normalized-entropy: 0.9991802351145687, [(1, 43), (2, 46)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [76, 10, 0]]
** centroid: 4, normalized-entropy: 0.5185697317883058, [(1, 76), (2, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 22, 0]]
** centroid: 6, normalized-entropy: 0.8390040613676978, [(1, 60), (2, 22)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 52, 16]]
** centroid: 7, normalized-entropy: 0.787126586201269, [(2, 52), (3, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21053940793685616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21053940793685616, 0.16187440274935216] ***
*** starting iteration: 2; err: [Inf, 0.21053940793685616, 0.16187440274935216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21053940793685616, 0.16187440274935216, 0.15003028580732644] ***
*** starting iteration: 3; err: [Inf, 0.21053940793685616, 0.16187440274935216, 0.15003028580732644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21053940793685616, 0.16187440274935216, 0.15003028580732644, 0.1470599982254207] ***
*** starting iteration: 4; err: [Inf, 0.21053940793685616, 0.16187440274935216, 0.15003028580732644, 0.1470599982254207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21053940793685616, 0.16187440274935216, 0.15003028580732644, 0.1470599982254207, 0.146750527263619] ***
*** finished computation of 7 references, err: [Inf, 0.21053940793685616, 0.16187440274935216, 0.15003028580732644, 0.1470599982254207, 0.146750527263619] ***
*** center 1: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 17]]
** centroid: 2, normalized-entropy: 0.9681647320759545, [(2, 26), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [72, 20, 0]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(1, 72), (2, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [13, 71, 0]]
** centroid: 5, normalized-entropy: 0.6216297820565386, [(1, 13), (2, 71)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 15, 0]]
** centroid: 7, normalized-entropy: 0.7382848661434506, [(1, 57), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2085255794627592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2085255794627592, 0.16415713906660676] ***
*** starting iteration: 2; err: [Inf, 0.2085255794627592, 0.16415713906660676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2085255794627592, 0.16415713906660676, 0.14604905409738422] ***
*** starting iteration: 3; err: [Inf, 0.2085255794627592, 0.16415713906660676, 0.14604905409738422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2085255794627592, 0.16415713906660676, 0.14604905409738422, 0.14426265780534595] ***
*** starting iteration: 4; err: [Inf, 0.2085255794627592, 0.16415713906660676, 0.14604905409738422, 0.14426265780534595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2085255794627592, 0.16415713906660676, 0.14604905409738422, 0.14426265780534595, 0.14386272483877838] ***
*** finished computation of 7 references, err: [Inf, 0.2085255794627592, 0.16415713906660676, 0.14604905409738422, 0.14426265780534595, 0.14386272483877838] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 56, 15]]
** centroid: 1, normalized-entropy: 0.743898745288434, [(2, 56), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 4, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 17, 0]]
** centroid: 4, normalized-entropy: 0.7615877869576693, [(1, 60), (2, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [33, 43, 0]]
** centroid: 6, normalized-entropy: 0.9874750082985965, [(1, 33), (2, 43)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21932192273368128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21932192273368128, 0.16488772690761835] ***
*** starting iteration: 2; err: [Inf, 0.21932192273368128, 0.16488772690761835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522] ***
*** starting iteration: 3; err: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986] ***
*** starting iteration: 4; err: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986, 0.15235268351156264] ***
*** starting iteration: 5; err: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986, 0.15235268351156264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986, 0.15235268351156264, 0.1507345199068077] ***
*** starting iteration: 6; err: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986, 0.15235268351156264, 0.1507345199068077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986, 0.15235268351156264, 0.1507345199068077, 0.1498366820551455] ***
*** finished computation of 7 references, err: [Inf, 0.21932192273368128, 0.16488772690761835, 0.15707029392756522, 0.15447492765448986, 0.15235268351156264, 0.1507345199068077, 0.1498366820551455] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 13, 0]]
** centroid: 1, normalized-entropy: 0.6868088934028034, [(1, 58), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 17]]
** centroid: 2, normalized-entropy: 0.7564041945982506, [(2, 61), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 6, 0]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(1, 52), (2, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 62, 0]]
** centroid: 5, normalized-entropy: 0.5127091420308771, [(1, 8), (2, 62)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 62, 0]]
** centroid: 7, normalized-entropy: 0.47357292491745173, [(1, 7), (2, 62)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22817449292913078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897] ***
*** starting iteration: 2; err: [Inf, 0.22817449292913078, 0.17419874065741897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929] ***
*** starting iteration: 3; err: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005] ***
*** starting iteration: 4; err: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756] ***
*** starting iteration: 5; err: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756, 0.14969063241966069] ***
*** starting iteration: 6; err: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756, 0.14969063241966069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756, 0.14969063241966069, 0.14868917570263146] ***
*** starting iteration: 7; err: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756, 0.14969063241966069, 0.14868917570263146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756, 0.14969063241966069, 0.14868917570263146, 0.14800826402567327] ***
*** finished computation of 7 references, err: [Inf, 0.22817449292913078, 0.17419874065741897, 0.15922238582558929, 0.15423740957072005, 0.15129284777119756, 0.14969063241966069, 0.14868917570263146, 0.14800826402567327] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [2, 64, 0]]
** centroid: 1, normalized-entropy: 0.19590927087360496, [(1, 2), (2, 64)]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 41, 0]]
** centroid: 3, normalized-entropy: 0.9765004687578239, [(1, 59), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 10, 0]]
** centroid: 4, normalized-entropy: 0.7300166301457938, [(1, 39), (2, 10)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 82, 16]]
** centroid: 5, normalized-entropy: 0.6420642892306891, [(2, 82), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [75, 1, 0]]
** centroid: 6, normalized-entropy: 0.10106696361212422, [(1, 75), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18276004809513688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18276004809513688, 0.15450470195524393] ***
*** starting iteration: 2; err: [Inf, 0.18276004809513688, 0.15450470195524393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048] ***
*** starting iteration: 3; err: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835] ***
*** starting iteration: 4; err: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835, 0.14866312879137694] ***
*** starting iteration: 5; err: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835, 0.14866312879137694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835, 0.14866312879137694, 0.14685848186025396] ***
*** starting iteration: 6; err: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835, 0.14866312879137694, 0.14685848186025396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835, 0.14866312879137694, 0.14685848186025396, 0.14619760961737482] ***
*** finished computation of 7 references, err: [Inf, 0.18276004809513688, 0.15450470195524393, 0.1516449069865048, 0.149985256889835, 0.14866312879137694, 0.14685848186025396, 0.14619760961737482] ***
*** center 1: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 62, 22]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 62), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 15, 0]]
** centroid: 3, normalized-entropy: 0.7671903206448686, [(1, 52), (2, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [61, 34, 0]]
** centroid: 6, normalized-entropy: 0.9409217747114994, [(1, 61), (2, 34)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 15, 0]]
** centroid: 7, normalized-entropy: 0.7671903206448686, [(1, 52), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2166041756607592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795] ***
*** starting iteration: 2; err: [Inf, 0.2166041756607592, 0.1818148696012795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038] ***
*** starting iteration: 3; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737] ***
*** starting iteration: 4; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842] ***
*** starting iteration: 5; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287] ***
*** starting iteration: 6; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474] ***
*** starting iteration: 7; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254] ***
*** starting iteration: 8; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254, 0.14707604239322244] ***
*** starting iteration: 9; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254, 0.14707604239322244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254, 0.14707604239322244, 0.14556823130883276] ***
*** starting iteration: 10; err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254, 0.14707604239322244, 0.14556823130883276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254, 0.14707604239322244, 0.14556823130883276, 0.1441353361941874] ***
*** finished computation of 7 references, err: [Inf, 0.2166041756607592, 0.1818148696012795, 0.1630730330646038, 0.15621741194091737, 0.1524734974661842, 0.15065639379434287, 0.1496178289372474, 0.14857737963367254, 0.14707604239322244, 0.14556823130883276, 0.1441353361941874] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 53, 0]]
** centroid: 1, normalized-entropy: 0.36657801255334593, [(1, 4), (2, 53)]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 16, 0]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(1, 56), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [24, 68, 0]]
** centroid: 5, normalized-entropy: 0.828055725379504, [(1, 24), (2, 68)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 54, 21]]
** centroid: 7, normalized-entropy: 0.8554508105601307, [(2, 54), (3, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20296830016188325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296830016188325, 0.16140630203997716] ***
*** starting iteration: 2; err: [Inf, 0.20296830016188325, 0.16140630203997716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275] ***
*** starting iteration: 3; err: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757] ***
*** starting iteration: 4; err: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757, 0.15698772107437253] ***
*** starting iteration: 5; err: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757, 0.15698772107437253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757, 0.15698772107437253, 0.15550225235894322] ***
*** starting iteration: 6; err: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757, 0.15698772107437253, 0.15550225235894322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757, 0.15698772107437253, 0.15550225235894322, 0.15453266408108174] ***
*** finished computation of 7 references, err: [Inf, 0.20296830016188325, 0.16140630203997716, 0.15903560655005275, 0.15802680769236757, 0.15698772107437253, 0.15550225235894322, 0.15453266408108174] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 38, 0]]
** centroid: 2, normalized-entropy: 0.9633355456726842, [(1, 60), (2, 38)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 72, 21]]
** centroid: 3, normalized-entropy: 0.7706290693639406, [(2, 72), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [3, 49, 0]]
** centroid: 4, normalized-entropy: 0.3182152976832332, [(1, 3), (2, 49)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 37, 0]]
** centroid: 5, normalized-entropy: 0.9893755831922303, [(1, 29), (2, 37)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1967874809168279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967874809168279, 0.14896600640192628] ***
*** starting iteration: 2; err: [Inf, 0.1967874809168279, 0.14896600640192628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967874809168279, 0.14896600640192628, 0.14756056224554778] ***
*** starting iteration: 3; err: [Inf, 0.1967874809168279, 0.14896600640192628, 0.14756056224554778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967874809168279, 0.14896600640192628, 0.14756056224554778, 0.1473288275729865] ***
*** finished computation of 7 references, err: [Inf, 0.1967874809168279, 0.14896600640192628, 0.14756056224554778, 0.1473288275729865] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [15, 43, 0]]
** centroid: 2, normalized-entropy: 0.8246578332945033, [(1, 15), (2, 43)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 47, 0]]
** centroid: 3, normalized-entropy: 0.9999165959739288, [(1, 46), (2, 47)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [10, 35, 0]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(1, 10), (2, 35)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 62, 14]]
** centroid: 5, normalized-entropy: 0.6892019851173655, [(2, 62), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19743907201196997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743907201196997, 0.1578005831092596] ***
*** starting iteration: 2; err: [Inf, 0.19743907201196997, 0.1578005831092596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952] ***
*** starting iteration: 3; err: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952, 0.1449438683129847] ***
*** starting iteration: 4; err: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952, 0.1449438683129847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952, 0.1449438683129847, 0.14355030255950987] ***
*** starting iteration: 5; err: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952, 0.1449438683129847, 0.14355030255950987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952, 0.1449438683129847, 0.14355030255950987, 0.14326449365355073] ***
*** finished computation of 7 references, err: [Inf, 0.19743907201196997, 0.1578005831092596, 0.14894803868792952, 0.1449438683129847, 0.14355030255950987, 0.14326449365355073] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [37, 49, 0]]
** centroid: 2, normalized-entropy: 0.985909442028652, [(1, 37), (2, 49)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 73, 14]]
** centroid: 3, normalized-entropy: 0.6365048555378351, [(2, 73), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 25, 0]]
** centroid: 5, normalized-entropy: 0.9728063221185002, [(1, 37), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [29, 45, 0]]
** centroid: 6, normalized-entropy: 0.966009606256856, [(1, 29), (2, 45)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3147503008842468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579] ***
*** starting iteration: 2; err: [Inf, 0.3147503008842468, 0.1900165027724579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518] ***
*** starting iteration: 3; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153] ***
*** starting iteration: 4; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106] ***
*** starting iteration: 5; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112] ***
*** starting iteration: 6; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264] ***
*** starting iteration: 7; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264, 0.15094428067654372] ***
*** starting iteration: 8; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264, 0.15094428067654372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264, 0.15094428067654372, 0.1496365350242704] ***
*** starting iteration: 9; err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264, 0.15094428067654372, 0.1496365350242704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264, 0.15094428067654372, 0.1496365350242704, 0.14906117885559797] ***
*** finished computation of 7 references, err: [Inf, 0.3147503008842468, 0.1900165027724579, 0.1805127652734518, 0.17478165940428153, 0.1678634467665106, 0.1576341008786112, 0.15297486872412264, 0.15094428067654372, 0.1496365350242704, 0.14906117885559797] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 14, 0]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(1, 68), (2, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 32, 0]]
** centroid: 3, normalized-entropy: 0.9992492479956566, [(1, 30), (2, 32)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 67, 23]]
** centroid: 4, normalized-entropy: 0.8199653102187632, [(2, 67), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [41, 57, 0]]
** centroid: 5, normalized-entropy: 0.9806857319036603, [(1, 41), (2, 57)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20532099831476808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20532099831476808, 0.16452083677612245] ***
*** starting iteration: 2; err: [Inf, 0.20532099831476808, 0.16452083677612245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20532099831476808, 0.16452083677612245, 0.15931599704548716] ***
*** starting iteration: 3; err: [Inf, 0.20532099831476808, 0.16452083677612245, 0.15931599704548716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20532099831476808, 0.16452083677612245, 0.15931599704548716, 0.15642612627800553] ***
*** starting iteration: 4; err: [Inf, 0.20532099831476808, 0.16452083677612245, 0.15931599704548716, 0.15642612627800553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20532099831476808, 0.16452083677612245, 0.15931599704548716, 0.15642612627800553, 0.15547910513728858] ***
*** finished computation of 7 references, err: [Inf, 0.20532099831476808, 0.16452083677612245, 0.15931599704548716, 0.15642612627800553, 0.15547910513728858] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 54, 0]]
** centroid: 3, normalized-entropy: 0.9097361225311661, [(1, 26), (2, 54)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 54, 19]]
** centroid: 4, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 63, 0]]
** centroid: 5, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [44, 5, 0]]
** centroid: 6, normalized-entropy: 0.47543164626872053, [(1, 44), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 23, 0]]
** centroid: 7, normalized-entropy: 0.8749315876677922, [(1, 55), (2, 23)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20694524199329317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173] ***
*** starting iteration: 2; err: [Inf, 0.20694524199329317, 0.17050639904104173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148] ***
*** starting iteration: 3; err: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324] ***
*** starting iteration: 4; err: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195] ***
*** starting iteration: 5; err: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195, 0.14788154409825802] ***
*** starting iteration: 6; err: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195, 0.14788154409825802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195, 0.14788154409825802, 0.146513006397523] ***
*** starting iteration: 7; err: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195, 0.14788154409825802, 0.146513006397523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195, 0.14788154409825802, 0.146513006397523, 0.14623671663110144] ***
*** finished computation of 7 references, err: [Inf, 0.20694524199329317, 0.17050639904104173, 0.1620798479691148, 0.15620053326897324, 0.15227934489399195, 0.14788154409825802, 0.146513006397523, 0.14623671663110144] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 57, 17]]
** centroid: 1, normalized-entropy: 0.77753986416076, [(2, 57), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 61, 0]]
** centroid: 2, normalized-entropy: 0.9409217747114994, [(1, 34), (2, 61)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 27, 0]]
** centroid: 3, normalized-entropy: 0.9990797181805819, [(1, 29), (2, 27)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 50, 0]]
** centroid: 5, normalized-entropy: 0.8989377852081333, [(1, 23), (2, 50)]
*** center 6: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20894538641907276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20894538641907276, 0.15538263599481433] ***
*** starting iteration: 2; err: [Inf, 0.20894538641907276, 0.15538263599481433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067] ***
*** starting iteration: 3; err: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067, 0.14367778764106334] ***
*** starting iteration: 4; err: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067, 0.14367778764106334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067, 0.14367778764106334, 0.14252131683379413] ***
*** starting iteration: 5; err: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067, 0.14367778764106334, 0.14252131683379413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067, 0.14367778764106334, 0.14252131683379413, 0.14237134350836278] ***
*** finished computation of 7 references, err: [Inf, 0.20894538641907276, 0.15538263599481433, 0.14613071198482067, 0.14367778764106334, 0.14252131683379413, 0.14237134350836278] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [28, 46, 0]]
** centroid: 2, normalized-entropy: 0.9568886656798214, [(1, 28), (2, 46)]
*** center 3: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 29, 0]]
** centroid: 4, normalized-entropy: 0.9815886212101388, [(1, 40), (2, 29)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 12]]
** centroid: 5, normalized-entropy: 0.6609623351442084, [(2, 58), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 8, 0]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(1, 56), (2, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19313396860240029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19313396860240029, 0.15417389424983413] ***
*** starting iteration: 2; err: [Inf, 0.19313396860240029, 0.15417389424983413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064] ***
*** starting iteration: 3; err: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064, 0.14808493892243133] ***
*** starting iteration: 4; err: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064, 0.14808493892243133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064, 0.14808493892243133, 0.1470827095489949] ***
*** starting iteration: 5; err: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064, 0.14808493892243133, 0.1470827095489949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064, 0.14808493892243133, 0.1470827095489949, 0.1465153187531978] ***
*** finished computation of 7 references, err: [Inf, 0.19313396860240029, 0.15417389424983413, 0.14982686895132064, 0.14808493892243133, 0.1470827095489949, 0.1465153187531978] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 21, 0]]
** centroid: 5, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 51, 15]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(2, 51), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [33, 52, 0]]
** centroid: 7, normalized-entropy: 0.9636512739945752, [(1, 33), (2, 52)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18946603501588105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946603501588105, 0.1550742683149874] ***
*** starting iteration: 2; err: [Inf, 0.18946603501588105, 0.1550742683149874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627] ***
*** starting iteration: 3; err: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499] ***
*** starting iteration: 4; err: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499, 0.145347929244861] ***
*** starting iteration: 5; err: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499, 0.145347929244861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499, 0.145347929244861, 0.14432951130904256] ***
*** starting iteration: 6; err: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499, 0.145347929244861, 0.14432951130904256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499, 0.145347929244861, 0.14432951130904256, 0.14389112647809088] ***
*** finished computation of 7 references, err: [Inf, 0.18946603501588105, 0.1550742683149874, 0.15068506509065627, 0.14802444277517499, 0.145347929244861, 0.14432951130904256, 0.14389112647809088] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 14, 0]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(1, 63), (2, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [61, 25, 0]]
** centroid: 3, normalized-entropy: 0.869620774054375, [(1, 61), (2, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 72, 13]]
** centroid: 5, normalized-entropy: 0.617151919200282, [(2, 72), (3, 13)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 76, 1]]
** centroid: 6, normalized-entropy: 0.1000009430103234, [(2, 76), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 18, 0]]
** centroid: 7, normalized-entropy: 0.8512243352621381, [(1, 47), (2, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19060335649363697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060335649363697, 0.15740567452274262] ***
*** starting iteration: 2; err: [Inf, 0.19060335649363697, 0.15740567452274262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409] ***
*** starting iteration: 3; err: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953] ***
*** starting iteration: 4; err: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953, 0.14948252764623612] ***
*** starting iteration: 5; err: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953, 0.14948252764623612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953, 0.14948252764623612, 0.1477153288256377] ***
*** starting iteration: 6; err: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953, 0.14948252764623612, 0.1477153288256377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953, 0.14948252764623612, 0.1477153288256377, 0.14692034131102263] ***
*** finished computation of 7 references, err: [Inf, 0.19060335649363697, 0.15740567452274262, 0.1529483405612409, 0.15105659432522953, 0.14948252764623612, 0.1477153288256377, 0.14692034131102263] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 40, 9]]
** centroid: 2, normalized-entropy: 0.6880476235340797, [(2, 40), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 5, 0]]
** centroid: 3, normalized-entropy: 0.44506485705083854, [(1, 49), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 13, 0]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(1, 78), (2, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [10, 52, 0]]
** centroid: 6, normalized-entropy: 0.6373874992221911, [(1, 10), (2, 52)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 79, 0]]
** centroid: 7, normalized-entropy: 0.22641094842107634, [(1, 3), (2, 79)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17018755159527063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17018755159527063, 0.1535228049531579] ***
*** starting iteration: 2; err: [Inf, 0.17018755159527063, 0.1535228049531579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17018755159527063, 0.1535228049531579, 0.15070340341702104] ***
*** starting iteration: 3; err: [Inf, 0.17018755159527063, 0.1535228049531579, 0.15070340341702104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17018755159527063, 0.1535228049531579, 0.15070340341702104, 0.14923620449192823] ***
*** starting iteration: 4; err: [Inf, 0.17018755159527063, 0.1535228049531579, 0.15070340341702104, 0.14923620449192823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17018755159527063, 0.1535228049531579, 0.15070340341702104, 0.14923620449192823, 0.1483363742157817] ***
*** finished computation of 7 references, err: [Inf, 0.17018755159527063, 0.1535228049531579, 0.15070340341702104, 0.14923620449192823, 0.1483363742157817] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 17, 0]]
** centroid: 3, normalized-entropy: 0.8412367762002599, [(1, 46), (2, 17)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 49, 12]]
** centroid: 4, normalized-entropy: 0.7153220528038851, [(2, 49), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 38, 0]]
** centroid: 5, normalized-entropy: 0.9803107984107206, [(1, 53), (2, 38)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 22, 0]]
** centroid: 7, normalized-entropy: 0.8779620013943914, [(1, 52), (2, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20132373675750567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629] ***
*** starting iteration: 2; err: [Inf, 0.20132373675750567, 0.17100080288946629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053] ***
*** starting iteration: 3; err: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788] ***
*** starting iteration: 4; err: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145] ***
*** starting iteration: 5; err: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145, 0.15420020558871328] ***
*** starting iteration: 6; err: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145, 0.15420020558871328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145, 0.15420020558871328, 0.15312660266086459] ***
*** starting iteration: 7; err: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145, 0.15420020558871328, 0.15312660266086459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145, 0.15420020558871328, 0.15312660266086459, 0.15221192415524273] ***
*** finished computation of 7 references, err: [Inf, 0.20132373675750567, 0.17100080288946629, 0.16316965942271053, 0.15814938371814788, 0.15556861501932145, 0.15420020558871328, 0.15312660266086459, 0.15221192415524273] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 38, 0]]
** centroid: 1, normalized-entropy: 0.9995256892936492, [(1, 40), (2, 38)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 15, 0]]
** centroid: 4, normalized-entropy: 0.6816559115981193, [(1, 68), (2, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 51, 20]]
** centroid: 6, normalized-entropy: 0.8577435372751958, [(2, 51), (3, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 36, 0]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(1, 18), (2, 36)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21877492412365973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21877492412365973, 0.17747247888334095] ***
*** starting iteration: 2; err: [Inf, 0.21877492412365973, 0.17747247888334095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976] ***
*** starting iteration: 3; err: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976, 0.14583529132790862] ***
*** starting iteration: 4; err: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976, 0.14583529132790862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976, 0.14583529132790862, 0.1446042195786722] ***
*** starting iteration: 5; err: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976, 0.14583529132790862, 0.1446042195786722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976, 0.14583529132790862, 0.1446042195786722, 0.14396373319253325] ***
*** finished computation of 7 references, err: [Inf, 0.21877492412365973, 0.17747247888334095, 0.15624056080169976, 0.14583529132790862, 0.1446042195786722, 0.14396373319253325] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [68, 12, 0]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(1, 68), (2, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [41, 47, 0]]
** centroid: 5, normalized-entropy: 0.99664402524877, [(1, 41), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [52, 14, 0]]
** centroid: 6, normalized-entropy: 0.7455178428108284, [(1, 52), (2, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 58, 18]]
** centroid: 7, normalized-entropy: 0.7897492536625221, [(2, 58), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19051147918542846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19051147918542846, 0.15802783577004448] ***
*** starting iteration: 2; err: [Inf, 0.19051147918542846, 0.15802783577004448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793] ***
*** starting iteration: 3; err: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793, 0.14994199137948452] ***
*** starting iteration: 4; err: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793, 0.14994199137948452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793, 0.14994199137948452, 0.1485781663246453] ***
*** starting iteration: 5; err: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793, 0.14994199137948452, 0.1485781663246453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793, 0.14994199137948452, 0.1485781663246453, 0.148106873691082] ***
*** finished computation of 7 references, err: [Inf, 0.19051147918542846, 0.15802783577004448, 0.15169544073566793, 0.14994199137948452, 0.1485781663246453, 0.148106873691082] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 17, 0]]
** centroid: 3, normalized-entropy: 0.6904285855304167, [(1, 75), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 8, 0]]
** centroid: 4, normalized-entropy: 0.612196127490834, [(1, 45), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 31, 0]]
** centroid: 5, normalized-entropy: 0.9290083681703216, [(1, 59), (2, 31)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 77, 13]]
** centroid: 6, normalized-entropy: 0.5957610966703235, [(2, 77), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.174835923679173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.174835923679173, 0.15469552183151244] ***
*** starting iteration: 2; err: [Inf, 0.174835923679173, 0.15469552183151244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365] ***
*** starting iteration: 3; err: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365, 0.14852516287006437] ***
*** starting iteration: 4; err: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365, 0.14852516287006437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365, 0.14852516287006437, 0.14669312180578709] ***
*** starting iteration: 5; err: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365, 0.14852516287006437, 0.14669312180578709] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365, 0.14852516287006437, 0.14669312180578709, 0.14589466301351786] ***
*** finished computation of 7 references, err: [Inf, 0.174835923679173, 0.15469552183151244, 0.15060029003210365, 0.14852516287006437, 0.14669312180578709, 0.14589466301351786] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 50, 0]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(1, 16), (2, 50)]
*** center 2: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 64, 18]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [6, 62, 0]]
** centroid: 4, normalized-entropy: 0.43055186701043935, [(1, 6), (2, 62)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [43, 3, 0]]
** centroid: 5, normalized-entropy: 0.3478169135710632, [(1, 43), (2, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [89, 3, 0]]
** centroid: 7, normalized-entropy: 0.20731018585948177, [(1, 89), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18674283977504819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18674283977504819, 0.15090926919691264] ***
*** starting iteration: 2; err: [Inf, 0.18674283977504819, 0.15090926919691264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18674283977504819, 0.15090926919691264, 0.1473134550191462] ***
*** starting iteration: 3; err: [Inf, 0.18674283977504819, 0.15090926919691264, 0.1473134550191462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18674283977504819, 0.15090926919691264, 0.1473134550191462, 0.14673962249979378] ***
*** finished computation of 7 references, err: [Inf, 0.18674283977504819, 0.15090926919691264, 0.1473134550191462, 0.14673962249979378] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 46, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 17, 0]]
** centroid: 2, normalized-entropy: 0.8663006754980497, [(1, 42), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 46, 17]]
** centroid: 4, normalized-entropy: 0.8412367762002599, [(2, 46), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 38, 0]]
** centroid: 6, normalized-entropy: 0.9934472383802028, [(1, 46), (2, 38)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [11, 66, 0]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(1, 11), (2, 66)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1918901444133371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152] ***
*** starting iteration: 2; err: [Inf, 0.1918901444133371, 0.16124640369322152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445] ***
*** starting iteration: 3; err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195] ***
*** starting iteration: 4; err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154] ***
*** starting iteration: 5; err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284] ***
*** starting iteration: 6; err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284, 0.1484740649573505] ***
*** starting iteration: 7; err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284, 0.1484740649573505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284, 0.1484740649573505, 0.1467398773059249] ***
*** starting iteration: 8; err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284, 0.1484740649573505, 0.1467398773059249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284, 0.1484740649573505, 0.1467398773059249, 0.1460977272298187] ***
*** finished computation of 7 references, err: [Inf, 0.1918901444133371, 0.16124640369322152, 0.15686466514505445, 0.15401800541207195, 0.15214764305204154, 0.15041617465764284, 0.1484740649573505, 0.1467398773059249, 0.1460977272298187] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [52, 16, 0]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(1, 52), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 47, 16]]
** centroid: 2, normalized-entropy: 0.8175072881213616, [(2, 47), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 67, 0]]
** centroid: 3, normalized-entropy: 0.11058084476988722, [(1, 1), (2, 67)]
*** center 4: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 66, 0]]
** centroid: 5, normalized-entropy: 0.3674984948272913, [(1, 5), (2, 66)]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24594142002798616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948] ***
*** starting iteration: 2; err: [Inf, 0.24594142002798616, 0.18283815907686948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078] ***
*** starting iteration: 3; err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907] ***
*** starting iteration: 4; err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923] ***
*** starting iteration: 5; err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958] ***
*** starting iteration: 6; err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958, 0.15049488698877395] ***
*** starting iteration: 7; err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958, 0.15049488698877395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958, 0.15049488698877395, 0.1490655304575339] ***
*** starting iteration: 8; err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958, 0.15049488698877395, 0.1490655304575339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958, 0.15049488698877395, 0.1490655304575339, 0.14818724807817488] ***
*** finished computation of 7 references, err: [Inf, 0.24594142002798616, 0.18283815907686948, 0.16650239043869078, 0.1592751925624907, 0.15434823537617923, 0.15168387546855958, 0.15049488698877395, 0.1490655304575339, 0.14818724807817488] ***
*** center 1: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 19, 0]]
** centroid: 2, normalized-entropy: 0.849054424254048, [(1, 50), (2, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 76, 18]]
** centroid: 4, normalized-entropy: 0.7045767128725937, [(2, 76), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 10, 0]]
** centroid: 5, normalized-entropy: 0.6373874992221911, [(1, 52), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [57, 35, 0]]
** centroid: 6, normalized-entropy: 0.9583485169215336, [(1, 57), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [14, 56, 0]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(1, 14), (2, 56)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20058295806264506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058295806264506, 0.15368757115676998] ***
*** starting iteration: 2; err: [Inf, 0.20058295806264506, 0.15368757115676998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058295806264506, 0.15368757115676998, 0.15127580317482353] ***
*** starting iteration: 3; err: [Inf, 0.20058295806264506, 0.15368757115676998, 0.15127580317482353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20058295806264506, 0.15368757115676998, 0.15127580317482353, 0.1513145029526204] ***
*** finished computation of 7 references, err: [Inf, 0.20058295806264506, 0.15368757115676998, 0.15127580317482353, 0.1513145029526204] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 2, 0]]
** centroid: 1, normalized-entropy: 0.20818094555717087, [(1, 59), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 60, 0]]
** centroid: 3, normalized-entropy: 0.8739810481273581, [(1, 25), (2, 60)]
*** center 4: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 74, 0]]
** centroid: 5, normalized-entropy: 0.9348490242345946, [(1, 40), (2, 74)]
*** center 6: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 69, 13]]
** centroid: 7, normalized-entropy: 0.6307970795750609, [(2, 69), (3, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25352151440875603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25352151440875603, 0.17146533440425993] ***
*** starting iteration: 2; err: [Inf, 0.25352151440875603, 0.17146533440425993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098] ***
*** starting iteration: 3; err: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185] ***
*** starting iteration: 4; err: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185, 0.1461756815807894] ***
*** starting iteration: 5; err: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185, 0.1461756815807894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185, 0.1461756815807894, 0.14409011920262127] ***
*** starting iteration: 6; err: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185, 0.1461756815807894, 0.14409011920262127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185, 0.1461756815807894, 0.14409011920262127, 0.1433547303909436] ***
*** finished computation of 7 references, err: [Inf, 0.25352151440875603, 0.17146533440425993, 0.16090082659386098, 0.15125758161675185, 0.1461756815807894, 0.14409011920262127, 0.1433547303909436] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [27, 39, 0]]
** centroid: 2, normalized-entropy: 0.976020648236615, [(1, 27), (2, 39)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 49, 0]]
** centroid: 4, normalized-entropy: 0.996929708080541, [(1, 43), (2, 49)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 32, 0]]
** centroid: 5, normalized-entropy: 0.9962088839046743, [(1, 37), (2, 32)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 76, 16]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(2, 76), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.15015394246485084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.15015394246485084, 0.1420670376420021] ***
*** starting iteration: 2; err: [Inf, 0.15015394246485084, 0.1420670376420021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.15015394246485084, 0.1420670376420021, 0.14149641778320074] ***
*** finished computation of 7 references, err: [Inf, 0.15015394246485084, 0.1420670376420021, 0.14149641778320074] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [84, 9, 0]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(1, 84), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 63, 0]]
** centroid: 2, normalized-entropy: 0.11611507530476962, [(1, 1), (2, 63)]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [38, 6, 0]]
** centroid: 4, normalized-entropy: 0.5746356978376794, [(1, 38), (2, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [12, 62, 0]]
** centroid: 6, normalized-entropy: 0.6394571324851642, [(1, 12), (2, 62)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 21]]
** centroid: 7, normalized-entropy: 0.8708644692353648, [(2, 51), (3, 21)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 381,3 => 33,1 => 586), Dict(2 => 364,3 => 39,1 => 597))
[ Info: ===== scores for single classifier: {"micro_f1":0.939,"precision":0.939,"recall":0.939,"macro_recall":0.9570057245936643,"macro_f1":0.8812164973824611,"accuracy":0.939,"class_f1":{"2":0.9174560216508795,"3":0.7572815533980582,"1":0.9689119170984456},"class_precision":{"2":0.904,"3":0.609375,"1":1.0},"class_recall":{"2":0.9313186813186813,"3":1.0,"1":0.9396984924623115}}
[ Info: ===== scores for 1: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.9700041722654787,"macro_f1":0.9489549420938298,"accuracy":0.961,"class_f1":{"2":0.9459084604715673,"3":0.9285714285714286,"1":0.9723849372384937},"class_precision":{"2":0.9551820728291317,"3":0.8666666666666667,"1":0.9715719063545151},"class_recall":{"2":0.9368131868131868,"3":1.0,"1":0.9731993299832495}}
[ Info: ===== scores for 5: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9705625195574944,"macro_f1":0.9430244460891885,"accuracy":0.962,"class_f1":{"2":0.9472222222222222,"3":0.9069767441860465,"1":0.9748743718592965},"class_precision":{"2":0.9578651685393258,"3":0.8297872340425532,"1":0.9748743718592965},"class_recall":{"2":0.9368131868131868,"3":1.0,"1":0.9748743718592965}}
[ Info: ===== scores for 7: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.973622692215657,"macro_f1":0.9407818069368442,"accuracy":0.963,"class_f1":{"2":0.9495225102319237,"3":0.896551724137931,"1":0.9762711864406779},"class_precision":{"2":0.943089430894309,"3":0.8125,"1":0.9879931389365352},"class_recall":{"2":0.9560439560439561,"3":1.0,"1":0.964824120603015}}
[ Info: ===== scores for 9: {"micro_f1":0.96,"precision":0.96,"recall":0.96,"macro_recall":0.9715902467158749,"macro_f1":0.9354669435060159,"accuracy":0.96,"class_f1":{"2":0.9455040871934605,"3":0.8863636363636364,"1":0.9745331069609507},"class_precision":{"2":0.9378378378378378,"3":0.7959183673469388,"1":0.9879518072289156},"class_recall":{"2":0.9532967032967034,"3":1.0,"1":0.9614740368509213}}
[ Info: ===== scores for 11: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9754541940471588,"macro_f1":0.9361257611658896,"accuracy":0.965,"class_f1":{"2":0.9523809523809524,"3":0.8764044943820225,"1":0.9795918367346939},"class_precision":{"2":0.9433962264150944,"3":0.78,"1":0.9948186528497409},"class_recall":{"2":0.9615384615384616,"3":1.0,"1":0.964824120603015}}
(score = 0.964, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.964,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9723940213889962,"macro_f1":0.9546520392351869,"accuracy":0.964,"class_f1":{"2":0.9501385041551247,"3":0.9397590361445783,"1":0.9740585774058578},"class_precision":{"2":0.9581005586592178,"3":0.8863636363636364,"1":0.9732441471571907},"class_recall":{"2":0.9423076923076923,"3":1.0,"1":0.9748743718592965}}
Test Summary: | Pass  Total
AKNC          |    8      8
[67, 1, 2, 2, 1, 3, 4, 4, 14, 6, 13, 1, 17, 11, 9, 2, 4, 8, 31, 2, 4, 8, 21, 25, 3, 25, 12, 13, 11, 21, 1, 11, 4, 2, 1, 4, 14, 5, 2, 3, 11, 33, 94, 32, 28, 6, 12, 21, 10, 17, 2, 1, 9, 1, 4, 4, 7, 12, 25, 28, 19, 17, 7, 7, 7, 4, 11, 1, 140, 5, 6, 21, 9, 4, 2, 5, 44, 2, 4, 59, 21, 17, 21, 116, 59, 47, 36, 1, 1, 162, 3, 10, 70, 3, 26, 23, 12, 144, 13, 9, 3, 2, 35, 28, 6, 141, 3, 31, 1, 24, 22, 7, 21, 21, 27, 67, 33, 178, 20, 39, 8, 20, 16, 4, 7, 17, 241, 13, 3, 13, 1, 38, 9, 1, 33, 1, 2, 8, 450, 16, 7, 34, 4, 18, 18, 3, 24, 19, 171, 12, 62, 9, 49, 184, 4, 61, 10, 8, 15, 4, 16, 226, 12, 2, 3, 97, 13, 11, 27, 29, 4, 60, 105, 9, 10, 5, 80, 18, 3, 44, 72, 177, 34, 18, 46, 16, 275, 2, 54, 28, 52, 9, 3, 5, 29, 2, 3, 7, 27, 15, 37, 7, 10, 5, 308, 26, 51, 5, 17, 6, 326, 26, 12, 73, 2, 21, 34, 112, 30, 13, 17, 27, 10, 178, 9, 6, 2, 13, 8, 60, 29, 13, 87, 13, 4, 3, 10, 24, 29, 10, 10, 40, 14, 36, 566, 132, 20, 94, 5, 5, 3, 58, 10, 47, 156, 1, 20, 38, 18, 38, 5, 17, 6, 7, 4, 19, 3, 61, 33, 25, 100, 43, 5, 233, 6, 23, 24, 5, 22, 20, 13, 51, 10, 3, 12, 78, 12, 12, 15, 42, 102, 54, 3, 8, 5, 7, 26, 4, 2, 5]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6199999999999997, speedup = 0.317746694073602, eval_ratio = 0.070634)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3567708333333333,"f1":null,"seconds":0.0001503322273492813,"exhaustive_search_seconds":0.00036525167524814606,"evaluations":445.25,"distances_sum":1729.2178721543014}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5399305555555555,"recall":0.5364583333333333,"f1":null,"seconds":0.0002566501498222351,"exhaustive_search_seconds":0.00036525167524814606,"evaluations":587.078125,"distances_sum":1637.9528975449305}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6467013888888885,"recall":0.6467013888888885,"f1":0.6467013888888885,"seconds":0.00033325888216495514,"exhaustive_search_seconds":0.00036525167524814606,"evaluations":694.0234375,"distances_sum":1610.0961520966737}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7213541666666662,"recall":0.7213541666666662,"f1":0.7213541666666662,"seconds":0.0003939662128686905,"exhaustive_search_seconds":0.00036525167524814606,"evaluations":799.828125,"distances_sum":1584.4882228826984}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7803819444444441,"recall":0.7803819444444441,"f1":0.7803819444444441,"seconds":0.00044460780918598175,"exhaustive_search_seconds":0.00036525167524814606,"evaluations":892.578125,"distances_sum":1567.1023678773633}
KCenters.DeloneInvIndex> reached performance {"precision":0.8237847222222215,"recall":0.8237847222222215,"f1":0.8237847222222215,"seconds":0.0006443746387958527,"exhaustive_search_seconds":0.00036525167524814606,"evaluations":978.484375,"distances_sum":1556.2265055204205}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8240000000000003, speedup = 0.6839762139472765, eval_ratio = 0.100498)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
