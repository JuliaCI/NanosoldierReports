Julia Version 1.5.0-DEV.681
Commit 641f444a0b (2020-04-24 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ──────────────────── v0.4.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed Compat ────────────────────── v3.8.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed TableTraits ───────────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed MLDataPattern ─────────────── v0.5.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.13
  Installed StatsBase ─────────────────── v0.32.2
  Installed DataAPI ───────────────────── v1.2.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataFrames ────────────────── v0.20.2
  Installed OrderedCollections ────────── v1.1.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Tables ────────────────────── v1.0.4
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.2
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_MYgFpj/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_MYgFpj/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.932025450070699
[ Info: 0.8302954188982645
[ Info: 0.5546240802109241
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3230023757368326
mean(cdnet.distances) = 0.35563715497652687
mean(crand.distances) = 0.3448449821273486
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.715587537462538,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.265625,"distances_sum":1502.862380961722}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.715587537462538,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.265625,"distances_sum":1502.862380961722}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.9007242757242765,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.34375,"distances_sum":2312.0951938936137}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.828125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.828125,"f1":0.9007242757242765,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.34375,"distances_sum":2312.0951938936137}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451865842490846,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.75,"distances_sum":2627.676156050458}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9451865842490846,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.75,"distances_sum":2627.676156050458}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9451865842490846,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.75,"distances_sum":2627.676156050458}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8535750707625717,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.9921875,"distances_sum":1885.3049670229389}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8072099775224784,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.703125,"distances_sum":1710.1132787205584}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8535750707625717,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.9921875,"distances_sum":1885.3049670229389}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8535750707625717,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.9921875,"distances_sum":1885.3049670229389}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.755859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8535750707625717,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.9921875,"distances_sum":1885.3049670229389}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":5.9921875,"distances_sum":551.6599279608556}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8098063394938404,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.8671875,"distances_sum":1560.3180522231467}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.419816493988037e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":6.0546875,"distances_sum":481.15371594917485}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8098063394938404,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.8671875,"distances_sum":1560.3180522231467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940170246420247,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.859375,"distances_sum":2258.0608100915574}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9046333874458885,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.71875,"distances_sum":2029.144183912281}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.940170246420247,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.859375,"distances_sum":2258.0608100915574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.9296875,"distances_sum":2541.103823202611}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610863095238099,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.859375,"distances_sum":2450.3396183650702}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9496508699633707,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.7890625,"distances_sum":2371.9894608317627}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.9296875,"distances_sum":2541.103823202611}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.9296875,"distances_sum":2541.103823202611}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1572265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1572265625,"f1":null,"seconds":3.1869858503341675e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.3515625,"distances_sum":380.50054301531475}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7686214826839834,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.4921875,"distances_sum":1635.2350876131572}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6416015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6416015625,"f1":0.7686214826839834,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.4921875,"distances_sum":1635.2350876131572}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9135250166500173,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2219.6760125438427}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9559211621711627,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":2557.142866714077}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9559211621711627,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":2557.142866714077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728823260073265,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2646.871083179536}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9802083333333338,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2686.035729302892}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600675366300372,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2536.667693815302}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802083333333338,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2686.035729302892}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802083333333338,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2686.035729302892}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8695065351315359,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4765625,"distances_sum":1961.6971652153875}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8750374625374634,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.46875,"distances_sum":1963.7638520952999}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7890625,"f1":0.8750374625374634,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.46875,"distances_sum":1963.7638520952999}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9106372793872802,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.734375,"distances_sum":2157.0488077425207}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8778820138195147,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5234375,"distances_sum":1983.075648487755}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9035828754578763,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.765625,"distances_sum":2071.386601224849}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657222985347989,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2542.786806428276}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9657222985347989,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2542.786806428276}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699977106227111,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2587.88879726837}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664835164835169,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2552.148322305962}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9732543498168501,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2596.214077029835}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9732543498168501,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2596.214077029835}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9732543498168501,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2596.214077029835}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.881122523310024,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.484375,"distances_sum":1996.5222030270697}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.140625,"distances_sum":498.6366607573293}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8238844488844499,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.984375,"distances_sum":1690.7257282337862}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.881122523310024,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.484375,"distances_sum":1996.5222030270697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522779304029311,"seconds":8.113682270050049e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8046875,"distances_sum":2477.6703607873524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9564045329670336,"seconds":7.227063179016113e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2506.187040301467}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9179804570429579,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.796875,"distances_sum":2222.7242763795834}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.95761217948718,"seconds":7.204711437225342e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.890625,"distances_sum":2459.09020221166}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8840378371628377,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.453125,"distances_sum":2008.2695189778726}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9564045329670336,"seconds":7.227063179016113e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2506.187040301467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783138736263741,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2659.40699594685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9831845238095239,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2693.264014460664}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783882783882786,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.953125,"distances_sum":2649.8680966142465}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9624484890109897,"seconds":7.165595889091492e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8984375,"distances_sum":2529.0129361507134}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721726190476195,"seconds":6.362795829772949e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.921875,"distances_sum":2612.5834613119932}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9831845238095239,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2693.264014460664}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9831845238095239,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9453125,"distances_sum":2693.264014460664}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":4.41819429397583e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.2890625,"distances_sum":855.334479977154}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.8671875,"distances_sum":514.0944978248763}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8777763902763911,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.4765625,"distances_sum":2023.7666721785}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8777763902763911,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.4765625,"distances_sum":2023.7666721785}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9386618589743597,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.765625,"distances_sum":2422.3064625093816}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9386618589743597,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.765625,"distances_sum":2422.3064625093816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9432005494505502,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.765625,"distances_sum":2479.255447116352}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9432005494505502,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.765625,"distances_sum":2479.255447116352}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9432005494505502,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.765625,"distances_sum":2479.255447116352}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8771868756243764,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.9222497940063477e-6,"evaluations":8.09375,"distances_sum":2289.767392642975}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6999594155844161,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.9222497940063477e-6,"evaluations":7.4375,"distances_sum":1344.2050428811046}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8771868756243764,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.9222497940063477e-6,"evaluations":8.09375,"distances_sum":2289.767392642975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8771868756243764,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.9222497940063477e-6,"evaluations":8.09375,"distances_sum":2289.767392642975}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.79296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8771868756243764,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.9222497940063477e-6,"evaluations":8.09375,"distances_sum":2289.767392642975}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8290303446553455,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.3046875,"distances_sum":1801.4467182460876}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":5.6328125,"distances_sum":527.6783539115922}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7216796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7216796875,"f1":0.8290303446553455,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.3046875,"distances_sum":1801.4467182460876}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9546932234432238,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8046875,"distances_sum":2759.5624355438517}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9546932234432238,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8046875,"distances_sum":2759.5624355438517}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632097069597078,"seconds":6.372109055519104e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.875,"distances_sum":2815.6772488517495}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754120879120882,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8984375,"distances_sum":2928.094598836896}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9754120879120882,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8984375,"distances_sum":2928.094598836896}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9754120879120882,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8984375,"distances_sum":2928.094598836896}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.28125,"distances_sum":677.460472236714}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.421875,"distances_sum":736.4878457247894}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8391519938394946,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8515625,"distances_sum":1905.1346749141728}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8391519938394946,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8515625,"distances_sum":1905.1346749141728}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9505468489843494,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.84375,"distances_sum":2799.063989208381}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9566620879120884,"seconds":7.2177499532699585e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2839.7506717477067}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569826007326012,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.765625,"distances_sum":2881.578716447138}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9488927738927745,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.734375,"distances_sum":2822.2222775268924}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569826007326012,"seconds":6.467103958129883e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.765625,"distances_sum":2881.578716447138}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609260531135534,"seconds":7.124617695808411e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":2900.3878383002125}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.959083104395605,"seconds":6.601214408874512e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8515625,"distances_sum":2873.3220554329723}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9140625,"distances_sum":2969.7545878397027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618131868131872,"seconds":6.7837536334991455e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8828125,"distances_sum":2890.794845497211}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968137591575092,"seconds":6.57886266708374e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8515625,"distances_sum":2957.9221584194406}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637706043956047,"seconds":6.970018148422241e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.890625,"distances_sum":2871.0664999398286}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9140625,"distances_sum":2969.7545878397027}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9140625,"distances_sum":2969.7545878397027}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.689475975413476,"seconds":4.308298230171204e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.5703125,"distances_sum":1242.7670292947435}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8343607781107788,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.65625,"distances_sum":1853.9573953492095}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.732421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.732421875,"f1":0.8343607781107788,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.65625,"distances_sum":1853.9573953492095}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360436438561442,"seconds":6.3963234424591064e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.84375,"distances_sum":2532.6119654967283}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9360436438561442,"seconds":6.3963234424591064e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.84375,"distances_sum":2532.6119654967283}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9432348901098906,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.78125,"distances_sum":2625.1873145918894}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9453926282051288,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8515625,"distances_sum":2619.008566368344}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9529819139194146,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.71875,"distances_sum":2742.5574314805285}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9529819139194146,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.71875,"distances_sum":2742.5574314805285}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9529819139194146,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.71875,"distances_sum":2742.5574314805285}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8015779359529367,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.9765625,"distances_sum":1605.5058096779192}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8015779359529367,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.9765625,"distances_sum":1605.5058096779192}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8835456210456216,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3359375,"distances_sum":2159.194738641488}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9535370879120884,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.75,"distances_sum":2736.768264272486}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8344166250416258,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.6640625,"distances_sum":1846.2821578354321}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9535370879120884,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.75,"distances_sum":2736.768264272486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9600103021978026,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":2777.5116032881374}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9600103021978026,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":2777.5116032881374}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9600103021978026,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":2777.5116032881374}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7027172480297488,"seconds":4.045665264129639e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.65625,"distances_sum":1361.2428362820312}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5625,"f1":0.7027172480297488,"seconds":4.045665264129639e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.65625,"distances_sum":1361.2428362820312}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.842171370296371,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7421875,"distances_sum":1966.20107217503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8535095113220122,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8828125,"distances_sum":1977.5333446678521}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8535095113220122,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8828125,"distances_sum":1977.5333446678521}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9135817307692312,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6484375,"distances_sum":2417.609793555621}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8910714285714294,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4140625,"distances_sum":2314.515264310111}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9330102189477194,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.671875,"distances_sum":2650.774595289002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.934907280219781,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":2590.7096375423944}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8852002164502174,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4921875,"distances_sum":2260.66188320924}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9100821053946064,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5625,"distances_sum":2498.5267624247936}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.934907280219781,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":2590.7096375423944}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.934907280219781,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.796875,"distances_sum":2590.7096375423944}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7751883533133541,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.46875,"distances_sum":1560.6633997177075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7688122641247648,"seconds":4.647299647331238e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.3671875,"distances_sum":1545.8327283728413}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7751883533133541,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.46875,"distances_sum":1560.6633997177075}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8525105103230111,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.078125,"distances_sum":1974.1033939783838}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9547936438561442,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7734375,"distances_sum":2783.27485000586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8876066641691648,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.25,"distances_sum":2266.4730984955863}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8874151889776897,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2109375,"distances_sum":2263.663588328605}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9547936438561442,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7734375,"distances_sum":2783.27485000586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978025,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2902.0426051346135}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796875000000002,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9453125,"distances_sum":2932.040804415458}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965333104395605,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2825.619384968676}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000002,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9453125,"distances_sum":2932.040804415458}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875000000002,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9453125,"distances_sum":2932.040804415458}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.9921875,"distances_sum":694.5529369167718}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.03125,"distances_sum":675.3463528514774}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3837890625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.9921875,"distances_sum":694.5529369167718}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.709009046509047,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.984375,"distances_sum":1092.6482485557783}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8709051365301375,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7890625,"distances_sum":1679.671802086528}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.80469148906649,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.2890625,"distances_sum":1393.7034786650343}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9035032675657682,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.1484375,"distances_sum":1811.4077818443407}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.8997741841491851,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.09375,"distances_sum":1842.6304640090311}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8800772144522154,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.03125,"distances_sum":1685.6812030320837}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9035032675657682,"seconds":5.02169132232666e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.1484375,"distances_sum":1811.4077818443407}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546016483516487,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7109375,"distances_sum":2156.6622561514073}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.828125,"distances_sum":2182.850822457894}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562385531135538,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.78125,"distances_sum":2132.7762240278116}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9383871336996346,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.625,"distances_sum":2044.6882667026848}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471783424908429,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7109375,"distances_sum":2091.8028605062564}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.828125,"distances_sum":2182.850822457894}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.828125,"distances_sum":2182.850822457894}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5185546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5185546875,"f1":0.6665504634254639,"seconds":3.926455974578857e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.65625,"distances_sum":937.6181155044864}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8650583791208801,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1796875,"distances_sum":1506.7861398729922}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8650583791208801,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1796875,"distances_sum":1506.7861398729922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9370051823176828,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8359375,"distances_sum":1863.1228548321667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.947012362637363,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8359375,"distances_sum":1942.0402053120974}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9345956127206131,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":1897.6321469210657}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8996425449550459,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":1670.4470027690907}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.947012362637363,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8359375,"distances_sum":1942.0402053120974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706501831501834,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.859375,"distances_sum":2092.21240088805}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766197344322347,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2126.9165375695056}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9707417582417586,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.859375,"distances_sum":2083.4935918943556}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766197344322347,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2126.9165375695056}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766197344322347,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2126.9165375695056}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.015625,"distances_sum":671.8559609252707}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8512232559107568,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1640625,"distances_sum":1500.5114393925314}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8512232559107568,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1640625,"distances_sum":1500.5114393925314}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9457646520146525,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7109375,"distances_sum":1988.5497211762986}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8573239260739269,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1484375,"distances_sum":1523.6343329724798}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9461595695970701,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.765625,"distances_sum":1958.8311713831595}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9457646520146525,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7109375,"distances_sum":1988.5497211762986}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559180402930407,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6953125,"distances_sum":2062.103513408032}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333336,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2130.4964771068912}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9470727189477197,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6875,"distances_sum":2020.4282396062313}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333336,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2130.4964771068912}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333336,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2130.4964771068912}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.3676624298095703e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":5.1796875,"distances_sum":705.0221469329293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5107421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5107421875,"f1":0.6575185231435235,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.3671875,"distances_sum":972.7363045126679}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5107421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5107421875,"f1":0.6575185231435235,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.3671875,"distances_sum":972.7363045126679}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9341804029304032,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5625,"distances_sum":1975.9064601536234}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9346440018315022,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5625,"distances_sum":2029.6934123283447}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9346440018315022,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5625,"distances_sum":2029.6934123283447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9462313727938733,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.734375,"distances_sum":2073.4771328960987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698317307692312,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2171.298604858921}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.942027243589744,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.671875,"distances_sum":2039.863558711016}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698317307692312,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2171.298604858921}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698317307692312,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2171.298604858921}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6942647630147635,"seconds":3.926455974578857e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3203125,"distances_sum":1084.176656215069}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5361328125,"f1":null,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.359375,"distances_sum":1069.306183550905}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5439453125,"f1":0.6942647630147635,"seconds":3.926455974578857e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3203125,"distances_sum":1084.176656215069}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.876772186147187,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4140625,"distances_sum":1709.156084704987}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9080965909090917,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":1889.7740965166176}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7007665945165952,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4453125,"distances_sum":1133.9442933859355}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7822415431790438,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.078125,"distances_sum":1378.1164637496915}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9080965909090917,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":1889.7740965166176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9328671328671335,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2030.9777943693632}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666323260073264,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2222.3141672740976}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9423477564102569,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2075.3755294062576}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666323260073264,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2222.3141672740976}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666323260073264,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2222.3141672740976}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7974778693528702,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.9765625,"distances_sum":1445.9099593064873}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.078952431678772e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":5.3125,"distances_sum":705.8299530171113}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7974778693528702,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.9765625,"distances_sum":1445.9099593064873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9365072427572434,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.625,"distances_sum":2101.9374840386618}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9009709040959049,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.6171875,"distances_sum":1843.9155828353007}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9365072427572434,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.625,"distances_sum":2101.9374840386618}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.964571886446887,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.828125,"distances_sum":2234.413780044457}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.964571886446887,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.828125,"distances_sum":2234.413780044457}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.964571886446887,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.828125,"distances_sum":2234.413780044457}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8389854936729945,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.765625,"distances_sum":1512.0817786741081}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.4609375,"distances_sum":756.0493117814124}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8389854936729945,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.765625,"distances_sum":1512.0817786741081}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8515947594072603,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8046875,"distances_sum":1585.143440238025}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.907626748251749,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":1867.4778711569454}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442822802197807,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":2122.9702009009507}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.854710914085915,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7265625,"distances_sum":1640.9448791288473}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8514870546120554,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7265625,"distances_sum":1623.4161452843546}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9442822802197807,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":2122.9702009009507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9608859890109895,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2190.2845657302223}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9760989010989013,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2284.4183965369593}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946531593406594,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6640625,"distances_sum":2146.65694702607}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9555116758241764,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2152.2517460094573}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9760989010989013,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2284.4183965369593}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9760989010989013,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2284.4183965369593}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.805497107059608,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.703125,"distances_sum":1367.6378064956687}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":2.982094883918762e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.875,"distances_sum":427.49546507197914}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.673828125,"f1":null,"seconds":4.351139068603516e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.53125,"distances_sum":1299.646788407862}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.805497107059608,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.703125,"distances_sum":1367.6378064956687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9077188436563446,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.515625,"distances_sum":1831.0865154635565}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9061755952380962,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.4375,"distances_sum":1834.4373639225548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9409340659340666,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6015625,"distances_sum":2074.7807507530674}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8620941558441565,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.03125,"distances_sum":1581.9344522883819}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8552541208791218,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8515625,"distances_sum":1541.849124156045}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9409340659340666,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6015625,"distances_sum":2074.7807507530674}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9459535256410264,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.71875,"distances_sum":2096.1060928735915}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9617960164835166,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2166.095788598084}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9428456959706966,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2062.143549280464}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9617960164835166,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2166.095788598084}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9617960164835166,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2166.095788598084}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.421875,"distances_sum":517.0013375893085}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.216796875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.421875,"distances_sum":517.0013375893085}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.216796875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.421875,"distances_sum":517.0013375893085}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.216796875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.421875,"distances_sum":517.0013375893085}}, n: 9
mean(cfft.distances) = 0.32851486281575853
mean(cdnet.distances) = 0.3844692831297563
mean(crand.distances) = 0.7956213098599789
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9266666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8733333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9177777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9177777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.96
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5970669626196226] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 8: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 9, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 12, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
finished with 14 centroids; started with 12
acc = 0.98
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3971975480776851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3971975480776851, 0.33832087770052666] ***
*** finished computation of 3 references, err: [Inf, 0.3971975480776851, 0.33832087770052666] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [173, 70, 0]]
** centroid: 1, normalized-entropy: 0.8662096453041306, [(1, 173), (2, 70)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [106, 172, 20]]
** centroid: 2, normalized-entropy: 0.7884431687389908, [(1, 106), (2, 172), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [124, 1, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4211042372862229] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4211042372862229, 0.29277383175317767] ***
*** starting iteration: 2; err: [Inf, 0.4211042372862229, 0.29277383175317767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4211042372862229, 0.29277383175317767, 0.28977786034468683] ***
*** starting iteration: 3; err: [Inf, 0.4211042372862229, 0.29277383175317767, 0.28977786034468683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4211042372862229, 0.29277383175317767, 0.28977786034468683, 0.28891731189793207] ***
*** finished computation of 3 references, err: [Inf, 0.4211042372862229, 0.29277383175317767, 0.28977786034468683, 0.28891731189793207] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [239, 12, 0]]
** centroid: 1, normalized-entropy: 0.2770148005003624, [(1, 239), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [164, 43, 0]]
** centroid: 2, normalized-entropy: 0.7371202270183788, [(1, 164), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 188, 20]]
** centroid: 3, normalized-entropy: 0.45668363153944286, [(2, 188), (3, 20)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31735065571525356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31735065571525356, 0.2877194762238297] ***
*** finished computation of 3 references, err: [Inf, 0.31735065571525356, 0.2877194762238297] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [123, 119, 0]]
** centroid: 1, normalized-entropy: 0.999802915000331, [(1, 123), (2, 119)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [85, 130, 17]]
** centroid: 2, normalized-entropy: 0.8045950101841358, [(1, 85), (2, 130), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [193, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.45958031319232584] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45958031319232584, 0.3215177471273351] ***
*** finished computation of 3 references, err: [Inf, 0.45958031319232584, 0.3215177471273351] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [122, 208, 15]]
** centroid: 1, normalized-entropy: 0.7363797952998719, [(1, 122), (2, 208), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 58, 0]]
** centroid: 2, normalized-entropy: 0.9969954265557693, [(1, 66), (2, 58)]
*** center 3: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.26122852329545104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26122852329545104, 0.23723834479792608] ***
*** starting iteration: 2; err: [Inf, 0.26122852329545104, 0.23723834479792608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26122852329545104, 0.23723834479792608, 0.23558172262231777] ***
*** starting iteration: 3; err: [Inf, 0.26122852329545104, 0.23723834479792608, 0.23558172262231777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26122852329545104, 0.23723834479792608, 0.23558172262231777, 0.2352448930130438] ***
*** finished computation of 3 references, err: [Inf, 0.26122852329545104, 0.23723834479792608, 0.23558172262231777, 0.2352448930130438] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [104, 110, 10]]
** centroid: 1, normalized-entropy: 0.7684750379783232, [(1, 104), (2, 110), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [94, 133, 10]]
** centroid: 3, normalized-entropy: 0.7505374045536697, [(1, 94), (2, 133), (3, 10)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2731305492743068] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2731305492743068, 0.24115518937194566] ***
*** starting iteration: 2; err: [Inf, 0.2731305492743068, 0.24115518937194566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2731305492743068, 0.24115518937194566, 0.23650085258352077] ***
*** starting iteration: 3; err: [Inf, 0.2731305492743068, 0.24115518937194566, 0.23650085258352077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2731305492743068, 0.24115518937194566, 0.23650085258352077, 0.23576948002561637] ***
*** finished computation of 3 references, err: [Inf, 0.2731305492743068, 0.24115518937194566, 0.23650085258352077, 0.23576948002561637] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [159, 33, 0]]
** centroid: 1, normalized-entropy: 0.6619760641115651, [(1, 159), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [242, 15, 0]]
** centroid: 2, normalized-entropy: 0.32092313925387933, [(1, 242), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 201, 17]]
** centroid: 3, normalized-entropy: 0.39502717694105294, [(2, 201), (3, 17)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2861390919012689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2861390919012689, 0.25463730353873215] ***
*** starting iteration: 2; err: [Inf, 0.2861390919012689, 0.25463730353873215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2861390919012689, 0.25463730353873215, 0.23667409363017045] ***
*** starting iteration: 3; err: [Inf, 0.2861390919012689, 0.25463730353873215, 0.23667409363017045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2861390919012689, 0.25463730353873215, 0.23667409363017045, 0.23322337195053808] ***
*** finished computation of 3 references, err: [Inf, 0.2861390919012689, 0.25463730353873215, 0.23667409363017045, 0.23322337195053808] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [246, 4, 0]]
** centroid: 1, normalized-entropy: 0.11835001140827515, [(1, 246), (2, 4)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [19, 165, 15]]
** centroid: 2, normalized-entropy: 0.5229144289965711, [(1, 19), (2, 165), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [121, 97, 0]]
** centroid: 3, normalized-entropy: 0.9912393825641864, [(1, 121), (2, 97)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2653948142761001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653948142761001, 0.17259704714148744] ***
*** starting iteration: 2; err: [Inf, 0.2653948142761001, 0.17259704714148744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127] ***
*** starting iteration: 3; err: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762] ***
*** starting iteration: 4; err: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762, 0.14504454419570598] ***
*** starting iteration: 5; err: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762, 0.14504454419570598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762, 0.14504454419570598, 0.14320137386640963] ***
*** starting iteration: 6; err: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762, 0.14504454419570598, 0.14320137386640963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762, 0.14504454419570598, 0.14320137386640963, 0.1424196642252278] ***
*** finished computation of 7 references, err: [Inf, 0.2653948142761001, 0.17259704714148744, 0.15759582721905127, 0.14924032719352762, 0.14504454419570598, 0.14320137386640963, 0.1424196642252278] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 79, 8]]
** centroid: 2, normalized-entropy: 0.4429586785384856, [(2, 79), (3, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 15, 0]]
** centroid: 3, normalized-entropy: 0.6864381668766382, [(1, 67), (2, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 80, 12]]
** centroid: 5, normalized-entropy: 0.5586293734521991, [(2, 80), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [110, 19, 0]]
** centroid: 6, normalized-entropy: 0.6030087186547216, [(1, 110), (2, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 50, 0]]
** centroid: 7, normalized-entropy: 0.9889525767600615, [(1, 39), (2, 50)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.16657906873507713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16657906873507713, 0.15778759834000552] ***
*** starting iteration: 2; err: [Inf, 0.16657906873507713, 0.15778759834000552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434] ***
*** starting iteration: 3; err: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804] ***
*** starting iteration: 4; err: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804, 0.1492170306115315] ***
*** starting iteration: 5; err: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804, 0.1492170306115315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804, 0.1492170306115315, 0.14753901922231963] ***
*** starting iteration: 6; err: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804, 0.1492170306115315, 0.14753901922231963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804, 0.1492170306115315, 0.14753901922231963, 0.1466254546730102] ***
*** finished computation of 7 references, err: [Inf, 0.16657906873507713, 0.15778759834000552, 0.15357406879321434, 0.15099008880189804, 0.1492170306115315, 0.14753901922231963, 0.1466254546730102] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [89, 20, 0]]
** centroid: 1, normalized-entropy: 0.6876445334580582, [(1, 89), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 87, 17]]
** centroid: 2, normalized-entropy: 0.6425267139094084, [(2, 87), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [140, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 82, 0]]
** centroid: 5, normalized-entropy: 0.09408443883267342, [(1, 1), (2, 82)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [50, 17, 0]]
** centroid: 6, normalized-entropy: 0.8171387756817725, [(1, 50), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [42, 43, 0]]
** centroid: 7, normalized-entropy: 0.9999001572094882, [(1, 42), (2, 43)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21534209991519015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21534209991519015, 0.1602679090581365] ***
*** starting iteration: 2; err: [Inf, 0.21534209991519015, 0.1602679090581365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21534209991519015, 0.1602679090581365, 0.1521908183298681] ***
*** starting iteration: 3; err: [Inf, 0.21534209991519015, 0.1602679090581365, 0.1521908183298681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21534209991519015, 0.1602679090581365, 0.1521908183298681, 0.1507415227659013] ***
*** starting iteration: 4; err: [Inf, 0.21534209991519015, 0.1602679090581365, 0.1521908183298681, 0.1507415227659013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21534209991519015, 0.1602679090581365, 0.1521908183298681, 0.1507415227659013, 0.14994058734981686] ***
*** finished computation of 7 references, err: [Inf, 0.21534209991519015, 0.1602679090581365, 0.1521908183298681, 0.1507415227659013, 0.14994058734981686] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [99, 7, 0]]
** centroid: 1, normalized-entropy: 0.3509601730322126, [(1, 99), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 74, 3]]
** centroid: 2, normalized-entropy: 0.23750814382859295, [(2, 74), (3, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 26, 0]]
** centroid: 3, normalized-entropy: 0.7540340561971327, [(1, 94), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 10, 0]]
** centroid: 4, normalized-entropy: 0.5146464316834292, [(1, 77), (2, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 63, 0]]
** centroid: 6, normalized-entropy: 0.42622865699814483, [(1, 6), (2, 63)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 86, 12]]
** centroid: 7, normalized-entropy: 0.5363596511250623, [(2, 86), (3, 12)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39570671745629105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39570671745629105, 0.3023156623702843] ***
*** finished computation of 3 references, err: [Inf, 0.39570671745629105, 0.3023156623702843] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [235, 11, 0]]
** centroid: 1, normalized-entropy: 0.2635095043319829, [(1, 235), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [53, 151, 20]]
** centroid: 2, normalized-entropy: 0.748750366987804, [(1, 53), (2, 151), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [115, 81, 0]]
** centroid: 3, normalized-entropy: 0.9781832824200156, [(1, 115), (2, 81)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38994534286032284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38994534286032284, 0.29697900992640847] ***
*** finished computation of 3 references, err: [Inf, 0.38994534286032284, 0.29697900992640847] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [125, 51, 0]]
** centroid: 1, normalized-entropy: 0.8684274821412339, [(1, 125), (2, 51)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [264, 1, 0]]
** centroid: 2, normalized-entropy: 0.03581063431610241, [(1, 264), (2, 1)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [12, 197, 17]]
** centroid: 3, normalized-entropy: 0.4279987883727209, [(1, 12), (2, 197), (3, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39448706012336476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39448706012336476, 0.29812577827882464] ***
*** finished computation of 3 references, err: [Inf, 0.39448706012336476, 0.29812577827882464] ***
*** center 1: selecting labels [1] (freq >= 1) [from [237, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [64, 132, 15]]
** centroid: 2, normalized-entropy: 0.7675471144692471, [(1, 64), (2, 132), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [85, 134, 0]]
** centroid: 3, normalized-entropy: 0.963580753240232, [(1, 85), (2, 134)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25372735079232456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25372735079232456, 0.20085990291603426] ***
*** finished computation of 7 references, err: [Inf, 0.25372735079232456, 0.20085990291603426] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [96, 23, 0]]
** centroid: 1, normalized-entropy: 0.7082772165975041, [(1, 96), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 42, 0]]
** centroid: 2, normalized-entropy: 0.9945386816500111, [(1, 50), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 122, 20]]
** centroid: 3, normalized-entropy: 0.5864477034453907, [(2, 122), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [22, 56, 0]]
** centroid: 4, normalized-entropy: 0.8582307926411409, [(1, 22), (2, 56)]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2804804567716781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2804804567716781, 0.21073493317071199] ***
*** finished computation of 7 references, err: [Inf, 0.2804804567716781, 0.21073493317071199] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 25, 0]]
** centroid: 1, normalized-entropy: 0.7695944821271463, [(1, 86), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 5, 0]]
** centroid: 2, normalized-entropy: 0.2631887790276081, [(1, 107), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [31, 32, 0]]
** centroid: 4, normalized-entropy: 0.9998182469603427, [(1, 31), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 39, 0]]
** centroid: 5, normalized-entropy: 0.9951022712641691, [(1, 46), (2, 39)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 73, 17]]
** centroid: 7, normalized-entropy: 0.6991413063352633, [(2, 73), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2577794890228039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2577794890228039, 0.20378733299165752] ***
*** finished computation of 7 references, err: [Inf, 0.2577794890228039, 0.20378733299165752] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [3, 117, 15]]
** centroid: 1, normalized-entropy: 0.41211016820618146, [(1, 3), (2, 117), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [11, 119, 0]]
** centroid: 2, normalized-entropy: 0.418236569654181, [(1, 11), (2, 119)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [120, 11, 0]]
** centroid: 3, normalized-entropy: 0.41601369407155325, [(1, 120), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 19, 0]]
** centroid: 4, normalized-entropy: 0.7526269564427315, [(1, 69), (2, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33887268188367553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33887268188367553, 0.2908156940031114] ***
*** starting iteration: 2; err: [Inf, 0.33887268188367553, 0.2908156940031114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33887268188367553, 0.2908156940031114, 0.28751231333892513] ***
*** starting iteration: 3; err: [Inf, 0.33887268188367553, 0.2908156940031114, 0.28751231333892513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33887268188367553, 0.2908156940031114, 0.28751231333892513, 0.2870792523278175] ***
*** finished computation of 3 references, err: [Inf, 0.33887268188367553, 0.2908156940031114, 0.28751231333892513, 0.2870792523278175] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [236, 15, 0]]
** centroid: 1, normalized-entropy: 0.32649527274151985, [(1, 236), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 193, 20]]
** centroid: 2, normalized-entropy: 0.44934450243012564, [(2, 193), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [167, 35, 0]]
** centroid: 3, normalized-entropy: 0.6651247380179306, [(1, 167), (2, 35)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38873900956372315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38873900956372315, 0.30436856196034345] ***
*** starting iteration: 2; err: [Inf, 0.38873900956372315, 0.30436856196034345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38873900956372315, 0.30436856196034345, 0.29559886432357546] ***
*** starting iteration: 3; err: [Inf, 0.38873900956372315, 0.30436856196034345, 0.29559886432357546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38873900956372315, 0.30436856196034345, 0.29559886432357546, 0.29378462300218383] ***
*** starting iteration: 4; err: [Inf, 0.38873900956372315, 0.30436856196034345, 0.29559886432357546, 0.29378462300218383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38873900956372315, 0.30436856196034345, 0.29559886432357546, 0.29378462300218383, 0.2932526635221098] ***
*** finished computation of 3 references, err: [Inf, 0.38873900956372315, 0.30436856196034345, 0.29559886432357546, 0.29378462300218383, 0.2932526635221098] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [235, 10, 0]]
** centroid: 1, normalized-entropy: 0.2460225782203316, [(1, 235), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [164, 37, 0]]
** centroid: 2, normalized-entropy: 0.6889208290613323, [(1, 164), (2, 37)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [2, 202, 17]]
** centroid: 3, normalized-entropy: 0.29314217616356214, [(1, 2), (2, 202), (3, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38599281971562077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744] ***
*** starting iteration: 2; err: [Inf, 0.38599281971562077, 0.32971625860830744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347] ***
*** starting iteration: 3; err: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827] ***
*** starting iteration: 4; err: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452] ***
*** starting iteration: 5; err: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452, 0.313657371322394] ***
*** starting iteration: 6; err: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452, 0.313657371322394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452, 0.313657371322394, 0.2970017182907422] ***
*** starting iteration: 7; err: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452, 0.313657371322394, 0.2970017182907422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452, 0.313657371322394, 0.2970017182907422, 0.2966688706915172] ***
*** finished computation of 3 references, err: [Inf, 0.38599281971562077, 0.32971625860830744, 0.32675025855907347, 0.32496177625452827, 0.3218200215455452, 0.313657371322394, 0.2970017182907422, 0.2966688706915172] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [240, 5, 0]]
** centroid: 1, normalized-entropy: 0.14372616993938164, [(1, 240), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [141, 53, 0]]
** centroid: 2, normalized-entropy: 0.8460132299186768, [(1, 141), (2, 53)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [5, 208, 15]]
** centroid: 3, normalized-entropy: 0.315449553072834, [(1, 5), (2, 208), (3, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2374251914691661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374251914691661, 0.1729698012591348] ***
*** starting iteration: 2; err: [Inf, 0.2374251914691661, 0.1729698012591348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374251914691661, 0.1729698012591348, 0.16017104311449057] ***
*** starting iteration: 3; err: [Inf, 0.2374251914691661, 0.1729698012591348, 0.16017104311449057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2374251914691661, 0.1729698012591348, 0.16017104311449057, 0.15430287760507605] ***
*** finished computation of 7 references, err: [Inf, 0.2374251914691661, 0.1729698012591348, 0.16017104311449057, 0.15430287760507605] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 1, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [29, 83, 0]]
** centroid: 2, normalized-entropy: 0.8251252643746189, [(1, 29), (2, 83)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 11, 0]]
** centroid: 4, normalized-entropy: 0.8485481782946159, [(1, 29), (2, 11)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 117, 20]]
** centroid: 5, normalized-entropy: 0.5997019071283692, [(2, 117), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [105, 3, 0]]
** centroid: 6, normalized-entropy: 0.18312206830137262, [(1, 105), (2, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20835084122371045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20835084122371045, 0.18092711809240672] ***
*** starting iteration: 2; err: [Inf, 0.20835084122371045, 0.18092711809240672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20835084122371045, 0.18092711809240672, 0.1684830477237813] ***
*** starting iteration: 3; err: [Inf, 0.20835084122371045, 0.18092711809240672, 0.1684830477237813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20835084122371045, 0.18092711809240672, 0.1684830477237813, 0.15876717741441992] ***
*** finished computation of 7 references, err: [Inf, 0.20835084122371045, 0.18092711809240672, 0.1684830477237813, 0.15876717741441992] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [78, 61, 0]]
** centroid: 1, normalized-entropy: 0.989183154287598, [(1, 78), (2, 61)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 37, 0]]
** centroid: 2, normalized-entropy: 0.9921116920021501, [(1, 30), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 143, 17]]
** centroid: 4, normalized-entropy: 0.48850016075882835, [(2, 143), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [76, 8, 0]]
** centroid: 6, normalized-entropy: 0.45371633918694493, [(1, 76), (2, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20844818723096192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20844818723096192, 0.16633519389411097] ***
*** starting iteration: 2; err: [Inf, 0.20844818723096192, 0.16633519389411097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20844818723096192, 0.16633519389411097, 0.15749146761386648] ***
*** starting iteration: 3; err: [Inf, 0.20844818723096192, 0.16633519389411097, 0.15749146761386648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20844818723096192, 0.16633519389411097, 0.15749146761386648, 0.1534141037805841] ***
*** finished computation of 7 references, err: [Inf, 0.20844818723096192, 0.16633519389411097, 0.15749146761386648, 0.1534141037805841] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [75, 9, 0]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(1, 75), (2, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [13, 98, 0]]
** centroid: 3, normalized-entropy: 0.521016937889524, [(1, 13), (2, 98)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [106, 2, 0]]
** centroid: 4, normalized-entropy: 0.13303964861069897, [(1, 106), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 92, 0]]
** centroid: 5, normalized-entropy: 0.24988229283318547, [(1, 4), (2, 92)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 65, 15]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(2, 65), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17909849892641688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17909849892641688, 0.15867036838621437] ***
*** starting iteration: 2; err: [Inf, 0.17909849892641688, 0.15867036838621437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17909849892641688, 0.15867036838621437, 0.15525585485695004] ***
*** starting iteration: 3; err: [Inf, 0.17909849892641688, 0.15867036838621437, 0.15525585485695004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17909849892641688, 0.15867036838621437, 0.15525585485695004, 0.1536386623449327] ***
*** finished computation of 7 references, err: [Inf, 0.17909849892641688, 0.15867036838621437, 0.15525585485695004, 0.1536386623449327] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 110, 20]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 110), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 88, 0]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(1, 24), (2, 88)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [127, 29, 0]]
** centroid: 3, normalized-entropy: 0.6928098850240134, [(1, 127), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 16, 0]]
** centroid: 4, normalized-entropy: 0.7698205808588191, [(1, 55), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25062487954958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25062487954958, 0.16306921465893456] ***
*** starting iteration: 2; err: [Inf, 0.25062487954958, 0.16306921465893456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25062487954958, 0.16306921465893456, 0.15499990430382685] ***
*** starting iteration: 3; err: [Inf, 0.25062487954958, 0.16306921465893456, 0.15499990430382685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25062487954958, 0.16306921465893456, 0.15499990430382685, 0.1518966774016373] ***
*** finished computation of 7 references, err: [Inf, 0.25062487954958, 0.16306921465893456, 0.15499990430382685, 0.1518966774016373] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 55, 0]]
** centroid: 1, normalized-entropy: 0.8503821170987139, [(1, 21), (2, 55)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 84, 14]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 84), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [111, 29, 0]]
** centroid: 3, normalized-entropy: 0.7359858024909569, [(1, 111), (2, 29)]
*** center 4: selecting labels [1] (freq >= 1) [from [151, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 24, 0]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(1, 52), (2, 24)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 56, 3]]
** centroid: 6, normalized-entropy: 0.2899860470332091, [(2, 56), (3, 3)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [66, 1, 0]]
** centroid: 7, normalized-entropy: 0.11190990870168394, [(1, 66), (2, 1)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22624341711245555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22624341711245555, 0.16963663342795607] ***
*** starting iteration: 2; err: [Inf, 0.22624341711245555, 0.16963663342795607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22624341711245555, 0.16963663342795607, 0.1538020637754848] ***
*** starting iteration: 3; err: [Inf, 0.22624341711245555, 0.16963663342795607, 0.1538020637754848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22624341711245555, 0.16963663342795607, 0.1538020637754848, 0.1481455006228964] ***
*** finished computation of 7 references, err: [Inf, 0.22624341711245555, 0.16963663342795607, 0.1538020637754848, 0.1481455006228964] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [56, 30, 0]]
** centroid: 1, normalized-entropy: 0.9330252953592912, [(1, 56), (2, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 101, 0]]
** centroid: 3, normalized-entropy: 0.27425064105029284, [(1, 5), (2, 101)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 74, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 50, 15]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(2, 50), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [79, 11, 0]]
** centroid: 7, normalized-entropy: 0.5357150195407704, [(1, 79), (2, 11)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39724947516205117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39724947516205117, 0.26351075110448013] ***
*** starting iteration: 2; err: [Inf, 0.39724947516205117, 0.26351075110448013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39724947516205117, 0.26351075110448013, 0.239152657149175] ***
*** starting iteration: 3; err: [Inf, 0.39724947516205117, 0.26351075110448013, 0.239152657149175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39724947516205117, 0.26351075110448013, 0.239152657149175, 0.23412037852385245] ***
*** starting iteration: 4; err: [Inf, 0.39724947516205117, 0.26351075110448013, 0.239152657149175, 0.23412037852385245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39724947516205117, 0.26351075110448013, 0.239152657149175, 0.23412037852385245, 0.23352511491984487] ***
*** finished computation of 3 references, err: [Inf, 0.39724947516205117, 0.26351075110448013, 0.239152657149175, 0.23412037852385245, 0.23352511491984487] ***
*** center 1: selecting labels [1] (freq >= 1) [from [181, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [146, 80, 0]]
** centroid: 2, normalized-entropy: 0.9375743907892077, [(1, 146), (2, 80)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [76, 163, 20]]
** centroid: 3, normalized-entropy: 0.772778363560915, [(1, 76), (2, 163), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32254039656895883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32254039656895883, 0.2343534901430984] ***
*** starting iteration: 2; err: [Inf, 0.32254039656895883, 0.2343534901430984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32254039656895883, 0.2343534901430984, 0.22896666620820313] ***
*** starting iteration: 3; err: [Inf, 0.32254039656895883, 0.2343534901430984, 0.22896666620820313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32254039656895883, 0.2343534901430984, 0.22896666620820313, 0.22820769668859744] ***
*** finished computation of 3 references, err: [Inf, 0.32254039656895883, 0.2343534901430984, 0.22896666620820313, 0.22820769668859744] ***
*** center 1: selecting labels [1] (freq >= 1) [from [186, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [104, 136, 9]]
** centroid: 2, normalized-entropy: 0.7418377757142691, [(1, 104), (2, 136), (3, 9)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [111, 113, 8]]
** centroid: 3, normalized-entropy: 0.7456697872136702, [(1, 111), (2, 113), (3, 8)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35167423210691834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167423210691834, 0.2806190201465314] ***
*** starting iteration: 2; err: [Inf, 0.35167423210691834, 0.2806190201465314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984] ***
*** starting iteration: 3; err: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644] ***
*** starting iteration: 4; err: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644, 0.2347501036075727] ***
*** starting iteration: 5; err: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644, 0.2347501036075727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644, 0.2347501036075727, 0.23325636996322127] ***
*** starting iteration: 6; err: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644, 0.2347501036075727, 0.23325636996322127] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644, 0.2347501036075727, 0.23325636996322127, 0.23244752231957405] ***
*** finished computation of 3 references, err: [Inf, 0.35167423210691834, 0.2806190201465314, 0.24905604007618984, 0.23818619346952644, 0.2347501036075727, 0.23325636996322127, 0.23244752231957405] ***
*** center 1: selecting labels [1] (freq >= 1) [from [231, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [124, 84, 0]]
** centroid: 2, normalized-entropy: 0.9731560354421095, [(1, 124), (2, 84)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [31, 182, 15]]
** centroid: 3, normalized-entropy: 0.5736392680245149, [(1, 31), (2, 182), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23647937235106398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23647937235106398, 0.20742163873157343] ***
*** starting iteration: 2; err: [Inf, 0.23647937235106398, 0.20742163873157343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23647937235106398, 0.20742163873157343, 0.19983050745860156] ***
*** starting iteration: 3; err: [Inf, 0.23647937235106398, 0.20742163873157343, 0.19983050745860156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23647937235106398, 0.20742163873157343, 0.19983050745860156, 0.19594330960247028] ***
*** finished computation of 7 references, err: [Inf, 0.23647937235106398, 0.20742163873157343, 0.19983050745860156, 0.19594330960247028] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 115, 20]]
** centroid: 1, normalized-entropy: 0.6051865766334207, [(2, 115), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [91, 33, 0]]
** centroid: 2, normalized-entropy: 0.8358550346053404, [(1, 91), (2, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 21, 0]]
** centroid: 4, normalized-entropy: 0.710676853856123, [(1, 87), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [84, 2, 0]]
** centroid: 5, normalized-entropy: 0.15935006268563429, [(1, 84), (2, 2)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [22, 72, 0]]
** centroid: 7, normalized-entropy: 0.7849920887641585, [(1, 22), (2, 72)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24185290261949488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185290261949488, 0.22899043764444305] ***
*** starting iteration: 2; err: [Inf, 0.24185290261949488, 0.22899043764444305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185290261949488, 0.22899043764444305, 0.22360524746018282] ***
*** starting iteration: 3; err: [Inf, 0.24185290261949488, 0.22899043764444305, 0.22360524746018282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24185290261949488, 0.22899043764444305, 0.22360524746018282, 0.21894319786241967] ***
*** finished computation of 7 references, err: [Inf, 0.24185290261949488, 0.22899043764444305, 0.22360524746018282, 0.21894319786241967] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 47, 0]]
** centroid: 1, normalized-entropy: 0.9315627684809641, [(1, 25), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [31, 74, 0]]
** centroid: 2, normalized-entropy: 0.8753918540610236, [(1, 31), (2, 74)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [46, 78, 6]]
** centroid: 3, normalized-entropy: 0.7428121270515637, [(1, 46), (2, 78), (3, 6)]
*** center 4: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [72, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 7: selecting labels [1, 2, 3] (freq >= 2) [from [23, 49, 11]]
** centroid: 7, normalized-entropy: 0.850704765409833, [(1, 23), (2, 49), (3, 11)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25796178413898513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796178413898513, 0.21519025735769315] ***
*** starting iteration: 2; err: [Inf, 0.25796178413898513, 0.21519025735769315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796178413898513, 0.21519025735769315, 0.20754944728938737] ***
*** starting iteration: 3; err: [Inf, 0.25796178413898513, 0.21519025735769315, 0.20754944728938737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796178413898513, 0.21519025735769315, 0.20754944728938737, 0.20292794057538083] ***
*** finished computation of 7 references, err: [Inf, 0.25796178413898513, 0.21519025735769315, 0.20754944728938737, 0.20292794057538083] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [83, 4, 0]]
** centroid: 2, normalized-entropy: 0.2690553027246505, [(1, 83), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [105, 45, 0]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(1, 105), (2, 45)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 10, 0]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 126, 15]]
** centroid: 6, normalized-entropy: 0.48890859144051524, [(2, 126), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 9, 0]]
** centroid: 7, normalized-entropy: 0.5746356978376794, [(1, 57), (2, 9)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19766914534491595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19766914534491595, 0.18190628017771532] ***
*** finished computation of 7 references, err: [Inf, 0.19766914534491595, 0.18190628017771532] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [8, 37, 0]]
** centroid: 1, normalized-entropy: 0.6751914401458716, [(1, 8), (2, 37)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [18, 110, 10]]
** centroid: 2, normalized-entropy: 0.5794901219610941, [(1, 18), (2, 110), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 4, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [155, 0, 0]]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [69, 95, 10]]
** centroid: 6, normalized-entropy: 0.7840513900308482, [(1, 69), (2, 95), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17745502046386208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17745502046386208, 0.15402934205476781] ***
*** finished computation of 7 references, err: [Inf, 0.17745502046386208, 0.15402934205476781] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [2, 60, 1]]
** centroid: 1, normalized-entropy: 0.2018494447361296, [(1, 2), (2, 60), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 81, 16]]
** centroid: 2, normalized-entropy: 0.6460174789535751, [(2, 81), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [128, 9, 0]]
** centroid: 4, normalized-entropy: 0.349642849289134, [(1, 128), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [63, 12, 0]]
** centroid: 5, normalized-entropy: 0.634309554640566, [(1, 63), (2, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [28, 87, 0]]
** centroid: 7, normalized-entropy: 0.8007768165404425, [(1, 28), (2, 87)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22308526953858235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22308526953858235, 0.16683128726985613] ***
*** finished computation of 7 references, err: [Inf, 0.22308526953858235, 0.16683128726985613] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 98, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [8, 63, 0]]
** centroid: 3, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 4: selecting labels [1] (freq >= 1) [from [159, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 27, 0]]
** centroid: 5, normalized-entropy: 0.9100534290139191, [(1, 56), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 62, 0]]
** centroid: 6, normalized-entropy: 0.9782176659354249, [(1, 88), (2, 62)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 15]]
** centroid: 7, normalized-entropy: 0.9992492479956566, [(2, 16), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3947897612590572] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3947897612590572, 0.2998729563322382] ***
*** starting iteration: 2; err: [Inf, 0.3947897612590572, 0.2998729563322382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3947897612590572, 0.2998729563322382, 0.28839692253915444] ***
*** starting iteration: 3; err: [Inf, 0.3947897612590572, 0.2998729563322382, 0.28839692253915444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3947897612590572, 0.2998729563322382, 0.28839692253915444, 0.2869915008863275] ***
*** finished computation of 3 references, err: [Inf, 0.3947897612590572, 0.2998729563322382, 0.28839692253915444, 0.2869915008863275] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [100, 163, 17]]
** centroid: 1, normalized-entropy: 0.7762330297797871, [(1, 100), (2, 163), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 86, 0]]
** centroid: 2, normalized-entropy: 0.9883516668206291, [(1, 111), (2, 86)]
*** center 3: selecting labels [1] (freq >= 1) [from [190, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41653331794749493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41653331794749493, 0.3032529531479597] ***
*** starting iteration: 2; err: [Inf, 0.41653331794749493, 0.3032529531479597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41653331794749493, 0.3032529531479597, 0.29265508091711123] ***
*** starting iteration: 3; err: [Inf, 0.41653331794749493, 0.3032529531479597, 0.29265508091711123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41653331794749493, 0.3032529531479597, 0.29265508091711123, 0.2912501365175356] ***
*** finished computation of 3 references, err: [Inf, 0.41653331794749493, 0.3032529531479597, 0.29265508091711123, 0.2912501365175356] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [90, 166, 15]]
** centroid: 1, normalized-entropy: 0.752309712130407, [(1, 90), (2, 166), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [104, 100, 0]]
** centroid: 2, normalized-entropy: 0.9997226475394071, [(1, 104), (2, 100)]
*** center 3: selecting labels [1] (freq >= 1) [from [192, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19734346752219997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19734346752219997, 0.14918227969108055] ***
*** starting iteration: 2; err: [Inf, 0.19734346752219997, 0.14918227969108055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19734346752219997, 0.14918227969108055, 0.14489865433228938] ***
*** starting iteration: 3; err: [Inf, 0.19734346752219997, 0.14918227969108055, 0.14489865433228938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19734346752219997, 0.14918227969108055, 0.14489865433228938, 0.14340792336800434] ***
*** finished computation of 7 references, err: [Inf, 0.19734346752219997, 0.14918227969108055, 0.14489865433228938, 0.14340792336800434] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 7, 0]]
** centroid: 1, normalized-entropy: 0.40379715049939235, [(1, 80), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [88, 14, 0]]
** centroid: 2, normalized-entropy: 0.577004250315725, [(1, 88), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 72, 20]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 72), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 61, 0]]
** centroid: 5, normalized-entropy: 0.9464220508835531, [(1, 35), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 89, 0]]
** centroid: 6, normalized-entropy: 0.15240699892386778, [(1, 2), (2, 89)]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19918903882714403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19918903882714403, 0.15301470499558337] ***
*** starting iteration: 2; err: [Inf, 0.19918903882714403, 0.15301470499558337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19918903882714403, 0.15301470499558337, 0.14838867562695934] ***
*** starting iteration: 3; err: [Inf, 0.19918903882714403, 0.15301470499558337, 0.14838867562695934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19918903882714403, 0.15301470499558337, 0.14838867562695934, 0.14765639909901943] ***
*** finished computation of 7 references, err: [Inf, 0.19918903882714403, 0.15301470499558337, 0.14838867562695934, 0.14765639909901943] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 15, 0]]
** centroid: 2, normalized-entropy: 0.6587435307694671, [(1, 73), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 80, 17]]
** centroid: 3, normalized-entropy: 0.6695920597928519, [(2, 80), (3, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [24, 97, 0]]
** centroid: 5, normalized-entropy: 0.718609966948486, [(1, 24), (2, 97)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 57, 0]]
** centroid: 6, normalized-entropy: 0.9583485169215336, [(1, 35), (2, 57)]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19956743609400346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19956743609400346, 0.14812333076477407] ***
*** starting iteration: 2; err: [Inf, 0.19956743609400346, 0.14812333076477407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19956743609400346, 0.14812333076477407, 0.14425663541963343] ***
*** starting iteration: 3; err: [Inf, 0.19956743609400346, 0.14812333076477407, 0.14425663541963343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19956743609400346, 0.14812333076477407, 0.14425663541963343, 0.14360448580536841] ***
*** finished computation of 7 references, err: [Inf, 0.19956743609400346, 0.14812333076477407, 0.14425663541963343, 0.14360448580536841] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 86, 13]]
** centroid: 1, normalized-entropy: 0.5610284863400681, [(2, 86), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [81, 15, 0]]
** centroid: 3, normalized-entropy: 0.625262405223423, [(1, 81), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [53, 34, 0]]
** centroid: 4, normalized-entropy: 0.9653168212008997, [(1, 53), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 22, 0]]
** centroid: 5, normalized-entropy: 0.7601675029619658, [(1, 78), (2, 22)]
*** center 6: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 109, 2]]
** centroid: 7, normalized-entropy: 0.1301627906682592, [(2, 109), (3, 2)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9350098601595608, 0.9280058501615388, 0.9259858661056266, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8481115846385308, 0.8379607152062242, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 3, 1, 1.0, :rand, 0.6, 1) => 0.9350098601595608
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.29108421933241524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123] ***
*** starting iteration: 2; err: [Inf, 0.29108421933241524, 0.21475988565091123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197] ***
*** starting iteration: 3; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247] ***
*** starting iteration: 4; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814] ***
*** starting iteration: 5; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502] ***
*** starting iteration: 6; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327] ***
*** starting iteration: 7; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327, 0.18445664985866114] ***
*** starting iteration: 8; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327, 0.18445664985866114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327, 0.18445664985866114, 0.1828714095834956] ***
*** starting iteration: 9; err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327, 0.18445664985866114, 0.1828714095834956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327, 0.18445664985866114, 0.1828714095834956, 0.1823583789066308] ***
*** finished computation of 7 references, err: [Inf, 0.29108421933241524, 0.21475988565091123, 0.19788998219341197, 0.1933374587277247, 0.19053275058536814, 0.18822785913290502, 0.18669058156742327, 0.18445664985866114, 0.1828714095834956, 0.1823583789066308] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 23, 0]]
** centroid: 1, normalized-entropy: 0.8027381019527042, [(1, 71), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 7, 0]]
** centroid: 2, normalized-entropy: 0.42080948947668984, [(1, 75), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [97, 1, 0]]
** centroid: 3, normalized-entropy: 0.08214305133815322, [(1, 97), (2, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [63, 28, 0]]
** centroid: 5, normalized-entropy: 0.8904916402194913, [(1, 63), (2, 28)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 97, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 87, 20]]
** centroid: 7, normalized-entropy: 0.6949749673676271, [(2, 87), (3, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2663033872918188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234] ***
*** starting iteration: 2; err: [Inf, 0.2663033872918188, 0.22667724161787234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278] ***
*** starting iteration: 3; err: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832] ***
*** starting iteration: 4; err: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893] ***
*** starting iteration: 5; err: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893, 0.18699743182746054] ***
*** starting iteration: 6; err: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893, 0.18699743182746054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893, 0.18699743182746054, 0.18527126598075547] ***
*** starting iteration: 7; err: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893, 0.18699743182746054, 0.18527126598075547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893, 0.18699743182746054, 0.18527126598075547, 0.18513247732916424] ***
*** finished computation of 7 references, err: [Inf, 0.2663033872918188, 0.22667724161787234, 0.2151853606395278, 0.19972336797512832, 0.1920879531366893, 0.18699743182746054, 0.18527126598075547, 0.18513247732916424] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 75, 14]]
** centroid: 1, normalized-entropy: 0.6278191534832795, [(2, 75), (3, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 98, 3]]
** centroid: 2, normalized-entropy: 0.192900074578984, [(2, 98), (3, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [71, 2, 0]]
** centroid: 3, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [135, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [33, 48, 0]]
** centroid: 5, normalized-entropy: 0.975119064940866, [(1, 33), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 19, 0]]
** centroid: 6, normalized-entropy: 0.8060914696192223, [(1, 58), (2, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [104, 7, 0]]
** centroid: 7, normalized-entropy: 0.33948600021427877, [(1, 104), (2, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2505588212428891] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485] ***
*** starting iteration: 2; err: [Inf, 0.2505588212428891, 0.19991243193889485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543] ***
*** starting iteration: 3; err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703] ***
*** starting iteration: 4; err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475] ***
*** starting iteration: 5; err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973] ***
*** starting iteration: 6; err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973, 0.18515573727313256] ***
*** starting iteration: 7; err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973, 0.18515573727313256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973, 0.18515573727313256, 0.1840323995284993] ***
*** starting iteration: 8; err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973, 0.18515573727313256, 0.1840323995284993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973, 0.18515573727313256, 0.1840323995284993, 0.18339373141448984] ***
*** finished computation of 7 references, err: [Inf, 0.2505588212428891, 0.19991243193889485, 0.19840654590679543, 0.19731145450039703, 0.19357935448960475, 0.18798803643363973, 0.18515573727313256, 0.1840323995284993, 0.18339373141448984] ***
*** center 1: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 47, 0]]
** centroid: 2, normalized-entropy: 0.9992158792218827, [(1, 44), (2, 47)]
*** center 3: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 85, 0]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(1, 34), (2, 85)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 96, 15]]
** centroid: 6, normalized-entropy: 0.5713549744279549, [(2, 96), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 38, 0]]
** centroid: 7, normalized-entropy: 0.9757606417025202, [(1, 55), (2, 38)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2532124915593737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893] ***
*** starting iteration: 2; err: [Inf, 0.2532124915593737, 0.2087048332908893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874] ***
*** starting iteration: 3; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092] ***
*** starting iteration: 4; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328] ***
*** starting iteration: 5; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143] ***
*** starting iteration: 6; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316] ***
*** starting iteration: 7; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316, 0.14630055308828618] ***
*** starting iteration: 8; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316, 0.14630055308828618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316, 0.14630055308828618, 0.145286055479979] ***
*** starting iteration: 9; err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316, 0.14630055308828618, 0.145286055479979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316, 0.14630055308828618, 0.145286055479979, 0.14486517015825007] ***
*** finished computation of 7 references, err: [Inf, 0.2532124915593737, 0.2087048332908893, 0.1821726779956874, 0.1650594702849092, 0.15900038717896328, 0.15377229908565143, 0.14839076215552316, 0.14630055308828618, 0.145286055479979, 0.14486517015825007] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 42, 0]]
** centroid: 1, normalized-entropy: 0.9753130577847331, [(1, 61), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 24, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 72), (2, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 115, 20]]
** centroid: 4, normalized-entropy: 0.6051865766334207, [(2, 115), (3, 20)]
*** center 5: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [36, 62, 0]]
** centroid: 7, normalized-entropy: 0.9486131982385807, [(1, 36), (2, 62)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20470351892952127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20470351892952127, 0.15649141069233552] ***
*** starting iteration: 2; err: [Inf, 0.20470351892952127, 0.15649141069233552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20470351892952127, 0.15649141069233552, 0.14916222932227682] ***
*** starting iteration: 3; err: [Inf, 0.20470351892952127, 0.15649141069233552, 0.14916222932227682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20470351892952127, 0.15649141069233552, 0.14916222932227682, 0.14636109506772801] ***
*** starting iteration: 4; err: [Inf, 0.20470351892952127, 0.15649141069233552, 0.14916222932227682, 0.14636109506772801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20470351892952127, 0.15649141069233552, 0.14916222932227682, 0.14636109506772801, 0.14554532127792777] ***
*** finished computation of 7 references, err: [Inf, 0.20470351892952127, 0.15649141069233552, 0.14916222932227682, 0.14636109506772801, 0.14554532127792777] ***
*** center 1: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [23, 68, 0]]
** centroid: 4, normalized-entropy: 0.8156034512499668, [(1, 23), (2, 68)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 99, 0]]
** centroid: 5, normalized-entropy: 0.5404508712940567, [(1, 14), (2, 99)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 17]]
** centroid: 6, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 8, 0]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(1, 56), (2, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19613002081620862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19613002081620862, 0.1661397884509106] ***
*** starting iteration: 2; err: [Inf, 0.19613002081620862, 0.1661397884509106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609] ***
*** starting iteration: 3; err: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706] ***
*** starting iteration: 4; err: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706, 0.15054831380091574] ***
*** starting iteration: 5; err: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706, 0.15054831380091574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706, 0.15054831380091574, 0.14949812147224592] ***
*** starting iteration: 6; err: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706, 0.15054831380091574, 0.14949812147224592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706, 0.15054831380091574, 0.14949812147224592, 0.1489439423515767] ***
*** finished computation of 7 references, err: [Inf, 0.19613002081620862, 0.1661397884509106, 0.1571069243524609, 0.15320038090608706, 0.15054831380091574, 0.14949812147224592, 0.1489439423515767] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [10, 92, 0]]
** centroid: 1, normalized-entropy: 0.462749058578174, [(1, 10), (2, 92)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 15]]
** centroid: 2, normalized-entropy: 0.7327525499549903, [(2, 58), (3, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 16, 0]]
** centroid: 4, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [94, 13, 0]]
** centroid: 5, normalized-entropy: 0.5336439173027161, [(1, 94), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [103, 2, 0]]
** centroid: 6, normalized-entropy: 0.1360592862387751, [(1, 103), (2, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 85, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9259858661056266, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8481115846385308, 0.8379607152062242, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.20370449140869282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20370449140869282, 0.1747454287688452] ***
*** finished computation of 7 references, err: [Inf, 0.20370449140869282, 0.1747454287688452] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 66, 0]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(1, 18), (2, 66)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 45, 7]]
** centroid: 3, normalized-entropy: 0.5699613760403499, [(2, 45), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 34, 13]]
** centroid: 5, normalized-entropy: 0.8507707040532602, [(2, 34), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 21, 0]]
** centroid: 6, normalized-entropy: 0.9687003436508602, [(1, 32), (2, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [50, 77, 0]]
** centroid: 7, normalized-entropy: 0.9671463157308774, [(1, 50), (2, 77)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18293175161599756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18293175161599756, 0.14557264908465606] ***
*** finished computation of 7 references, err: [Inf, 0.18293175161599756, 0.14557264908465606] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 26, 0]]
** centroid: 1, normalized-entropy: 0.9394532068181357, [(1, 47), (2, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 31, 0]]
** centroid: 4, normalized-entropy: 0.9290083681703216, [(1, 59), (2, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [18, 98, 0]]
** centroid: 6, normalized-entropy: 0.6226343162547099, [(1, 18), (2, 98)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 94, 17]]
** centroid: 7, normalized-entropy: 0.6176751423955683, [(2, 94), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.192809266106657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.192809266106657, 0.16520772646481488] ***
*** finished computation of 7 references, err: [Inf, 0.192809266106657, 0.16520772646481488] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 111, 2]]
** centroid: 1, normalized-entropy: 0.12831912909782706, [(2, 111), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [79, 15, 0]]
** centroid: 2, normalized-entropy: 0.6332905746550958, [(1, 79), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 57, 13]]
** centroid: 3, normalized-entropy: 0.6924194863274741, [(2, 57), (3, 13)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [116, 4, 0]]
** centroid: 4, normalized-entropy: 0.2108423003185322, [(1, 116), (2, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [104, 28, 0]]
** centroid: 6, normalized-entropy: 0.7455178428108284, [(1, 104), (2, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9269808730886576, 0.9259858661056266, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8481115846385308, 0.8379607152062242, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.46286772482248173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46286772482248173, 0.3409964040581797] ***
*** starting iteration: 2; err: [Inf, 0.46286772482248173, 0.3409964040581797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231] ***
*** starting iteration: 3; err: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424] ***
*** starting iteration: 4; err: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424, 0.29571370115956747] ***
*** starting iteration: 5; err: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424, 0.29571370115956747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424, 0.29571370115956747, 0.2921157522342383] ***
*** starting iteration: 6; err: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424, 0.29571370115956747, 0.2921157522342383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424, 0.29571370115956747, 0.2921157522342383, 0.2917489289752188] ***
*** finished computation of 3 references, err: [Inf, 0.46286772482248173, 0.3409964040581797, 0.3298344569205231, 0.3188951639556424, 0.29571370115956747, 0.2921157522342383, 0.2917489289752188] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [63, 174, 20]]
** centroid: 1, normalized-entropy: 0.7349377717008173, [(1, 63), (2, 174), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [141, 69, 0]]
** centroid: 3, normalized-entropy: 0.9134601452569628, [(1, 141), (2, 69)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3774940078572623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452] ***
*** starting iteration: 2; err: [Inf, 0.3774940078572623, 0.3315386835051452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706] ***
*** starting iteration: 3; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156] ***
*** starting iteration: 4; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455] ***
*** starting iteration: 5; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667] ***
*** starting iteration: 6; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017] ***
*** starting iteration: 7; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017, 0.30478739139178523] ***
*** starting iteration: 8; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017, 0.30478739139178523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017, 0.30478739139178523, 0.2859432471300318] ***
*** starting iteration: 9; err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017, 0.30478739139178523, 0.2859432471300318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017, 0.30478739139178523, 0.2859432471300318, 0.2857741180024036] ***
*** finished computation of 3 references, err: [Inf, 0.3774940078572623, 0.3315386835051452, 0.3244508773219706, 0.3230855992787156, 0.32120180162119455, 0.3178248672691667, 0.31324465748766017, 0.30478739139178523, 0.2859432471300318, 0.2857741180024036] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [86, 148, 17]]
** centroid: 1, normalized-entropy: 0.7835410953326226, [(1, 86), (2, 148), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [117, 101, 0]]
** centroid: 2, normalized-entropy: 0.996110783725598, [(1, 117), (2, 101)]
*** center 3: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3359085014550716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064] ***
*** starting iteration: 2; err: [Inf, 0.3359085014550716, 0.328507412655064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735] ***
*** starting iteration: 3; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383] ***
*** starting iteration: 4; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823] ***
*** starting iteration: 5; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468] ***
*** starting iteration: 6; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216] ***
*** starting iteration: 7; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276] ***
*** starting iteration: 8; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276, 0.30794155625053965] ***
*** starting iteration: 9; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276, 0.30794155625053965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276, 0.30794155625053965, 0.2914359703341658] ***
*** starting iteration: 10; err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276, 0.30794155625053965, 0.2914359703341658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276, 0.30794155625053965, 0.2914359703341658, 0.29127237630234487] ***
*** finished computation of 3 references, err: [Inf, 0.3359085014550716, 0.328507412655064, 0.32702650781022735, 0.3252811516611383, 0.32360513287287823, 0.3216355466430468, 0.31895783670090216, 0.3148521095447276, 0.30794155625053965, 0.2914359703341658, 0.29127237630234487] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [78, 165, 15]]
** centroid: 1, normalized-entropy: 0.7399699058871169, [(1, 78), (2, 165), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [202, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [106, 101, 0]]
** centroid: 3, normalized-entropy: 0.9995790930470047, [(1, 106), (2, 101)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9269808730886576, 0.9259858661056266, 0.9150018281754808, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8481115846385308, 0.8379607152062242, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.33412108499439314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33412108499439314, 0.22741058239623815] ***
*** finished computation of 7 references, err: [Inf, 0.33412108499439314, 0.22741058239623815] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [82, 55, 0]]
** centroid: 2, normalized-entropy: 0.9717981514091462, [(1, 82), (2, 55)]
*** center 3: selecting labels [1] (freq >= 1) [from [187, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 52, 3]]
** centroid: 4, normalized-entropy: 0.30540057087920036, [(2, 52), (3, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [105, 22, 0]]
** centroid: 5, normalized-entropy: 0.6650368524023751, [(1, 105), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [29, 33, 0]]
** centroid: 6, normalized-entropy: 0.9969954265557693, [(1, 29), (2, 33)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 17]]
** centroid: 7, normalized-entropy: 0.9509560484549724, [(2, 10), (3, 17)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2631156473522489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2631156473522489, 0.20301098217475583] ***
*** finished computation of 7 references, err: [Inf, 0.2631156473522489, 0.20301098217475583] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [2, 106, 17]]
** centroid: 1, normalized-entropy: 0.434466299656383, [(1, 2), (2, 106), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [84, 7, 0]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(1, 84), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 30, 0]]
** centroid: 5, normalized-entropy: 0.9957274520849256, [(1, 35), (2, 30)]
*** center 6: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 106, 0]]
** centroid: 7, normalized-entropy: 0.7714652668605834, [(1, 31), (2, 106)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23620731623583602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23620731623583602, 0.20788696379508304] ***
*** finished computation of 7 references, err: [Inf, 0.23620731623583602, 0.20788696379508304] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 137, 15]]
** centroid: 1, normalized-entropy: 0.46481070884016484, [(2, 137), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 1, 0]]
** centroid: 2, normalized-entropy: 0.10106696361212422, [(1, 75), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 7, 0]]
** centroid: 4, normalized-entropy: 0.460127886147135, [(1, 65), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [93, 39, 0]]
** centroid: 5, normalized-entropy: 0.8756633923230399, [(1, 93), (2, 39)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 82, 0]]
** centroid: 6, normalized-entropy: 0.7962699368824384, [(1, 26), (2, 82)]
*** center 7: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 20)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9269808730886576, 0.9259858661056266, 0.9150018281754808, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8899618181055308, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8481115846385308, 0.8379607152062242, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.4039609600096247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4039609600096247, 0.2535333430293847] ***
*** finished computation of 3 references, err: [Inf, 0.4039609600096247, 0.2535333430293847] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [318, 41, 0]]
** centroid: 1, normalized-entropy: 0.5124739837679917, [(1, 318), (2, 41)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 177, 20]]
** centroid: 2, normalized-entropy: 0.4738043866521236, [(2, 177), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [85, 25, 0]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(1, 85), (2, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3349255987008785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3349255987008785, 0.26992795468102776] ***
*** finished computation of 3 references, err: [Inf, 0.3349255987008785, 0.26992795468102776] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [271, 44, 0]]
** centroid: 1, normalized-entropy: 0.5834068075081035, [(1, 271), (2, 44)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [8, 205, 17]]
** centroid: 2, normalized-entropy: 0.37494351074728827, [(1, 8), (2, 205), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3005377198311164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3005377198311164, 0.2453323294153099] ***
*** finished computation of 3 references, err: [Inf, 0.3005377198311164, 0.2453323294153099] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [201, 79, 0]]
** centroid: 1, normalized-entropy: 0.8583541989701244, [(1, 201), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [185, 39, 0]]
** centroid: 2, normalized-entropy: 0.6670144902221335, [(1, 185), (2, 39)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 148, 15]]
** centroid: 3, normalized-entropy: 0.44319160792916124, [(2, 148), (3, 15)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.44419556801059135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44419556801059135, 0.33429142093850867] ***
*** finished computation of 3 references, err: [Inf, 0.44419556801059135, 0.33429142093850867] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [56, 168, 20]]
** centroid: 1, normalized-entropy: 0.7280002246457425, [(1, 56), (2, 168), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [204, 75, 0]]
** centroid: 2, normalized-entropy: 0.8397622740178036, [(1, 204), (2, 75)]
*** center 3: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38183475811609713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38183475811609713, 0.2922559832892977] ***
*** finished computation of 3 references, err: [Inf, 0.38183475811609713, 0.2922559832892977] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [110, 71, 0]]
** centroid: 1, normalized-entropy: 0.9662458098868243, [(1, 110), (2, 71)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [120, 178, 17]]
** centroid: 2, normalized-entropy: 0.7716495923913975, [(1, 120), (2, 178), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [171, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3451855197573999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3451855197573999, 0.2968529079561827] ***
*** finished computation of 3 references, err: [Inf, 0.3451855197573999, 0.2968529079561827] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [44, 154, 15]]
** centroid: 1, normalized-entropy: 0.6800702111736159, [(1, 44), (2, 154), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 4, 0]]
** centroid: 2, normalized-entropy: 0.11873167080049137, [(1, 245), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [97, 108, 0]]
** centroid: 3, normalized-entropy: 0.9979220705990755, [(1, 97), (2, 108)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 22)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9269808730886576, 0.9259858661056266, 0.9150018281754808, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8899618181055308, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8520136903370435, 0.8481115846385308, 0.8379607152062242, 0.8100405795016573, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 22
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 22)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9269808730886576, 0.9259858661056266, 0.9150018281754808, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8899618181055308, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8520136903370435, 0.8481115846385308, 0.8379607152062242, 0.8100405795016573, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 22
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 22)
[0.9459759160357963, 0.9360078641515767, 0.9350098601595608, 0.9280058501615388, 0.9269808730886576, 0.9259858661056266, 0.9150018281754808, 0.9110367852882822, 0.9099968231704758, 0.9069938201674729, 0.9060048072024119, 0.9010207812603023, 0.8899618181055308, 0.8889668111224998, 0.8859698021374668, 0.8680416943889998, 0.8520136903370435, 0.8481115846385308, 0.8379607152062242, 0.8100405795016573, 0.7979926033818249, 0.7610484736233238]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9459759160357963
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20012819942331408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20012819942331408, 0.15643624077597634] ***
*** starting iteration: 2; err: [Inf, 0.20012819942331408, 0.15643624077597634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236] ***
*** starting iteration: 3; err: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005] ***
*** starting iteration: 4; err: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005, 0.14621414109366015] ***
*** starting iteration: 5; err: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005, 0.14621414109366015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005, 0.14621414109366015, 0.1449518025512807] ***
*** starting iteration: 6; err: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005, 0.14621414109366015, 0.1449518025512807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005, 0.14621414109366015, 0.1449518025512807, 0.1442290631271899] ***
*** finished computation of 7 references, err: [Inf, 0.20012819942331408, 0.15643624077597634, 0.15014318811381236, 0.14780339860823005, 0.14621414109366015, 0.1449518025512807, 0.1442290631271899] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [83, 43, 0]]
** centroid: 1, normalized-entropy: 0.9260286754524167, [(1, 83), (2, 43)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 103, 26]]
** centroid: 2, normalized-entropy: 0.7250180540934875, [(2, 103), (3, 26)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 118, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [192, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [147, 15, 0]]
** centroid: 5, normalized-entropy: 0.44506485705083854, [(1, 147), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [155, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 100, 0]]
** centroid: 7, normalized-entropy: 0.6161661934005354, [(1, 18), (2, 100)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18429546403419225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18429546403419225, 0.15524846293963493] ***
*** starting iteration: 2; err: [Inf, 0.18429546403419225, 0.15524846293963493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18429546403419225, 0.15524846293963493, 0.14694722036924213] ***
*** starting iteration: 3; err: [Inf, 0.18429546403419225, 0.15524846293963493, 0.14694722036924213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18429546403419225, 0.15524846293963493, 0.14694722036924213, 0.14349377482943237] ***
*** starting iteration: 4; err: [Inf, 0.18429546403419225, 0.15524846293963493, 0.14694722036924213, 0.14349377482943237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18429546403419225, 0.15524846293963493, 0.14694722036924213, 0.14349377482943237, 0.14285096070729197] ***
*** finished computation of 7 references, err: [Inf, 0.18429546403419225, 0.15524846293963493, 0.14694722036924213, 0.14349377482943237, 0.14285096070729197] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 61, 0]]
** centroid: 1, normalized-entropy: 0.33352200393097675, [(1, 4), (2, 61)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 16, 0]]
** centroid: 2, normalized-entropy: 0.7169622516889513, [(1, 65), (2, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 8, 0]]
** centroid: 4, normalized-entropy: 0.5851569902762294, [(1, 49), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 69, 14]]
** centroid: 5, normalized-entropy: 0.6546640527143932, [(2, 69), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [34, 39, 0]]
** centroid: 6, normalized-entropy: 0.9966132830150962, [(1, 34), (2, 39)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20112798406742513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833] ***
*** starting iteration: 2; err: [Inf, 0.20112798406742513, 0.16186572083830833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976] ***
*** starting iteration: 3; err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521] ***
*** starting iteration: 4; err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768] ***
*** starting iteration: 5; err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966] ***
*** starting iteration: 6; err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966, 0.14341570839472115] ***
*** starting iteration: 7; err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966, 0.14341570839472115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966, 0.14341570839472115, 0.14217478112876417] ***
*** starting iteration: 8; err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966, 0.14341570839472115, 0.14217478112876417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966, 0.14341570839472115, 0.14217478112876417, 0.1414660344719887] ***
*** finished computation of 7 references, err: [Inf, 0.20112798406742513, 0.16186572083830833, 0.15358198671787976, 0.1490707918256521, 0.14640358580555768, 0.14462545749451966, 0.14341570839472115, 0.14217478112876417, 0.1414660344719887] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 86, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 60, 13]]
** centroid: 4, normalized-entropy: 0.6758635715876156, [(2, 60), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 26, 0]]
** centroid: 5, normalized-entropy: 0.9871377743721862, [(1, 34), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 8, 0]]
** centroid: 6, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 26, 0]]
** centroid: 7, normalized-entropy: 0.8714630056611941, [(1, 63), (2, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2442686036042869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924] ***
*** starting iteration: 2; err: [Inf, 0.2442686036042869, 0.18594356494396924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337] ***
*** starting iteration: 3; err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183] ***
*** starting iteration: 4; err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846] ***
*** starting iteration: 5; err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266] ***
*** starting iteration: 6; err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266, 0.1476906100772321] ***
*** starting iteration: 7; err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266, 0.1476906100772321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266, 0.1476906100772321, 0.14619642920419573] ***
*** starting iteration: 8; err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266, 0.1476906100772321, 0.14619642920419573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266, 0.1476906100772321, 0.14619642920419573, 0.14568634553160517] ***
*** finished computation of 7 references, err: [Inf, 0.2442686036042869, 0.18594356494396924, 0.16671516178548337, 0.157553603567183, 0.1533779785744846, 0.15034447725862266, 0.1476906100772321, 0.14619642920419573, 0.14568634553160517] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 48, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 8), (2, 48)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 88, 12]]
** centroid: 3, normalized-entropy: 0.5293608652873645, [(2, 88), (3, 12)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 27, 0]]
** centroid: 4, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [50, 22, 0]]
** centroid: 6, normalized-entropy: 0.887976319515135, [(1, 50), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2814501178320497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814501178320497, 0.18261970335338265] ***
*** starting iteration: 2; err: [Inf, 0.2814501178320497, 0.18261970335338265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054] ***
*** starting iteration: 3; err: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595] ***
*** starting iteration: 4; err: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595, 0.1461146849214565] ***
*** starting iteration: 5; err: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595, 0.1461146849214565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595, 0.1461146849214565, 0.14384109715360682] ***
*** starting iteration: 6; err: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595, 0.1461146849214565, 0.14384109715360682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595, 0.1461146849214565, 0.14384109715360682, 0.14286187058547511] ***
*** finished computation of 7 references, err: [Inf, 0.2814501178320497, 0.18261970335338265, 0.16181334262900054, 0.15128356883488595, 0.1461146849214565, 0.14384109715360682, 0.14286187058547511] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 71, 15]]
** centroid: 2, normalized-entropy: 0.6677135405281421, [(2, 71), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 24, 0]]
** centroid: 3, normalized-entropy: 0.8858834790484443, [(1, 55), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 14, 0]]
** centroid: 4, normalized-entropy: 0.6739468651941155, [(1, 65), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 9, 0]]
** centroid: 5, normalized-entropy: 0.5535072654547254, [(1, 61), (2, 9)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 76, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19840900012850762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855] ***
*** starting iteration: 2; err: [Inf, 0.19840900012850762, 0.15799911220464855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068] ***
*** starting iteration: 3; err: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447] ***
*** starting iteration: 4; err: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064] ***
*** starting iteration: 5; err: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064, 0.14447952058096417] ***
*** starting iteration: 6; err: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064, 0.14447952058096417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064, 0.14447952058096417, 0.14325714033097028] ***
*** starting iteration: 7; err: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064, 0.14447952058096417, 0.14325714033097028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064, 0.14447952058096417, 0.14325714033097028, 0.1430510978642851] ***
*** finished computation of 7 references, err: [Inf, 0.19840900012850762, 0.15799911220464855, 0.15236876787804068, 0.14973639606684447, 0.14706890900433064, 0.14447952058096417, 0.14325714033097028, 0.1430510978642851] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 75, 17]]
** centroid: 1, normalized-entropy: 0.6904285855304167, [(2, 75), (3, 17)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 56, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 4, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 60), (2, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [70, 22, 0]]
** centroid: 6, normalized-entropy: 0.7935912300117066, [(1, 70), (2, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [46, 20, 0]]
** centroid: 7, normalized-entropy: 0.8849636363831529, [(1, 46), (2, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1657397639490664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1657397639490664, 0.14912095066253095] ***
*** starting iteration: 2; err: [Inf, 0.1657397639490664, 0.14912095066253095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1657397639490664, 0.14912095066253095, 0.1478612641673535] ***
*** starting iteration: 3; err: [Inf, 0.1657397639490664, 0.14912095066253095, 0.1478612641673535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1657397639490664, 0.14912095066253095, 0.1478612641673535, 0.1468760466342792] ***
*** finished computation of 7 references, err: [Inf, 0.1657397639490664, 0.14912095066253095, 0.1478612641673535, 0.1468760466342792] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 4, 0]]
** centroid: 1, normalized-entropy: 0.29461520565280713, [(1, 73), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 2, 0]]
** centroid: 2, normalized-entropy: 0.20307392998664567, [(1, 61), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 13]]
** centroid: 3, normalized-entropy: 0.7473944462440388, [(2, 48), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [7, 70, 0]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(1, 7), (2, 70)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [30, 61, 0]]
** centroid: 7, normalized-entropy: 0.9145891955877994, [(1, 30), (2, 61)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20612470753863454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20612470753863454, 0.15006368977203965] ***
*** starting iteration: 2; err: [Inf, 0.20612470753863454, 0.15006368977203965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865] ***
*** starting iteration: 3; err: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865, 0.14623267705272883] ***
*** starting iteration: 4; err: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865, 0.14623267705272883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865, 0.14623267705272883, 0.14472072080895304] ***
*** starting iteration: 5; err: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865, 0.14623267705272883, 0.14472072080895304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865, 0.14623267705272883, 0.14472072080895304, 0.14389083469472824] ***
*** finished computation of 7 references, err: [Inf, 0.20612470753863454, 0.15006368977203965, 0.14730971995554865, 0.14623267705272883, 0.14472072080895304, 0.14389083469472824] ***
*** center 1: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 29, 0]]
** centroid: 2, normalized-entropy: 0.9814538950336533, [(1, 21), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 20, 0]]
** centroid: 3, normalized-entropy: 0.8162554088088008, [(1, 59), (2, 20)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 76, 13]]
** centroid: 4, normalized-entropy: 0.5999108763872215, [(2, 76), (3, 13)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [84, 2, 0]]
** centroid: 7, normalized-entropy: 0.15935006268563429, [(1, 84), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19063981048483403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19063981048483403, 0.15439130857028066] ***
*** starting iteration: 2; err: [Inf, 0.19063981048483403, 0.15439130857028066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19063981048483403, 0.15439130857028066, 0.14772903318330646] ***
*** starting iteration: 3; err: [Inf, 0.19063981048483403, 0.15439130857028066, 0.14772903318330646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19063981048483403, 0.15439130857028066, 0.14772903318330646, 0.14573750297352672] ***
*** starting iteration: 4; err: [Inf, 0.19063981048483403, 0.15439130857028066, 0.14772903318330646, 0.14573750297352672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19063981048483403, 0.15439130857028066, 0.14772903318330646, 0.14573750297352672, 0.14506661596149206] ***
*** finished computation of 7 references, err: [Inf, 0.19063981048483403, 0.15439130857028066, 0.14772903318330646, 0.14573750297352672, 0.14506661596149206] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [45, 11, 0]]
** centroid: 1, normalized-entropy: 0.7147274731317893, [(1, 45), (2, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 39, 18]]
** centroid: 3, normalized-entropy: 0.8997437586982626, [(2, 39), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 60, 0]]
** centroid: 4, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 16, 0]]
** centroid: 5, normalized-entropy: 0.6751914401458716, [(1, 74), (2, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [78, 1, 0]]
** centroid: 6, normalized-entropy: 0.09794058271817412, [(1, 78), (2, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1921002053581178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921002053581178, 0.1549850327577442] ***
*** starting iteration: 2; err: [Inf, 0.1921002053581178, 0.1549850327577442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513] ***
*** starting iteration: 3; err: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692] ***
*** starting iteration: 4; err: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692, 0.14595117704500443] ***
*** starting iteration: 5; err: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692, 0.14595117704500443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692, 0.14595117704500443, 0.14434571284707637] ***
*** starting iteration: 6; err: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692, 0.14595117704500443, 0.14434571284707637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692, 0.14595117704500443, 0.14434571284707637, 0.14395140186604113] ***
*** finished computation of 7 references, err: [Inf, 0.1921002053581178, 0.1549850327577442, 0.15167921314388513, 0.14917598099028692, 0.14595117704500443, 0.14434571284707637, 0.14395140186604113] ***
*** center 1: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 9, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 63), (2, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 80, 0]]
** centroid: 4, normalized-entropy: 0.43949698692151346, [(1, 8), (2, 80)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 74, 13]]
** centroid: 5, normalized-entropy: 0.6084002154765848, [(2, 74), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [45, 14, 0]]
** centroid: 6, normalized-entropy: 0.7905013842153699, [(1, 45), (2, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [70, 15, 0]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(1, 70), (2, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2025384415499866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025384415499866, 0.15183356649428606] ***
*** starting iteration: 2; err: [Inf, 0.2025384415499866, 0.15183356649428606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025384415499866, 0.15183356649428606, 0.1412110448628664] ***
*** starting iteration: 3; err: [Inf, 0.2025384415499866, 0.15183356649428606, 0.1412110448628664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025384415499866, 0.15183356649428606, 0.1412110448628664, 0.13983823705464601] ***
*** starting iteration: 4; err: [Inf, 0.2025384415499866, 0.15183356649428606, 0.1412110448628664, 0.13983823705464601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025384415499866, 0.15183356649428606, 0.1412110448628664, 0.13983823705464601, 0.13949809316545725] ***
*** finished computation of 7 references, err: [Inf, 0.2025384415499866, 0.15183356649428606, 0.1412110448628664, 0.13983823705464601, 0.13949809316545725] ***
*** center 1: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 31, 0]]
** centroid: 3, normalized-entropy: 0.9992954443621548, [(1, 33), (2, 31)]
*** center 4: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 18, 0]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(1, 57), (2, 18)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 9]]
** centroid: 6, normalized-entropy: 0.4951734787020683, [(2, 74), (3, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [6, 69, 0]]
** centroid: 7, normalized-entropy: 0.4021791902022729, [(1, 6), (2, 69)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20408546272455716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20408546272455716, 0.15460163253359496] ***
*** starting iteration: 2; err: [Inf, 0.20408546272455716, 0.15460163253359496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476] ***
*** starting iteration: 3; err: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614] ***
*** starting iteration: 4; err: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614, 0.1442733978945762] ***
*** starting iteration: 5; err: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614, 0.1442733978945762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614, 0.1442733978945762, 0.14290022605564445] ***
*** starting iteration: 6; err: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614, 0.1442733978945762, 0.14290022605564445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614, 0.1442733978945762, 0.14290022605564445, 0.14224690425395967] ***
*** finished computation of 7 references, err: [Inf, 0.20408546272455716, 0.15460163253359496, 0.14837048836797476, 0.14598348152730614, 0.1442733978945762, 0.14290022605564445, 0.14224690425395967] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [83, 10, 0]]
** centroid: 1, normalized-entropy: 0.49241092131589825, [(1, 83), (2, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 78, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 62, 12]]
** centroid: 5, normalized-entropy: 0.6394571324851642, [(2, 62), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [54, 16, 0]]
** centroid: 6, normalized-entropy: 0.775512658133148, [(1, 54), (2, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [33, 19, 0]]
** centroid: 7, normalized-entropy: 0.9470622432515328, [(1, 33), (2, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18210262091271578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18210262091271578, 0.15284609281271697] ***
*** starting iteration: 2; err: [Inf, 0.18210262091271578, 0.15284609281271697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18210262091271578, 0.15284609281271697, 0.1493323951512575] ***
*** starting iteration: 3; err: [Inf, 0.18210262091271578, 0.15284609281271697, 0.1493323951512575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18210262091271578, 0.15284609281271697, 0.1493323951512575, 0.14778827279619872] ***
*** starting iteration: 4; err: [Inf, 0.18210262091271578, 0.15284609281271697, 0.1493323951512575, 0.14778827279619872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18210262091271578, 0.15284609281271697, 0.1493323951512575, 0.14778827279619872, 0.14705547572858632] ***
*** finished computation of 7 references, err: [Inf, 0.18210262091271578, 0.15284609281271697, 0.1493323951512575, 0.14778827279619872, 0.14705547572858632] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 16]]
** centroid: 2, normalized-entropy: 0.7120640548905481, [(2, 66), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 17, 0]]
** centroid: 3, normalized-entropy: 0.8474179614176633, [(1, 45), (2, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 2, 0]]
** centroid: 5, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 35, 0]]
** centroid: 6, normalized-entropy: 0.9923985003332222, [(1, 43), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 63, 0]]
** centroid: 7, normalized-entropy: 0.19823496409776642, [(1, 2), (2, 63)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1837951951827854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837951951827854, 0.15000515886489302] ***
*** starting iteration: 2; err: [Inf, 0.1837951951827854, 0.15000515886489302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837951951827854, 0.15000515886489302, 0.14590092529542745] ***
*** starting iteration: 3; err: [Inf, 0.1837951951827854, 0.15000515886489302, 0.14590092529542745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837951951827854, 0.15000515886489302, 0.14590092529542745, 0.144762778358534] ***
*** starting iteration: 4; err: [Inf, 0.1837951951827854, 0.15000515886489302, 0.14590092529542745, 0.144762778358534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1837951951827854, 0.15000515886489302, 0.14590092529542745, 0.144762778358534, 0.14386530547123402] ***
*** finished computation of 7 references, err: [Inf, 0.1837951951827854, 0.15000515886489302, 0.14590092529542745, 0.144762778358534, 0.14386530547123402] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 23, 0]]
** centroid: 1, normalized-entropy: 0.9603622703154779, [(1, 37), (2, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 64, 14]]
** centroid: 4, normalized-entropy: 0.6789538995185759, [(2, 64), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 71, 0]]
** centroid: 5, normalized-entropy: 0.1055910363751953, [(1, 1), (2, 71)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [40, 24, 0]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(1, 40), (2, 24)]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17360201943013817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793] ***
*** starting iteration: 2; err: [Inf, 0.17360201943013817, 0.15736075091920793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699] ***
*** starting iteration: 3; err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412] ***
*** starting iteration: 4; err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765] ***
*** starting iteration: 5; err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157] ***
*** starting iteration: 6; err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157, 0.14832994785439224] ***
*** starting iteration: 7; err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157, 0.14832994785439224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157, 0.14832994785439224, 0.14714719890616834] ***
*** starting iteration: 8; err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157, 0.14832994785439224, 0.14714719890616834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157, 0.14832994785439224, 0.14714719890616834, 0.14619437334220856] ***
*** finished computation of 7 references, err: [Inf, 0.17360201943013817, 0.15736075091920793, 0.15453787400014699, 0.1520879240776412, 0.1506924632759765, 0.14948593614064157, 0.14832994785439224, 0.14714719890616834, 0.14619437334220856] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 69, 11]]
** centroid: 1, normalized-entropy: 0.5776539033535634, [(2, 69), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 38, 0]]
** centroid: 2, normalized-entropy: 0.998781393072756, [(1, 35), (2, 38)]
*** center 3: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 21, 0]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(1, 77), (2, 21)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 53, 3]]
** centroid: 5, normalized-entropy: 0.3013786435930858, [(2, 53), (3, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [57, 12, 0]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(1, 57), (2, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21409857472777366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21409857472777366, 0.15965227094292642] ***
*** starting iteration: 2; err: [Inf, 0.21409857472777366, 0.15965227094292642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085] ***
*** starting iteration: 3; err: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702] ***
*** starting iteration: 4; err: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702, 0.14693668329156936] ***
*** starting iteration: 5; err: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702, 0.14693668329156936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702, 0.14693668329156936, 0.14482103754766285] ***
*** starting iteration: 6; err: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702, 0.14693668329156936, 0.14482103754766285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702, 0.14693668329156936, 0.14482103754766285, 0.14385101537313313] ***
*** finished computation of 7 references, err: [Inf, 0.21409857472777366, 0.15965227094292642, 0.1539122653203085, 0.1504006559578702, 0.14693668329156936, 0.14482103754766285, 0.14385101537313313] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [49, 32, 0]]
** centroid: 1, normalized-entropy: 0.9679884922470298, [(1, 49), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 14]]
** centroid: 2, normalized-entropy: 0.6641593279528072, [(2, 67), (3, 14)]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 6, 0]]
** centroid: 4, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 62, 0]]
** centroid: 6, normalized-entropy: 0.2006223243127146, [(1, 2), (2, 62)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 22, 0]]
** centroid: 7, normalized-entropy: 0.8249658680139929, [(1, 63), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22440256272722037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455] ***
*** starting iteration: 2; err: [Inf, 0.22440256272722037, 0.15535395872965455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123] ***
*** starting iteration: 3; err: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147] ***
*** starting iteration: 4; err: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978] ***
*** starting iteration: 5; err: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978, 0.14235737515613436] ***
*** starting iteration: 6; err: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978, 0.14235737515613436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978, 0.14235737515613436, 0.1406513878572732] ***
*** starting iteration: 7; err: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978, 0.14235737515613436, 0.1406513878572732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978, 0.14235737515613436, 0.1406513878572732, 0.13994142524991185] ***
*** finished computation of 7 references, err: [Inf, 0.22440256272722037, 0.15535395872965455, 0.14903592189215123, 0.14692876228690147, 0.1444318306799978, 0.14235737515613436, 0.1406513878572732, 0.13994142524991185] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 3, 0]]
** centroid: 2, normalized-entropy: 0.260862909647207, [(1, 65), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 52, 14]]
** centroid: 3, normalized-entropy: 0.7455178428108284, [(2, 52), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [13, 71, 0]]
** centroid: 5, normalized-entropy: 0.6216297820565386, [(1, 13), (2, 71)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 4, 0]]
** centroid: 7, normalized-entropy: 0.34918437350730797, [(1, 57), (2, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21105164754902944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21105164754902944, 0.1467565329782665] ***
*** starting iteration: 2; err: [Inf, 0.21105164754902944, 0.1467565329782665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21105164754902944, 0.1467565329782665, 0.14292833267804236] ***
*** starting iteration: 3; err: [Inf, 0.21105164754902944, 0.1467565329782665, 0.14292833267804236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21105164754902944, 0.1467565329782665, 0.14292833267804236, 0.14172744072321802] ***
*** starting iteration: 4; err: [Inf, 0.21105164754902944, 0.1467565329782665, 0.14292833267804236, 0.14172744072321802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21105164754902944, 0.1467565329782665, 0.14292833267804236, 0.14172744072321802, 0.1410739169921726] ***
*** finished computation of 7 references, err: [Inf, 0.21105164754902944, 0.1467565329782665, 0.14292833267804236, 0.14172744072321802, 0.1410739169921726] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 34, 0]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(1, 31), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 15]]
** centroid: 2, normalized-entropy: 0.7166336117927455, [(2, 61), (3, 15)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 21, 0]]
** centroid: 6, normalized-entropy: 0.8970964164730478, [(1, 46), (2, 21)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [78, 8, 0]]
** centroid: 7, normalized-entropy: 0.446481346896803, [(1, 78), (2, 8)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20249465118721127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076] ***
*** starting iteration: 2; err: [Inf, 0.20249465118721127, 0.17074324565567076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574] ***
*** starting iteration: 3; err: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514] ***
*** starting iteration: 4; err: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727] ***
*** starting iteration: 5; err: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727, 0.14319480491243303] ***
*** starting iteration: 6; err: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727, 0.14319480491243303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727, 0.14319480491243303, 0.14154545798059553] ***
*** starting iteration: 7; err: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727, 0.14319480491243303, 0.14154545798059553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727, 0.14319480491243303, 0.14154545798059553, 0.1407037881910801] ***
*** finished computation of 7 references, err: [Inf, 0.20249465118721127, 0.17074324565567076, 0.15809768815664574, 0.1518590517763514, 0.1459971812851727, 0.14319480491243303, 0.14154545798059553, 0.1407037881910801] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 10, 0]]
** centroid: 1, normalized-entropy: 0.5617526078313283, [(1, 66), (2, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 68, 10]]
** centroid: 2, normalized-entropy: 0.552495114325111, [(2, 68), (3, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 13, 0]]
** centroid: 3, normalized-entropy: 0.6402569436810504, [(1, 67), (2, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 36, 0]]
** centroid: 5, normalized-entropy: 0.7849920887641585, [(1, 11), (2, 36)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 70, 1]]
** centroid: 6, normalized-entropy: 0.10679203237584184, [(2, 70), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18582807403616608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18582807403616608, 0.16021346043609083] ***
*** starting iteration: 2; err: [Inf, 0.18582807403616608, 0.16021346043609083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478] ***
*** starting iteration: 3; err: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478, 0.15601496771909296] ***
*** starting iteration: 4; err: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478, 0.15601496771909296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478, 0.15601496771909296, 0.15463537573441863] ***
*** starting iteration: 5; err: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478, 0.15601496771909296, 0.15463537573441863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478, 0.15601496771909296, 0.15463537573441863, 0.15368244170676917] ***
*** finished computation of 7 references, err: [Inf, 0.18582807403616608, 0.16021346043609083, 0.15718389002047478, 0.15601496771909296, 0.15463537573441863, 0.15368244170676917] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 27, 0]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(1, 57), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 119, 7]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 119), (3, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 9, 0]]
** centroid: 3, normalized-entropy: 0.5387379148665815, [(1, 64), (2, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 35, 0]]
** centroid: 7, normalized-entropy: 0.9554189905653109, [(1, 58), (2, 35)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17934218734502794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17934218734502794, 0.15422370988130568] ***
*** starting iteration: 2; err: [Inf, 0.17934218734502794, 0.15422370988130568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753] ***
*** starting iteration: 3; err: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457] ***
*** starting iteration: 4; err: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457, 0.14285044243000447] ***
*** starting iteration: 5; err: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457, 0.14285044243000447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457, 0.14285044243000447, 0.1415286610079929] ***
*** starting iteration: 6; err: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457, 0.14285044243000447, 0.1415286610079929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457, 0.14285044243000447, 0.1415286610079929, 0.14090196489077061] ***
*** finished computation of 7 references, err: [Inf, 0.17934218734502794, 0.15422370988130568, 0.14936802877485753, 0.14505040585808457, 0.14285044243000447, 0.1415286610079929, 0.14090196489077061] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 68, 12]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 68), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 20, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 75), (2, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 25, 0]]
** centroid: 5, normalized-entropy: 0.9530483471581301, [(1, 42), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 79, 0]]
** centroid: 6, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 1, 0]]
** centroid: 7, normalized-entropy: 0.12068101401352371, [(1, 60), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18992003799974919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18992003799974919, 0.15965960893686862] ***
*** starting iteration: 2; err: [Inf, 0.18992003799974919, 0.15965960893686862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618] ***
*** starting iteration: 3; err: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618, 0.1463644142691046] ***
*** starting iteration: 4; err: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618, 0.1463644142691046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618, 0.1463644142691046, 0.1448475297279656] ***
*** starting iteration: 5; err: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618, 0.1463644142691046, 0.1448475297279656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618, 0.1463644142691046, 0.1448475297279656, 0.14393948619673028] ***
*** finished computation of 7 references, err: [Inf, 0.18992003799974919, 0.15965960893686862, 0.15001969276368618, 0.1463644142691046, 0.1448475297279656, 0.14393948619673028] ***
*** center 1: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [43, 19, 0]]
** centroid: 2, normalized-entropy: 0.8890349038123858, [(1, 43), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 78, 18]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(2, 78), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 52, 0]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(1, 4), (2, 52)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 41, 0]]
** centroid: 7, normalized-entropy: 0.9937071066045081, [(1, 34), (2, 41)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21344875915162265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601] ***
*** starting iteration: 2; err: [Inf, 0.21344875915162265, 0.1707251872131601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442] ***
*** starting iteration: 3; err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798] ***
*** starting iteration: 4; err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888] ***
*** starting iteration: 5; err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966] ***
*** starting iteration: 6; err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966, 0.1445588788581081] ***
*** starting iteration: 7; err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966, 0.1445588788581081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966, 0.1445588788581081, 0.14339515068475156] ***
*** starting iteration: 8; err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966, 0.1445588788581081, 0.14339515068475156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966, 0.1445588788581081, 0.14339515068475156, 0.14290223748609424] ***
*** finished computation of 7 references, err: [Inf, 0.21344875915162265, 0.1707251872131601, 0.15886978024337442, 0.15349448671098798, 0.14980305504798888, 0.14666518082655966, 0.1445588788581081, 0.14339515068475156, 0.14290223748609424] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 84, 10]]
** centroid: 1, normalized-entropy: 0.48890859144051524, [(2, 84), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 10, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 1, 0]]
** centroid: 3, normalized-entropy: 0.11190990870168394, [(1, 66), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [47, 17, 0]]
** centroid: 4, normalized-entropy: 0.8351164948421137, [(1, 47), (2, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 2, 0]]
** centroid: 5, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 73, 0]]
** centroid: 7, normalized-entropy: 0.10327508457163559, [(1, 1), (2, 73)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24614675186295062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24614675186295062, 0.15960057883895934] ***
*** starting iteration: 2; err: [Inf, 0.24614675186295062, 0.15960057883895934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24614675186295062, 0.15960057883895934, 0.15313254664279521] ***
*** starting iteration: 3; err: [Inf, 0.24614675186295062, 0.15960057883895934, 0.15313254664279521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24614675186295062, 0.15960057883895934, 0.15313254664279521, 0.15207435601484032] ***
*** starting iteration: 4; err: [Inf, 0.24614675186295062, 0.15960057883895934, 0.15313254664279521, 0.15207435601484032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24614675186295062, 0.15960057883895934, 0.15313254664279521, 0.15207435601484032, 0.15123751733498647] ***
*** finished computation of 7 references, err: [Inf, 0.24614675186295062, 0.15960057883895934, 0.15313254664279521, 0.15207435601484032, 0.15123751733498647] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [9, 49, 0]]
** centroid: 1, normalized-entropy: 0.6226343162547099, [(1, 9), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [85, 13, 0]]
** centroid: 2, normalized-entropy: 0.5646695797525669, [(1, 85), (2, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 64, 4]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 64), (3, 4)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 57, 7]]
** centroid: 5, normalized-entropy: 0.49802788653447644, [(2, 57), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [40, 12, 0]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(1, 40), (2, 12)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18558706913143397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18558706913143397, 0.15988884991407395] ***
*** starting iteration: 2; err: [Inf, 0.18558706913143397, 0.15988884991407395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308] ***
*** starting iteration: 3; err: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308, 0.14691766937822104] ***
*** starting iteration: 4; err: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308, 0.14691766937822104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308, 0.14691766937822104, 0.14469186594709754] ***
*** starting iteration: 5; err: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308, 0.14691766937822104, 0.14469186594709754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308, 0.14691766937822104, 0.14469186594709754, 0.14400187385082244] ***
*** finished computation of 7 references, err: [Inf, 0.18558706913143397, 0.15988884991407395, 0.15298548541404308, 0.14691766937822104, 0.14469186594709754, 0.14400187385082244] ***
*** center 1: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [29, 35, 0]]
** centroid: 2, normalized-entropy: 0.9936507116910402, [(1, 29), (2, 35)]
*** center 3: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 59, 13]]
** centroid: 4, normalized-entropy: 0.6812908868842175, [(2, 59), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 22, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 44), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [76, 12, 0]]
** centroid: 6, normalized-entropy: 0.5746356978376794, [(1, 76), (2, 12)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2050786924287677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2050786924287677, 0.15885692872852086] ***
*** starting iteration: 2; err: [Inf, 0.2050786924287677, 0.15885692872852086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212] ***
*** starting iteration: 3; err: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212, 0.14772254681587219] ***
*** starting iteration: 4; err: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212, 0.14772254681587219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212, 0.14772254681587219, 0.14646954920608551] ***
*** starting iteration: 5; err: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212, 0.14772254681587219, 0.14646954920608551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212, 0.14772254681587219, 0.14646954920608551, 0.14595917472522707] ***
*** finished computation of 7 references, err: [Inf, 0.2050786924287677, 0.15885692872852086, 0.15001408177614212, 0.14772254681587219, 0.14646954920608551, 0.14595917472522707] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 26, 0]]
** centroid: 1, normalized-entropy: 0.9517626756348312, [(1, 44), (2, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 45, 0]]
** centroid: 3, normalized-entropy: 0.9914266810680207, [(1, 56), (2, 45)]
*** center 4: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [26, 35, 0]]
** centroid: 5, normalized-entropy: 0.9842399889605549, [(1, 26), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 86, 9]]
** centroid: 7, normalized-entropy: 0.4520861986745138, [(2, 86), (3, 9)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23965326361916958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23965326361916958, 0.1749420527257025] ***
*** starting iteration: 2; err: [Inf, 0.23965326361916958, 0.1749420527257025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626] ***
*** starting iteration: 3; err: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018] ***
*** starting iteration: 4; err: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018, 0.1472198167880997] ***
*** starting iteration: 5; err: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018, 0.1472198167880997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018, 0.1472198167880997, 0.14560244160611183] ***
*** starting iteration: 6; err: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018, 0.1472198167880997, 0.14560244160611183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018, 0.1472198167880997, 0.14560244160611183, 0.1449340217995923] ***
*** finished computation of 7 references, err: [Inf, 0.23965326361916958, 0.1749420527257025, 0.1568066900316626, 0.1506759407185018, 0.1472198167880997, 0.14560244160611183, 0.1449340217995923] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 15, 0]]
** centroid: 1, normalized-entropy: 0.8246578332945033, [(1, 43), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 27, 0]]
** centroid: 2, normalized-entropy: 0.9059282160429994, [(1, 57), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [41, 44, 0]]
** centroid: 3, normalized-entropy: 0.999101248968496, [(1, 41), (2, 44)]
*** center 4: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 6, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 92, 13]]
** centroid: 7, normalized-entropy: 0.5402129815415571, [(2, 92), (3, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17770773378945887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770773378945887, 0.16041153930686414] ***
*** starting iteration: 2; err: [Inf, 0.17770773378945887, 0.16041153930686414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770773378945887, 0.16041153930686414, 0.15400504606030882] ***
*** starting iteration: 3; err: [Inf, 0.17770773378945887, 0.16041153930686414, 0.15400504606030882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770773378945887, 0.16041153930686414, 0.15400504606030882, 0.1518352026687935] ***
*** starting iteration: 4; err: [Inf, 0.17770773378945887, 0.16041153930686414, 0.15400504606030882, 0.1518352026687935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17770773378945887, 0.16041153930686414, 0.15400504606030882, 0.1518352026687935, 0.15086322076618672] ***
*** finished computation of 7 references, err: [Inf, 0.17770773378945887, 0.16041153930686414, 0.15400504606030882, 0.1518352026687935, 0.15086322076618672] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 69, 12]]
** centroid: 1, normalized-entropy: 0.6051865766334207, [(2, 69), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 23, 0]]
** centroid: 2, normalized-entropy: 0.7861044688447759, [(1, 75), (2, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [50, 1, 0]]
** centroid: 4, normalized-entropy: 0.13923299905509884, [(1, 50), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [24, 16, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 24), (2, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [9, 70, 0]]
** centroid: 7, normalized-entropy: 0.511639783631173, [(1, 9), (2, 70)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20650047619268297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404] ***
*** starting iteration: 2; err: [Inf, 0.20650047619268297, 0.18171153473388404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338] ***
*** starting iteration: 3; err: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828] ***
*** starting iteration: 4; err: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555] ***
*** starting iteration: 5; err: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555, 0.14721098631061613] ***
*** starting iteration: 6; err: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555, 0.14721098631061613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555, 0.14721098631061613, 0.14569316253624856] ***
*** starting iteration: 7; err: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555, 0.14721098631061613, 0.14569316253624856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555, 0.14721098631061613, 0.14569316253624856, 0.1449828900825232] ***
*** finished computation of 7 references, err: [Inf, 0.20650047619268297, 0.18171153473388404, 0.1656833791169338, 0.15588737338408828, 0.1503879031110555, 0.14721098631061613, 0.14569316253624856, 0.1449828900825232] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 5, 0]]
** centroid: 1, normalized-entropy: 0.5185697317883058, [(1, 38), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 43, 0]]
** centroid: 2, normalized-entropy: 0.9947688847336321, [(1, 51), (2, 43)]
*** center 3: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 68, 17]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 68), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [71, 1, 0]]
** centroid: 6, normalized-entropy: 0.1055910363751953, [(1, 71), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [14, 73, 0]]
** centroid: 7, normalized-entropy: 0.6365048555378351, [(1, 14), (2, 73)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18793995142541825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712] ***
*** starting iteration: 2; err: [Inf, 0.18793995142541825, 0.15503550835605712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384] ***
*** starting iteration: 3; err: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926] ***
*** starting iteration: 4; err: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694] ***
*** starting iteration: 5; err: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694, 0.14130515168700367] ***
*** starting iteration: 6; err: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694, 0.14130515168700367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694, 0.14130515168700367, 0.14026054346188904] ***
*** starting iteration: 7; err: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694, 0.14130515168700367, 0.14026054346188904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694, 0.14130515168700367, 0.14026054346188904, 0.13959974587429314] ***
*** finished computation of 7 references, err: [Inf, 0.18793995142541825, 0.15503550835605712, 0.14799990386888384, 0.14520357620948926, 0.14318286695936694, 0.14130515168700367, 0.14026054346188904, 0.13959974587429314] ***
*** center 1: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 23, 0]]
** centroid: 3, normalized-entropy: 0.8796975782775168, [(1, 54), (2, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 10, 0]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(1, 36), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [62, 9, 0]]
** centroid: 6, normalized-entropy: 0.5484866088431741, [(1, 62), (2, 9)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 75, 16]]
** centroid: 7, normalized-entropy: 0.6708561590207726, [(2, 75), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1990635666209273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1990635666209273, 0.15569194303266704] ***
*** starting iteration: 2; err: [Inf, 0.1990635666209273, 0.15569194303266704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1990635666209273, 0.15569194303266704, 0.146509687284939] ***
*** starting iteration: 3; err: [Inf, 0.1990635666209273, 0.15569194303266704, 0.146509687284939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1990635666209273, 0.15569194303266704, 0.146509687284939, 0.14353303357912228] ***
*** starting iteration: 4; err: [Inf, 0.1990635666209273, 0.15569194303266704, 0.146509687284939, 0.14353303357912228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1990635666209273, 0.15569194303266704, 0.146509687284939, 0.14353303357912228, 0.14273392332298682] ***
*** finished computation of 7 references, err: [Inf, 0.1990635666209273, 0.15569194303266704, 0.146509687284939, 0.14353303357912228, 0.14273392332298682] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 65, 11]]
** centroid: 1, normalized-entropy: 0.5965109917085881, [(2, 65), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [3, 83, 0]]
** centroid: 2, normalized-entropy: 0.21832103023746746, [(1, 3), (2, 83)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 2, 0]]
** centroid: 3, normalized-entropy: 0.20818094555717087, [(1, 59), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [47, 8, 0]]
** centroid: 4, normalized-entropy: 0.5983474220910422, [(1, 47), (2, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [61, 29, 0]]
** centroid: 7, normalized-entropy: 0.9067816913292788, [(1, 61), (2, 29)]
finished with 8 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 379,3 => 26,1 => 595), Dict(2 => 403,3 => 37,1 => 560))
[ Info: ===== scores for single classifier: {"micro_f1":0.937,"precision":0.937,"recall":0.937,"macro_recall":0.9502097365000591,"macro_f1":0.908175881478221,"accuracy":0.937,"class_f1":{"2":0.9174311926605503,"3":0.8505747126436781,"1":0.9565217391304348},"class_precision":{"2":0.9722222222222222,"3":0.74,"1":0.9322033898305084},"class_recall":{"2":0.8684863523573201,"3":1.0,"1":0.9821428571428571}}
[ Info: ===== scores for 1: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9801178660049628,"macro_f1":0.9732332268445573,"accuracy":0.974,"class_f1":{"2":0.9672544080604534,"3":0.9736842105263158,"1":0.9787610619469027},"class_precision":{"2":0.9820971867007673,"3":0.9487179487179487,"1":0.9701754385964912},"class_recall":{"2":0.9528535980148883,"3":1.0,"1":0.9875}}
[ Info: ===== scores for 5: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9825372208436725,"macro_f1":0.9649803751002861,"accuracy":0.973,"class_f1":{"2":0.9671132764920829,"3":0.9487179487179488,"1":0.9791099000908265},"class_precision":{"2":0.9497607655502392,"3":0.9024390243902439,"1":0.9963031423290203},"class_recall":{"2":0.9851116625310173,"3":1.0,"1":0.9625}}
[ Info: ===== scores for 7: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9827691126078223,"macro_f1":0.9612885421709193,"accuracy":0.973,"class_f1":{"2":0.9671931956257594,"3":0.9367088607594937,"1":0.9799635701275046},"class_precision":{"2":0.9476190476190476,"3":0.8809523809523809,"1":1.0},"class_recall":{"2":0.9875930521091811,"3":1.0,"1":0.9607142857142857}}
[ Info: ===== scores for 9: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9831324589389107,"macro_f1":0.9619759914013448,"accuracy":0.974,"class_f1":{"2":0.9682926829268292,"3":0.9367088607594937,"1":0.9809264305177112},"class_precision":{"2":0.9520383693045563,"3":0.8809523809523809,"1":0.9981515711645101},"class_recall":{"2":0.9851116625310173,"3":1.0,"1":0.9642857142857143}}
[ Info: ===== scores for 11: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9831324589389107,"macro_f1":0.958370288248337,"accuracy":0.974,"class_f1":{"2":0.9682926829268292,"3":0.9249999999999999,"1":0.9818181818181818},"class_precision":{"2":0.9520383693045563,"3":0.8604651162790697,"1":1.0},"class_recall":{"2":0.9851116625310173,"3":1.0,"1":0.9642857142857143}}
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.979, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.979, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.979,"k":3,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.979,"precision":0.979,"recall":0.979,"macro_recall":0.9858767576509512,"macro_f1":0.9809502656177641,"accuracy":0.979,"class_f1":{"2":0.9741697416974169,"3":0.9866666666666666,"1":0.9820143884892086},"class_precision":{"2":0.9658536585365853,"3":0.9736842105263158,"1":0.9891304347826086},"class_recall":{"2":0.9826302729528535,"3":1.0,"1":0.975}}
Test Summary: | Pass  Total
AKNC          |    8      8
[710, 1, 2, 1, 1, 2, 2, 3, 1, 2, 1, 2, 3, 3, 2, 19, 7, 2, 4, 7, 3, 4, 3, 26, 11, 1, 9, 1, 6, 1, 21, 3, 2, 8, 2, 1, 4, 12, 27, 22, 44, 17, 14, 18, 19, 12, 11, 6, 2, 15, 25, 5, 8, 14, 51, 2, 11, 1, 12, 9, 6, 34, 12, 10, 5, 12, 35, 230, 11, 9, 24, 14, 9, 12, 6, 47, 109, 26, 16, 4, 4, 40, 34, 46, 18, 16, 14, 18, 47, 18, 8, 4, 63, 47, 3, 7, 15, 34, 21, 11, 12, 49, 1, 25, 13, 1, 11, 18, 13, 36, 77, 25, 20, 6, 5, 83, 22, 11, 2, 31, 23, 1, 8, 13, 7, 14, 49, 15, 10, 23, 6, 32, 6, 26, 6, 8, 10, 97, 133, 27, 52, 23, 572, 31, 6, 23, 4, 45, 19, 20, 14, 113, 30, 2, 30, 39, 50, 2, 51, 13, 22, 20, 11, 34, 3, 20, 2, 66, 33, 11, 8, 37, 5, 15, 93, 24, 33, 24, 25, 4, 150, 55, 73, 1, 6, 39, 13, 4, 7, 3, 15, 56, 55, 21, 80, 72, 15, 43, 10, 88, 8, 76, 7, 3, 13, 64, 10, 2, 98, 5, 22, 230, 20, 1, 11, 9, 78, 6, 9, 25, 547, 4, 36, 1, 34, 33, 2, 36, 4, 22, 2, 18, 5, 7, 67, 4, 3, 42, 114, 39, 36, 4, 9, 22, 34, 72, 33, 5, 56, 3, 8, 10, 68, 5, 22, 4, 54, 119, 15, 10, 64, 34, 28, 37, 17, 10, 47, 22, 64, 11, 7, 12, 518, 22, 40, 61, 77, 171, 30, 2, 14, 1, 51, 18, 48, 45, 64, 14, 15, 81, 26, 16, 18, 36, 131, 14, 13, 15, 50, 3]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6429999999999998, speedup = 0.3071438930609155, eval_ratio = 0.077183)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4017857142857142,"recall":0.39496527777777773,"f1":null,"seconds":0.0001790504902601242,"exhaustive_search_seconds":0.0003589130938053131,"evaluations":503.703125,"distances_sum":1699.9342609302275}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5590277777777777,"recall":0.5590277777777777,"f1":null,"seconds":0.00028324685990810394,"exhaustive_search_seconds":0.0003589130938053131,"evaluations":650.3203125,"distances_sum":1626.5874164748486}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.671006944444444,"recall":0.671006944444444,"f1":0.671006944444444,"seconds":0.0005281027406454086,"exhaustive_search_seconds":0.0003589130938053131,"evaluations":792.984375,"distances_sum":1568.2645608250784}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7430555555555552,"recall":0.7430555555555552,"f1":0.7430555555555552,"seconds":0.0004868544638156891,"exhaustive_search_seconds":0.0003589130938053131,"evaluations":926.7265625,"distances_sum":1539.9039006748174}
KCenters.DeloneInvIndex> reached performance {"precision":0.805555555555555,"recall":0.805555555555555,"f1":0.805555555555555,"seconds":0.0005577150732278824,"exhaustive_search_seconds":0.0003589130938053131,"evaluations":1046.6640625,"distances_sum":1520.78879699473}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7780000000000004, speedup = 0.7661841460885831, eval_ratio = 0.10341900000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
