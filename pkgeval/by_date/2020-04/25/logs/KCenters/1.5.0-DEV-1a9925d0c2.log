Julia Version 1.5.0-DEV.684
Commit 1a9925d0c2 (2020-04-25 09:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ──────────────────── v0.4.3
  Installed Reexport ──────────────────── v0.2.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLDataPattern ─────────────── v0.5.2
  Installed DataFrames ────────────────── v0.20.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Compat ────────────────────── v3.8.0
  Installed Parsers ───────────────────── v1.0.2
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.13
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed TableTraits ───────────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SimilaritySearch ──────────── v0.3.19
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.2
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_lE71AF/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_lE71AF/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.932025450070699
[ Info: 0.8302954188982645
[ Info: 0.5548521900673707
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3341999435176452
mean(cdnet.distances) = 0.3441917477051417
mean(crand.distances) = 0.3457921422024568
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8386394855144863,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.234375,"distances_sum":2108.1986554276423}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7112594003219009,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":7.3359375,"distances_sum":1539.6326482140398}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.787671703296704,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":7.671875,"distances_sum":1808.1945789064332}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8386394855144863,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.234375,"distances_sum":2108.1986554276423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":6.571412086486816e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.8828125,"distances_sum":3000.8449625693256}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484832875457881,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.796875,"distances_sum":2818.531312573364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9114474067599073,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.640625,"distances_sum":2527.367468179055}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9257388444888452,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.59375,"distances_sum":2635.731468256561}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498569139194143,"seconds":6.778165698051453e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.8125,"distances_sum":2819.070855722926}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969442536630037,"seconds":6.571412086486816e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.8828125,"distances_sum":3000.8449625693256}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801911630036633,"seconds":7.238239049911499e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.9609375,"distances_sum":3075.957912592526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9829613095238098,"seconds":7.204711437225342e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.96875,"distances_sum":3099.5871148334477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9777358058608061,"seconds":7.08363950252533e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.96875,"distances_sum":3045.1934723208237}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238098,"seconds":7.204711437225342e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.96875,"distances_sum":3099.5871148334477}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238098,"seconds":7.204711437225342e-6,"exhaustive_search_seconds":1.000240445137024e-6,"evaluations":8.96875,"distances_sum":3099.5871148334477}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.3046875,"distances_sum":515.3119254522518}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8007123085248095,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.8671875,"distances_sum":1798.1728104800711}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7791028416028423,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.84375,"distances_sum":1677.767754047974}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6875,"f1":0.8007123085248095,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.8671875,"distances_sum":1798.1728104800711}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8063476454101463,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9140625,"distances_sum":1775.053615030694}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644917582417587,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2814.1673444437265}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9311901640026645,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.71875,"distances_sum":2560.0091616284317}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9523923992673997,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2731.745838197532}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8894350441225447,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6328125,"distances_sum":2230.1927476875976}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.866401307026308,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.546875,"distances_sum":2100.9149215204006}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644917582417587,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2814.1673444437265}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9771233974358976,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9609375,"distances_sum":2930.7595039249486}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717834249084251,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2865.2035301012174}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771233974358976,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9609375,"distances_sum":2930.7595039249486}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771233974358976,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.9609375,"distances_sum":2930.7595039249486}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1728515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1728515625,"f1":null,"seconds":2.9001384973526e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.234375,"distances_sum":479.3276667406391}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1728515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1728515625,"f1":null,"seconds":2.9001384973526e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.234375,"distances_sum":479.3276667406391}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.9863281250000001,"recall":0.5390625,"f1":0.6788103389665895,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.8046875,"distances_sum":1092.1603581345669}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":0.9777343749999998,"recall":0.638671875,"f1":0.760296734515485,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.21875,"distances_sum":1359.6400666784486}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.638671875,"state":{"ssize":4,"bsize":4},"perf":{"precision":0.9777343749999998,"recall":0.638671875,"f1":0.760296734515485,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.21875,"distances_sum":1359.6400666784486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9908110119047618,"recall":0.744140625,"f1":0.8409408300033305,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.859375,"distances_sum":1676.1805738448497}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9856770833333335,"recall":0.826171875,"f1":0.891237408424909,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.078125,"distances_sum":1967.0589875201993}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9856956845238094,"recall":0.822265625,"f1":0.8893374854312361,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.984375,"distances_sum":1954.668342181755}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":0.9856770833333335,"recall":0.826171875,"f1":0.891237408424909,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.078125,"distances_sum":1967.0589875201993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9875558035714286,"recall":0.8896484375,"f1":0.931987153471529,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6484375,"distances_sum":2242.83281601858}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9865141369047619,"recall":0.880859375,"f1":0.9251994099650355,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.578125,"distances_sum":2206.7071837862277}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":10}, perf: {"precision":0.9854631696428572,"recall":0.912109375,"f1":0.9445348271520151,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":2301.825287250926}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9852771577380952,"recall":0.8974609375,"f1":0.9349423363095242,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6796875,"distances_sum":2267.5124276836973}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":4,"bsize":10},"perf":{"precision":0.9854631696428572,"recall":0.912109375,"f1":0.9445348271520151,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":2301.825287250926}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":4,"bsize":10},"perf":{"precision":0.9854631696428572,"recall":0.912109375,"f1":0.9445348271520151,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":2301.825287250926}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8015933719058727,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.5546875,"distances_sum":1477.636438139479}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8260338619713627,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.703125,"distances_sum":1590.2120206792092}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7197265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7197265625,"f1":0.8260338619713627,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.703125,"distances_sum":1590.2120206792092}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.912087912087913,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.46875,"distances_sum":2087.722646356664}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9249542124542133,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.546875,"distances_sum":2177.112087058614}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9249542124542133,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.546875,"distances_sum":2177.112087058614}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9710222069597074,"seconds":6.813555955886841e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.828125,"distances_sum":2464.5981673378874}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802204,"seconds":6.3925981521606445e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.6953125,"distances_sum":2399.26177252322}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9710222069597074,"seconds":6.813555955886841e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.828125,"distances_sum":2464.5981673378874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9710222069597074,"seconds":6.813555955886841e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.828125,"distances_sum":2464.5981673378874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2431640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2431640625,"f1":null,"seconds":4.190951585769653e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.5,"distances_sum":612.9802842905286}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.6171875,"distances_sum":767.5702001571991}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7900337509712516,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.5,"distances_sum":1459.1950993801067}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.7900337509712516,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.5,"distances_sum":1459.1950993801067}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9073837620712627,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.4921875,"distances_sum":2094.752813430443}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8707422785547794,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.84375,"distances_sum":1844.6886361413995}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8061459373959381,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.5859375,"distances_sum":1513.7351530351127}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9040069305694314,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.296875,"distances_sum":2047.5404196358354}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9073837620712627,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.4921875,"distances_sum":2094.752813430443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9551396520146527,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.84375,"distances_sum":2347.740530196216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9569826007326012,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.765625,"distances_sum":2408.8099609769233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544127747252754,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.875,"distances_sum":2321.3974739263526}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9182406135531144,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.5078125,"distances_sum":2124.5791300694264}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9569826007326012,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.765625,"distances_sum":2408.8099609769233}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9569826007326012,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.765625,"distances_sum":2408.8099609769233}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7995965839715848,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.78125,"distances_sum":1491.893361860527}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7130536130536137,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.3359375,"distances_sum":1178.6086864485633}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7995965839715848,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.78125,"distances_sum":1491.893361860527}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8020951270951279,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.75,"distances_sum":1487.1175602842538}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9097647144522151,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.4609375,"distances_sum":2063.310287241412}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9140312812187819,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.4453125,"distances_sum":2083.659961756261}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9230774433899442,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.71875,"distances_sum":2124.564278598735}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8574357933732942,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.140625,"distances_sum":1755.3727105335768}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9230774433899442,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.71875,"distances_sum":2124.564278598735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9738495879120883,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.90625,"distances_sum":2486.777108879809}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9310725732600739,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.71875,"distances_sum":2200.4988507728276}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9473271520146523,"seconds":4.233792424201965e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8203125,"distances_sum":2309.681507072286}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586538461538465,"seconds":4.30084764957428e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8671875,"distances_sum":2374.498311207944}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640109890109894,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.890625,"distances_sum":2413.801060822316}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738495879120883,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.90625,"distances_sum":2486.777108879809}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738495879120883,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.90625,"distances_sum":2486.777108879809}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8574873043623051,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":7.9609375,"distances_sum":1874.8825661394064}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8574873043623051,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":7.9609375,"distances_sum":1874.8825661394064}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9248798076923082,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.6015625,"distances_sum":2283.2018682812372}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9110639360639369,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.3046875,"distances_sum":2168.551804460189}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9424023892773898,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.65625,"distances_sum":2453.8242028115487}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9424023892773898,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.65625,"distances_sum":2453.8242028115487}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9564560439560444,"seconds":3.816559910774231e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8359375,"distances_sum":2475.3381804130086}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598099816849821,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.7578125,"distances_sum":2523.4907839971015}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9444831210456216,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.71875,"distances_sum":2440.745925871962}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976173305860806,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.9140625,"distances_sum":2613.572987582141}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688988095238102,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.8828125,"distances_sum":2561.3218021980206}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9527930402930408,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.6796875,"distances_sum":2530.4742505054373}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976173305860806,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.9140625,"distances_sum":2613.572987582141}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.976173305860806,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.1026859283447266e-6,"evaluations":8.9140625,"distances_sum":2613.572987582141}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":2.6114284992218018e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.0546875,"distances_sum":874.0083689177711}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6959120740370744,"seconds":2.8423964977264404e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.796875,"distances_sum":1206.3131053128213}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8726310148185158,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.9140625,"distances_sum":1945.165485194622}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8726310148185158,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.9140625,"distances_sum":1945.165485194622}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8949550449550457,"seconds":3.4030526876449585e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.203125,"distances_sum":2114.5539812106863}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8949550449550457,"seconds":3.4030526876449585e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.203125,"distances_sum":2114.5539812106863}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589915293040299,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.828125,"distances_sum":2523.980244262982}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9550995879120887,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.7734375,"distances_sum":2547.798963350645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9489442848817853,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.7734375,"distances_sum":2467.936594131339}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9338827838827846,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.5859375,"distances_sum":2364.8092046856236}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9221325549450557,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.5546875,"distances_sum":2286.725386983969}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9589915293040299,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.828125,"distances_sum":2523.980244262982}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9589915293040299,"seconds":3.861263394355774e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.828125,"distances_sum":2523.980244262982}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":1.9241124391555786e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.8203125,"distances_sum":568.9912626863411}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":1.9241124391555786e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.8203125,"distances_sum":568.9912626863411}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7833812021312029,"seconds":3.1329691410064697e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.5703125,"distances_sum":1463.0054909762605}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8630723443223453,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.296875,"distances_sum":1705.0500639198567}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8630723443223453,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.296875,"distances_sum":1705.0500639198567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9360467657342662,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.859375,"distances_sum":2060.639638286106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9305548618048624,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.78125,"distances_sum":2042.3609306437088}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9320658508158517,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8671875,"distances_sum":2019.5860188676156}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9360467657342662,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.859375,"distances_sum":2060.639638286106}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9741128663003666,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9609375,"distances_sum":2291.471326451629}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685840201465205,"seconds":3.995373845100403e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.953125,"distances_sum":2257.158351294314}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227112,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.84375,"distances_sum":2261.3616514158966}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9391140109890117,"seconds":3.7159770727157593e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.921875,"distances_sum":2032.8605736158174}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9741128663003666,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9609375,"distances_sum":2291.471326451629}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9741128663003666,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9609375,"distances_sum":2291.471326451629}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8537582209457215,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.0625,"distances_sum":1473.2376308291625}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":1.9278377294540405e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":5.7578125,"distances_sum":527.3739542025194}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8537582209457215,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.0625,"distances_sum":1473.2376308291625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8560240107115115,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.1171875,"distances_sum":1543.4449926346572}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.907758387445888,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.4296875,"distances_sum":1775.9282262267534}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.907758387445888,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.4296875,"distances_sum":1775.9282262267534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9135702838827847,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.53125,"distances_sum":1777.583657043683}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.849609375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9135702838827847,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.53125,"distances_sum":1777.583657043683}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.849609375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9135702838827847,"seconds":3.468245267868042e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":8.53125,"distances_sum":1777.583657043683}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7839164307914315,"seconds":3.1366944313049316e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.71875,"distances_sum":1187.9346463198444}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.41796875,"f1":0.5624292374292372,"seconds":2.5331974029541016e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.609375,"distances_sum":734.4235730835624}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2587890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2587890625,"f1":null,"seconds":2.3152679204940796e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":6.5546875,"distances_sum":485.27167140152227}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7839164307914315,"seconds":3.1366944313049316e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.71875,"distances_sum":1187.9346463198444}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499656593406599,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5703125,"distances_sum":1883.371341515146}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9059555028305036,"seconds":3.686174750328064e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.4375,"distances_sum":1650.1176948603973}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8704389360639369,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.1796875,"distances_sum":1499.1639007401639}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8081148018648027,"seconds":3.1460076570510864e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":7.7890625,"distances_sum":1286.491095507914}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9499656593406599,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.5703125,"distances_sum":1883.371341515146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614983974358978,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.828125,"distances_sum":1959.8686267053336}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.95977303946054,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.8046875,"distances_sum":1963.1319568272902}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614983974358978,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.828125,"distances_sum":1959.8686267053336}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614983974358978,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":8.754432201385498e-7,"evaluations":8.828125,"distances_sum":1959.8686267053336}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8600519272394279,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.1953125,"distances_sum":1461.4811488414603}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8170308857808867,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":7.8984375,"distances_sum":1281.9202938497822}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59765625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.59765625,"f1":0.7337738650238658,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":7.65625,"distances_sum":1036.3412796712366}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8600519272394279,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.1953125,"distances_sum":1461.4811488414603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552884615384619,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.78125,"distances_sum":1916.803304662846}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467319139194144,"seconds":6.362795829772949e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.546875,"distances_sum":1870.9334147789205}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9481799450549457,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.71875,"distances_sum":1893.2381767105662}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8703962703962713,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.1640625,"distances_sum":1481.9596240427948}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9552884615384619,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.78125,"distances_sum":1916.803304662846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719379578754583,"seconds":6.5676867961883545e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.8984375,"distances_sum":2018.363907001606}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807119963369966,"seconds":6.724148988723755e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.953125,"distances_sum":2072.79399262554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904765,"seconds":6.7818909883499146e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.953125,"distances_sum":2066.844148198101}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665407509157512,"seconds":7.2624534368515015e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.8671875,"distances_sum":1988.349969413232}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300368,"seconds":6.807968020439148e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.8515625,"distances_sum":1968.5829258739373}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9597730394605397,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.8046875,"distances_sum":1976.650205017601}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617216117216123,"seconds":6.746500730514526e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.7734375,"distances_sum":1983.3545702200029}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369966,"seconds":6.724148988723755e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.953125,"distances_sum":2072.79399262554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369966,"seconds":6.724148988723755e-6,"exhaustive_search_seconds":5.137547850608826e-5,"evaluations":8.953125,"distances_sum":2072.79399262554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4267578125,"f1":0.5738560051060051,"seconds":4.237517714500427e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.2734375,"distances_sum":801.7476498179262}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.03125,"distances_sum":1127.3137438863441}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7156591672216679,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.078125,"distances_sum":1078.6387343414135}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7156591672216679,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.078125,"distances_sum":1078.6387343414135}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8075672591297599,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.6640625,"distances_sum":1396.3550389886143}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8156331515706524,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.6328125,"distances_sum":1431.3952043459715}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9129266566766573,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3515625,"distances_sum":1822.0306058651204}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9129266566766573,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.3515625,"distances_sum":1822.0306058651204}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9395234973359978,"seconds":6.701797246932983e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.546875,"distances_sum":2001.1950631636148}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.936343864468865,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5078125,"distances_sum":1997.6990161643712}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544356684981691,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7578125,"distances_sum":2081.9381173133006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633702,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2175.5387179434883}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546359890109898,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7734375,"distances_sum":2055.1194649203553}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633702,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2175.5387179434883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684008699633702,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2175.5387179434883}}, n: 9
mean(cfft.distances) = 0.587567166424294
mean(cdnet.distances) = 0.8544763160730989
mean(crand.distances) = 0.34919321733168135
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8533333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8533333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333332
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8555555555555555
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8755555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.831111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8422222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666667
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.96
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.96
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.96
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.96
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.9066666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 10, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 13 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 3]
acc = 0.9466666666666667
*** finished computation of 12 references, err: [Inf, 0.5611095135410626] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 22]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 24), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 8: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 12: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.9
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2803006307459674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751] ***
*** starting iteration: 2; err: [Inf, 0.2803006307459674, 0.2262575442723751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734] ***
*** starting iteration: 3; err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682] ***
*** starting iteration: 4; err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016] ***
*** starting iteration: 5; err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226] ***
*** starting iteration: 6; err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226, 0.19198848868093757] ***
*** starting iteration: 7; err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226, 0.19198848868093757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226, 0.19198848868093757, 0.18961762225216217] ***
*** starting iteration: 8; err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226, 0.19198848868093757, 0.18961762225216217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226, 0.19198848868093757, 0.18961762225216217, 0.1892896106119852] ***
*** finished computation of 7 references, err: [Inf, 0.2803006307459674, 0.2262575442723751, 0.21169734200778734, 0.2012002262770682, 0.19684266080582016, 0.19430392087079226, 0.19198848868093757, 0.18961762225216217, 0.1892896106119852] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 35, 0]]
** centroid: 1, normalized-entropy: 0.961236604722876, [(1, 56), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 38, 0]]
** centroid: 2, normalized-entropy: 0.9007196798623592, [(1, 82), (2, 38)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 116, 26]]
** centroid: 3, normalized-entropy: 0.6868088934028034, [(2, 116), (3, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 29, 0]]
** centroid: 4, normalized-entropy: 0.9067816913292788, [(1, 61), (2, 29)]
*** center 5: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39155588286590426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39155588286590426, 0.30389153997920026] ***
*** starting iteration: 2; err: [Inf, 0.39155588286590426, 0.30389153997920026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39155588286590426, 0.30389153997920026, 0.29755325719166] ***
*** starting iteration: 3; err: [Inf, 0.39155588286590426, 0.30389153997920026, 0.29755325719166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39155588286590426, 0.30389153997920026, 0.29755325719166, 0.29494114614136563] ***
*** finished computation of 3 references, err: [Inf, 0.39155588286590426, 0.30389153997920026, 0.29755325719166, 0.29494114614136563] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [94, 146, 26]]
** centroid: 1, normalized-entropy: 0.8411952948914155, [(1, 94), (2, 146), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [120, 72, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 120), (2, 72)]
*** center 3: selecting labels [1] (freq >= 1) [from [208, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4383434452607982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4383434452607982, 0.29403185066131726] ***
*** starting iteration: 2; err: [Inf, 0.4383434452607982, 0.29403185066131726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4383434452607982, 0.29403185066131726, 0.28580032967902286] ***
*** starting iteration: 3; err: [Inf, 0.4383434452607982, 0.29403185066131726, 0.28580032967902286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4383434452607982, 0.29403185066131726, 0.28580032967902286, 0.28412090642084514] ***
*** finished computation of 3 references, err: [Inf, 0.4383434452607982, 0.29403185066131726, 0.28580032967902286, 0.28412090642084514] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [249, 17, 0]]
** centroid: 1, normalized-entropy: 0.3427736032222124, [(1, 249), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 172, 26]]
** centroid: 2, normalized-entropy: 0.5610284863400681, [(2, 172), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [151, 52, 0]]
** centroid: 3, normalized-entropy: 0.8208926611190497, [(1, 151), (2, 52)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3883080786915086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3883080786915086, 0.30522712235753685] ***
*** starting iteration: 2; err: [Inf, 0.3883080786915086, 0.30522712235753685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3883080786915086, 0.30522712235753685, 0.29157403697618567] ***
*** starting iteration: 3; err: [Inf, 0.3883080786915086, 0.30522712235753685, 0.29157403697618567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3883080786915086, 0.30522712235753685, 0.29157403697618567, 0.28858847208488647] ***
*** finished computation of 3 references, err: [Inf, 0.3883080786915086, 0.30522712235753685, 0.29157403697618567, 0.28858847208488647] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [95, 154, 18]]
** centroid: 1, normalized-entropy: 0.7890775036631575, [(1, 95), (2, 154), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [115, 97, 0]]
** centroid: 2, normalized-entropy: 0.9947935604558664, [(1, 115), (2, 97)]
*** center 3: selecting labels [1] (freq >= 1) [from [188, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41236180051540333] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41236180051540333, 0.2981161851598112] ***
*** finished computation of 3 references, err: [Inf, 0.41236180051540333, 0.2981161851598112] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [295, 32, 0]]
** centroid: 1, normalized-entropy: 0.4621728574445197, [(1, 295), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 143, 26]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 143), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [127, 43, 0]]
** centroid: 3, normalized-entropy: 0.8159065851244356, [(1, 127), (2, 43)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38152912375831355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38152912375831355, 0.31157271770377837] ***
*** finished computation of 3 references, err: [Inf, 0.38152912375831355, 0.31157271770377837] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [282, 58, 0]]
** centroid: 1, normalized-entropy: 0.6590486446851754, [(1, 282), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [118, 40, 0]]
** centroid: 2, normalized-entropy: 0.8162554088088008, [(1, 118), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 143, 26]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 143), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40022321690203455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40022321690203455, 0.2999731314423001] ***
*** finished computation of 3 references, err: [Inf, 0.40022321690203455, 0.2999731314423001] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [282, 35, 0]]
** centroid: 1, normalized-entropy: 0.5011516895415095, [(1, 282), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 162, 18]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 162), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [116, 54, 0]]
** centroid: 3, normalized-entropy: 0.9018043446575508, [(1, 116), (2, 54)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2774268734105479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774268734105479, 0.21844620209793258] ***
*** starting iteration: 2; err: [Inf, 0.2774268734105479, 0.21844620209793258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044] ***
*** starting iteration: 3; err: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044, 0.19775931089641763] ***
*** starting iteration: 4; err: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044, 0.19775931089641763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044, 0.19775931089641763, 0.19105041852134322] ***
*** starting iteration: 5; err: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044, 0.19775931089641763, 0.19105041852134322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044, 0.19775931089641763, 0.19105041852134322, 0.19011725457818032] ***
*** finished computation of 7 references, err: [Inf, 0.2774268734105479, 0.21844620209793258, 0.20538819017450044, 0.19775931089641763, 0.19105041852134322, 0.19011725457818032] ***
*** center 1: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 40, 0]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(1, 64), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [87, 33, 0]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(1, 87), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 44, 0]]
** centroid: 4, normalized-entropy: 0.9999046950184836, [(1, 43), (2, 44)]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 124, 26]]
** centroid: 6, normalized-entropy: 0.6652735227649414, [(2, 124), (3, 26)]
*** center 7: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27888386420863004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591] ***
*** starting iteration: 2; err: [Inf, 0.27888386420863004, 0.2261046804906591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157] ***
*** starting iteration: 3; err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124] ***
*** starting iteration: 4; err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417] ***
*** starting iteration: 5; err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954] ***
*** starting iteration: 6; err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954, 0.18571793949273394] ***
*** starting iteration: 7; err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954, 0.18571793949273394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954, 0.18571793949273394, 0.18371335890093843] ***
*** starting iteration: 8; err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954, 0.18571793949273394, 0.18371335890093843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954, 0.18571793949273394, 0.18371335890093843, 0.18298474619897415] ***
*** finished computation of 7 references, err: [Inf, 0.27888386420863004, 0.2261046804906591, 0.21317973018748157, 0.19644514515415124, 0.1924283137835417, 0.18893640461018954, 0.18571793949273394, 0.18371335890093843, 0.18298474619897415] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 7, 0]]
** centroid: 1, normalized-entropy: 0.3852851190780996, [(1, 86), (2, 7)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 85, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 33, 0]]
** centroid: 3, normalized-entropy: 0.8517608318524026, [(1, 86), (2, 33)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 87, 18]]
** centroid: 4, normalized-entropy: 0.6609623351442084, [(2, 87), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 39, 0]]
** centroid: 6, normalized-entropy: 0.9463439981707659, [(1, 68), (2, 39)]
*** center 7: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34195000335837045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34195000335837045, 0.2413531551728383] ***
*** starting iteration: 2; err: [Inf, 0.34195000335837045, 0.2413531551728383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34195000335837045, 0.2413531551728383, 0.2313900616417804] ***
*** starting iteration: 3; err: [Inf, 0.34195000335837045, 0.2413531551728383, 0.2313900616417804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34195000335837045, 0.2413531551728383, 0.2313900616417804, 0.219940701399597] ***
*** finished computation of 7 references, err: [Inf, 0.34195000335837045, 0.2413531551728383, 0.2313900616417804, 0.219940701399597] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [4, 111, 26]]
** centroid: 1, normalized-entropy: 0.5471867912666127, [(1, 4), (2, 111), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 38, 0]]
** centroid: 3, normalized-entropy: 0.9948631079048572, [(1, 45), (2, 38)]
*** center 4: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [80, 69, 0]]
** centroid: 7, normalized-entropy: 0.9960649291287208, [(1, 80), (2, 69)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26613690529152684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26613690529152684, 0.21841329149901867] ***
*** starting iteration: 2; err: [Inf, 0.26613690529152684, 0.21841329149901867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26613690529152684, 0.21841329149901867, 0.20381893591070058] ***
*** starting iteration: 3; err: [Inf, 0.26613690529152684, 0.21841329149901867, 0.20381893591070058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26613690529152684, 0.21841329149901867, 0.20381893591070058, 0.1968098730323599] ***
*** finished computation of 7 references, err: [Inf, 0.26613690529152684, 0.21841329149901867, 0.20381893591070058, 0.1968098730323599] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 66, 0]]
** centroid: 1, normalized-entropy: 0.9420365814945866, [(1, 37), (2, 66)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 120, 26]]
** centroid: 2, normalized-entropy: 0.6758635715876156, [(2, 120), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 3, 0]]
** centroid: 3, normalized-entropy: 0.23987382528036535, [(1, 73), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [99, 4, 0]]
** centroid: 4, normalized-entropy: 0.23692474671835093, [(1, 99), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 48, 0]]
** centroid: 5, normalized-entropy: 0.980218957072321, [(1, 67), (2, 48)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2629106541435099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629106541435099, 0.204715706384287] ***
*** starting iteration: 2; err: [Inf, 0.2629106541435099, 0.204715706384287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629106541435099, 0.204715706384287, 0.1941717772017131] ***
*** starting iteration: 3; err: [Inf, 0.2629106541435099, 0.204715706384287, 0.1941717772017131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629106541435099, 0.204715706384287, 0.1941717772017131, 0.19083979920130864] ***
*** finished computation of 7 references, err: [Inf, 0.2629106541435099, 0.204715706384287, 0.1941717772017131, 0.19083979920130864] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [110, 17, 0]]
** centroid: 1, normalized-entropy: 0.5679253419771396, [(1, 110), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 81, 3]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 81), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 63, 15]]
** centroid: 3, normalized-entropy: 0.7062740891876008, [(2, 63), (3, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 21, 0]]
** centroid: 4, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 69, 0]]
** centroid: 5, normalized-entropy: 0.4434581453896789, [(1, 7), (2, 69)]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2731971905647858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2731971905647858, 0.22347514310784572] ***
*** starting iteration: 2; err: [Inf, 0.2731971905647858, 0.22347514310784572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2731971905647858, 0.22347514310784572, 0.20656725632966505] ***
*** starting iteration: 3; err: [Inf, 0.2731971905647858, 0.22347514310784572, 0.20656725632966505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2731971905647858, 0.22347514310784572, 0.20656725632966505, 0.19564546474224856] ***
*** finished computation of 7 references, err: [Inf, 0.2731971905647858, 0.22347514310784572, 0.20656725632966505, 0.19564546474224856] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 23, 0]]
** centroid: 1, normalized-entropy: 0.8243633538094403, [(1, 66), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 99, 26]]
** centroid: 2, normalized-entropy: 0.737642380185689, [(2, 99), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [129, 26, 0]]
** centroid: 3, normalized-entropy: 0.652513123846701, [(1, 129), (2, 26)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 4, 0]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(1, 40), (2, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24486841170977372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486841170977372, 0.19993898411025887] ***
*** starting iteration: 2; err: [Inf, 0.24486841170977372, 0.19993898411025887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486841170977372, 0.19993898411025887, 0.1935524557866547] ***
*** starting iteration: 3; err: [Inf, 0.24486841170977372, 0.19993898411025887, 0.1935524557866547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486841170977372, 0.19993898411025887, 0.1935524557866547, 0.1897556986198991] ***
*** finished computation of 7 references, err: [Inf, 0.24486841170977372, 0.19993898411025887, 0.1935524557866547, 0.1897556986198991] ***
*** center 1: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 2]]
** centroid: 2, normalized-entropy: 0.18927843126120178, [(2, 67), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 66, 24]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 66), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 70, 0]]
** centroid: 4, normalized-entropy: 0.7126368350739763, [(1, 17), (2, 70)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [86, 15, 0]]
** centroid: 5, normalized-entropy: 0.6061112071230008, [(1, 86), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [110, 23, 0]]
** centroid: 7, normalized-entropy: 0.6643689507115365, [(1, 110), (2, 23)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2738439102934302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2738439102934302, 0.20941912552908712] ***
*** starting iteration: 2; err: [Inf, 0.2738439102934302, 0.20941912552908712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2738439102934302, 0.20941912552908712, 0.1975478633178462] ***
*** starting iteration: 3; err: [Inf, 0.2738439102934302, 0.20941912552908712, 0.1975478633178462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2738439102934302, 0.20941912552908712, 0.1975478633178462, 0.19168782518615296] ***
*** finished computation of 7 references, err: [Inf, 0.2738439102934302, 0.20941912552908712, 0.1975478633178462, 0.19168782518615296] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [103, 9, 0]]
** centroid: 1, normalized-entropy: 0.40343635676427997, [(1, 103), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [44, 59, 0]]
** centroid: 2, normalized-entropy: 0.984646826868755, [(1, 44), (2, 59)]
*** center 3: selecting labels [1] (freq >= 1) [from [142, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [106, 2, 0]]
** centroid: 4, normalized-entropy: 0.13303964861069897, [(1, 106), (2, 2)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 67, 1]]
** centroid: 5, normalized-entropy: 0.11058084476988722, [(2, 67), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 25, 17]]
** centroid: 6, normalized-entropy: 0.9736680645496202, [(2, 25), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 89, 0]]
** centroid: 7, normalized-entropy: 0.20731018585948177, [(1, 3), (2, 89)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2031111499859585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2031111499859585, 0.16915404016512806] ***
*** finished computation of 7 references, err: [Inf, 0.2031111499859585, 0.16915404016512806] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 47, 26]]
** centroid: 1, normalized-entropy: 0.9394532068181357, [(2, 47), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [89, 15, 0]]
** centroid: 3, normalized-entropy: 0.5952124653513116, [(1, 89), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 76, 0]]
** centroid: 4, normalized-entropy: 0.9744894033980525, [(1, 52), (2, 76)]
*** center 5: selecting labels [1] (freq >= 2) [from [133, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [21, 80, 0]]
** centroid: 6, normalized-entropy: 0.7374895672137457, [(1, 21), (2, 80)]
*** center 7: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1682938733871194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1682938733871194, 0.15121510640489053] ***
*** finished computation of 7 references, err: [Inf, 0.1682938733871194, 0.15121510640489053] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 34, 0]]
** centroid: 1, normalized-entropy: 0.9813387358307915, [(1, 47), (2, 34)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [136, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 20, 0]]
** centroid: 4, normalized-entropy: 0.8366407419411671, [(1, 55), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 4, 0]]
** centroid: 5, normalized-entropy: 0.2863969571159561, [(1, 76), (2, 4)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 78, 26]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 78), (3, 26)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [86, 13, 0]]
** centroid: 7, normalized-entropy: 0.5610284863400681, [(1, 86), (2, 13)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1899825641955214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1899825641955214, 0.15843523095600653] ***
*** finished computation of 7 references, err: [Inf, 0.1899825641955214, 0.15843523095600653] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 98, 18]]
** centroid: 1, normalized-entropy: 0.6226343162547099, [(2, 98), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 43, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 43), (2, 43)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [124, 42, 0]]
** centroid: 5, normalized-entropy: 0.8160172973428256, [(1, 124), (2, 42)]
*** center 6: selecting labels [1] (freq >= 2) [from [149, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4153757152516764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4153757152516764, 0.2678211617172352] ***
*** starting iteration: 2; err: [Inf, 0.4153757152516764, 0.2678211617172352] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4153757152516764, 0.2678211617172352, 0.2408522923089642] ***
*** starting iteration: 3; err: [Inf, 0.4153757152516764, 0.2678211617172352, 0.2408522923089642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4153757152516764, 0.2678211617172352, 0.2408522923089642, 0.2336750460687924] ***
*** finished computation of 3 references, err: [Inf, 0.4153757152516764, 0.2678211617172352, 0.2408522923089642, 0.2336750460687924] ***
*** center 1: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [116, 149, 25]]
** centroid: 2, normalized-entropy: 0.8373859083496765, [(1, 116), (2, 149), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [107, 69, 1]]
** centroid: 3, normalized-entropy: 0.9661068739633405, [(1, 107), (2, 69)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29634269708390537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29634269708390537, 0.25318213979639614] ***
*** starting iteration: 2; err: [Inf, 0.29634269708390537, 0.25318213979639614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29634269708390537, 0.25318213979639614, 0.23189067313408498] ***
*** starting iteration: 3; err: [Inf, 0.29634269708390537, 0.25318213979639614, 0.23189067313408498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29634269708390537, 0.25318213979639614, 0.23189067313408498, 0.22713329134204577] ***
*** finished computation of 3 references, err: [Inf, 0.29634269708390537, 0.25318213979639614, 0.23189067313408498, 0.22713329134204577] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [155, 64, 0]]
** centroid: 1, normalized-entropy: 0.8715939873751148, [(1, 155), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [244, 15, 0]]
** centroid: 2, normalized-entropy: 0.3191122672252718, [(1, 244), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 162, 26]]
** centroid: 3, normalized-entropy: 0.57976367540648, [(2, 162), (3, 26)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4275093706034269] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4275093706034269, 0.25284620110403516] ***
*** starting iteration: 2; err: [Inf, 0.4275093706034269, 0.25284620110403516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4275093706034269, 0.25284620110403516, 0.23905934642363658] ***
*** starting iteration: 3; err: [Inf, 0.4275093706034269, 0.25284620110403516, 0.23905934642363658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4275093706034269, 0.25284620110403516, 0.23905934642363658, 0.23386100045861913] ***
*** finished computation of 3 references, err: [Inf, 0.4275093706034269, 0.25284620110403516, 0.23905934642363658, 0.23386100045861913] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 191, 18]]
** centroid: 1, normalized-entropy: 0.42339953312973627, [(2, 191), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [242, 23, 0]]
** centroid: 2, normalized-entropy: 0.4256718384703232, [(1, 242), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [156, 37, 0]]
** centroid: 3, normalized-entropy: 0.7050346503728375, [(1, 156), (2, 37)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31789619770941435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31789619770941435, 0.2549482982888169] ***
*** starting iteration: 2; err: [Inf, 0.31789619770941435, 0.2549482982888169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745] ***
*** starting iteration: 3; err: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745, 0.23512489862555452] ***
*** starting iteration: 4; err: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745, 0.23512489862555452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745, 0.23512489862555452, 0.2340696095530917] ***
*** starting iteration: 5; err: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745, 0.23512489862555452, 0.2340696095530917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745, 0.23512489862555452, 0.2340696095530917, 0.23389444852600227] ***
*** finished computation of 3 references, err: [Inf, 0.31789619770941435, 0.2549482982888169, 0.23866791923057745, 0.23512489862555452, 0.2340696095530917, 0.23389444852600227] ***
*** center 1: selecting labels [1] (freq >= 1) [from [226, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [142, 71, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 142), (2, 71)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [54, 147, 26]]
** centroid: 3, normalized-entropy: 0.7929683963069502, [(1, 54), (2, 147), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29479777741747193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29479777741747193, 0.23859934669373364] ***
*** starting iteration: 2; err: [Inf, 0.29479777741747193, 0.23859934669373364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29479777741747193, 0.23859934669373364, 0.2334231448651611] ***
*** starting iteration: 3; err: [Inf, 0.29479777741747193, 0.23859934669373364, 0.2334231448651611] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29479777741747193, 0.23859934669373364, 0.2334231448651611, 0.23245713237611607] ***
*** finished computation of 3 references, err: [Inf, 0.29479777741747193, 0.23859934669373364, 0.2334231448651611, 0.23245713237611607] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [126, 82, 0]]
** centroid: 1, normalized-entropy: 0.9674756088157442, [(1, 126), (2, 82)]
*** center 2: selecting labels [1] (freq >= 1) [from [185, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [89, 159, 26]]
** centroid: 3, normalized-entropy: 0.8233418970931794, [(1, 89), (2, 159), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28702607184279894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28702607184279894, 0.2354077899289587] ***
*** starting iteration: 2; err: [Inf, 0.28702607184279894, 0.2354077899289587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28702607184279894, 0.2354077899289587, 0.23004345161871037] ***
*** starting iteration: 3; err: [Inf, 0.28702607184279894, 0.2354077899289587, 0.23004345161871037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28702607184279894, 0.2354077899289587, 0.23004345161871037, 0.22873574845783268] ***
*** starting iteration: 4; err: [Inf, 0.28702607184279894, 0.2354077899289587, 0.23004345161871037, 0.22873574845783268] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28702607184279894, 0.2354077899289587, 0.23004345161871037, 0.22873574845783268, 0.22785052742510253] ***
*** finished computation of 3 references, err: [Inf, 0.28702607184279894, 0.2354077899289587, 0.23004345161871037, 0.22873574845783268, 0.22785052742510253] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [73, 165, 18]]
** centroid: 1, normalized-entropy: 0.7532734205220036, [(1, 73), (2, 165), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [126, 86, 0]]
** centroid: 2, normalized-entropy: 0.9741655523680581, [(1, 126), (2, 86)]
*** center 3: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3983793282131846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3983793282131846, 0.30010790916232466] ***
*** starting iteration: 2; err: [Inf, 0.3983793282131846, 0.30010790916232466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3983793282131846, 0.30010790916232466, 0.2954139252369468] ***
*** starting iteration: 3; err: [Inf, 0.3983793282131846, 0.30010790916232466, 0.2954139252369468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3983793282131846, 0.30010790916232466, 0.2954139252369468, 0.2940159978054173] ***
*** finished computation of 3 references, err: [Inf, 0.3983793282131846, 0.30010790916232466, 0.2954139252369468, 0.2940159978054173] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [263, 22, 0]]
** centroid: 1, normalized-entropy: 0.39221042556474955, [(1, 263), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 154, 26]]
** centroid: 2, normalized-entropy: 0.5957610966703235, [(2, 154), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [159, 42, 0]]
** centroid: 3, normalized-entropy: 0.7394809367166378, [(1, 159), (2, 42)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37775914662976984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37775914662976984, 0.3096965952710747] ***
*** starting iteration: 2; err: [Inf, 0.37775914662976984, 0.3096965952710747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37775914662976984, 0.3096965952710747, 0.2881184788036818] ***
*** starting iteration: 3; err: [Inf, 0.37775914662976984, 0.3096965952710747, 0.2881184788036818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37775914662976984, 0.3096965952710747, 0.2881184788036818, 0.28452346679325896] ***
*** finished computation of 3 references, err: [Inf, 0.37775914662976984, 0.3096965952710747, 0.2881184788036818, 0.28452346679325896] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [248, 26, 0]]
** centroid: 1, normalized-entropy: 0.45258639811522205, [(1, 248), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [152, 43, 0]]
** centroid: 2, normalized-entropy: 0.7611027932592763, [(1, 152), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 172, 26]]
** centroid: 3, normalized-entropy: 0.5610284863400681, [(2, 172), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4610890578003838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4610890578003838, 0.2950994728029757] ***
*** starting iteration: 2; err: [Inf, 0.4610890578003838, 0.2950994728029757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4610890578003838, 0.2950994728029757, 0.293982183326153] ***
*** starting iteration: 3; err: [Inf, 0.4610890578003838, 0.2950994728029757, 0.293982183326153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4610890578003838, 0.2950994728029757, 0.293982183326153, 0.2938273397527043] ***
*** finished computation of 3 references, err: [Inf, 0.4610890578003838, 0.2950994728029757, 0.293982183326153, 0.2938273397527043] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [258, 16, 0]]
** centroid: 1, normalized-entropy: 0.32103707602914155, [(1, 258), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 179, 18]]
** centroid: 2, normalized-entropy: 0.44102809277483557, [(2, 179), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [140, 56, 0]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(1, 140), (2, 56)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5025120614146864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5025120614146864, 0.2970482090679655] ***
*** finished computation of 3 references, err: [Inf, 0.5025120614146864, 0.2970482090679655] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [296, 11, 0]]
** centroid: 1, normalized-entropy: 0.22283769868881315, [(1, 296), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [3, 161, 26]]
** centroid: 2, normalized-entropy: 0.43510452629163815, [(1, 3), (2, 161), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 46, 0]]
** centroid: 3, normalized-entropy: 0.8445887017534917, [(1, 123), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.43372476523716946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43372476523716946, 0.29383613242917156] ***
*** finished computation of 3 references, err: [Inf, 0.43372476523716946, 0.29383613242917156] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [280, 23, 0]]
** centroid: 1, normalized-entropy: 0.3875925652092482, [(1, 280), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 172, 26]]
** centroid: 2, normalized-entropy: 0.5610284863400681, [(2, 172), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [120, 46, 0]]
** centroid: 3, normalized-entropy: 0.8514808683852091, [(1, 120), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5319321710096931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5319321710096931, 0.2878721927165583] ***
*** finished computation of 3 references, err: [Inf, 0.5319321710096931, 0.2878721927165583] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [96, 124, 18]]
** centroid: 1, normalized-entropy: 0.820291482768651, [(1, 96), (2, 124), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [118, 127, 0]]
** centroid: 2, normalized-entropy: 0.9990263673912957, [(1, 118), (2, 127)]
*** center 3: selecting labels [1] (freq >= 1) [from [184, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23149551420022282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23149551420022282, 0.1934348173780708] ***
*** finished computation of 7 references, err: [Inf, 0.23149551420022282, 0.1934348173780708] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 118, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [50, 22, 0]]
** centroid: 3, normalized-entropy: 0.887976319515135, [(1, 50), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [72, 26, 0]]
** centroid: 4, normalized-entropy: 0.834648285181383, [(1, 72), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [125, 18, 0]]
** centroid: 5, normalized-entropy: 0.5460133954586516, [(1, 125), (2, 18)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 21, 26]]
** centroid: 6, normalized-entropy: 0.9918207974218425, [(2, 21), (3, 26)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 13, 0]]
** centroid: 7, normalized-entropy: 0.5610284863400681, [(1, 86), (2, 13)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23080850336972952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23080850336972952, 0.18915133270109702] ***
*** finished computation of 7 references, err: [Inf, 0.23080850336972952, 0.18915133270109702] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 60, 0]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(1, 64), (2, 60)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 2, 0]]
** centroid: 2, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 79, 26]]
** centroid: 4, normalized-entropy: 0.8074825483550796, [(2, 79), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 6, 0]]
** centroid: 5, normalized-entropy: 0.3877431810559867, [(1, 73), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [18, 94, 0]]
** centroid: 6, normalized-entropy: 0.6360156177392153, [(1, 18), (2, 94)]
*** center 7: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23598380914625378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23598380914625378, 0.19492422269777335] ***
*** finished computation of 7 references, err: [Inf, 0.23598380914625378, 0.19492422269777335] ***
*** center 1: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 18]]
** centroid: 2, normalized-entropy: 0.9244571409964927, [(2, 35), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [73, 29, 0]]
** centroid: 4, normalized-entropy: 0.8612621884720756, [(1, 73), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 112, 0]]
** centroid: 5, normalized-entropy: 0.7102668725158433, [(1, 27), (2, 112)]
*** center 6: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 75, 0]]
** centroid: 7, normalized-entropy: 0.42080948947668984, [(1, 7), (2, 75)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9349918781056505, 0.929021836207465, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 13
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9349918781056505, 0.929021836207465, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 13
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9349918781056505, 0.929021836207465, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 14
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3948050954102262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3948050954102262, 0.30444496616374356] ***
*** starting iteration: 2; err: [Inf, 0.3948050954102262, 0.30444496616374356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3948050954102262, 0.30444496616374356, 0.29666561932602264] ***
*** starting iteration: 3; err: [Inf, 0.3948050954102262, 0.30444496616374356, 0.29666561932602264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3948050954102262, 0.30444496616374356, 0.29666561932602264, 0.2945324679285668] ***
*** starting iteration: 4; err: [Inf, 0.3948050954102262, 0.30444496616374356, 0.29666561932602264, 0.2945324679285668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3948050954102262, 0.30444496616374356, 0.29666561932602264, 0.2945324679285668, 0.2938711792230606] ***
*** finished computation of 3 references, err: [Inf, 0.3948050954102262, 0.30444496616374356, 0.29666561932602264, 0.2945324679285668, 0.2938711792230606] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [83, 144, 26]]
** centroid: 1, normalized-entropy: 0.8376364774497955, [(1, 83), (2, 144), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [118, 74, 0]]
** centroid: 2, normalized-entropy: 0.9617779752980338, [(1, 118), (2, 74)]
*** center 3: selecting labels [1] (freq >= 1) [from [221, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3366438561388622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3366438561388622, 0.2907329227787902] ***
*** starting iteration: 2; err: [Inf, 0.3366438561388622, 0.2907329227787902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3366438561388622, 0.2907329227787902, 0.28369133459540946] ***
*** starting iteration: 3; err: [Inf, 0.3366438561388622, 0.2907329227787902, 0.28369133459540946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3366438561388622, 0.2907329227787902, 0.28369133459540946, 0.283722453144682] ***
*** finished computation of 3 references, err: [Inf, 0.3366438561388622, 0.2907329227787902, 0.28369133459540946, 0.283722453144682] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 183, 26]]
** centroid: 1, normalized-entropy: 0.5418830408002695, [(2, 183), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 14, 0]]
** centroid: 2, normalized-entropy: 0.30337483608641397, [(1, 245), (2, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [155, 44, 0]]
** centroid: 3, normalized-entropy: 0.7621810324152676, [(1, 155), (2, 44)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36784459529039654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36784459529039654, 0.2968331798827318] ***
*** starting iteration: 2; err: [Inf, 0.36784459529039654, 0.2968331798827318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36784459529039654, 0.2968331798827318, 0.29104735404308857] ***
*** starting iteration: 3; err: [Inf, 0.36784459529039654, 0.2968331798827318, 0.29104735404308857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36784459529039654, 0.2968331798827318, 0.29104735404308857, 0.289487211684371] ***
*** starting iteration: 4; err: [Inf, 0.36784459529039654, 0.2968331798827318, 0.29104735404308857, 0.289487211684371] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36784459529039654, 0.2968331798827318, 0.29104735404308857, 0.289487211684371, 0.28908809647941475] ***
*** finished computation of 3 references, err: [Inf, 0.36784459529039654, 0.2968331798827318, 0.29104735404308857, 0.289487211684371, 0.28908809647941475] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [110, 98, 0]]
** centroid: 1, normalized-entropy: 0.9975977315497319, [(1, 110), (2, 98)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [90, 153, 18]]
** centroid: 2, normalized-entropy: 0.7870369954278906, [(1, 90), (2, 153), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9349918781056505, 0.929021836207465, 0.9289918661176145, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 15
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3213097805053474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3213097805053474, 0.23944968441585163] ***
*** starting iteration: 2; err: [Inf, 0.3213097805053474, 0.23944968441585163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3213097805053474, 0.23944968441585163, 0.23345917706900798] ***
*** starting iteration: 3; err: [Inf, 0.3213097805053474, 0.23944968441585163, 0.23345917706900798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3213097805053474, 0.23944968441585163, 0.23345917706900798, 0.23214305605034571] ***
*** finished computation of 3 references, err: [Inf, 0.3213097805053474, 0.23944968441585163, 0.23345917706900798, 0.23214305605034571] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [258, 26, 0]]
** centroid: 1, normalized-entropy: 0.44162013157909064, [(1, 258), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [164, 34, 0]]
** centroid: 2, normalized-entropy: 0.6616179061408356, [(1, 164), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 158, 26]]
** centroid: 3, normalized-entropy: 0.5876446142980418, [(2, 158), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35230197311788125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35230197311788125, 0.23047574464304335] ***
*** starting iteration: 2; err: [Inf, 0.35230197311788125, 0.23047574464304335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35230197311788125, 0.23047574464304335, 0.22899059969858535] ***
*** starting iteration: 3; err: [Inf, 0.35230197311788125, 0.23047574464304335, 0.22899059969858535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35230197311788125, 0.23047574464304335, 0.22899059969858535, 0.2288002436003205] ***
*** finished computation of 3 references, err: [Inf, 0.35230197311788125, 0.23047574464304335, 0.22899059969858535, 0.2288002436003205] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [76, 164, 26]]
** centroid: 1, normalized-entropy: 0.8041097133196787, [(1, 76), (2, 164), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [207, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [117, 77, 0]]
** centroid: 3, normalized-entropy: 0.9691126575233867, [(1, 117), (2, 77)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3058134183996934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058134183996934, 0.24610138273374854] ***
*** starting iteration: 2; err: [Inf, 0.3058134183996934, 0.24610138273374854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058134183996934, 0.24610138273374854, 0.23239255973697825] ***
*** starting iteration: 3; err: [Inf, 0.3058134183996934, 0.24610138273374854, 0.23239255973697825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058134183996934, 0.24610138273374854, 0.23239255973697825, 0.22992916786107703] ***
*** finished computation of 3 references, err: [Inf, 0.3058134183996934, 0.24610138273374854, 0.23239255973697825, 0.22992916786107703] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [107, 174, 18]]
** centroid: 1, normalized-entropy: 0.7754922502480617, [(1, 107), (2, 174), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [182, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [109, 77, 0]]
** centroid: 3, normalized-entropy: 0.9785423861930187, [(1, 109), (2, 77)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9349918781056505, 0.929021836207465, 0.9289918661176145, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.880071688454922, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 16
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.18689455483360468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18689455483360468, 0.15972305278960816] ***
*** starting iteration: 2; err: [Inf, 0.18689455483360468, 0.15972305278960816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18689455483360468, 0.15972305278960816, 0.15442991380470697] ***
*** starting iteration: 3; err: [Inf, 0.18689455483360468, 0.15972305278960816, 0.15442991380470697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18689455483360468, 0.15972305278960816, 0.15442991380470697, 0.1519314246811532] ***
*** finished computation of 7 references, err: [Inf, 0.18689455483360468, 0.15972305278960816, 0.15442991380470697, 0.1519314246811532] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 96, 0]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(1, 4), (2, 96)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 37, 0]]
** centroid: 2, normalized-entropy: 0.9670941140642181, [(1, 57), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 55, 26]]
** centroid: 4, normalized-entropy: 0.9054522631867892, [(2, 55), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [83, 30, 0]]
** centroid: 5, normalized-entropy: 0.8349135582554505, [(1, 83), (2, 30)]
*** center 6: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22551829486001826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22551829486001826, 0.16437076602265172] ***
*** starting iteration: 2; err: [Inf, 0.22551829486001826, 0.16437076602265172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22551829486001826, 0.16437076602265172, 0.15418354677164864] ***
*** starting iteration: 3; err: [Inf, 0.22551829486001826, 0.16437076602265172, 0.15418354677164864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22551829486001826, 0.16437076602265172, 0.15418354677164864, 0.14988995900564733] ***
*** finished computation of 7 references, err: [Inf, 0.22551829486001826, 0.16437076602265172, 0.15418354677164864, 0.14988995900564733] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 33, 0]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(1, 55), (2, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [18, 82, 0]]
** centroid: 4, normalized-entropy: 0.6800770457282798, [(1, 18), (2, 82)]
*** center 5: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 106, 26]]
** centroid: 6, normalized-entropy: 0.7158259310602146, [(2, 106), (3, 26)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [81, 20, 0]]
** centroid: 7, normalized-entropy: 0.7179499765002912, [(1, 81), (2, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1857280037889461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1857280037889461, 0.15670754521948355] ***
*** starting iteration: 2; err: [Inf, 0.1857280037889461, 0.15670754521948355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1857280037889461, 0.15670754521948355, 0.15425728431433675] ***
*** starting iteration: 3; err: [Inf, 0.1857280037889461, 0.15670754521948355, 0.15425728431433675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1857280037889461, 0.15670754521948355, 0.15425728431433675, 0.1515934504798964] ***
*** finished computation of 7 references, err: [Inf, 0.1857280037889461, 0.15670754521948355, 0.15425728431433675, 0.1515934504798964] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 74, 18]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 74), (3, 18)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [110, 20, 0]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(1, 110), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 5, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [118, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [6, 89, 0]]
** centroid: 7, normalized-entropy: 0.3398550782221443, [(1, 6), (2, 89)]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9349918781056505, 0.9339998681316047, 0.929021836207465, 0.9289918661176145, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.880071688454922, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 16
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9349918781056505, 0.9339998681316047, 0.929021836207465, 0.9289918661176145, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.880071688454922, 0.8740117362871854, 0.8660187133241024, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 18
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.39561266666585887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39561266666585887, 0.2462898122675314] ***
*** finished computation of 3 references, err: [Inf, 0.39561266666585887, 0.2462898122675314] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [130, 20, 0]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(1, 130), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [292, 59, 0]]
** centroid: 2, normalized-entropy: 0.6533194963577982, [(1, 292), (2, 59)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 139, 26]]
** centroid: 3, normalized-entropy: 0.6284783246686283, [(2, 139), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28619821510114324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28619821510114324, 0.23883080998270856] ***
*** finished computation of 3 references, err: [Inf, 0.28619821510114324, 0.23883080998270856] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [207, 34, 0]]
** centroid: 1, normalized-entropy: 0.5870572333051822, [(1, 207), (2, 34)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [14, 207, 26]]
** centroid: 2, normalized-entropy: 0.4985635123674799, [(1, 14), (2, 207), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [179, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36986069119433457] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36986069119433457, 0.25327089778531614] ***
*** finished computation of 3 references, err: [Inf, 0.36986069119433457, 0.25327089778531614] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 97, 18]]
** centroid: 1, normalized-entropy: 0.6259231316564361, [(2, 97), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [190, 82, 0]]
** centroid: 2, normalized-entropy: 0.8830811134504757, [(1, 190), (2, 82)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [208, 72, 0]]
** centroid: 3, normalized-entropy: 0.8224042259549892, [(1, 208), (2, 72)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4641088707730532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4641088707730532, 0.34460204928503696] ***
*** finished computation of 3 references, err: [Inf, 0.4641088707730532, 0.34460204928503696] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [169, 50, 0]]
** centroid: 1, normalized-entropy: 0.7750544832521991, [(1, 169), (2, 50)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [138, 168, 26]]
** centroid: 2, normalized-entropy: 0.8274604883095611, [(1, 138), (2, 168), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3409889292843204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3409889292843204, 0.325096035126256] ***
*** finished computation of 3 references, err: [Inf, 0.3409889292843204, 0.325096035126256] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [51, 114, 26]]
** centroid: 1, normalized-entropy: 0.8484000725931702, [(1, 51), (2, 114), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [224, 16, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 224), (2, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [125, 111, 0]]
** centroid: 3, normalized-entropy: 0.9974600122956435, [(1, 125), (2, 111)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39775245307666857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39775245307666857, 0.331035857397443] ***
*** finished computation of 3 references, err: [Inf, 0.39775245307666857, 0.331035857397443] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [70, 120, 18]]
** centroid: 1, normalized-entropy: 0.8152222982888211, [(1, 70), (2, 120), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [225, 26, 0]]
** centroid: 2, normalized-entropy: 0.4802598858412035, [(1, 225), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [103, 105, 0]]
** centroid: 3, normalized-entropy: 0.9999333063391, [(1, 103), (2, 105)]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 18)
[0.9349918781056505, 0.9339998681316047, 0.929021836207465, 0.9289918661176145, 0.9220028411645177, 0.9150078221934509, 0.9129848411285537, 0.9099848351345358, 0.9049768331205456, 0.901994809180438, 0.887998777220334, 0.880071688454922, 0.8740117362871854, 0.8660187133241024, 0.8450186713659767, 0.822016627405849, 0.8209586832341325, 0.7870175564786344]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9349918781056505
finished with 19
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.1944584135950596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944584135950596, 0.14850500754329624] ***
*** finished computation of 7 references, err: [Inf, 0.1944584135950596, 0.14850500754329624] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [12, 114, 0]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(1, 12), (2, 114)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 32, 0]]
** centroid: 3, normalized-entropy: 0.9355315642388212, [(1, 59), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 13, 0]]
** centroid: 4, normalized-entropy: 0.6307970795750609, [(1, 69), (2, 13)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 50, 26]]
** centroid: 5, normalized-entropy: 0.9268190639645774, [(2, 50), (3, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [124, 9, 0]]
** centroid: 7, normalized-entropy: 0.3571646347421419, [(1, 124), (2, 9)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19563205164718978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19563205164718978, 0.1523376183362323] ***
*** finished computation of 7 references, err: [Inf, 0.19563205164718978, 0.1523376183362323] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 42, 0]]
** centroid: 1, normalized-entropy: 0.9870044298101771, [(1, 55), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 14, 0]]
** centroid: 2, normalized-entropy: 0.607171654871303, [(1, 80), (2, 14)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 83, 8]]
** centroid: 4, normalized-entropy: 0.4294619720471057, [(2, 83), (3, 8)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [105, 25, 0]]
** centroid: 5, normalized-entropy: 0.7062740891876008, [(1, 105), (2, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 77, 18]]
** centroid: 7, normalized-entropy: 0.7003691487575897, [(2, 77), (3, 18)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19255884308256266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19255884308256266, 0.15097852039948173] ***
*** finished computation of 7 references, err: [Inf, 0.19255884308256266, 0.15097852039948173] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [125, 8, 0]]
** centroid: 1, normalized-entropy: 0.3280415664578748, [(1, 125), (2, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 18]]
** centroid: 2, normalized-entropy: 0.9656361333706099, [(2, 28), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [86, 5, 0]]
** centroid: 4, normalized-entropy: 0.30704288878312236, [(1, 86), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 103, 0]]
** centroid: 5, normalized-entropy: 0.40343635676427997, [(1, 9), (2, 103)]
*** center 6: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 107, 0]]
** centroid: 7, normalized-entropy: 0.1805246676420577, [(1, 3), (2, 107)]
finished with 11 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.25358156973402945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358156973402945, 0.22399691545777023] ***
*** starting iteration: 2; err: [Inf, 0.25358156973402945, 0.22399691545777023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706] ***
*** starting iteration: 3; err: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706, 0.19105671233776958] ***
*** starting iteration: 4; err: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706, 0.19105671233776958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706, 0.19105671233776958, 0.18493810987146572] ***
*** starting iteration: 5; err: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706, 0.19105671233776958, 0.18493810987146572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706, 0.19105671233776958, 0.18493810987146572, 0.1845465833148919] ***
*** finished computation of 7 references, err: [Inf, 0.25358156973402945, 0.22399691545777023, 0.2125035588708706, 0.19105671233776958, 0.18493810987146572, 0.1845465833148919] ***
*** center 1: selecting labels [1] (freq >= 2) [from [133, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 116, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 130, 35]]
** centroid: 3, normalized-entropy: 0.7455178428108284, [(2, 130), (3, 35)]
*** center 4: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [153, 48, 0]]
** centroid: 5, normalized-entropy: 0.7930490047779772, [(1, 153), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [129, 13, 0]]
** centroid: 6, normalized-entropy: 0.44162013157909064, [(1, 129), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [89, 48, 0]]
** centroid: 7, normalized-entropy: 0.9343935764596151, [(1, 89), (2, 48)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20885229281522333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20885229281522333, 0.1936517081260681] ***
*** starting iteration: 2; err: [Inf, 0.20885229281522333, 0.1936517081260681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20885229281522333, 0.1936517081260681, 0.1903907206375152] ***
*** starting iteration: 3; err: [Inf, 0.20885229281522333, 0.1936517081260681, 0.1903907206375152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20885229281522333, 0.1936517081260681, 0.1903907206375152, 0.1895549709573388] ***
*** finished computation of 7 references, err: [Inf, 0.20885229281522333, 0.1936517081260681, 0.1903907206375152, 0.1895549709573388] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [79, 7, 0]]
** centroid: 1, normalized-entropy: 0.40707680632541937, [(1, 79), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [5, 58, 0]]
** centroid: 2, normalized-entropy: 0.39993804743902767, [(1, 5), (2, 58)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 10, 0]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(1, 52), (2, 10)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 18]]
** centroid: 4, normalized-entropy: 0.8691375806126381, [(2, 44), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 58, 2]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(2, 58), (3, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [67, 9, 0]]
** centroid: 7, normalized-entropy: 0.524805134842907, [(1, 67), (2, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2564131391518749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918] ***
*** starting iteration: 2; err: [Inf, 0.2564131391518749, 0.22849701602011918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762] ***
*** starting iteration: 3; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597] ***
*** starting iteration: 4; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919] ***
*** starting iteration: 5; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371] ***
*** starting iteration: 6; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246] ***
*** starting iteration: 7; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246, 0.18993435467220843] ***
*** starting iteration: 8; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246, 0.18993435467220843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246, 0.18993435467220843, 0.18884350733738392] ***
*** starting iteration: 9; err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246, 0.18993435467220843, 0.18884350733738392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246, 0.18993435467220843, 0.18884350733738392, 0.18831622308678925] ***
*** finished computation of 7 references, err: [Inf, 0.2564131391518749, 0.22849701602011918, 0.21842498344741762, 0.21236489117890597, 0.201086781648919, 0.1939867076445371, 0.19144200287014246, 0.18993435467220843, 0.18884350733738392, 0.18831622308678925] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 44, 0]]
** centroid: 1, normalized-entropy: 0.7746319868686841, [(1, 13), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 25, 0]]
** centroid: 2, normalized-entropy: 0.8739810481273581, [(1, 60), (2, 25)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 65, 1]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [81, 2, 0]]
** centroid: 4, normalized-entropy: 0.1638605128691586, [(1, 81), (2, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 38, 18]]
** centroid: 7, normalized-entropy: 0.9059282160429994, [(2, 38), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2529423729227856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977] ***
*** starting iteration: 2; err: [Inf, 0.2529423729227856, 0.2205090906796977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487] ***
*** starting iteration: 3; err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631] ***
*** starting iteration: 4; err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938] ***
*** starting iteration: 5; err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134] ***
*** starting iteration: 6; err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134, 0.1911139536947012] ***
*** starting iteration: 7; err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134, 0.1911139536947012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134, 0.1911139536947012, 0.18901091107539833] ***
*** starting iteration: 8; err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134, 0.1911139536947012, 0.18901091107539833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134, 0.1911139536947012, 0.18901091107539833, 0.18843064176919871] ***
*** finished computation of 7 references, err: [Inf, 0.2529423729227856, 0.2205090906796977, 0.21334175080433487, 0.2058119475636631, 0.19949288064613938, 0.19417158621922134, 0.1911139536947012, 0.18901091107539833, 0.18843064176919871] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 37, 0]]
** centroid: 1, normalized-entropy: 0.9728063221185002, [(1, 25), (2, 37)]
*** center 2: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 54, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 58, 13]]
** centroid: 5, normalized-entropy: 0.6868088934028034, [(2, 58), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [81, 33, 0]]
** centroid: 6, normalized-entropy: 0.8680403986166402, [(1, 81), (2, 33)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 7, 0]]
** centroid: 7, normalized-entropy: 0.4558314584408233, [(1, 66), (2, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24826584142725916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24826584142725916, 0.21136473720055074] ***
*** starting iteration: 2; err: [Inf, 0.24826584142725916, 0.21136473720055074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988] ***
*** starting iteration: 3; err: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988, 0.1860436548385769] ***
*** starting iteration: 4; err: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988, 0.1860436548385769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988, 0.1860436548385769, 0.181829926783219] ***
*** starting iteration: 5; err: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988, 0.1860436548385769, 0.181829926783219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988, 0.1860436548385769, 0.181829926783219, 0.18092026073951273] ***
*** finished computation of 7 references, err: [Inf, 0.24826584142725916, 0.21136473720055074, 0.19561278392001988, 0.1860436548385769, 0.181829926783219, 0.18092026073951273] ***
*** center 1: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 24, 0]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(1, 62), (2, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 12, 0]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(1, 66), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [73, 4, 0]]
** centroid: 5, normalized-entropy: 0.29461520565280713, [(1, 73), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 72, 0]]
** centroid: 6, normalized-entropy: 0.34673146824966367, [(1, 5), (2, 72)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 64, 20]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 64), (3, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21838023860380054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21838023860380054, 0.18833709842525423] ***
*** starting iteration: 2; err: [Inf, 0.21838023860380054, 0.18833709842525423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21838023860380054, 0.18833709842525423, 0.186128580769524] ***
*** starting iteration: 3; err: [Inf, 0.21838023860380054, 0.18833709842525423, 0.186128580769524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21838023860380054, 0.18833709842525423, 0.186128580769524, 0.18546905922703444] ***
*** finished computation of 7 references, err: [Inf, 0.21838023860380054, 0.18833709842525423, 0.186128580769524, 0.18546905922703444] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 41, 19]]
** centroid: 1, normalized-entropy: 0.9007196798623592, [(2, 41), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 67, 0]]
** centroid: 2, normalized-entropy: 0.25524211319019174, [(1, 3), (2, 67)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 44, 0]]
** centroid: 3, normalized-entropy: 0.6912898694057888, [(1, 10), (2, 44)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [75, 21, 0]]
** centroid: 5, normalized-entropy: 0.7578784625383954, [(1, 75), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [80, 3, 0]]
** centroid: 7, normalized-entropy: 0.2243269603450881, [(1, 80), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2175598969589919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175598969589919, 0.19285773357935249] ***
*** starting iteration: 2; err: [Inf, 0.2175598969589919, 0.19285773357935249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175598969589919, 0.19285773357935249, 0.1911007832493633] ***
*** starting iteration: 3; err: [Inf, 0.2175598969589919, 0.19285773357935249, 0.1911007832493633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175598969589919, 0.19285773357935249, 0.1911007832493633, 0.1907883570091799] ***
*** finished computation of 7 references, err: [Inf, 0.2175598969589919, 0.19285773357935249, 0.1911007832493633, 0.1907883570091799] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 89, 17]]
** centroid: 1, normalized-entropy: 0.6352115521361693, [(2, 89), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [39, 30, 0]]
** centroid: 2, normalized-entropy: 0.9876925088958032, [(1, 39), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [48, 20, 0]]
** centroid: 3, normalized-entropy: 0.8739810481273581, [(1, 48), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 12, 0]]
** centroid: 5, normalized-entropy: 0.708835673332196, [(1, 50), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 24, 0]]
** centroid: 6, normalized-entropy: 0.8951127210954559, [(1, 53), (2, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21135215340252034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558] ***
*** starting iteration: 2; err: [Inf, 0.21135215340252034, 0.19640214924700558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528] ***
*** starting iteration: 3; err: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812] ***
*** starting iteration: 4; err: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305] ***
*** starting iteration: 5; err: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305, 0.18189633691869675] ***
*** starting iteration: 6; err: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305, 0.18189633691869675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305, 0.18189633691869675, 0.18074765934841708] ***
*** starting iteration: 7; err: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305, 0.18189633691869675, 0.18074765934841708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305, 0.18189633691869675, 0.18074765934841708, 0.17981606638990344] ***
*** finished computation of 7 references, err: [Inf, 0.21135215340252034, 0.19640214924700558, 0.1910684458706528, 0.18688783715292812, 0.18417026544362305, 0.18189633691869675, 0.18074765934841708, 0.17981606638990344] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 42, 0]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(1, 30), (2, 42)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 63, 13]]
** centroid: 4, normalized-entropy: 0.6601070987550468, [(2, 63), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 2, 0]]
** centroid: 5, normalized-entropy: 0.22853814395352806, [(1, 52), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 18, 0]]
** centroid: 6, normalized-entropy: 0.7355085815538399, [(1, 69), (2, 18)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3698958704173565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698958704173565, 0.22065094307204708] ***
*** starting iteration: 2; err: [Inf, 0.3698958704173565, 0.22065094307204708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714] ***
*** starting iteration: 3; err: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034] ***
*** starting iteration: 4; err: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034, 0.18802326319925486] ***
*** starting iteration: 5; err: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034, 0.18802326319925486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034, 0.18802326319925486, 0.18697748348489404] ***
*** starting iteration: 6; err: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034, 0.18802326319925486, 0.18697748348489404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034, 0.18802326319925486, 0.18697748348489404, 0.1861569579062052] ***
*** finished computation of 7 references, err: [Inf, 0.3698958704173565, 0.22065094307204708, 0.1971773284971714, 0.18993070275709034, 0.18802326319925486, 0.18697748348489404, 0.1861569579062052] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [65, 9, 0]]
** centroid: 1, normalized-entropy: 0.5340042729285396, [(1, 65), (2, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 19]]
** centroid: 3, normalized-entropy: 0.9902246902198684, [(2, 24), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 1, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 3, 0]]
** centroid: 6, normalized-entropy: 0.260862909647207, [(1, 65), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 67, 0]]
** centroid: 7, normalized-entropy: 0.45162282218200417, [(1, 7), (2, 67)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2704072092231363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704072092231363, 0.20096997358091176] ***
*** starting iteration: 2; err: [Inf, 0.2704072092231363, 0.20096997358091176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704072092231363, 0.20096997358091176, 0.19369582238793373] ***
*** starting iteration: 3; err: [Inf, 0.2704072092231363, 0.20096997358091176, 0.19369582238793373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704072092231363, 0.20096997358091176, 0.19369582238793373, 0.19087723962590097] ***
*** starting iteration: 4; err: [Inf, 0.2704072092231363, 0.20096997358091176, 0.19369582238793373, 0.19087723962590097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704072092231363, 0.20096997358091176, 0.19369582238793373, 0.19087723962590097, 0.18997233787737786] ***
*** finished computation of 7 references, err: [Inf, 0.2704072092231363, 0.20096997358091176, 0.19369582238793373, 0.19087723962590097, 0.18997233787737786] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 22, 0]]
** centroid: 1, normalized-entropy: 0.893010810044601, [(1, 49), (2, 22)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 19]]
** centroid: 4, normalized-entropy: 0.776116265618875, [(2, 64), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [87, 25, 0]]
** centroid: 5, normalized-entropy: 0.765993414171823, [(1, 87), (2, 25)]
*** center 6: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 13, 0]]
** centroid: 7, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2879306829832494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2879306829832494, 0.2031156480247155] ***
*** starting iteration: 2; err: [Inf, 0.2879306829832494, 0.2031156480247155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2879306829832494, 0.2031156480247155, 0.19949481372348965] ***
*** starting iteration: 3; err: [Inf, 0.2879306829832494, 0.2031156480247155, 0.19949481372348965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2879306829832494, 0.2031156480247155, 0.19949481372348965, 0.19895652732625604] ***
*** finished computation of 7 references, err: [Inf, 0.2879306829832494, 0.2031156480247155, 0.19949481372348965, 0.19895652732625604] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 23, 0]]
** centroid: 1, normalized-entropy: 0.9421631690835511, [(1, 41), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 34, 0]]
** centroid: 2, normalized-entropy: 0.9472268055719005, [(1, 59), (2, 34)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 5, 0]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 34, 0]]
** centroid: 6, normalized-entropy: 0.9984628557283827, [(1, 31), (2, 34)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 79, 17]]
** centroid: 7, normalized-entropy: 0.673654715229001, [(2, 79), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.285661858510226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148] ***
*** starting iteration: 2; err: [Inf, 0.285661858510226, 0.23601824067626148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534] ***
*** starting iteration: 3; err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497] ***
*** starting iteration: 4; err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874] ***
*** starting iteration: 5; err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772] ***
*** starting iteration: 6; err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772, 0.19268401983007788] ***
*** starting iteration: 7; err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772, 0.19268401983007788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772, 0.19268401983007788, 0.19042074169032275] ***
*** starting iteration: 8; err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772, 0.19268401983007788, 0.19042074169032275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772, 0.19268401983007788, 0.19042074169032275, 0.18970250525698065] ***
*** finished computation of 7 references, err: [Inf, 0.285661858510226, 0.23601824067626148, 0.22465313235111534, 0.21659734499454497, 0.20499944811686874, 0.19699965336173772, 0.19268401983007788, 0.19042074169032275, 0.18970250525698065] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 18]]
** centroid: 3, normalized-entropy: 0.8512243352621381, [(2, 47), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 29, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 87), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 23, 0]]
** centroid: 5, normalized-entropy: 0.8989377852081333, [(1, 50), (2, 23)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 8, 0]]
** centroid: 6, normalized-entropy: 0.5983474220910422, [(1, 47), (2, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28042517771944403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676] ***
*** starting iteration: 2; err: [Inf, 0.28042517771944403, 0.22435056930966676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228] ***
*** starting iteration: 3; err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954] ***
*** starting iteration: 4; err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147] ***
*** starting iteration: 5; err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415] ***
*** starting iteration: 6; err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415, 0.19102906664647162] ***
*** starting iteration: 7; err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415, 0.19102906664647162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415, 0.19102906664647162, 0.18902297071553767] ***
*** starting iteration: 8; err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415, 0.19102906664647162, 0.18902297071553767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415, 0.19102906664647162, 0.18902297071553767, 0.18874918354302644] ***
*** finished computation of 7 references, err: [Inf, 0.28042517771944403, 0.22435056930966676, 0.20718867373280228, 0.19836475695529954, 0.19417017174512147, 0.19265075666457415, 0.19102906664647162, 0.18902297071553767, 0.18874918354302644] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [39, 37, 0]]
** centroid: 1, normalized-entropy: 0.9995003941817588, [(1, 39), (2, 37)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 98, 12]]
** centroid: 2, normalized-entropy: 0.4971677614160751, [(2, 98), (3, 12)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 23, 0]]
** centroid: 3, normalized-entropy: 0.9559312637896479, [(1, 38), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 21, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 63), (2, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 4, 0]]
** centroid: 7, normalized-entropy: 0.32984607020714635, [(1, 62), (2, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22720892528444528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22720892528444528, 0.19554580791294573] ***
*** starting iteration: 2; err: [Inf, 0.22720892528444528, 0.19554580791294573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22720892528444528, 0.19554580791294573, 0.18957108037918807] ***
*** starting iteration: 3; err: [Inf, 0.22720892528444528, 0.19554580791294573, 0.18957108037918807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22720892528444528, 0.19554580791294573, 0.18957108037918807, 0.18698310833796858] ***
*** starting iteration: 4; err: [Inf, 0.22720892528444528, 0.19554580791294573, 0.18957108037918807, 0.18698310833796858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22720892528444528, 0.19554580791294573, 0.18957108037918807, 0.18698310833796858, 0.18607380452472716] ***
*** finished computation of 7 references, err: [Inf, 0.22720892528444528, 0.19554580791294573, 0.18957108037918807, 0.18698310833796858, 0.18607380452472716] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 12, 0]]
** centroid: 1, normalized-entropy: 0.5830194167347007, [(1, 74), (2, 12)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 84, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 29, 0]]
** centroid: 3, normalized-entropy: 0.9954515828457716, [(1, 34), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 2, 0]]
** centroid: 4, normalized-entropy: 0.17203694935311387, [(1, 76), (2, 2)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 47, 24]]
** centroid: 5, normalized-entropy: 0.9229192878686723, [(2, 47), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 9, 0]]
** centroid: 7, normalized-entropy: 0.6429383500409613, [(1, 46), (2, 9)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26646660985797643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26646660985797643, 0.20681788139045237] ***
*** starting iteration: 2; err: [Inf, 0.26646660985797643, 0.20681788139045237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626] ***
*** starting iteration: 3; err: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912] ***
*** starting iteration: 4; err: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912, 0.19158939922903664] ***
*** starting iteration: 5; err: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912, 0.19158939922903664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912, 0.19158939922903664, 0.19032497210428118] ***
*** starting iteration: 6; err: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912, 0.19158939922903664, 0.19032497210428118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912, 0.19158939922903664, 0.19032497210428118, 0.19007281593047082] ***
*** finished computation of 7 references, err: [Inf, 0.26646660985797643, 0.20681788139045237, 0.19663562363013626, 0.19326072976877912, 0.19158939922903664, 0.19032497210428118, 0.19007281593047082] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 1, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 18]]
** centroid: 4, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 12, 0]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(1, 30), (2, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [50, 5, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 50), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2790672134393826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790672134393826, 0.20863894720375536] ***
*** starting iteration: 2; err: [Inf, 0.2790672134393826, 0.20863894720375536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137] ***
*** starting iteration: 3; err: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137, 0.18821081571280956] ***
*** starting iteration: 4; err: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137, 0.18821081571280956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137, 0.18821081571280956, 0.1863115896321833] ***
*** starting iteration: 5; err: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137, 0.18821081571280956, 0.1863115896321833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137, 0.18821081571280956, 0.1863115896321833, 0.18561950803920627] ***
*** finished computation of 7 references, err: [Inf, 0.2790672134393826, 0.20863894720375536, 0.1927284150645137, 0.18821081571280956, 0.1863115896321833, 0.18561950803920627] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [39, 26, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 39), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 2, 0]]
** centroid: 2, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 57, 22]]
** centroid: 3, normalized-entropy: 0.8533728188427888, [(2, 57), (3, 22)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 61, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 21, 0]]
** centroid: 5, normalized-entropy: 0.8304955225035798, [(1, 59), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27783936859853564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524] ***
*** starting iteration: 2; err: [Inf, 0.27783936859853564, 0.23159096310066524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784] ***
*** starting iteration: 3; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268] ***
*** starting iteration: 4; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218] ***
*** starting iteration: 5; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545] ***
*** starting iteration: 6; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018] ***
*** starting iteration: 7; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018, 0.18956278474349528] ***
*** starting iteration: 8; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018, 0.18956278474349528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018, 0.18956278474349528, 0.1884919446129352] ***
*** starting iteration: 9; err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018, 0.18956278474349528, 0.1884919446129352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018, 0.18956278474349528, 0.1884919446129352, 0.1879573281733319] ***
*** finished computation of 7 references, err: [Inf, 0.27783936859853564, 0.23159096310066524, 0.20902171568758784, 0.20099740566313268, 0.19695807999186218, 0.19393688965402545, 0.19195569964312018, 0.18956278474349528, 0.1884919446129352, 0.1879573281733319] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [75, 7, 0]]
** centroid: 1, normalized-entropy: 0.42080948947668984, [(1, 75), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 52, 0]]
** centroid: 2, normalized-entropy: 0.787126586201269, [(1, 16), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 17, 0]]
** centroid: 4, normalized-entropy: 0.7941021417852022, [(1, 54), (2, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 11, 0]]
** centroid: 5, normalized-entropy: 0.5687008669370753, [(1, 71), (2, 11)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 42, 17]]
** centroid: 6, normalized-entropy: 0.8663006754980497, [(2, 42), (3, 17)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 56, 2]]
** centroid: 7, normalized-entropy: 0.21639693245126485, [(2, 56), (3, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2364933619564399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364933619564399, 0.19879069387167692] ***
*** starting iteration: 2; err: [Inf, 0.2364933619564399, 0.19879069387167692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364933619564399, 0.19879069387167692, 0.19246462869644165] ***
*** starting iteration: 3; err: [Inf, 0.2364933619564399, 0.19879069387167692, 0.19246462869644165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364933619564399, 0.19879069387167692, 0.19246462869644165, 0.19135753490123897] ***
*** starting iteration: 4; err: [Inf, 0.2364933619564399, 0.19879069387167692, 0.19246462869644165, 0.19135753490123897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364933619564399, 0.19879069387167692, 0.19246462869644165, 0.19135753490123897, 0.19093305212352424] ***
*** finished computation of 7 references, err: [Inf, 0.2364933619564399, 0.19879069387167692, 0.19246462869644165, 0.19135753490123897, 0.19093305212352424] ***
*** center 1: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 29, 0]]
** centroid: 3, normalized-entropy: 0.8952722642402938, [(1, 64), (2, 29)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 69, 16]]
** centroid: 4, normalized-entropy: 0.6977652006354232, [(2, 69), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [29, 41, 0]]
** centroid: 6, normalized-entropy: 0.9786961448300948, [(1, 29), (2, 41)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [33, 44, 0]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(1, 33), (2, 44)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2781547441976145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781547441976145, 0.21380557907000183] ***
*** starting iteration: 2; err: [Inf, 0.2781547441976145, 0.21380557907000183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258] ***
*** starting iteration: 3; err: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258, 0.1947197347357869] ***
*** starting iteration: 4; err: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258, 0.1947197347357869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258, 0.1947197347357869, 0.1928647259660065] ***
*** starting iteration: 5; err: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258, 0.1947197347357869, 0.1928647259660065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258, 0.1947197347357869, 0.1928647259660065, 0.19193497011996805] ***
*** finished computation of 7 references, err: [Inf, 0.2781547441976145, 0.21380557907000183, 0.19880342384055258, 0.1947197347357869, 0.1928647259660065, 0.19193497011996805] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 23, 0]]
** centroid: 1, normalized-entropy: 0.9930554830121975, [(1, 28), (2, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 23, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 69), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 24, 0]]
** centroid: 5, normalized-entropy: 0.9629004147713269, [(1, 38), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [34, 24, 0]]
** centroid: 6, normalized-entropy: 0.9784493292686188, [(1, 34), (2, 24)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 89, 19]]
** centroid: 7, normalized-entropy: 0.6710828900205286, [(2, 89), (3, 19)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29738137796893716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162] ***
*** starting iteration: 2; err: [Inf, 0.29738137796893716, 0.2317753369361162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935] ***
*** starting iteration: 3; err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112] ***
*** starting iteration: 4; err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445] ***
*** starting iteration: 5; err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854] ***
*** starting iteration: 6; err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854, 0.1872777782920748] ***
*** starting iteration: 7; err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854, 0.1872777782920748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854, 0.1872777782920748, 0.18548970780940727] ***
*** starting iteration: 8; err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854, 0.1872777782920748, 0.18548970780940727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854, 0.1872777782920748, 0.18548970780940727, 0.18548266830388457] ***
*** finished computation of 7 references, err: [Inf, 0.29738137796893716, 0.2317753369361162, 0.21263069992139935, 0.19742738097906112, 0.19186624333262445, 0.18945109566958854, 0.1872777782920748, 0.18548970780940727, 0.18548266830388457] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 9, 0]]
** centroid: 1, normalized-entropy: 0.5293608652873645, [(1, 66), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 12, 0]]
** centroid: 2, normalized-entropy: 0.6900703653284017, [(1, 53), (2, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [7, 43, 0]]
** centroid: 4, normalized-entropy: 0.5842388116428561, [(1, 7), (2, 43)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 96, 15]]
** centroid: 5, normalized-entropy: 0.5713549744279549, [(2, 96), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [40, 27, 0]]
** centroid: 7, normalized-entropy: 0.9726699911457106, [(1, 40), (2, 27)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32918270511552694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32918270511552694, 0.2206852237507701] ***
*** starting iteration: 2; err: [Inf, 0.32918270511552694, 0.2206852237507701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796] ***
*** starting iteration: 3; err: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796, 0.19142733384855093] ***
*** starting iteration: 4; err: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796, 0.19142733384855093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796, 0.19142733384855093, 0.18880430912598967] ***
*** starting iteration: 5; err: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796, 0.19142733384855093, 0.18880430912598967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796, 0.19142733384855093, 0.18880430912598967, 0.18793683736212552] ***
*** finished computation of 7 references, err: [Inf, 0.32918270511552694, 0.2206852237507701, 0.20043864294327796, 0.19142733384855093, 0.18880430912598967, 0.18793683736212552] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 26, 0]]
** centroid: 2, normalized-entropy: 0.9871377743721862, [(1, 34), (2, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 50, 0]]
** centroid: 5, normalized-entropy: 0.6807937753703207, [(1, 11), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 25, 18]]
** centroid: 6, normalized-entropy: 0.9807983646944296, [(2, 25), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [69, 17, 0]]
** centroid: 7, normalized-entropy: 0.7172524777375696, [(1, 69), (2, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24395667393133044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395667393133044, 0.2002401636708528] ***
*** starting iteration: 2; err: [Inf, 0.24395667393133044, 0.2002401636708528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157] ***
*** starting iteration: 3; err: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157, 0.17826036233268677] ***
*** starting iteration: 4; err: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157, 0.17826036233268677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157, 0.17826036233268677, 0.17644510519038886] ***
*** starting iteration: 5; err: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157, 0.17826036233268677, 0.17644510519038886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157, 0.17826036233268677, 0.17644510519038886, 0.1759741154499352] ***
*** finished computation of 7 references, err: [Inf, 0.24395667393133044, 0.2002401636708528, 0.18483430631738157, 0.17826036233268677, 0.17644510519038886, 0.1759741154499352] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 68, 0]]
** centroid: 1, normalized-entropy: 0.25253077151613923, [(1, 3), (2, 68)]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 6, 0]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(1, 60), (2, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 16]]
** centroid: 4, normalized-entropy: 0.7372413771710565, [(2, 61), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 22, 0]]
** centroid: 5, normalized-entropy: 0.8296071030882032, [(1, 62), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 18, 0]]
** centroid: 6, normalized-entropy: 0.708835673332196, [(1, 75), (2, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29622532812226565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617] ***
*** starting iteration: 2; err: [Inf, 0.29622532812226565, 0.21547208635229617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369] ***
*** starting iteration: 3; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493] ***
*** starting iteration: 4; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008] ***
*** starting iteration: 5; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051] ***
*** starting iteration: 6; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879] ***
*** starting iteration: 7; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879, 0.19023303642310202] ***
*** starting iteration: 8; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879, 0.19023303642310202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879, 0.19023303642310202, 0.1889001419506967] ***
*** starting iteration: 9; err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879, 0.19023303642310202, 0.1889001419506967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879, 0.19023303642310202, 0.1889001419506967, 0.188152007849887] ***
*** finished computation of 7 references, err: [Inf, 0.29622532812226565, 0.21547208635229617, 0.20659897176921369, 0.19980605057999493, 0.19682492528297008, 0.1943656363422051, 0.19231881140451879, 0.19023303642310202, 0.1889001419506967, 0.188152007849887] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 48, 16]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 48), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [47, 2, 0]]
** centroid: 3, normalized-entropy: 0.2460225782203316, [(1, 47), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 70, 0]]
** centroid: 4, normalized-entropy: 0.4770713062193298, [(1, 8), (2, 70)]
*** center 5: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [25, 58, 0]]
** centroid: 6, normalized-entropy: 0.8827586787955116, [(1, 25), (2, 58)]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24888132062740623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24888132062740623, 0.19623216625396162] ***
*** starting iteration: 2; err: [Inf, 0.24888132062740623, 0.19623216625396162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24888132062740623, 0.19623216625396162, 0.18729602458234876] ***
*** starting iteration: 3; err: [Inf, 0.24888132062740623, 0.19623216625396162, 0.18729602458234876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24888132062740623, 0.19623216625396162, 0.18729602458234876, 0.1865525638591498] ***
*** finished computation of 7 references, err: [Inf, 0.24888132062740623, 0.19623216625396162, 0.18729602458234876, 0.1865525638591498] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 7, 0]]
** centroid: 1, normalized-entropy: 0.5086113313826895, [(1, 55), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 19, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 57), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 51, 17]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 51), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 30, 0]]
** centroid: 6, normalized-entropy: 0.9677884628267678, [(1, 46), (2, 30)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 3, 0]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(1, 60), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34032848063949495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915] ***
*** starting iteration: 2; err: [Inf, 0.34032848063949495, 0.22141608760505915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436] ***
*** starting iteration: 3; err: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402] ***
*** starting iteration: 4; err: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647] ***
*** starting iteration: 5; err: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647, 0.19057888745516538] ***
*** starting iteration: 6; err: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647, 0.19057888745516538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647, 0.19057888745516538, 0.1887644381672144] ***
*** starting iteration: 7; err: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647, 0.19057888745516538, 0.1887644381672144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647, 0.19057888745516538, 0.1887644381672144, 0.18861383056268097] ***
*** finished computation of 7 references, err: [Inf, 0.34032848063949495, 0.22141608760505915, 0.21260972376633436, 0.20545853406563402, 0.19330640939995647, 0.19057888745516538, 0.1887644381672144, 0.18861383056268097] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 23, 0]]
** centroid: 1, normalized-entropy: 0.9559312637896479, [(1, 38), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 84, 14]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 84), (3, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 29, 0]]
** centroid: 5, normalized-entropy: 0.9815886212101388, [(1, 40), (2, 29)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 40, 0]]
** centroid: 6, normalized-entropy: 0.9839393951635759, [(1, 54), (2, 40)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27652222222462297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27652222222462297, 0.20188434711284936] ***
*** starting iteration: 2; err: [Inf, 0.27652222222462297, 0.20188434711284936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27652222222462297, 0.20188434711284936, 0.19341765721980483] ***
*** starting iteration: 3; err: [Inf, 0.27652222222462297, 0.20188434711284936, 0.19341765721980483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27652222222462297, 0.20188434711284936, 0.19341765721980483, 0.19153258950496094] ***
*** starting iteration: 4; err: [Inf, 0.27652222222462297, 0.20188434711284936, 0.19341765721980483, 0.19153258950496094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27652222222462297, 0.20188434711284936, 0.19341765721980483, 0.19153258950496094, 0.19068777402257547] ***
*** finished computation of 7 references, err: [Inf, 0.27652222222462297, 0.20188434711284936, 0.19341765721980483, 0.19153258950496094, 0.19068777402257547] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 15, 0]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(1, 63), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 19]]
** centroid: 3, normalized-entropy: 0.9241335419915458, [(2, 37), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 30, 0]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(1, 42), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 3, 0]]
** centroid: 5, normalized-entropy: 0.260862909647207, [(1, 65), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 27, 0]]
** centroid: 6, normalized-entropy: 0.9100534290139191, [(1, 56), (2, 27)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.251002624578774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.251002624578774, 0.19990108362585307] ***
*** starting iteration: 2; err: [Inf, 0.251002624578774, 0.19990108362585307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027] ***
*** starting iteration: 3; err: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045] ***
*** starting iteration: 4; err: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045, 0.17905142955342307] ***
*** starting iteration: 5; err: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045, 0.17905142955342307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045, 0.17905142955342307, 0.17671115546207875] ***
*** starting iteration: 6; err: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045, 0.17905142955342307, 0.17671115546207875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045, 0.17905142955342307, 0.17671115546207875, 0.17608427354320882] ***
*** finished computation of 7 references, err: [Inf, 0.251002624578774, 0.19990108362585307, 0.18709423831664027, 0.18285394436866045, 0.17905142955342307, 0.17671115546207875, 0.17608427354320882] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 60, 12]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 60), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 19, 0]]
** centroid: 2, normalized-entropy: 0.6859315226878925, [(1, 85), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 64, 2]]
** centroid: 3, normalized-entropy: 0.19590927087360496, [(2, 64), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 17, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 51), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 16, 0]]
** centroid: 7, normalized-entropy: 0.7320666900931937, [(1, 62), (2, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25615275112725794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25615275112725794, 0.1974781122878194] ***
*** starting iteration: 2; err: [Inf, 0.25615275112725794, 0.1974781122878194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25615275112725794, 0.1974781122878194, 0.19495481472089887] ***
*** starting iteration: 3; err: [Inf, 0.25615275112725794, 0.1974781122878194, 0.19495481472089887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25615275112725794, 0.1974781122878194, 0.19495481472089887, 0.19412420394830407] ***
*** finished computation of 7 references, err: [Inf, 0.25615275112725794, 0.1974781122878194, 0.19495481472089887, 0.19412420394830407] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 6, 0]]
** centroid: 1, normalized-entropy: 0.3843115441264972, [(1, 74), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [31, 18, 0]]
** centroid: 2, normalized-entropy: 0.9486131982385807, [(1, 31), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 46, 20]]
** centroid: 3, normalized-entropy: 0.8849636363831529, [(2, 46), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [27, 66, 0]]
** centroid: 6, normalized-entropy: 0.8691375806126381, [(1, 27), (2, 66)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2602017710804939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955] ***
*** starting iteration: 2; err: [Inf, 0.2602017710804939, 0.20952093426696955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628] ***
*** starting iteration: 3; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987] ***
*** starting iteration: 4; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037] ***
*** starting iteration: 5; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353] ***
*** starting iteration: 6; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378] ***
*** starting iteration: 7; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378, 0.18481416430231185] ***
*** starting iteration: 8; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378, 0.18481416430231185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378, 0.18481416430231185, 0.18377267082221807] ***
*** starting iteration: 9; err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378, 0.18481416430231185, 0.18377267082221807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378, 0.18481416430231185, 0.18377267082221807, 0.18290793769806624] ***
*** finished computation of 7 references, err: [Inf, 0.2602017710804939, 0.20952093426696955, 0.20001512206578628, 0.1944277763850987, 0.18998603083007037, 0.18743120599724353, 0.18598890499584378, 0.18481416430231185, 0.18377267082221807, 0.18290793769806624] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 1, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 68, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 3, 0]]
** centroid: 4, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 30, 15]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 30), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 15, 0]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(1, 55), (2, 15)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21682963006943465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682963006943465, 0.19950223776511847] ***
*** starting iteration: 2; err: [Inf, 0.21682963006943465, 0.19950223776511847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886] ***
*** starting iteration: 3; err: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886, 0.19426624845899643] ***
*** starting iteration: 4; err: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886, 0.19426624845899643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886, 0.19426624845899643, 0.19271803507953883] ***
*** starting iteration: 5; err: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886, 0.19426624845899643, 0.19271803507953883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886, 0.19426624845899643, 0.19271803507953883, 0.1918323806785047] ***
*** finished computation of 7 references, err: [Inf, 0.21682963006943465, 0.19950223776511847, 0.19676729994732886, 0.19426624845899643, 0.19271803507953883, 0.1918323806785047] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [77, 3, 0]]
** centroid: 1, normalized-entropy: 0.2307099556914763, [(1, 77), (2, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [24, 66, 0]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(1, 24), (2, 66)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 8, 0]]
** centroid: 4, normalized-entropy: 0.4941829348497886, [(1, 66), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 27, 17]]
** centroid: 5, normalized-entropy: 0.9624127354629922, [(2, 27), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 17, 0]]
** centroid: 6, normalized-entropy: 0.8054848387405957, [(1, 52), (2, 17)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 48, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2609446363784373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948] ***
*** starting iteration: 2; err: [Inf, 0.2609446363784373, 0.21042733697406948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574] ***
*** starting iteration: 3; err: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025] ***
*** starting iteration: 4; err: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603] ***
*** starting iteration: 5; err: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603, 0.18858151999115944] ***
*** starting iteration: 6; err: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603, 0.18858151999115944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603, 0.18858151999115944, 0.1873485795725137] ***
*** starting iteration: 7; err: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603, 0.18858151999115944, 0.1873485795725137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603, 0.18858151999115944, 0.1873485795725137, 0.1863955763829872] ***
*** finished computation of 7 references, err: [Inf, 0.2609446363784373, 0.21042733697406948, 0.19588049115240574, 0.1914554069126025, 0.18975202196929603, 0.18858151999115944, 0.1873485795725137, 0.1863955763829872] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [79, 3, 0]]
** centroid: 1, normalized-entropy: 0.22641094842107634, [(1, 79), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [94, 4, 0]]
** centroid: 2, normalized-entropy: 0.2460225782203316, [(1, 94), (2, 4)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 50, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 20, 18]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(2, 20), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 9, 0]]
** centroid: 7, normalized-entropy: 0.5801954953637372, [(1, 56), (2, 9)]
finished with 8 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 355,3 => 35,1 => 610), Dict(2 => 351,3 => 33,1 => 616))
[ Info: ===== scores for single classifier: {"micro_f1":0.922,"precision":0.922,"recall":0.922,"macro_recall":0.9373651040317706,"macro_f1":0.8658953656133148,"accuracy":0.922,"class_f1":{"2":0.8852941176470588,"3":0.7586206896551725,"1":0.953771289537713},"class_precision":{"2":0.9148936170212766,"3":0.6111111111111112,"1":0.9529983792544571},"class_recall":{"2":0.8575498575498576,"3":1.0,"1":0.9545454545454546}}
[ Info: ===== scores for 1: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9624495874495875,"macro_f1":0.9715114773821075,"accuracy":0.975,"class_f1":{"2":0.9644381223328592,"3":0.96875,"1":0.9813463098134632},"class_precision":{"2":0.9630681818181818,"3":1.0,"1":0.9805510534846029},"class_recall":{"2":0.9658119658119658,"3":0.9393939393939394,"1":0.9821428571428571}}
[ Info: ===== scores for 5: {"micro_f1":0.978,"precision":0.978,"recall":0.978,"macro_recall":0.9760841010841012,"macro_f1":0.965174498607695,"accuracy":0.978,"class_f1":{"2":0.9691011235955055,"3":0.9411764705882354,"1":0.9852459016393442},"class_precision":{"2":0.9556786703601108,"3":0.9142857142857143,"1":0.9950331125827815},"class_recall":{"2":0.9829059829059829,"3":0.9696969696969697,"1":0.9756493506493507}}
[ Info: ===== scores for 7: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.973643640310307,"macro_f1":0.9586603484128678,"accuracy":0.975,"class_f1":{"2":0.9648382559774964,"3":0.927536231884058,"1":0.9836065573770492},"class_precision":{"2":0.9527777777777777,"3":0.8888888888888888,"1":0.9933774834437086},"class_recall":{"2":0.9772079772079773,"3":0.9696969696969697,"1":0.974025974025974}}
[ Info: ===== scores for 9: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9741847658514325,"macro_f1":0.9552429330078832,"accuracy":0.976,"class_f1":{"2":0.9661971830985916,"3":0.9142857142857143,"1":0.9852459016393442},"class_precision":{"2":0.9554317548746518,"3":0.8648648648648649,"1":0.9950331125827815},"class_recall":{"2":0.9772079772079773,"3":0.9696969696969697,"1":0.9756493506493507}}
[ Info: ===== scores for 11: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9729699313032647,"macro_f1":0.9530798419687309,"accuracy":0.973,"class_f1":{"2":0.9622377622377621,"3":0.9142857142857143,"1":0.9827160493827161},"class_precision":{"2":0.945054945054945,"3":0.8648648648648649,"1":0.996661101836394},"class_recall":{"2":0.98005698005698,"3":0.9696969696969697,"1":0.9691558441558441}}
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.98,"k":3,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.98,"precision":0.98,"recall":0.98,"macro_recall":0.9676064676064676,"macro_f1":0.9752996978609012,"accuracy":0.98,"class_f1":{"2":0.971830985915493,"3":0.96875,"1":0.9853181076672105},"class_precision":{"2":0.9610027855153204,"3":1.0,"1":0.9901639344262295},"class_recall":{"2":0.9829059829059829,"3":0.9393939393939394,"1":0.9805194805194806}}
Test Summary: | Pass  Total
AKNC          |    8      8
[871, 2, 1, 1, 3, 3, 2, 5, 1, 9, 1, 5, 13, 4, 3, 2, 19, 4, 7, 9, 4, 3, 2, 9, 7, 3, 4, 4, 2, 2, 14, 7, 28, 8, 7, 20, 13, 2, 6, 10, 24, 82, 2, 15, 49, 5, 7, 5, 2, 3, 5, 17, 10, 2, 5, 27, 16, 12, 8, 3, 63, 8, 12, 4, 20, 2, 12, 11, 20, 5, 7, 19, 5, 82, 2, 18, 8, 13, 46, 9, 22, 21, 8, 16, 11, 11, 14, 69, 10, 27, 30, 60, 33, 7, 15, 8, 23, 2, 53, 30, 76, 83, 24, 2, 13, 8, 15, 17, 3, 16, 18, 3, 5, 77, 35, 23, 11, 24, 51, 11, 3, 18, 3, 9, 8, 33, 66, 34, 8, 14, 49, 57, 2, 12, 3, 8, 47, 18, 16, 12, 14, 33, 3, 10, 8, 17, 2, 5, 13, 7, 28, 98, 26, 49, 30, 3, 6, 7, 12, 174, 29, 5, 23, 40, 44, 4, 11, 16, 7, 16, 38, 6, 11, 4, 2, 674, 28, 59, 19, 3, 17, 20, 11, 62, 36, 12, 18, 136, 42, 15, 5, 4, 4, 16, 10, 23, 2, 35, 11, 149, 13, 59, 19, 120, 99, 64, 32, 12, 6, 21, 157, 65, 111, 28, 21, 65, 38, 44, 110, 8, 86, 3, 22, 2, 15, 9, 21, 28, 3, 47, 16, 65, 52, 4, 26, 126, 39, 113, 414, 50, 13, 5, 17, 83, 39, 7, 18, 42, 9, 29, 30, 7, 58, 7, 50, 67, 23, 5, 48, 75, 12, 16, 151, 28, 140, 5, 31, 9, 131, 27, 10, 21, 24, 36, 30, 6, 6, 7, 277, 56, 17, 17, 15, 14, 44, 16, 7, 52, 9, 20, 44, 15, 23, 4, 17, 24, 137, 125, 35, 75]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.661, speedup = 0.3026194911452855, eval_ratio = 0.076399)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.388733878968254,"recall":0.3880208333333334,"f1":null,"seconds":0.00018085353076457977,"exhaustive_search_seconds":0.0003754999488592148,"evaluations":494.8125,"distances_sum":1729.3707976392525}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5477430555555556,"recall":0.5477430555555556,"f1":0.5477430555555556,"seconds":0.0003162156790494919,"exhaustive_search_seconds":0.0003754999488592148,"evaluations":689.875,"distances_sum":1619.525074461206}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.654513888888889,"recall":0.654513888888889,"f1":0.654513888888889,"seconds":0.0006463024765253067,"exhaustive_search_seconds":0.0003754999488592148,"evaluations":815.140625,"distances_sum":1565.8814459385123}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7222222222222215,"recall":0.7222222222222215,"f1":0.7222222222222215,"seconds":0.0005171652883291245,"exhaustive_search_seconds":0.0003754999488592148,"evaluations":944.3359375,"distances_sum":1536.3052494484139}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7699652777777769,"recall":0.7699652777777769,"f1":0.7699652777777769,"seconds":0.0006032194942235947,"exhaustive_search_seconds":0.0003754999488592148,"evaluations":1059.15625,"distances_sum":1518.540672089339}
KCenters.DeloneInvIndex> reached performance {"precision":0.8229166666666661,"recall":0.8229166666666661,"f1":0.8229166666666661,"seconds":0.0006659682840108871,"exhaustive_search_seconds":0.0003754999488592148,"evaluations":1161.453125,"distances_sum":1504.806141458928}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8319999999999999, speedup = 0.5943089931295538, eval_ratio = 0.10933599999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
