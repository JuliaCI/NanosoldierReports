Julia Version 1.5.0-DEV.684
Commit 1a9925d0c2 (2020-04-25 09:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_LojIcu/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_LojIcu/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.021919480039970962 -0.11419944454605171; -0.021919480039970962 0.0 -0.2046282499535677; 0.11419944454605171 0.2046282499535677 0.0])
dAA = so3([0.0 -0.07304871240910177 0.03477455483563669; 0.07304871240910177 0.0 -0.024481643557352523; -0.03477455483563669 0.024481643557352523 0.0])
dAA = so3([0.0 0.17477430252615514 0.10896120135345513; -0.17477430252615514 0.0 -0.08715778668059614; -0.10896120135345513 0.08715778668059614 0.0])
dAA = Quaternion(0.9987367553731014, [0.03170389104926389, -0.0207283530685572, 0.03301654340193135])
dAA = SO3([0.9650112925654425 -0.09912779427879458 -0.24274860580978613; 0.1209054613725934 0.9897129026686385 0.0764868596655544; 0.2326694535848105 -0.10316031549311426 0.9670692191750839])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9796216766063467 -0.17861511545550973 0.09185864822533141; 0.1839162089211915 0.9815205907586871 -0.05284087445126598; -0.08072297578153872 0.06865836036152295 0.9943690616332752]), [2.046282499535677, -1.141994445460517, -0.2191948003997096])
xj = SE3(SO3([0.9810833368059897 -0.16857908116107917 -0.0951660634707108; 0.15178987832483973 0.9749965893655107 -0.16230059631360602; 0.12014707270572769 0.1447851654020813 0.982141505486728]), [0.8715778668059613, 1.0896120135345513, -1.7477430252615513])
Dx = SE3(SO3([0.979308493026299 0.0024864648991444055 -0.20235783399430002; -0.018002321416280852 0.99703071248789 -0.07487105435023395; 0.20157081115623932 0.0769647701756855 0.9764454066877574]), [-0.6169485607530729, 2.295240078722351, -1.7457678803680574])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
