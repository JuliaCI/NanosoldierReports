Julia Version 1.5.0-DEV.681
Commit 641f444a0b (2020-04-24 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed Requires ───────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FillArrays ─────────────────── v0.8.7
  Installed StatsFuns ──────────────────── v0.9.4
  Installed MacroTools ─────────────────── v0.5.5
  Installed MonteCarloMeasurements ─────── v0.8.10
  Installed Distributions ──────────────── v0.23.2
  Installed QuadGK ─────────────────────── v2.3.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed GenericLinearAlgebra ───────── v0.2.1
  Installed PDMats ─────────────────────── v0.9.12
  Installed OpenBLAS_jll ───────────────── v0.3.9+2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed StaticArrays ───────────────── v0.12.1
  Installed RecipesBase ────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.13
  Installed StatsBase ──────────────────── v0.33.0
  Installed DataAPI ────────────────────── v1.2.0
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed OrderedCollections ─────────── v1.1.0
  Installed Arpack ─────────────────────── v0.4.0
  Installed SortingAlgorithms ──────────── v0.3.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [0987c9cc] + MonteCarloMeasurements v0.8.10
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.2.0
  [864edb3b] + DataStructures v0.17.13
  [31c24e10] + Distributions v0.23.2
  [1a297f60] + FillArrays v0.8.7
  [14197337] + GenericLinearAlgebra v0.2.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [0987c9cc] + MonteCarloMeasurements v0.8.10
  [4536629a] + OpenBLAS_jll v0.3.9+2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.12
  [1fd47b50] + QuadGK v2.3.1
  [3cdcf5f2] + RecipesBase v1.0.1
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing MonteCarloMeasurements
Status `/tmp/jl_QpoWkb/Project.toml`
  [a6e380b2] ControlSystems v0.5.3
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [14197337] GenericLinearAlgebra v0.2.1
  [1914dd2f] MacroTools v0.5.5
  [eff96d63] Measurements v2.1.1
  [0987c9cc] MonteCarloMeasurements v0.8.10
  [91a5bcdd] Plots v1.1.0
  [3cdcf5f2] RecipesBase v1.0.1
  [ae029012] Requires v1.0.1
  [476501e8] SLEEFPirates v0.4.6
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.33.0
  [1986cc42] Unitful v1.1.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_QpoWkb/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.0.1
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.5
  [6e34b625] Bzip2_jll v1.0.6+2
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.7.4
  [35d6a980] ColorSchemes v3.8.0
  [3da002f7] ColorTypes v0.10.2
  [5ae59095] Colors v0.12.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [d38c429a] Contour v0.5.2
  [a6e380b2] ControlSystems v0.5.3
  [adafc99b] CpuId v0.2.2
  [717857b8] DSP v0.6.6
  [9a962f9c] DataAPI v1.2.0
  [864edb3b] DataStructures v0.17.13
  [2b5f629d] DiffEqBase v6.30.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.3.0
  [b22a6f82] FFMPEG_jll v4.1.0+2
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [53c48c17] FixedPointNumbers v0.8.0
  [f6369f11] ForwardDiff v0.10.10
  [d7e528f0] FreeType2_jll v2.10.1+2
  [559328eb] FriBidi_jll v1.0.5+2
  [069b7b12] FunctionWrappers v1.1.1
  [28b8d3ca] GR v0.48.0
  [14197337] GenericLinearAlgebra v0.2.1
  [01680d73] GenericSVD v0.3.0
  [4d00f742] GeometryTypes v0.8.2
  [d25df0c9] Inflate v0.1.2
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [d8418881] Intervals v1.1.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [c1c5ebd0] LAME_jll v3.100.0+0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.1.0
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [dd192d2f] LibVPX_jll v1.8.1+1
  [94ce4f54] Libiconv_jll v1.16.0+2
  [093fc24a] LightGraphs v1.3.2
  [d3d80556] LineSearches v7.0.1
  [e6f89c97] LoggingExtras v0.4.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.5
  [eff96d63] Measurements v2.1.1
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [0987c9cc] MonteCarloMeasurements v0.8.10
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [e7412a2a] Ogg_jll v1.3.3+0
  [4536629a] OpenBLAS_jll v0.3.9+2
  [458c3c95] OpenSSL_jll v1.1.1+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [91d4177d] Opus_jll v1.3.1+0
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.34.1
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.2
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.0
  [91a5bcdd] Plots v1.1.0
  [f27b6e38] Polynomials v0.8.0
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v1.0.1
  [01d81517] RecipesPipeline v0.1.6
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [21efa798] SIMDPirates v0.7.17
  [476501e8] SLEEFPirates v0.4.6
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [f269a46b] TimeZones v1.1.1
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v0.1.0
  [1986cc42] Unitful v1.1.0
  [3d5dd08c] VectorizationBase v0.10.5
  [19fa3120] VertexSafeGraphs v0.1.1
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [700de1a5] ZygoteRules v0.2.0
  [0ac62f75] libass_jll v0.14.0+1
  [f638f0a6] libfdk_aac_jll v0.1.6+1
  [f27f6e37] libvorbis_jll v1.3.6+2
  [1270edf5] x264_jll v2019.5.25+1
  [dfaa095f] x265_jll v3.0.0+0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Running tests
[ Info: import Plots
[ Info: import Plots done
[ Info: Testing MonteCarloMeasurements
[ Info: Testing sampling
  4.287971 seconds (4.98 M allocations: 304.667 MiB, 2.78% gc time)
[ Info: Creating the first StaticParticles
[ Info: Done
[ Info: Running tests for Particles
-3.22e-17 ± 1.0
mode = :montecarlo
mode = :reduction
mode = :safe
[ Info: Tests for Particles done
[ Info: Running tests for StaticParticles
-3.22e-17 ± 1.0
mode = :montecarlo
mode = :reduction
mode = :safe
[ Info: Tests for StaticParticles done
114.807661 seconds (53.27 M allocations: 2.423 GiB, 1.67% gc time)
[ Info: Running tests for multivariate Particles
[ Info: Tests for multivariate Particles done
[ Info: Running tests for multivariate StaticParticles
[ Info: Tests for multivariate StaticParticles done
  2.297555 seconds (2.16 M allocations: 103.013 MiB, 3.76% gc time)
[ Info: Testing sigmapoints
[ Info: Testing gradient
  2.649021 seconds (2.67 M allocations: 141.657 MiB, 3.25% gc time)
[ Info: Testing leastsquares
 14.707170 seconds (6.81 M allocations: 5.251 GiB, 14.15% gc time)
[ Info: Testing misc
Part10000(-7.105e-19 ± 1.0)-7.11e-19 ± 1.0
$-7.11e-19 ± 1.0$
0.0
$0.0$
$(-7.11e-19 ± 1.0) + (-7.11e-19 ± 1.0)i$
$(-7.11e-19 ± 1.0) + (7.11e-19 ± 1.0)i$
$(0.0) + (-7.11e-19 ± 1.0)i$
$(0.0) + (7.11e-19 ± 1.0)i$
Part10000(-7.105e-19 ± 1.0)
0.0
Part10000(0.0)
(-7.11e-19 ± 1.0) + (-7.11e-19 ± 1.0)im
(-7.11e-19 ± 1.0) + (7.11e-19 ± 1.0)im
(0.0) + (-7.11e-19 ± 1.0)im
(0.0) - (10.0 ± 1.0)im
2-element Array{Particles{Float64,10000},1}:
 Part10000(-7.105e-19 ± 1.0)
 Part10000(-7.105e-19 ± 1.0)Particles{Float64,10000}[-7.11e-19 ± 1.0, -7.11e-19 ± 1.0]
Particles{Float64,10000}[-7.11e-19 ± 1.0, 0.0]
 25.076909 seconds (26.67 M allocations: 1.407 GiB, 2.85% gc time)
[ Info: Testing mutation
  0.253256 seconds (191.35 k allocations: 13.062 MiB)
[ Info: Testing outer product
  1.882506 seconds (2.53 M allocations: 157.504 MiB, 4.03% gc time)
[ Info: Testing plotting
┌ Warning: Attribute alias `alpha` detected in the user recipe defined for the signature (::Array{Particles{Float64,100},1}, ::Array{Particles{Float64,100},1}). To ensure expected behavior it is recommended to use the default attribute `seriesalpha`.
└ @ Plots ~/.julia/packages/Plots/twqrR/src/pipeline.jl:15
┌ Warning: Attribute alias `alpha` detected in the user recipe defined for the signature (::MonteCarloMeasurements.MCplot). To ensure expected behavior it is recommended to use the default attribute `seriesalpha`.
└ @ Plots ~/.julia/packages/Plots/twqrR/src/pipeline.jl:15
┌ Warning: Attribute alias `alpha` detected in the user recipe defined for the signature (::MonteCarloMeasurements.MCplot). To ensure expected behavior it is recommended to use the default attribute `seriesalpha`.
└ @ Plots ~/.julia/packages/Plots/twqrR/src/pipeline.jl:15
┌ Warning: Attribute alias `alpha` detected in the user recipe defined for the signature (::MonteCarloMeasurements.MCplot). To ensure expected behavior it is recommended to use the default attribute `seriesalpha`.
└ @ Plots ~/.julia/packages/Plots/twqrR/src/pipeline.jl:15
!=,
!==,
rem,
&,
*,
+,
-,
/,
//,
Colon,
<<,
>,
>:,
>=,
>>,
>>>,
\,
^,
accumulate,
all,
any,
asyncmap,
atan,
atand,
axes,
binomial,
bitrotate,
broadcast,
broadcast!,
cat,
circcopy!,
cld,
cmp,
coalesce,
code_lowered,
code_typed,
complex,
copysign,
count,
ctime,
div,
divrem,
eachindex,
error,
extrema,
falses,
fdio,
filemode,
filesize,
finalizer,
findnext,
findprev,
fld,
fld1,
fldmod,
fldmod1,
flipsign,
foldl,
foldr,
foreach,
functionloc,
gcd,
gcdx,
getindex,
gperm,
hash,
hasmethod,
hcat,
hvcat,
hypot,
in,
intersect,
invmod,
isblockdev,
ischardev,
isdir,
isdisjoint,
isequal,
isfifo,
isfile,
isless,
islink,
ismount,
ispath,
issetequal,
issetgid,
issetuid,
issocket,
issticky,
issubset,
iszero,
iterate,
join,
kron,
lcm,
ldexp,
log,
lpad,
lstat,
map,
mapreduce,
max,
maximum,
methods,
min,
minimum,
minmax,
mod,
mod1,
mtime,
nextfloat,
nextpow,
ntuple,
oftype,
ones,
operm,
parentmodule,
prevfloat,
prevpow,
print,
println,
printstyled,
prod,
propertynames,
range,
reduce,
rem,
rpad,
setdiff,
show_error_hints,
something,
stat,
string,
sum,
symdiff,
systemerror,
task_local_storage,
trues,
typeintersect,
typejoin,
union,
unique,
uperm,
vcat,
which,
widemul,
xor,
zip,
|,
div,
in,
∉,
∋,
∌,
∘,
intersect,
union,
isapprox,
≉,
!=,
!==,
<=,
>=,
issubset,
⊇,
⊈,
⊉,
⊊,
⊋,
xor,
 22.563064 seconds (27.19 M allocations: 1.290 GiB, 2.82% gc time)
[ Info: Testing optimization
[ Info: Converged at iteration 3242
[ Info: Converged at iteration 3220
[ Info: Converged at iteration 3220
  7.282678 seconds (6.59 M allocations: 684.972 MiB, 5.51% gc time)
[ Info: Testing Particle BLAS
[ Info: Testing bymap
[ Info: Testing @prob
  7.191549 seconds (9.25 M allocations: 469.992 MiB, 4.38% gc time)
[ Info: Testing Unitful
0.5 V ± 0.5802298395176404 V
Part100(0.5 V ± 0.5802298395176404 V)0.5000000000000001 V ± 0.5802298395176404 V
SPart100(0.5000000000000001 V ± 0.5802298395176404 V)[ Info: Testing ForwardDiff
[ Info: Testing deconstruct
[ Info: Unsafe comparisons using the function `mean` has been enabled globally. Use `@unsafe` to enable in a local expression only or `unsafe_comparisons(false)` to turn off unsafe comparisons
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}(::Array{StaticParticles{Float64,50},1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}(::Array{Float64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = replace_particles(::Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}, ::MonteCarloMeasurements.var"#150#152", ::MonteCarloMeasurements.var"#151#153") at deconstruct.jl:123
└ @ MonteCarloMeasurements ~/.julia/packages/MonteCarloMeasurements/FcMud/src/deconstruct.jl:123
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Float64}(::Array{Float64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = + at Poly.jl:125 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = + at Poly.jl:125 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = replace_particles(::Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}, ::MonteCarloMeasurements.var"#138#140", ::MonteCarloMeasurements.var"#139#141") at deconstruct.jl:123
└ @ MonteCarloMeasurements ~/.julia/packages/MonteCarloMeasurements/FcMud/src/deconstruct.jl:123
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Particles{Float64,1}}(::Array{Particles{Float64,1},1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Particles{Float64,1}}(::Array{Float64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = + at Poly.jl:125 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = +(::Polynomials.PolyCompat.Poly{Particles{Float64,1}}, ::Polynomials.PolyCompat.Poly{Particles{Float64,1}}) at Poly.jl:125
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = replace_particles(::Polynomials.PolyCompat.Poly{Particles{Float64,1}}, ::MonteCarloMeasurements.var"#142#144", ::MonteCarloMeasurements.var"#143#145"{Int64}) at deconstruct.jl:123
└ @ MonteCarloMeasurements ~/.julia/packages/MonteCarloMeasurements/FcMud/src/deconstruct.jl:123
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Particles{Float64,50}}(::Array{Particles{Float64,50},1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Particles{Float64,50}}(::Array{Float64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = replace_particles(::Polynomials.PolyCompat.Poly{Particles{Float64,50}}, ::MonteCarloMeasurements.var"#146#148", ::MonteCarloMeasurements.var"#147#149") at deconstruct.jl:123
└ @ MonteCarloMeasurements ~/.julia/packages/MonteCarloMeasurements/FcMud/src/deconstruct.jl:123
  1.384748 seconds (872.13 k allocations: 45.368 MiB)
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = replace_particles(::Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}, ::MonteCarloMeasurements.var"#134#136", ::MonteCarloMeasurements.var"#135#137") at deconstruct.jl:123
└ @ MonteCarloMeasurements ~/.julia/packages/MonteCarloMeasurements/FcMud/src/deconstruct.jl:123
  0.385851 seconds (117.95 k allocations: 9.368 MiB)
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = replace_particles(::Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}, ::MonteCarloMeasurements.var"#154#156", ::MonteCarloMeasurements.var"#155#157") at deconstruct.jl:123
└ @ MonteCarloMeasurements ~/.julia/packages/MonteCarloMeasurements/FcMud/src/deconstruct.jl:123
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Int64}(::Array{Int64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Int64}(::Array{Float64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = Polynomials.PolyCompat.Poly{Float64}(::Array{Int64,1}, ::Symbol) at abstract.jl:45
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/abstract.jl:45
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = + at Poly.jl:125 [inlined]
└ @ Core ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
┌ Warning: Use of `Poly` from v1.0 forward will require `using Polynomials.PolyCompat`
│   caller = +(::Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}, ::Polynomials.PolyCompat.Poly{StaticParticles{Float64,50}}) at Poly.jl:125
└ @ Polynomials.PolyCompat ~/.julia/packages/Polynomials/ghqdF/src/polynomials/Poly.jl:125
[ Info: Testing SLEEFPirates
[ Info: Testing Measurements
Test Summary:             | Pass  Total
MonteCarloMeasurements.jl |  859    859
    Testing MonteCarloMeasurements tests passed 
