Julia Version 1.5.0-DEV.681
Commit 641f444a0b (2020-04-24 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_NQpbRh/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_NQpbRh/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171779972431588
curgen: 20 fitness: 0.21720210573766088
curgen: 30 fitness: 0.21723294312577224
curgen: 40 fitness: 0.21723294312577224
curgen: 50 fitness: 0.21723320359916373
CoordinateCreature{Array{Float64,1}}([-0.22245026168579654], -0.21723320359916373) -0.22245026168579654 -0.21723320359916373
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580313105051957
curgen: 100 fitness: 3.2582943668685793
curgen: 150 fitness: 3.2582985759113723
curgen: 200 fitness: 3.258372078075348
curgen: 250 fitness: 3.258396591488028
curgen: 300 fitness: 3.258396591488028
curgen: 350 fitness: 3.258413459870579
curgen: 400 fitness: 3.2584389582061513
curgen: 450 fitness: 3.2584574127880517
curgen: 500 fitness: 3.2584574127880517
CoordinateCreature{Array{Float64,1}}([0.2227469521820625, 0.22274605921775942, 0.2223621799558898, -0.22262052709622138, -0.22247007539187477, 0.22244996852523397, 0.22245788413374756, -0.22263072446126106, -0.22309917025488046, -0.22299913854128528, 0.22263201828099863, 0.22245022818385032, -0.22298952337173425, -0.22297222496224714, -0.22241867780310695], -3.2584574127880517) [0.2227469521820625, 0.22274605921775942, 0.2223621799558898, -0.22262052709622138, -0.22247007539187477, 0.22244996852523397, 0.22245788413374756, -0.22263072446126106, -0.22309917025488046, -0.22299913854128528, 0.22263201828099863, 0.22245022818385032, -0.22298952337173425, -0.22297222496224714, -0.22241867780310695] -3.2584574127880517
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0031721444619847716
curgen: 100 fitness: -0.0031721444619847716
curgen: 150 fitness: -0.0030149477528311763
curgen: 200 fitness: -0.0028920747693064186
curgen: 250 fitness: -0.0023458800188222995
curgen: 300 fitness: -0.002148334616038028
curgen: 350 fitness: -0.0019931702819349084
curgen: 400 fitness: -0.001720267431664979
curgen: 450 fitness: -0.001720267431664979
curgen: 500 fitness: -0.001720267431664979
CoordinateCreature{Array{Float64,1}}([-3.6239619712641856e-5, -8.784057416665895e-5, 0.0003380298399608613, 7.196541236773176e-5, 0.00251965542084355, -9.209748116287031e-5, 0.0009609734622849156, 0.0006765157961485385, 0.00039436019133664126, -0.00016517053016668168, -0.00048778153691261816, -0.0005230272027876659, 8.23632027963554e-5, 0.000303933862543875, 0.00010475711610686373], 0.001720267431664979) [-3.6239619712641856e-5, -8.784057416665895e-5, 0.0003380298399608613, 7.196541236773176e-5, 0.00251965542084355, -9.209748116287031e-5, 0.0009609734622849156, 0.0006765157961485385, 0.00039436019133664126, -0.00016517053016668168, -0.00048778153691261816, -0.0005230272027876659, 8.23632027963554e-5, 0.000303933862543875, 0.00010475711610686373] 0.001720267431664979
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
