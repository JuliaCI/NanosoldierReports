Julia Version 1.5.0-DEV.684
Commit 1a9925d0c2 (2020-04-25 09:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_uBCNa9/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_uBCNa9/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722725633613177
curgen: 20 fitness: 0.21722725633613177
curgen: 30 fitness: 0.2172317022259082
curgen: 40 fitness: 0.2172317022259082
curgen: 50 fitness: 0.2172325801428777
CoordinateCreature{Array{Float64,1}}([0.22239438040817508], -0.2172325801428777) 0.22239438040817508 -0.2172325801428777
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579381425754694
curgen: 100 fitness: 3.258139749192874
curgen: 150 fitness: 3.258332180706344
curgen: 200 fitness: 3.2583549903435993
curgen: 250 fitness: 3.2583660949721045
curgen: 300 fitness: 3.2583906561545595
curgen: 350 fitness: 3.258441811470121
curgen: 400 fitness: 3.25844439145788
curgen: 450 fitness: 3.258468237972412
curgen: 500 fitness: 3.258478523324897
CoordinateCreature{Array{Float64,1}}([0.2226305767801247, 0.22272372533271537, -0.223095227448084, 0.22237472421236484, -0.22267832823525824, 0.2225638725312548, 0.2223395698954421, 0.22250851223669016, -0.22240956625763492, 0.22246756055274805, -0.22266692971893473, 0.2223887807416101, -0.22274451574368748, -0.2225619894747618, 0.22277780245535392], -3.258478523324897) [0.2226305767801247, 0.22272372533271537, -0.223095227448084, 0.22237472421236484, -0.22267832823525824, 0.2225638725312548, 0.2223395698954421, 0.22250851223669016, -0.22240956625763492, 0.22246756055274805, -0.22266692971893473, 0.2223887807416101, -0.22274451574368748, -0.2225619894747618, 0.22277780245535392] -3.258478523324897
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.008553619097057208
curgen: 100 fitness: -0.006076856200394332
curgen: 150 fitness: -0.005491375664462339
curgen: 200 fitness: -0.003570692241140705
curgen: 250 fitness: -0.0024763152555067336
curgen: 300 fitness: -0.0017093219400692305
curgen: 350 fitness: -0.0017093219400692305
curgen: 400 fitness: -0.0016069020932718558
curgen: 450 fitness: -0.0016069020932718558
curgen: 500 fitness: -0.0015270374483407068
CoordinateCreature{Array{Float64,1}}([0.0009621874031074222, -0.00016544061009055706, -0.0006396789590422686, -4.803539748767564e-5, 0.0009108713938733755, -0.0006483707804411443, -0.0001546913863378636, 0.00031840356361931407, 0.0017796298160740968, -0.00032357197894682436, 0.0011707841089750157, 0.00015277984327217517, -0.00017371011120789233, -9.341918586281729e-5, -0.000502294524566085], 0.0015270374483407068) [0.0009621874031074222, -0.00016544061009055706, -0.0006396789590422686, -4.803539748767564e-5, 0.0009108713938733755, -0.0006483707804411443, -0.0001546913863378636, 0.00031840356361931407, 0.0017796298160740968, -0.00032357197894682436, 0.0011707841089750157, 0.00015277984327217517, -0.00017371011120789233, -9.341918586281729e-5, -0.000502294524566085] 0.0015270374483407068
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
