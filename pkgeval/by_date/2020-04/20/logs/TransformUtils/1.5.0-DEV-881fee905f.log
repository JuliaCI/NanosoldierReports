Julia Version 1.5.0-DEV.651
Commit 881fee905f (2020-04-20 16:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_aaNlMy/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_aaNlMy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.21100966114619313 -0.05176265640466812; 0.21100966114619313 0.0 -0.14895037787332466; 0.05176265640466812 0.14895037787332466 0.0])
dAA = so3([0.0 -0.006903867267547461 0.03384668176440691; 0.006903867267547461 0.0 -0.1468266010314507; -0.03384668176440691 0.1468266010314507 0.0])
dAA = so3([0.0 -0.07168024380883437 0.05332115905623659; 0.07168024380883437 0.0 -0.13759407641757102; -0.05332115905623659 0.13759407641757102 0.0])
dAA = Quaternion(0.9970882756406733, [0.04520937665584077, -0.05045701478367139, -0.035002464219249976])
dAA = SO3([0.9681140187277004 -0.2056460712385464 -0.14305572385281518; 0.1957483174036579 0.9773628483607155 -0.08027738708918217; 0.15632607900327766 0.04971474658871644 0.9864535473072624])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9963150363068729 -0.0015067005464085837 0.0857559227243103; 0.03220034900306853 0.9332784231115584 -0.357707313985168; -0.07949519452718518 0.3591505461611696 0.9298878422902509]), [1.4895037787332466, -0.5176265640466812, 2.1100966114619313])
xj = SE3(SO3([0.9533344634309991 0.15393151463368335 -0.2597277221193553; -0.21072994026411035 0.9553092951144886 -0.20730905176606096; 0.21620891080391066 0.2523672709969321 0.9431672531521371]), [1.3759407641757102, 0.5332115905623659, 0.7168024380883437])
Dx = SE3(SO3([0.9258483135010815 0.16406358999939613 -0.34042332297260924; -0.12045454750890731 0.9819754670428082 0.14565330106277302; 0.35818375503591426 -0.09384732581468946 0.9289225355570849]), [0.0314530076980688, 0.4804933180047778, -1.681238507373013])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
