Julia Version 1.5.0-DEV.651
Commit 881fee905f (2020-04-20 16:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ljXKHU/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ljXKHU/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721981768682408
curgen: 20 fitness: 0.21721981768682408
curgen: 30 fitness: 0.2172319790313047
curgen: 40 fitness: 0.2172319790313047
curgen: 50 fitness: 0.21723202940967234
CoordinateCreature{Array{Float64,1}}([0.22273828564628154], -0.21723202940967234) 0.22273828564628154 -0.21723202940967234
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2575054482554404
curgen: 100 fitness: 3.2580683208837553
curgen: 150 fitness: 3.2583687870873126
curgen: 200 fitness: 3.2583687870873126
curgen: 250 fitness: 3.258410059097539
curgen: 300 fitness: 3.2584237051060336
curgen: 350 fitness: 3.258444189411609
curgen: 400 fitness: 3.258444189411609
curgen: 450 fitness: 3.258444445061515
curgen: 500 fitness: 3.258452991269087
CoordinateCreature{Array{Float64,1}}([0.22290738406515448, 0.22228697666436578, 0.22248787242100446, 0.22302339093434123, 0.22283019797696438, -0.22208608687433146, -0.22276489941109806, -0.22231384789016562, 0.22256104516703543, 0.22246325171513243, 0.22280592139754263, -0.22212556172437414, 0.2223089320942075, -0.2226182198110058, -0.22270705213903683], -3.258452991269087) [0.22290738406515448, 0.22228697666436578, 0.22248787242100446, 0.22302339093434123, 0.22283019797696438, -0.22208608687433146, -0.22276489941109806, -0.22231384789016562, 0.22256104516703543, 0.22246325171513243, 0.22280592139754263, -0.22212556172437414, 0.2223089320942075, -0.2226182198110058, -0.22270705213903683] -3.258452991269087
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001406670834256829
curgen: 100 fitness: -0.0013953974854246098
curgen: 150 fitness: -0.001363916501048834
curgen: 200 fitness: -0.0011866139919334273
curgen: 250 fitness: -0.0010118589454748417
curgen: 300 fitness: -0.0007059561441451478
curgen: 350 fitness: -0.0004588176320794446
curgen: 400 fitness: -0.00023222042506176876
curgen: 450 fitness: -0.00023222042506176876
curgen: 500 fitness: -0.00023179848022891747
CoordinateCreature{Array{Float64,1}}([0.00014040860354581447, -0.00025795513182592976, -0.0004151797891960103, 0.00023580802628774583, -0.00012072858341601541, 0.00029450347493640454, 0.00034382096128465225, 9.776062187048288e-5, -0.000676234781285021, 0.00027392500243058606, -0.00013399993183254503, 0.00024285941163755125, -0.00010133942929736426, 4.955489558520024e-6, 7.425988787066232e-5], 0.00023179848022891747) [0.00014040860354581447, -0.00025795513182592976, -0.0004151797891960103, 0.00023580802628774583, -0.00012072858341601541, 0.00029450347493640454, 0.00034382096128465225, 9.776062187048288e-5, -0.000676234781285021, 0.00027392500243058606, -0.00013399993183254503, 0.00024285941163755125, -0.00010133942929736426, 4.955489558520024e-6, 7.425988787066232e-5] 0.00023179848022891747
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
