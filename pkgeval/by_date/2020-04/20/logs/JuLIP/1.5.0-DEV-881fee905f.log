Julia Version 1.5.0-DEV.651
Commit 881fee905f (2020-04-20 16:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed ArrayInterface ─────────────── v2.8.5
  Installed AlgebraicMultigrid ─────────── v0.3.0
  Installed FiniteDiff ─────────────────── v2.3.0
  Installed StaticArrays ───────────────── v0.12.1
  Installed LineSearches ───────────────── v7.0.1
  Installed RecipesBase ────────────────── v1.0.0
  Installed JuLIP ──────────────────────── v0.8.2
  Installed Compat ─────────────────────── v3.8.0
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed DataAPI ────────────────────── v1.2.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed BinaryProvider ─────────────── v0.5.8
  Installed PositiveFactorizations ─────── v0.2.3
  Installed HTTP ───────────────────────── v0.8.14
  Installed MbedTLS ────────────────────── v1.0.2
  Installed Requires ───────────────────── v1.0.1
  Installed DataStructures ─────────────── v0.17.13
  Installed StatsBase ──────────────────── v0.33.0
  Installed CompatHelper ───────────────── v1.4.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ExprTools ──────────────────── v0.1.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed EzXML ──────────────────────── v1.1.0
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed NLSolversBase ──────────────── v7.6.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Mocking ────────────────────── v0.7.1
  Installed NeighbourLists ─────────────── v0.5.0
  Installed Dierckx ────────────────────── v0.4.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed ForwardDiff ────────────────── v0.10.10
  Installed GitHub ─────────────────────── v5.1.5
  Installed Calculus ───────────────────── v0.5.1
  Installed TimeZones ──────────────────── v1.1.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed IterativeSolvers ───────────── v0.8.4
  Installed IniFile ────────────────────── v0.5.0
  Installed FillArrays ─────────────────── v0.8.7
  Installed Reexport ───────────────────── v0.2.0
  Installed JSON ───────────────────────── v0.21.0
  Installed DiffResults ────────────────── v1.0.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed MbedTLS_jll ────────────────── v2.16.0+2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed XML2_jll ───────────────────── v2.9.9+4
  Installed Parsers ────────────────────── v1.0.2
  Installed Parameters ─────────────────── v0.12.0
  Installed Optim ──────────────────────── v0.20.6
Updating `~/.julia/environments/v1.5/Project.toml`
  [945c410c] + JuLIP v0.8.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [2169fc97] + AlgebraicMultigrid v0.3.0
  [4fba245c] + ArrayInterface v2.8.5
  [b99e7846] + BinaryProvider v0.5.8
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v3.8.0
  [aa819f21] + CompatHelper v1.4.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.2.0
  [864edb3b] + DataStructures v0.17.13
  [39dd38d3] + Dierckx v0.4.1
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.7
  [6a86dc24] + FiniteDiff v2.3.0
  [f6369f11] + ForwardDiff v0.10.10
  [069b7b12] + FunctionWrappers v1.1.1
  [bc5e4493] + GitHub v5.1.5
  [cd3eb016] + HTTP v0.8.14
  [83e8ac13] + IniFile v0.5.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [682c06a0] + JSON v0.21.0
  [945c410c] + JuLIP v0.8.2
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.5
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.0+2
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.6.1
  [77ba4419] + NaNMath v0.3.3
  [2fcf5ba9] + NeighbourLists v0.5.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.20.6
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v1.0.2
  [85a6dd25] + PositiveFactorizations v0.2.3
  [3cdcf5f2] + RecipesBase v1.0.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.1.0
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Dierckx ──→ `~/.julia/packages/Dierckx/9SY4A/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/OSWcm/deps/build.log`
    Testing JuLIP
Status `/tmp/jl_0ulcIX/Project.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [39dd38d3] Dierckx v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [682c06a0] JSON v0.21.0
  [945c410c] JuLIP v0.8.2
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [2fcf5ba9] NeighbourLists v0.5.0
  [429524aa] Optim v0.20.6
  [189a3867] Reexport v0.2.0
  [90137ffa] StaticArrays v0.12.1
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_0ulcIX/Manifest.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [4fba245c] ArrayInterface v2.8.5
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.8
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [aa819f21] CompatHelper v1.4.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.2.0
  [864edb3b] DataStructures v0.17.13
  [39dd38d3] Dierckx v0.4.1
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [bc5e4493] GitHub v5.1.5
  [cd3eb016] HTTP v0.8.14
  [83e8ac13] IniFile v0.5.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [682c06a0] JSON v0.21.0
  [945c410c] JuLIP v0.8.2
  [94ce4f54] Libiconv_jll v1.16.0+2
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.5
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.0+2
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.6.1
  [77ba4419] NaNMath v0.3.3
  [2fcf5ba9] NeighbourLists v0.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.20.6
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.2
  [85a6dd25] PositiveFactorizations v0.2.3
  [3cdcf5f2] RecipesBase v1.0.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.1.0
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
     JuLIP Tests     
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
[ Info: preparing the tests...
[ Info: Loading some interatomic potentials . .
 . . done.
[ Info: on CI : don't run solver tests
=======================
 Testset Miscellaneous 
=======================
==========
 Test Aux 
==========
--------------------------
matrix <-> vec conversions
--------------------------
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Atoms 
===============
check that `bulk` evaluates ok...
Test Passed
... and that we can repeat it.
Test Passed
check deepcopy and == ...
Test Passed
Check setindex! and getindex ...
Test Passed
Test Passed
Test Passed
set_positions ...
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
test set_positions!
Test Passed
Test Passed
test set_momenta!
Test Passed
test set_dofs!, etc
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Build 
===============
=================
 Testset File IO 
=================
Testing single `Atoms` <-> `Dict`
Test Passed
Test Passed
Test JSON fio
Test Passed
Test array of Atoms <-> Dict
Test Passed
Test JSON fio for array
Test Passed
============================
 Testset Analytic Potential 
============================
generate hand-coded morse potential
generate AD morse potential
typeof(morse1) = AnalyticFunction{var"#3#6"{Float64,Float64,Float64},var"#4#7"{Float64,Float64,Float64},var"#5#8"{Float64,Float64,Float64}}
Check consistency of hand-coded and analytic Morse potentials...
Test Passed
Test Passed
------------------------------------------
Performance tests: @analytic vs hand-coded
------------------------------------------
Evaluations of @analytic Potential
  75.023 μs (1000 allocations: 109.38 KiB)
Evaluations hand-coded Potential
  85.175 μs (2000 allocations: 125.00 KiB)
Grad of @analytic Potential
  129.625 μs (3000 allocations: 250.00 KiB)
Grad of hand-coded Potential
  193.704 μs (3000 allocations: 250.00 KiB)
====================
 Testset Potentials 
====================
--------------------------------------
Testing pair potential implementations
--------------------------------------
AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
AnalyticFunction{JuLIP.Potentials.var"#25#28"{Float64,Float64,Float64},JuLIP.Potentials.var"#26#29"{Float64,Float64,Float64},JuLIP.Potentials.var"#27#30"{Float64,Float64,Float64}}(JuLIP.Potentials.var"#25#28"{Float64,Float64,Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#26#29"{Float64,Float64,Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#27#30"{Float64,Float64,Float64}(4.0, 1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.19e+00  
 1.0e-03 | 1.23e-01  
 1.0e-04 | 1.23e-02  
 1.0e-05 | 1.23e-03  
 1.0e-06 | 1.23e-04  
 1.0e-07 | 1.23e-05  
 1.0e-08 | 1.13e-06  
 1.0e-09 | 3.33e-07  
 1.0e-10 | 4.64e-06  
 1.0e-11 | 3.61e-05  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SWCutoff{Float64},AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}(SWCutoff{Float64}(1.0, 3.0, 1.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 7.17e-04  
 1.0e-03 | 8.77e-05  
 1.0e-04 | 8.96e-06  
 1.0e-05 | 8.98e-07  
 1.0e-06 | 8.98e-08  
 1.0e-07 | 8.98e-09  
 1.0e-08 | 8.85e-10  
 1.0e-09 | 1.34e-10  
 1.0e-10 | 4.96e-10  
 1.0e-11 | 9.95e-10  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SplineCutoff,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}(SplineCutoff(2.0, 3.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
Shift{2,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}},Float64}(Val{2}(), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)), 2.0, -0.0615234375, 0.181640625, -0.6181640625)
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.84e-05  
 1.0e-09 | 2.90e-05  
 1.0e-10 | 4.62e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
ZBLPotential{AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}}(5, 8, AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}(JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(575.985814118274, 0.1818, 0.5099, 0.2802, 0.02817, 20.9148983873684, 6.158783984505388, 1.3176385984042092), JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(575.985814118274, 0.1818, 0.5099, 0.2802, 0.02817, 20.9148983873684, 6.158783984505388, 1.3176385984042092), JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(575.985814118274, 0.1818, 0.5099, 0.2802, 0.02817, 20.9148983873684, 6.158783984505388, 1.3176385984042092)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 3.84e+00  
 1.0e-03 | 3.90e-01  
 1.0e-04 | 3.91e-02  
 1.0e-05 | 3.91e-03  
 1.0e-06 | 3.91e-04  
 1.0e-07 | 3.92e-05  
 1.0e-08 | 3.01e-06  
 1.0e-09 | 2.23e-05  
 1.0e-10 | 2.15e-04  
 1.0e-11 | 1.27e-03  
---------|----------- 
passed
Test Passed
-----------------------
testing shift-cutoffs: 
-----------------------
HS
Test Passed
Test Passed
V0
Test Passed
Test Passed
V1
Test Passed
Test Passed
V2
Test Passed
Test Passed
----------------------------------
Testing calculator implementations
----------------------------------
--------------------------------
JuLIP.Potentials.ProdPot{SplineCutoff,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}
length(at_) = 72
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.75e-01  
 1.0e-03 | 1.75e-02  
 1.0e-04 | 1.75e-03  
 1.0e-05 | 1.75e-04  
 1.0e-06 | 1.76e-05  
 1.0e-07 | 3.09e-06  
 1.0e-08 | 3.83e-05  
 1.0e-09 | 4.35e-04  
 1.0e-10 | 2.97e-03  
 1.0e-11 | 3.76e-02  
---------|----------- 
passed
Test Passed
--------------------------------
--------------------------------
JuLIP.Potentials.ProdPot{ZBLPotential{AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}},SplineCutoff}
length(at_) = 36
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 5.01e-02  
 1.0e-03 | 5.02e-03  
 1.0e-04 | 5.02e-04  
 1.0e-05 | 5.02e-05  
 1.0e-06 | 5.02e-06  
 1.0e-07 | 1.34e-06  
 1.0e-08 | 7.82e-06  
 1.0e-09 | 9.30e-05  
 1.0e-10 | 9.57e-04  
 1.0e-11 | 8.02e-03  
---------|----------- 
passed
Test Passed
--------------------------------
--------------------------------
StillingerWeber{Shift{-1,AnalyticFunction{JuLIP.Potentials.var"#54#60"{Float64,Float64,Float64,Float64,Int64,Float64},JuLIP.Potentials.var"#55#61"{Float64,Float64,Float64,Float64,Int64,Float64},JuLIP.Potentials.var"#56#62"{Float64,Float64,Float64,Float64,Int64,Float64}},Float64},Shift{-1,AnalyticFunction{JuLIP.Potentials.var"#57#63"{Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#58#64"{Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#59#65"{Float64,Float64,Float64,Float64,Float64}},Float64}}
length(at_) = 64
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 8.90e-02  
 1.0e-03 | 8.90e-03  
 1.0e-04 | 8.90e-04  
 1.0e-05 | 8.90e-05  
 1.0e-06 | 8.93e-06  
 1.0e-07 | 1.28e-06  
 1.0e-08 | 5.54e-06  
 1.0e-09 | 5.72e-05  
 1.0e-10 | 7.45e-04  
 1.0e-11 | 4.95e-03  
---------|----------- 
passed
Test Passed
--------------------------------
--------------------------------
JuLIP.Potentials.EAM1{JuLIP.Potentials.SplinePairPotential,JuLIP.Potentials.SplinePairPotential,JuLIP.Potentials.SplinePairPotential,Nothing}
length(at_) = 16
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.29e-02  
 1.0e-03 | 1.29e-03  
 1.0e-04 | 1.29e-04  
 1.0e-05 | 1.29e-05  
 1.0e-06 | 1.30e-06  
 1.0e-07 | 2.27e-07  
 1.0e-08 | 1.38e-06  
 1.0e-09 | 1.02e-05  
 1.0e-10 | 1.26e-04  
 1.0e-11 | 1.07e-03  
---------|----------- 
passed
Test Passed
--------------------------------
--------------------------------
JuLIP.Potentials.EAM1{JuLIP.Potentials.SplinePairPotential,JuLIP.Potentials.SplinePairPotential,JuLIP.Potentials.FSEmbed,Nothing}
length(at_) = 16
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.72e-02  
 1.0e-03 | 6.73e-03  
 1.0e-04 | 6.73e-04  
 1.0e-05 | 6.73e-05  
 1.0e-06 | 6.75e-06  
 1.0e-07 | 1.00e-06  
 1.0e-08 | 3.97e-06  
 1.0e-09 | 4.59e-05  
 1.0e-10 | 4.35e-04  
 1.0e-11 | 4.18e-03  
---------|----------- 
passed
Test Passed
--------------------------------
--------------------------------
EMT
length(at_) = 32
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 3.87e-02  
 1.0e-03 | 3.87e-03  
 1.0e-04 | 3.87e-04  
 1.0e-05 | 3.87e-05  
 1.0e-06 | 3.87e-06  
 1.0e-07 | 5.72e-07  
 1.0e-08 | 2.93e-06  
 1.0e-09 | 3.90e-05  
 1.0e-10 | 3.14e-04  
 1.0e-11 | 2.69e-03  
---------|----------- 
passed
Test Passed
--------------------------------
--------------------------------
EMT
length(at_) = 32
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 4.83e-02  
 1.0e-03 | 4.83e-03  
 1.0e-04 | 4.83e-04  
 1.0e-05 | 4.83e-05  
 1.0e-06 | 4.83e-06  
 1.0e-07 | 6.75e-07  
 1.0e-08 | 2.47e-06  
 1.0e-09 | 2.20e-05  
 1.0e-10 | 2.38e-04  
 1.0e-11 | 2.64e-03  
---------|----------- 
passed
Test Passed
--------------------------------
----------------------------------------------
Testing `site_energy` and `partial_energy` ...
----------------------------------------------
checking site energy identity . . .
Test Passed
Test Passed
fd test for site_energy
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 4.58e-02  
 1.0e-03 | 4.58e-03  
 1.0e-04 | 4.58e-04  
 1.0e-05 | 4.58e-05  
 1.0e-06 | 4.58e-06  
 1.0e-07 | 4.79e-07  
 1.0e-08 | 2.79e-07  
 1.0e-09 | 1.11e-06  
 1.0e-10 | 1.12e-05  
 1.0e-11 | 1.45e-04  
---------|----------- 
passed
Test Passed
fd test for partial energy
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 4.60e-02  
 1.0e-03 | 4.60e-03  
 1.0e-04 | 4.60e-04  
 1.0e-05 | 4.60e-05  
 1.0e-06 | 4.60e-06  
 1.0e-07 | 4.87e-07  
 1.0e-08 | 4.25e-07  
 1.0e-09 | 4.15e-06  
 1.0e-10 | 2.97e-05  
 1.0e-11 | 3.57e-04  
---------|----------- 
passed
Test Passed
=======================
 Testset AD Potentials 
=======================
Test Passed
Test Passed
Test Passed
Timing for      f:   549.321 ns (0 allocations: 0 bytes)
Timing for      V:   715.704 ns (2 allocations: 832 bytes)
Timing for    f_d:   1.641 μs (3 allocations: 1.63 KiB)
Timing for   f_fd:   34.488 μs (17 allocations: 13.98 KiB)
Timing for   @D V:   35.189 μs (22 allocations: 15.64 KiB)
=======================
 Testset Variable Cell 
=======================
Test Passed
Check atoms deform correctly with the cell
Test Passed
check that energy, forces, virial, stress, dofs, gradient evaluate ... 
Test Passed
Check that setting and getting dofs is consistent ... 
Test Passed
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.44e-01  
 1.0e-03 | 1.45e-02  
 1.0e-04 | 1.45e-03  
 1.0e-05 | 1.45e-04  
 1.0e-06 | 1.45e-05  
 1.0e-07 | 1.54e-06  
 1.0e-08 | 1.60e-06  
 1.0e-09 | 2.26e-05  
 1.0e-10 | 2.00e-04  
 1.0e-11 | 1.13e-03  
---------|----------- 
passed
Test Passed
Check virial for SW potential
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 2.28e+00  
 1.0e-03 | 2.29e-01  
 1.0e-04 | 2.29e-02  
 1.0e-05 | 2.29e-03  
 1.0e-06 | 2.29e-04  
 1.0e-07 | 2.24e-05  
 1.0e-08 | 4.83e-05  
 1.0e-09 | 3.97e-04  
 1.0e-10 | 4.64e-03  
 1.0e-11 | 3.59e-02  
---------|----------- 
passed
Test Passed
=================
 Testset Hessian 
=================
------------------------------
Testing pair potential hessian
------------------------------
test the potential (scalar) itself
maximum(abs.(ddJ .- ddJh)) = 5.553527657298218e-6
Test Passed
test `hess`; with two test vectors
┌ Warning: Assignment to `r` in soft scope is ambiguous because a global variable by the same name exists: `r` will be treated as a new local. Disambiguate by using `local r` to suppress this warning or `global r` to assign to the existing global variable.
└ @ ~/.julia/packages/JuLIP/WO5HB/test/testhessian.jl:19
(r, R) = (5.105310960166873, [0.0, -3.61, -3.61])
1.0e-02 | 1.34e-04 
1.0e-03 | 1.32e-05 
1.0e-04 | 1.32e-06 
1.0e-05 | 1.32e-07 
1.0e-06 | 1.32e-08 
1.0e-07 | 1.24e-09 
1.0e-08 | 1.88e-09 
1.0e-09 | 2.53e-08 
1.0e-10 | 1.14e-08 
1.0e-11 | 8.44e-07 
-------|--------- 
(r, R) = (4.421328985723637, [-1.805, -1.805, -3.61])
1.0e-02 | 1.35e-03 
1.0e-03 | 1.33e-04 
1.0e-04 | 1.32e-05 
1.0e-05 | 1.32e-06 
1.0e-06 | 1.33e-07 
1.0e-07 | 1.79e-08 
1.0e-08 | 2.11e-09 
1.0e-09 | 3.22e-08 
1.0e-10 | 1.56e-06 
1.0e-11 | 2.88e-05 
-------|--------- 
full finite-difference test for pairpot `hessian`
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 5.46e-01  
 1.0e-03 | 5.39e-02  
 1.0e-04 | 5.39e-03  
 1.0e-05 | 5.39e-04  
 1.0e-06 | 5.39e-05  
 1.0e-07 | 5.45e-06  
 1.0e-08 | 1.32e-06  
 1.0e-09 | 4.20e-06  
 1.0e-10 | 9.98e-05  
 1.0e-11 | 8.89e-04  
---------|----------- 
passed
Test Passed
-------------------
Testing EAM hessian
-------------------
test a single stencil
┌ Warning: Assignment to `r` in soft scope is ambiguous because a global variable by the same name exists: `r` will be treated as a new local. Disambiguate by using `local r` to suppress this warning or `global r` to assign to the existing global variable.
└ @ ~/.julia/packages/JuLIP/WO5HB/test/testhessian.jl:87
1.0e-02 | 8.46e-03 
1.0e-03 | 8.46e-04 
1.0e-04 | 8.46e-05 
1.0e-05 | 8.46e-06 
1.0e-06 | 8.47e-07 
1.0e-07 | 8.64e-08 
1.0e-08 | 3.11e-08 
1.0e-09 | 2.97e-07 
Test Passed
full finite-difference test ...
 ... EAM forces
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.46e-02  
 1.0e-03 | 1.43e-03  
 1.0e-04 | 1.43e-04  
 1.0e-05 | 1.43e-05  
 1.0e-06 | 1.43e-06  
 1.0e-07 | 1.93e-07  
 1.0e-08 | 7.30e-07  
 1.0e-09 | 8.13e-06  
 1.0e-10 | 7.78e-05  
 1.0e-11 | 8.15e-04  
---------|----------- 
passed
Test Passed
--------------------------------
Testing Stillinger-Weber hessian
--------------------------------
full finite-difference test ...
 ... SW forces
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 8.94e-02  
 1.0e-03 | 8.94e-03  
 1.0e-04 | 8.94e-04  
 1.0e-05 | 8.94e-05  
 1.0e-06 | 8.93e-06  
 1.0e-07 | 1.46e-06  
 1.0e-08 | 4.70e-06  
 1.0e-09 | 5.46e-05  
 1.0e-10 | 6.09e-04  
 1.0e-11 | 5.30e-03  
---------|----------- 
passed
Test Passed
 ... SW hessian
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 4.82e-02  
 1.0e-03 | 4.82e-03  
 1.0e-04 | 4.82e-04  
 1.0e-05 | 4.82e-05  
 1.0e-06 | 4.83e-06  
 1.0e-07 | 5.31e-07  
 1.0e-08 | 2.17e-06  
 1.0e-09 | 1.03e-05  
 1.0e-10 | 9.63e-05  
 1.0e-11 | 1.85e-03  
---------|----------- 
passed
Test Passed
Test Summary: | Pass  Total
JuLIP         |   72     72
    Testing JuLIP tests passed 
