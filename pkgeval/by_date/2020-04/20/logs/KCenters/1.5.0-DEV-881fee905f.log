Julia Version 1.5.0-DEV.651
Commit 881fee905f (2020-04-20 16:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataAPI ───────────────────── v1.2.0
  Installed Compat ────────────────────── v3.8.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.13
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataPattern ─────────────── v0.5.1
  Installed Reexport ──────────────────── v0.2.0
  Installed OrderedCollections ────────── v1.1.0
  Installed TableTraits ───────────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed MLDataUtils ───────────────── v0.5.1
  Installed Parsers ───────────────────── v1.0.2
  Installed DataFrames ────────────────── v0.20.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.8.0
  [9a962f9c] + DataAPI v1.2.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.13
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.1
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_EwdGgB/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_EwdGgB/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.8.0
  [9a962f9c] DataAPI v1.2.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.13
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.1
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9367083616058032
[ Info: 0.8302954188982645
[ Info: 0.555438105414311
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32982491600016756
mean(cdnet.distances) = 0.38417943629125756
mean(crand.distances) = 0.349065165395538
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1572265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1572265625,"f1":null,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":4.3984375,"distances_sum":402.0939904392826}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1474609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1474609375,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":4.109375,"distances_sum":393.2960829674768}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3662109375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.4921875,"distances_sum":961.5532784613038}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3662109375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.4921875,"distances_sum":961.5532784613038}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8388968670218678,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.6640625,"distances_sum":2125.965928762239}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.490234375, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.490234375,"f1":null,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.453125,"distances_sum":1310.8609876156545}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.5625,"distances_sum":1024.6223742952}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.515625,"distances_sum":1043.005609856432}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4912109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4912109375,"f1":null,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.40625,"distances_sum":1351.5383456837908}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8388968670218678,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.6640625,"distances_sum":2125.965928762239}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8913555194805204,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.3046875,"distances_sum":2361.9681115869566}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8617412101787109,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.7734375,"distances_sum":2250.205649793659}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9282509157509166,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5234375,"distances_sum":2556.3891211268733}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9282509157509166,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5234375,"distances_sum":2556.3891211268733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9282509157509166,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.5234375,"distances_sum":2556.3891211268733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7769281066156074,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6640625,"distances_sum":1634.0814548028216}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.015625,"distances_sum":833.6868243804925}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7769281066156074,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6640625,"distances_sum":1634.0814548028216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.919975337162838,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6171875,"distances_sum":2304.7257118706893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9468349358974363,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2533.906384727306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9512706043956046,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6640625,"distances_sum":2559.9204263809283}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7810306013431022,"seconds":4.697591066360474e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7890625,"distances_sum":1631.099405163453}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9512706043956046,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6640625,"distances_sum":2559.9204263809283}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648294413919418,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2620.194205701689}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.921875,"distances_sum":2690.345451025795}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692765567765571,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2644.4332265573807}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454214,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8515625,"distances_sum":2677.2760330797973}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.921875,"distances_sum":2690.345451025795}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380954,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.921875,"distances_sum":2690.345451025795}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7142433954933961,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9296875,"distances_sum":1337.7251720513757}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.34375,"distances_sum":500.2157762559032}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5712890625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5712890625,"f1":0.7142433954933961,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.9296875,"distances_sum":1337.7251720513757}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8643346237096244,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1903.6104038472047}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8572781385281392,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.65625,"distances_sum":1891.2912702079286}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7132672882672889,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.828125,"distances_sum":1365.2179149862231}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8643346237096244,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1903.6104038472047}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9158055486180491,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8359375,"distances_sum":2216.1915797495667}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699461996337,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2591.7777811306155}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9412316849816856,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2405.7930869899747}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9190190018315024,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":2232.9280194328203}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699461996337,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2591.7777811306155}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699461996337,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9765625,"distances_sum":2591.7777811306155}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.868127185314686,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":1935.2437375113238}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.9375,"distances_sum":486.32199430761847}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8489396020646028,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6875,"distances_sum":1846.7774691605532}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.868127185314686,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":1935.2437375113238}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.89655760905761,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2100.5894499018336}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567937271062277,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2525.5813020397645}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637305402930407,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2563.856339645565}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9637305402930407,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2563.856339645565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512826,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2621.235694541948}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9827953296703299,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.984375,"distances_sum":2699.3180323182796}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9651614010989015,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2605.6340660744418}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737007783882786,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9765625,"distances_sum":2633.4314294363908}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9827953296703299,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.984375,"distances_sum":2699.3180323182796}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9827953296703299,"seconds":6.752088665962219e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.984375,"distances_sum":2699.3180323182796}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.58984375,"f1":0.7271070942945947,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.0703125,"distances_sum":1372.617935882374}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":4.190951585769653e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":6.578125,"distances_sum":930.0176494825316}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7259389915639922,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":6.9453125,"distances_sum":1356.429496012394}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.58984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.58984375,"f1":0.7271070942945947,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.0703125,"distances_sum":1372.617935882374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9114042207792215,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.6953125,"distances_sum":2193.6629629328468}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9187614468864477,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.6640625,"distances_sum":2248.4162299108098}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8218404859029868,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.8125,"distances_sum":1739.8585663771792}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9187614468864477,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.6640625,"distances_sum":2248.4162299108098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638278388278392,"seconds":6.616115570068359e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8828125,"distances_sum":2576.8023029901738}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530162545787552,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8828125,"distances_sum":2495.9635547030493}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.946789148351649,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.84375,"distances_sum":2451.3919474742693}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638278388278392,"seconds":6.616115570068359e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8828125,"distances_sum":2576.8023029901738}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638278388278392,"seconds":6.616115570068359e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8828125,"distances_sum":2576.8023029901738}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":5.5859375,"distances_sum":469.574721853985}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":4.192814230918884e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.5625,"distances_sum":913.6455269051562}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.707169913419914,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.1015625,"distances_sum":1348.7193753365332}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.568359375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.568359375,"f1":0.707169913419914,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.1015625,"distances_sum":1348.7193753365332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8922390109890119,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6015625,"distances_sum":2151.87109870541}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9293784340659347,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.703125,"distances_sum":2413.395129232215}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7941532425907435,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.7578125,"distances_sum":1652.2290535254303}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8124640984015993,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.8828125,"distances_sum":1705.1280513969343}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9293784340659347,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.703125,"distances_sum":2413.395129232215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9514938186813191,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2543.5547655542778}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9514938186813191,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2543.5547655542778}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9514938186813191,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2543.5547655542778}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8375783938283945,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.0546875,"distances_sum":1866.6203835610368}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8375783938283945,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.0546875,"distances_sum":1866.6203835610368}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9349759615384621,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":2282.8135847151393}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.938656135531136,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8828125,"distances_sum":2301.984844662995}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484088827838834,"seconds":6.446614861488342e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8359375,"distances_sum":2374.4197575641538}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9484088827838834,"seconds":6.446614861488342e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8359375,"distances_sum":2374.4197575641538}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706673534798539,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2507.421062762326}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578926282051285,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.859375,"distances_sum":2447.4057346448662}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9528674450549457,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8359375,"distances_sum":2386.277751202777}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626316391941396,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8671875,"distances_sum":2483.1251228659744}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706673534798539,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2507.421062762326}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706673534798539,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2507.421062762326}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8913321053946063,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4453125,"distances_sum":2098.9337874696653}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8913321053946063,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4453125,"distances_sum":2098.9337874696653}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9336397977022983,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6953125,"distances_sum":2353.112456576411}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548222610722616,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2520.514446314693}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9548222610722616,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2520.514446314693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682520604395608,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":2622.3466612754364}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9712084790209793,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2682.9222290875855}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9746680402930407,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2679.2268143646747}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.957057005494506,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2559.326187218486}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9746680402930407,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2679.2268143646747}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9746680402930407,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2679.2268143646747}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1513671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1513671875,"f1":null,"seconds":2.825632691383362e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.2890625,"distances_sum":313.0490722569067}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.494140625, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.9736979166666668,"recall":0.494140625,"f1":0.6398325632700634,"seconds":3.8929283618927e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5078125,"distances_sum":868.6485948825252}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.494140625,"state":{"ssize":4,"bsize":3},"perf":{"precision":0.9736979166666668,"recall":0.494140625,"f1":0.6398325632700634,"seconds":3.8929283618927e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5078125,"distances_sum":868.6485948825252}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.607421875, conf: {"ssize":6,"bsize":4}, perf: {"precision":0.9689825148809523,"recall":0.607421875,"f1":0.7342481953810084,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.21875,"distances_sum":1151.0039160501553}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":6,"bsize":5}, perf: {"precision":0.9847842261904762,"recall":0.767578125,"f1":0.8541708291708296,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4140625,"distances_sum":1487.2891148670883}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9752976190476189,"recall":0.7490234375,"f1":0.8390406468531475,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3828125,"distances_sum":1478.6476977936743}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.529296875,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.6640625,"distances_sum":936.2553117227326}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":6,"bsize":5},"perf":{"precision":0.9847842261904762,"recall":0.767578125,"f1":0.8541708291708296,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4140625,"distances_sum":1487.2891148670883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":10,"bsize":7}, perf: {"precision":0.9818638392857144,"recall":0.859375,"f1":0.9118976076007329,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5078125,"distances_sum":1750.9682396983485}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9859561011904763,"recall":0.865234375,"f1":0.9144479218697971,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4765625,"distances_sum":1786.807659807247}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9850911458333335,"recall":0.8212890625,"f1":0.8880522472319354,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2890625,"distances_sum":1670.166595602313}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9859561011904763,"recall":0.865234375,"f1":0.9144479218697971,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4765625,"distances_sum":1786.807659807247}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.865234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9859561011904763,"recall":0.865234375,"f1":0.9144479218697971,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4765625,"distances_sum":1786.807659807247}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7842615717615726,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.5546875,"distances_sum":1318.5095003644954}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8557799839049847,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1796875,"distances_sum":1613.5214255791348}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.8370490074157715e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.8828125,"distances_sum":721.4673947248093}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.234375,"distances_sum":790.353164904364}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8557799839049847,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.1796875,"distances_sum":1613.5214255791348}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405963827838832,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.75,"distances_sum":2028.859447375705}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9434237637362644,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.671875,"distances_sum":2070.2059283023364}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8965836247086255,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2578125,"distances_sum":1778.9121501652655}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9434237637362644,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.671875,"distances_sum":2070.2059283023364}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9580013736263743,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8046875,"distances_sum":2140.1296263679506}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591918498168504,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":2178.143955894013}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974685210622711,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.890625,"distances_sum":2254.301860511487}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974685210622711,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.890625,"distances_sum":2254.301860511487}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974685210622711,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.890625,"distances_sum":2254.301860511487}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2685546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2685546875,"f1":null,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.3203125,"distances_sum":539.1980562778975}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7876472485847493,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7578125,"distances_sum":1317.4589844876507}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.552064299583435e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.5625,"distances_sum":513.5407085540726}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8561709124209133,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.203125,"distances_sum":1563.578453004425}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8561709124209133,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.203125,"distances_sum":1563.578453004425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9574805402930409,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2112.8271563023486}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8678519397269404,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.296875,"distances_sum":1596.2501143388904}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9494448260073265,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8359375,"distances_sum":2023.2988255947403}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8738475066600074,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3359375,"distances_sum":1635.1808996888142}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9574805402930409,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2112.8271563023486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":8,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9811755952380954,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2254.010540574556}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972659111721612,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2191.7924014638243}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721554487179489,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2191.689632024324}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635473901098907,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2139.84949760101}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9689560439560443,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2177.0932807160807}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601820054945059,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2120.4975807791384}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9811755952380954,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2254.010540574556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9811755952380954,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2254.010540574556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.96875,"distances_sum":791.8553950627722}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.396484375,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.396484375,"f1":null,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.96875,"distances_sum":791.8553950627722}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7765810578310585,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.890625,"distances_sum":1329.5693605205026}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9002289377289387,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.515625,"distances_sum":1871.2208448277468}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9002289377289387,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.515625,"distances_sum":1871.2208448277468}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.961876144688645,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2284.9562994722332}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9489500083250088,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.765625,"distances_sum":2211.2400230162543}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9393746878121886,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7109375,"distances_sum":2133.674818013341}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.961876144688645,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2284.9562994722332}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.961876144688645,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.859375,"distances_sum":2284.9562994722332}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.390014171600342e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.890625,"distances_sum":520.9504396496154}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2666015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2666015625,"f1":null,"seconds":4.32133674621582e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.0078125,"distances_sum":547.4228676259413}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2666015625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2666015625,"f1":null,"seconds":4.32133674621582e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.0078125,"distances_sum":547.4228676259413}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7107418623043628,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.4609375,"distances_sum":1249.2873450183822}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8158544580419588,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.046875,"distances_sum":1543.3510390860538}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5966796875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5966796875,"f1":0.7376800283050291,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.5234375,"distances_sum":1268.7729433166094}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.4812837839126587e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.0625,"distances_sum":766.9314702812584}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8585112803862813,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2578125,"distances_sum":1671.5181471941064}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8585112803862813,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2578125,"distances_sum":1671.5181471941064}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9064648892773899,"seconds":6.7390501499176025e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.578125,"distances_sum":1870.5927935506816}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9540808150183155,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2220.2074991636914}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9432208416583423,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.765625,"distances_sum":2137.9422137977595}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9075835622710631,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4921875,"distances_sum":1889.5000850905155}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9540808150183155,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2220.2074991636914}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9540808150183155,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2220.2074991636914}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.16015625,"f1":null,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":4.6796875,"distances_sum":355.43378280042447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1689453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1689453125,"f1":null,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":4.6796875,"distances_sum":414.1237893633345}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33203125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.33203125,"f1":null,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.453125,"distances_sum":705.4320167342112}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.33203125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.33203125,"f1":null,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.453125,"distances_sum":705.4320167342112}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.783585685148186,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.6015625,"distances_sum":1452.5347326723193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7844858266733272,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.5,"distances_sum":1470.1459772142784}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.50390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.50390625,"f1":0.6550178987678993,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.4765625,"distances_sum":1120.214239885512}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.33984375,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.3203125,"distances_sum":748.576119309063}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7745575604950613,"seconds":4.647299647331238e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.421875,"distances_sum":1435.6873980100884}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7844858266733272,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.5,"distances_sum":1470.1459772142784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9309211621711627,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6796875,"distances_sum":2133.6141631444707}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9536546786546792,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.78125,"distances_sum":2270.0803436115857}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9305173992673998,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6875,"distances_sum":2133.0351976877273}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9250317390942399,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.75,"distances_sum":2065.6841698406492}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9012081668331678,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6953125,"distances_sum":1922.4322259281805}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9314846611721619,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8515625,"distances_sum":2064.9988377229815}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8557125166500174,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.4140625,"distances_sum":1691.4392321917971}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9536546786546792,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.78125,"distances_sum":2270.0803436115857}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9536546786546792,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.78125,"distances_sum":2270.0803436115857}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":3.073364496231079e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.234375,"distances_sum":455.0040486842962}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8384943181818191,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9453125,"distances_sum":1650.6114563370527}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8384943181818191,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9453125,"distances_sum":1650.6114563370527}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.943795787545788,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7421875,"distances_sum":2193.034965465693}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208796,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":2221.997454872031}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208796,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":2221.997454872031}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208796,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":2221.997454872031}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9091796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208796,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":2221.997454872031}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.5546875,"distances_sum":579.8174535483712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.837091033966035,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.34375,"distances_sum":1772.8186744410978}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.837091033966035,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.34375,"distances_sum":1772.8186744410978}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8982148060273069,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.421875,"distances_sum":2128.084240739067}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9224187271062276,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2338.4740469412636}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8486414627039636,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4296875,"distances_sum":1816.8673058086777}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9224187271062276,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2338.4740469412636}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707245879120884,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":2692.1458632014997}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534855769230773,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8125,"distances_sum":2575.674948982526}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550652472527479,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8046875,"distances_sum":2595.876031977927}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707245879120884,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":2692.1458632014997}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707245879120884,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9140625,"distances_sum":2692.1458632014997}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4892578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4892578125,"f1":0.6410608488733494,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.484375,"distances_sum":1261.6310937658288}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8626784673659681,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5546875,"distances_sum":2073.1536798213683}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8689112970362977,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.578125,"distances_sum":2090.75715289402}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8689112970362977,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.578125,"distances_sum":2090.75715289402}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8909918206793215,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.328125,"distances_sum":2271.5972252901224}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9523122710622712,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7265625,"distances_sum":2755.792710708681}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9333104395604401,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.59375,"distances_sum":2564.772909606909}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8911760114885122,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.359375,"distances_sum":2337.1497742300703}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9523122710622712,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7265625,"distances_sum":2755.792710708681}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682864010989016,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2824.3349124313577}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684180402930405,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8828125,"distances_sum":2804.519377224534}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9682864010989016,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2824.3349124313577}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9682864010989016,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2824.3349124313577}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7929679695304702,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.703125,"distances_sum":1623.8682088510502}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7929679695304702,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.703125,"distances_sum":1623.8682088510502}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7929679695304702,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.703125,"distances_sum":1623.8682088510502}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7929679695304702,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.703125,"distances_sum":1623.8682088510502}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.21875,"distances_sum":891.8720756372811}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8472470238095247,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1796875,"distances_sum":1902.600566408141}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8474962537462546,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.203125,"distances_sum":1950.0178981798006}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8474962537462546,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.203125,"distances_sum":1950.0178981798006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9425137362637369,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2587.7907876766653}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9425137362637369,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":2587.7907876766653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9549164377289381,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2674.661668199675}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9549164377289381,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2674.661668199675}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9549164377289381,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2674.661668199675}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8600165459540468,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1976.6965866867001}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4921875,"distances_sum":947.5131798953993}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8600165459540468,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5,"distances_sum":1976.6965866867001}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9399298618048624,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7578125,"distances_sum":2567.0247173737157}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579670329670334,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2693.6911591757726}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9061360514485519,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5859375,"distances_sum":2315.7709703575433}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9579670329670334,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2693.6911591757726}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735519688644693,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2814.2576540443783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9647550366300371,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2730.9834407283483}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664262820512824,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8515625,"distances_sum":2769.1930443809806}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963822115384616,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2735.1226883655386}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735519688644693,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2814.2576540443783}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735519688644693,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2814.2576540443783}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8568311896436905,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2109375,"distances_sum":2020.3371589586582}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6976662226662232,"seconds":4.373490810394287e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.1328125,"distances_sum":1293.19651552281}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8568311896436905,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2109375,"distances_sum":2020.3371589586582}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9051141566766575,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.40625,"distances_sum":2324.8128238265435}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.918335310522811,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4921875,"distances_sum":2461.5748428446395}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9372538919413926,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":2607.9544614394517}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9372538919413926,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":2607.9544614394517}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9770833333333339,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2912.039323331299}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9510702838827844,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.75,"distances_sum":2736.659725076524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607772435897439,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2773.9247064671654}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770833333333339,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2912.039323331299}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770833333333339,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":2912.039323331299}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.6977007367632373,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.046875,"distances_sum":1412.0072592335252}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2197265625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2197265625,"f1":null,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.1171875,"distances_sum":528.9150844959689}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.560546875,"f1":0.6977007367632373,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.046875,"distances_sum":1412.0072592335252}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8383361430236439,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1796875,"distances_sum":1900.695674672733}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8495967574092582,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.15625,"distances_sum":1962.263690380619}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8495967574092582,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.15625,"distances_sum":1962.263690380619}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9360576923076932,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2582.052258057827}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9579269688644694,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.890625,"distances_sum":2711.8591214264447}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9579269688644694,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.890625,"distances_sum":2711.8591214264447}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9579269688644694,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.890625,"distances_sum":2711.8591214264447}}, n: 9
mean(cfft.distances) = 0.3280455010251045
mean(cdnet.distances) = 0.3611274445189217
mean(crand.distances) = 0.3498939388999116
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.86
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9511111111111111
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8755555555555556
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.831111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.928888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8822222222222224
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8688888888888888
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.6036198555429777] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 8]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 2]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 10, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 15 centroids; started with 12
acc = 0.96
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2344015080987982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2344015080987982, 0.19217738767773998] ***
*** starting iteration: 2; err: [Inf, 0.2344015080987982, 0.19217738767773998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419] ***
*** starting iteration: 3; err: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419, 0.1865986151559217] ***
*** starting iteration: 4; err: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419, 0.1865986151559217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419, 0.1865986151559217, 0.18519248153913664] ***
*** starting iteration: 5; err: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419, 0.1865986151559217, 0.18519248153913664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419, 0.1865986151559217, 0.18519248153913664, 0.18470055518906797] ***
*** finished computation of 7 references, err: [Inf, 0.2344015080987982, 0.19217738767773998, 0.1883619353818419, 0.1865986151559217, 0.18519248153913664, 0.18470055518906797] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 23, 0]]
** centroid: 2, normalized-entropy: 0.828797154590015, [(1, 65), (2, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 28]]
** centroid: 3, normalized-entropy: 0.8826013308449944, [(2, 65), (3, 28)]
*** center 4: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 95, 0]]
** centroid: 5, normalized-entropy: 0.5531453183526465, [(1, 14), (2, 95)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 35, 0]]
** centroid: 6, normalized-entropy: 0.9696055994904408, [(1, 53), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [101, 4, 0]]
** centroid: 7, normalized-entropy: 0.23348971044772968, [(1, 101), (2, 4)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31403944488368685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31403944488368685, 0.25456674424120346] ***
*** starting iteration: 2; err: [Inf, 0.31403944488368685, 0.25456674424120346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31403944488368685, 0.25456674424120346, 0.24684057334177867] ***
*** starting iteration: 3; err: [Inf, 0.31403944488368685, 0.25456674424120346, 0.24684057334177867] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31403944488368685, 0.25456674424120346, 0.24684057334177867, 0.24532707310183807] ***
*** starting iteration: 4; err: [Inf, 0.31403944488368685, 0.25456674424120346, 0.24684057334177867, 0.24532707310183807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31403944488368685, 0.25456674424120346, 0.24684057334177867, 0.24532707310183807, 0.24498095717169233] ***
*** finished computation of 3 references, err: [Inf, 0.31403944488368685, 0.25456674424120346, 0.24684057334177867, 0.24532707310183807, 0.24498095717169233] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [80, 144, 28]]
** centroid: 1, normalized-entropy: 0.8448578910901249, [(1, 80), (2, 144), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [130, 78, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 130), (2, 78)]
*** center 3: selecting labels [1] (freq >= 1) [from [206, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33516856181195126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813] ***
*** starting iteration: 2; err: [Inf, 0.33516856181195126, 0.24640923521496813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785] ***
*** starting iteration: 3; err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487] ***
*** starting iteration: 4; err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173] ***
*** starting iteration: 5; err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576] ***
*** starting iteration: 6; err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576, 0.23668750436666577] ***
*** starting iteration: 7; err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576, 0.23668750436666577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576, 0.23668750436666577, 0.23503822911770894] ***
*** starting iteration: 8; err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576, 0.23668750436666577, 0.23503822911770894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576, 0.23668750436666577, 0.23503822911770894, 0.23427217526045785] ***
*** finished computation of 3 references, err: [Inf, 0.33516856181195126, 0.24640923521496813, 0.24279298334566785, 0.24099326591430487, 0.23973341013348173, 0.23838371280273576, 0.23668750436666577, 0.23503822911770894, 0.23427217526045785] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [186, 36, 0]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(1, 186), (2, 36)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 185, 21]]
** centroid: 2, normalized-entropy: 0.47512074041685076, [(2, 185), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [223, 16, 0]]
** centroid: 3, normalized-entropy: 0.35442045784590354, [(1, 223), (2, 16)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.360374190172982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.360374190172982, 0.2361393351651689] ***
*** starting iteration: 2; err: [Inf, 0.360374190172982, 0.2361393351651689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.360374190172982, 0.2361393351651689, 0.23411755502849504] ***
*** starting iteration: 3; err: [Inf, 0.360374190172982, 0.2361393351651689, 0.23411755502849504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.360374190172982, 0.2361393351651689, 0.23411755502849504, 0.2336942045551458] ***
*** finished computation of 3 references, err: [Inf, 0.360374190172982, 0.2361393351651689, 0.23411755502849504, 0.2336942045551458] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [234, 15, 0]]
** centroid: 1, normalized-entropy: 0.32840071392894665, [(1, 234), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [183, 33, 0]]
** centroid: 2, normalized-entropy: 0.6167482598263911, [(1, 183), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 179, 23]]
** centroid: 3, normalized-entropy: 0.5114543088923236, [(2, 179), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.24044940655567926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24044940655567926, 0.20535418103313607] ***
*** starting iteration: 2; err: [Inf, 0.24044940655567926, 0.20535418103313607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24044940655567926, 0.20535418103313607, 0.2018482668194054] ***
*** starting iteration: 3; err: [Inf, 0.24044940655567926, 0.20535418103313607, 0.2018482668194054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24044940655567926, 0.20535418103313607, 0.2018482668194054, 0.2013104768076177] ***
*** finished computation of 7 references, err: [Inf, 0.24044940655567926, 0.20535418103313607, 0.2018482668194054, 0.2013104768076177] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 7, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 111, 21]]
** centroid: 3, normalized-entropy: 0.6321302781219708, [(2, 111), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 92, 0]]
** centroid: 5, normalized-entropy: 0.8911671562035458, [(1, 41), (2, 92)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [98, 2, 0]]
** centroid: 6, normalized-entropy: 0.14144054254182067, [(1, 98), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 25, 0]]
** centroid: 7, normalized-entropy: 0.9571814385446724, [(1, 41), (2, 25)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24318834306250536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435] ***
*** starting iteration: 2; err: [Inf, 0.24318834306250536, 0.21086129492984435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426] ***
*** starting iteration: 3; err: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817] ***
*** starting iteration: 4; err: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544] ***
*** starting iteration: 5; err: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544, 0.1917976444458653] ***
*** starting iteration: 6; err: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544, 0.1917976444458653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544, 0.1917976444458653, 0.18974011700818205] ***
*** starting iteration: 7; err: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544, 0.1917976444458653, 0.18974011700818205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544, 0.1917976444458653, 0.18974011700818205, 0.1890067362842308] ***
*** finished computation of 7 references, err: [Inf, 0.24318834306250536, 0.21086129492984435, 0.20634232464105426, 0.20332189073305817, 0.19935184637031544, 0.1917976444458653, 0.18974011700818205, 0.1890067362842308] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 80, 0]]
** centroid: 1, normalized-entropy: 0.16542703399626665, [(1, 2), (2, 80)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [101, 18, 0]]
** centroid: 2, normalized-entropy: 0.6129857483172468, [(1, 101), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 6, 0]]
** centroid: 3, normalized-entropy: 0.3843115441264972, [(1, 74), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 35, 0]]
** centroid: 4, normalized-entropy: 0.9151190292999326, [(1, 71), (2, 35)]
*** center 5: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 88, 23]]
** centroid: 7, normalized-entropy: 0.7361103940132281, [(2, 88), (3, 23)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2002667510999484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2002667510999484, 0.16689828275765822] ***
*** starting iteration: 2; err: [Inf, 0.2002667510999484, 0.16689828275765822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2002667510999484, 0.16689828275765822, 0.16119874888812905] ***
*** starting iteration: 3; err: [Inf, 0.2002667510999484, 0.16689828275765822, 0.16119874888812905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2002667510999484, 0.16689828275765822, 0.16119874888812905, 0.15627145785251045] ***
*** finished computation of 7 references, err: [Inf, 0.2002667510999484, 0.16689828275765822, 0.16119874888812905, 0.15627145785251045] ***
*** center 1: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 27, 0]]
** centroid: 2, normalized-entropy: 0.6880476235340797, [(1, 120), (2, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 106, 28]]
** centroid: 3, normalized-entropy: 0.7394809367166378, [(2, 106), (3, 28)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 31, 0]]
** centroid: 4, normalized-entropy: 0.9147088431405322, [(1, 63), (2, 31)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 55, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 3, 0]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(1, 42), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1882713507411295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882713507411295, 0.15939937702923276] ***
*** starting iteration: 2; err: [Inf, 0.1882713507411295, 0.15939937702923276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882713507411295, 0.15939937702923276, 0.1518551631875314] ***
*** starting iteration: 3; err: [Inf, 0.1882713507411295, 0.15939937702923276, 0.1518551631875314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882713507411295, 0.15939937702923276, 0.1518551631875314, 0.14974826150343404] ***
*** finished computation of 7 references, err: [Inf, 0.1882713507411295, 0.15939937702923276, 0.1518551631875314, 0.14974826150343404] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 92, 20]]
** centroid: 1, normalized-entropy: 0.6769418697808861, [(2, 92), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 9, 0]]
** centroid: 2, normalized-entropy: 0.5484866088431741, [(1, 62), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 3, 0]]
** centroid: 4, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 88, 1]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [101, 18, 0]]
** centroid: 6, normalized-entropy: 0.6129857483172468, [(1, 101), (2, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [69, 27, 0]]
** centroid: 7, normalized-entropy: 0.8571484374283717, [(1, 69), (2, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1791274387758041] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791274387758041, 0.1501934829868259] ***
*** starting iteration: 2; err: [Inf, 0.1791274387758041, 0.1501934829868259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791274387758041, 0.1501934829868259, 0.14719569973921268] ***
*** starting iteration: 3; err: [Inf, 0.1791274387758041, 0.1501934829868259, 0.14719569973921268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1791274387758041, 0.1501934829868259, 0.14719569973921268, 0.14615860747556012] ***
*** finished computation of 7 references, err: [Inf, 0.1791274387758041, 0.1501934829868259, 0.14719569973921268, 0.14615860747556012] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 46, 0]]
** centroid: 2, normalized-entropy: 0.9987472979361685, [(1, 50), (2, 46)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [120, 24, 0]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(1, 120), (2, 24)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 7, 0]]
** centroid: 6, normalized-entropy: 0.3852851190780996, [(1, 86), (2, 7)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 86, 23]]
** centroid: 7, normalized-entropy: 0.7434073165779199, [(2, 86), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5136471521361051] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5136471521361051, 0.32730597804871026] ***
*** starting iteration: 2; err: [Inf, 0.5136471521361051, 0.32730597804871026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294] ***
*** starting iteration: 3; err: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243] ***
*** starting iteration: 4; err: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243, 0.30281879614154855] ***
*** starting iteration: 5; err: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243, 0.30281879614154855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243, 0.30281879614154855, 0.3005187179132535] ***
*** starting iteration: 6; err: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243, 0.30281879614154855, 0.3005187179132535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243, 0.30281879614154855, 0.3005187179132535, 0.2995770589753359] ***
*** finished computation of 3 references, err: [Inf, 0.5136471521361051, 0.32730597804871026, 0.30939431546127294, 0.3049142633847243, 0.30281879614154855, 0.3005187179132535, 0.2995770589753359] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [158, 46, 0]]
** centroid: 1, normalized-entropy: 0.7700664782920602, [(1, 158), (2, 46)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 165, 28]]
** centroid: 2, normalized-entropy: 0.5973839638578601, [(2, 165), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [258, 11, 0]]
** centroid: 3, normalized-entropy: 0.24636801421383678, [(1, 258), (2, 11)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33763285216943795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33763285216943795, 0.3002261964456252] ***
*** starting iteration: 2; err: [Inf, 0.33763285216943795, 0.3002261964456252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33763285216943795, 0.3002261964456252, 0.2965741102643747] ***
*** starting iteration: 3; err: [Inf, 0.33763285216943795, 0.3002261964456252, 0.2965741102643747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33763285216943795, 0.3002261964456252, 0.2965741102643747, 0.2953704405391681] ***
*** starting iteration: 4; err: [Inf, 0.33763285216943795, 0.3002261964456252, 0.2965741102643747, 0.2953704405391681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33763285216943795, 0.3002261964456252, 0.2965741102643747, 0.2953704405391681, 0.29473876970159685] ***
*** finished computation of 3 references, err: [Inf, 0.33763285216943795, 0.3002261964456252, 0.2965741102643747, 0.2953704405391681, 0.29473876970159685] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [160, 56, 0]]
** centroid: 1, normalized-entropy: 0.8256265261578954, [(1, 160), (2, 56)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [1, 176, 21]]
** centroid: 2, normalized-entropy: 0.3362217647001197, [(1, 1), (2, 176), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [248, 5, 0]]
** centroid: 3, normalized-entropy: 0.1401069128350934, [(1, 248), (2, 5)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4938151504833257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4938151504833257, 0.3457555878555578] ***
*** starting iteration: 2; err: [Inf, 0.4938151504833257, 0.3457555878555578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763] ***
*** starting iteration: 3; err: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379] ***
*** starting iteration: 4; err: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379, 0.31038488408430537] ***
*** starting iteration: 5; err: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379, 0.31038488408430537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379, 0.31038488408430537, 0.3088156055670226] ***
*** starting iteration: 6; err: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379, 0.31038488408430537, 0.3088156055670226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379, 0.31038488408430537, 0.3088156055670226, 0.30805350345527305] ***
*** finished computation of 3 references, err: [Inf, 0.4938151504833257, 0.3457555878555578, 0.3208593165046763, 0.3123480902518379, 0.31038488408430537, 0.3088156055670226, 0.30805350345527305] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [134, 90, 0]]
** centroid: 1, normalized-entropy: 0.9719855908477281, [(1, 134), (2, 90)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [98, 137, 23]]
** centroid: 2, normalized-entropy: 0.8367956439076804, [(1, 98), (2, 137), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [185, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3007590294684152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3007590294684152, 0.24841232655720935] ***
*** starting iteration: 2; err: [Inf, 0.3007590294684152, 0.24841232655720935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3007590294684152, 0.24841232655720935, 0.2414457296124763] ***
*** starting iteration: 3; err: [Inf, 0.3007590294684152, 0.24841232655720935, 0.2414457296124763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3007590294684152, 0.24841232655720935, 0.2414457296124763, 0.2397422983560029] ***
*** finished computation of 3 references, err: [Inf, 0.3007590294684152, 0.24841232655720935, 0.2414457296124763, 0.2397422983560029] ***
*** center 1: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [96, 157, 27]]
** centroid: 2, normalized-entropy: 0.8346421543827117, [(1, 96), (2, 157), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 65, 1]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(1, 104), (2, 65)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.318086274893259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.318086274893259, 0.2441733924307577] ***
*** starting iteration: 2; err: [Inf, 0.318086274893259, 0.2441733924307577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.318086274893259, 0.2441733924307577, 0.23685805999511236] ***
*** starting iteration: 3; err: [Inf, 0.318086274893259, 0.2441733924307577, 0.23685805999511236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.318086274893259, 0.2441733924307577, 0.23685805999511236, 0.23429489395870218] ***
*** finished computation of 3 references, err: [Inf, 0.318086274893259, 0.2441733924307577, 0.23685805999511236, 0.23429489395870218] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [151, 63, 0]]
** centroid: 1, normalized-entropy: 0.8743279638844103, [(1, 151), (2, 63)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [250, 2, 0]]
** centroid: 2, normalized-entropy: 0.06677964109705235, [(1, 250), (2, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [8, 172, 21]]
** centroid: 3, normalized-entropy: 0.4529673412606554, [(1, 8), (2, 172), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33052959335574145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33052959335574145, 0.23984761058312395] ***
*** starting iteration: 2; err: [Inf, 0.33052959335574145, 0.23984761058312395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33052959335574145, 0.23984761058312395, 0.23453092594341984] ***
*** starting iteration: 3; err: [Inf, 0.33052959335574145, 0.23984761058312395, 0.23453092594341984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33052959335574145, 0.23984761058312395, 0.23453092594341984, 0.23397593390101615] ***
*** finished computation of 3 references, err: [Inf, 0.33052959335574145, 0.23984761058312395, 0.23453092594341984, 0.23397593390101615] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [190, 26, 0]]
** centroid: 1, normalized-entropy: 0.5304245472812997, [(1, 190), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [225, 15, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 225), (2, 15)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [2, 186, 23]]
** centroid: 3, normalized-entropy: 0.3612938946126338, [(1, 2), (2, 186), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30400407350658476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30400407350658476, 0.27727876090676756] ***
*** starting iteration: 2; err: [Inf, 0.30400407350658476, 0.27727876090676756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004] ***
*** starting iteration: 3; err: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004, 0.23945647450765264] ***
*** starting iteration: 4; err: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004, 0.23945647450765264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004, 0.23945647450765264, 0.2381823665347767] ***
*** starting iteration: 5; err: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004, 0.23945647450765264, 0.2381823665347767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004, 0.23945647450765264, 0.2381823665347767, 0.23791219859017623] ***
*** finished computation of 3 references, err: [Inf, 0.30400407350658476, 0.27727876090676756, 0.25427828637244004, 0.23945647450765264, 0.2381823665347767, 0.23791219859017623] ***
*** center 1: selecting labels [1] (freq >= 2) [from [197, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [142, 51, 0]]
** centroid: 2, normalized-entropy: 0.8330902838472973, [(1, 142), (2, 51)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [77, 171, 28]]
** centroid: 3, normalized-entropy: 0.80546748274652, [(1, 77), (2, 171), (3, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30373093764251585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30373093764251585, 0.24057540369556582] ***
*** starting iteration: 2; err: [Inf, 0.30373093764251585, 0.24057540369556582] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30373093764251585, 0.24057540369556582, 0.2376376479749625] ***
*** starting iteration: 3; err: [Inf, 0.30373093764251585, 0.24057540369556582, 0.2376376479749625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30373093764251585, 0.24057540369556582, 0.2376376479749625, 0.2367739513393553] ***
*** finished computation of 3 references, err: [Inf, 0.30373093764251585, 0.24057540369556582, 0.2376376479749625, 0.2367739513393553] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [45, 164, 21]]
** centroid: 1, normalized-entropy: 0.7089788576922326, [(1, 45), (2, 164), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [219, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 73, 0]]
** centroid: 3, normalized-entropy: 0.9198173025273539, [(1, 145), (2, 73)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2964954604108495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2964954604108495, 0.28101761067199565] ***
*** starting iteration: 2; err: [Inf, 0.2964954604108495, 0.28101761067199565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554] ***
*** starting iteration: 3; err: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554, 0.23841912848833038] ***
*** starting iteration: 4; err: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554, 0.23841912848833038] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554, 0.23841912848833038, 0.2335486407035674] ***
*** starting iteration: 5; err: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554, 0.23841912848833038, 0.2335486407035674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554, 0.23841912848833038, 0.2335486407035674, 0.23332113667769633] ***
*** finished computation of 3 references, err: [Inf, 0.2964954604108495, 0.28101761067199565, 0.26333541802313554, 0.23841912848833038, 0.2335486407035674, 0.23332113667769633] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 179, 23]]
** centroid: 1, normalized-entropy: 0.5114543088923236, [(2, 179), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [192, 33, 0]]
** centroid: 2, normalized-entropy: 0.6014353864290773, [(1, 192), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [225, 15, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 225), (2, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4994868990970781] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4994868990970781, 0.35236183932895687] ***
*** starting iteration: 2; err: [Inf, 0.4994868990970781, 0.35236183932895687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4994868990970781, 0.35236183932895687, 0.3479215966260715] ***
*** starting iteration: 3; err: [Inf, 0.4994868990970781, 0.35236183932895687, 0.3479215966260715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4994868990970781, 0.35236183932895687, 0.3479215966260715, 0.34706209180736775] ***
*** finished computation of 3 references, err: [Inf, 0.4994868990970781, 0.35236183932895687, 0.3479215966260715, 0.34706209180736775] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [234, 14, 0]]
** centroid: 1, normalized-entropy: 0.3131950471154111, [(1, 234), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [121, 118, 0]]
** centroid: 2, normalized-entropy: 0.9998863413074298, [(1, 121), (2, 118)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [61, 90, 28]]
** centroid: 3, normalized-entropy: 0.9127520814275044, [(1, 61), (2, 90), (3, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5359255686008568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5359255686008568, 0.3499519897784027] ***
*** starting iteration: 2; err: [Inf, 0.5359255686008568, 0.3499519897784027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5359255686008568, 0.3499519897784027, 0.3167032546920889] ***
*** starting iteration: 3; err: [Inf, 0.5359255686008568, 0.3499519897784027, 0.3167032546920889] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5359255686008568, 0.3499519897784027, 0.3167032546920889, 0.31102588203019355] ***
*** finished computation of 3 references, err: [Inf, 0.5359255686008568, 0.3499519897784027, 0.3167032546920889, 0.31102588203019355] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [121, 51, 0]]
** centroid: 1, normalized-entropy: 0.8769848468487711, [(1, 121), (2, 51)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [94, 186, 21]]
** centroid: 2, normalized-entropy: 0.7706690938986435, [(1, 94), (2, 186), (3, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [194, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.43430483442587386] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43430483442587386, 0.3290965434462614] ***
*** starting iteration: 2; err: [Inf, 0.43430483442587386, 0.3290965434462614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43430483442587386, 0.3290965434462614, 0.3098605285598331] ***
*** starting iteration: 3; err: [Inf, 0.43430483442587386, 0.3290965434462614, 0.3098605285598331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43430483442587386, 0.3290965434462614, 0.3098605285598331, 0.3059817807332821] ***
*** finished computation of 3 references, err: [Inf, 0.43430483442587386, 0.3290965434462614, 0.3098605285598331, 0.3059817807332821] ***
*** center 1: selecting labels [1] (freq >= 1) [from [186, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [136, 63, 0]]
** centroid: 2, normalized-entropy: 0.9006267231037449, [(1, 136), (2, 63)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [95, 164, 23]]
** centroid: 3, normalized-entropy: 0.8066431190578404, [(1, 95), (2, 164), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41520504029215993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41520504029215993, 0.25397239142312883] ***
*** starting iteration: 2; err: [Inf, 0.41520504029215993, 0.25397239142312883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41520504029215993, 0.25397239142312883, 0.24072768680706574] ***
*** starting iteration: 3; err: [Inf, 0.41520504029215993, 0.25397239142312883, 0.24072768680706574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41520504029215993, 0.25397239142312883, 0.24072768680706574, 0.23745378591791466] ***
*** starting iteration: 4; err: [Inf, 0.41520504029215993, 0.25397239142312883, 0.24072768680706574, 0.23745378591791466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41520504029215993, 0.25397239142312883, 0.24072768680706574, 0.23745378591791466, 0.2369378104116544] ***
*** finished computation of 3 references, err: [Inf, 0.41520504029215993, 0.25397239142312883, 0.24072768680706574, 0.23745378591791466, 0.2369378104116544] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [183, 36, 0]]
** centroid: 1, normalized-entropy: 0.644694043811662, [(1, 183), (2, 36)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [2, 181, 28]]
** centroid: 2, normalized-entropy: 0.40389636612819074, [(1, 2), (2, 181), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [231, 5, 0]]
** centroid: 3, normalized-entropy: 0.14805123138918833, [(1, 231), (2, 5)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31185304803558733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31185304803558733, 0.24829024706047023] ***
*** starting iteration: 2; err: [Inf, 0.31185304803558733, 0.24829024706047023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31185304803558733, 0.24829024706047023, 0.24273104296307424] ***
*** starting iteration: 3; err: [Inf, 0.31185304803558733, 0.24829024706047023, 0.24273104296307424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31185304803558733, 0.24829024706047023, 0.24273104296307424, 0.24096663011938915] ***
*** starting iteration: 4; err: [Inf, 0.31185304803558733, 0.24829024706047023, 0.24273104296307424, 0.24096663011938915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31185304803558733, 0.24829024706047023, 0.24273104296307424, 0.24096663011938915, 0.23997998826283923] ***
*** finished computation of 3 references, err: [Inf, 0.31185304803558733, 0.24829024706047023, 0.24273104296307424, 0.24096663011938915, 0.23997998826283923] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [223, 9, 0]]
** centroid: 1, normalized-entropy: 0.23673098351029281, [(1, 223), (2, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 203, 21]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 203), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [186, 25, 0]]
** centroid: 3, normalized-entropy: 0.5249857118803514, [(1, 186), (2, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.27652751160380634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27652751160380634, 0.23726873737487614] ***
*** starting iteration: 2; err: [Inf, 0.27652751160380634, 0.23726873737487614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27652751160380634, 0.23726873737487614, 0.23405566326352298] ***
*** starting iteration: 3; err: [Inf, 0.27652751160380634, 0.23726873737487614, 0.23405566326352298] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27652751160380634, 0.23726873737487614, 0.23405566326352298, 0.23334947973210504] ***
*** finished computation of 3 references, err: [Inf, 0.27652751160380634, 0.23726873737487614, 0.23405566326352298, 0.23334947973210504] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 179, 23]]
** centroid: 1, normalized-entropy: 0.5114543088923236, [(2, 179), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [192, 33, 0]]
** centroid: 2, normalized-entropy: 0.6014353864290773, [(1, 192), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [225, 15, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 225), (2, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19482682949958463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19482682949958463, 0.15908719926957857] ***
*** starting iteration: 2; err: [Inf, 0.19482682949958463, 0.15908719926957857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934] ***
*** starting iteration: 3; err: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601] ***
*** starting iteration: 4; err: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601, 0.14921418227697233] ***
*** starting iteration: 5; err: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601, 0.14921418227697233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601, 0.14921418227697233, 0.14801975956197838] ***
*** starting iteration: 6; err: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601, 0.14921418227697233, 0.14801975956197838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601, 0.14921418227697233, 0.14801975956197838, 0.14759455937766344] ***
*** finished computation of 7 references, err: [Inf, 0.19482682949958463, 0.15908719926957857, 0.1544558926437934, 0.1518082235161601, 0.14921418227697233, 0.14801975956197838, 0.14759455937766344] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 64, 28]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 64), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [11, 114, 0]]
** centroid: 2, normalized-entropy: 0.4297586093037606, [(1, 11), (2, 114)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [82, 34, 0]]
** centroid: 3, normalized-entropy: 0.8726965039103788, [(1, 82), (2, 34)]
*** center 4: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 10, 0]]
** centroid: 7, normalized-entropy: 0.5392163432092415, [(1, 71), (2, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30350650214161473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038] ***
*** starting iteration: 2; err: [Inf, 0.30350650214161473, 0.17913879948421038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043] ***
*** starting iteration: 3; err: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789] ***
*** starting iteration: 4; err: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857] ***
*** starting iteration: 5; err: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857, 0.14920146926131653] ***
*** starting iteration: 6; err: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857, 0.14920146926131653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857, 0.14920146926131653, 0.1481209986932531] ***
*** starting iteration: 7; err: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857, 0.14920146926131653, 0.1481209986932531] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857, 0.14920146926131653, 0.1481209986932531, 0.14746886960194464] ***
*** finished computation of 7 references, err: [Inf, 0.30350650214161473, 0.17913879948421038, 0.16158531633006043, 0.15641348465988789, 0.15211038034118857, 0.14920146926131653, 0.1481209986932531, 0.14746886960194464] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [93, 17, 0]]
** centroid: 1, normalized-entropy: 0.6210993704855443, [(1, 93), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 86, 21]]
** centroid: 2, normalized-entropy: 0.7143881566559658, [(2, 86), (3, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 77, 0]]
** centroid: 4, normalized-entropy: 0.2837689703721877, [(1, 4), (2, 77)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 56, 0]]
** centroid: 5, normalized-entropy: 0.9994535015927487, [(1, 53), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 1, 0]]
** centroid: 6, normalized-entropy: 0.12394986771100755, [(1, 58), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2242001903262911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074] ***
*** starting iteration: 2; err: [Inf, 0.2242001903262911, 0.19252572530766074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309] ***
*** starting iteration: 3; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166] ***
*** starting iteration: 4; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344] ***
*** starting iteration: 5; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192] ***
*** starting iteration: 6; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174] ***
*** starting iteration: 7; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666] ***
*** starting iteration: 8; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666, 0.15107489631942722] ***
*** starting iteration: 9; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666, 0.15107489631942722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666, 0.15107489631942722, 0.14944092129151906] ***
*** starting iteration: 10; err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666, 0.15107489631942722, 0.14944092129151906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666, 0.15107489631942722, 0.14944092129151906, 0.147884345896866] ***
*** finished computation of 7 references, err: [Inf, 0.2242001903262911, 0.19252572530766074, 0.1814087875333309, 0.1713530010693166, 0.16231632228407344, 0.15784803915118192, 0.15551729397876174, 0.15315726872343666, 0.15107489631942722, 0.14944092129151906, 0.147884345896866] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 45, 0]]
** centroid: 1, normalized-entropy: 0.9948631079048572, [(1, 38), (2, 45)]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 89, 23]]
** centroid: 3, normalized-entropy: 0.7325138475458123, [(2, 89), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 16, 0]]
** centroid: 4, normalized-entropy: 0.6305062394675903, [(1, 85), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 13, 0]]
** centroid: 5, normalized-entropy: 0.6812908868842175, [(1, 59), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 64, 0]]
** centroid: 6, normalized-entropy: 0.19590927087360496, [(1, 2), (2, 64)]
*** center 7: selecting labels [1] (freq >= 1) [from [127, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2542947479258026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542947479258026, 0.19789055645935708] ***
*** starting iteration: 2; err: [Inf, 0.2542947479258026, 0.19789055645935708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542947479258026, 0.19789055645935708, 0.1894613427079252] ***
*** starting iteration: 3; err: [Inf, 0.2542947479258026, 0.19789055645935708, 0.1894613427079252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542947479258026, 0.19789055645935708, 0.1894613427079252, 0.18808944280155832] ***
*** finished computation of 7 references, err: [Inf, 0.2542947479258026, 0.19789055645935708, 0.1894613427079252, 0.18808944280155832] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 53, 0]]
** centroid: 1, normalized-entropy: 0.9999345706643479, [(1, 52), (2, 53)]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [84, 18, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 84), (2, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 87, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [81, 14, 0]]
** centroid: 6, normalized-entropy: 0.6032154068313579, [(1, 81), (2, 14)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 50, 28]]
** centroid: 7, normalized-entropy: 0.9418285354475157, [(2, 50), (3, 28)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2572170855851657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2572170855851657, 0.2100496687193302] ***
*** starting iteration: 2; err: [Inf, 0.2572170855851657, 0.2100496687193302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2572170855851657, 0.2100496687193302, 0.2030627446003381] ***
*** starting iteration: 3; err: [Inf, 0.2572170855851657, 0.2100496687193302, 0.2030627446003381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2572170855851657, 0.2100496687193302, 0.2030627446003381, 0.19752935161241617] ***
*** finished computation of 7 references, err: [Inf, 0.2572170855851657, 0.2100496687193302, 0.2030627446003381, 0.19752935161241617] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 107, 21]]
** centroid: 1, normalized-entropy: 0.6439403638806508, [(2, 107), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 38, 0]]
** centroid: 4, normalized-entropy: 0.9385750889380636, [(1, 69), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 63, 0]]
** centroid: 5, normalized-entropy: 0.7269625813353975, [(1, 16), (2, 63)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [86, 29, 0]]
** centroid: 7, normalized-entropy: 0.814705548656723, [(1, 86), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22502148863014723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22502148863014723, 0.19578201588762664] ***
*** starting iteration: 2; err: [Inf, 0.22502148863014723, 0.19578201588762664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22502148863014723, 0.19578201588762664, 0.19148638220489964] ***
*** starting iteration: 3; err: [Inf, 0.22502148863014723, 0.19578201588762664, 0.19148638220489964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22502148863014723, 0.19578201588762664, 0.19148638220489964, 0.18905531874518544] ***
*** finished computation of 7 references, err: [Inf, 0.22502148863014723, 0.19578201588762664, 0.19148638220489964, 0.18905531874518544] ***
*** center 1: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 3, 0]]
** centroid: 2, normalized-entropy: 0.21450983370697788, [(1, 85), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 49, 0]]
** centroid: 3, normalized-entropy: 0.9979139338855983, [(1, 44), (2, 49)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 85, 23]]
** centroid: 4, normalized-entropy: 0.7471082932651727, [(2, 85), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 67, 0]]
** centroid: 5, normalized-entropy: 0.5869185834047994, [(1, 11), (2, 67)]
*** center 6: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [48, 23, 0]]
** centroid: 7, normalized-entropy: 0.9086185980409245, [(1, 48), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19438079536777805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19438079536777805, 0.1505522873314159] ***
*** starting iteration: 2; err: [Inf, 0.19438079536777805, 0.1505522873314159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19438079536777805, 0.1505522873314159, 0.14793510521501974] ***
*** starting iteration: 3; err: [Inf, 0.19438079536777805, 0.1505522873314159, 0.14793510521501974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19438079536777805, 0.1505522873314159, 0.14793510521501974, 0.14727717595085413] ***
*** finished computation of 7 references, err: [Inf, 0.19438079536777805, 0.1505522873314159, 0.14793510521501974, 0.14727717595085413] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [68, 35, 0]]
** centroid: 1, normalized-entropy: 0.9246327718618892, [(1, 68), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 24, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 72), (2, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 82, 28]]
** centroid: 4, normalized-entropy: 0.8184033299219708, [(2, 82), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 81, 0]]
** centroid: 5, normalized-entropy: 0.8321842672305305, [(1, 29), (2, 81)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18836822840482878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18836822840482878, 0.15236034643252672] ***
*** starting iteration: 2; err: [Inf, 0.18836822840482878, 0.15236034643252672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18836822840482878, 0.15236034643252672, 0.14878640173636992] ***
*** starting iteration: 3; err: [Inf, 0.18836822840482878, 0.15236034643252672, 0.14878640173636992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18836822840482878, 0.15236034643252672, 0.14878640173636992, 0.1475448065361977] ***
*** finished computation of 7 references, err: [Inf, 0.18836822840482878, 0.15236034643252672, 0.14878640173636992, 0.1475448065361977] ***
*** center 1: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 72, 21]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(2, 72), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 15, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 60), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [6, 72, 0]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(1, 6), (2, 72)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 77, 0]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(1, 33), (2, 77)]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18401506879105828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18401506879105828, 0.15243403817425066] ***
*** starting iteration: 2; err: [Inf, 0.18401506879105828, 0.15243403817425066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18401506879105828, 0.15243403817425066, 0.1503221113248721] ***
*** starting iteration: 3; err: [Inf, 0.18401506879105828, 0.15243403817425066, 0.1503221113248721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18401506879105828, 0.15243403817425066, 0.1503221113248721, 0.15011057344640882] ***
*** finished computation of 7 references, err: [Inf, 0.18401506879105828, 0.15243403817425066, 0.1503221113248721, 0.15011057344640882] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 91, 18]]
** centroid: 1, normalized-entropy: 0.6464599001526788, [(2, 91), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [99, 6, 0]]
** centroid: 3, normalized-entropy: 0.3159971329784246, [(1, 99), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 21, 0]]
** centroid: 4, normalized-entropy: 0.7578784625383954, [(1, 75), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 33, 0]]
** centroid: 5, normalized-entropy: 0.8980587934501658, [(1, 72), (2, 33)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 76, 5]]
** centroid: 6, normalized-entropy: 0.33426813256179383, [(2, 76), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9429849010687334, 0.9260038481595368, 0.9259978541415667, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3532765829465813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3532765829465813, 0.24269369171789704] ***
*** finished computation of 3 references, err: [Inf, 0.3532765829465813, 0.24269369171789704] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [275, 32, 0]]
** centroid: 1, normalized-entropy: 0.48227677594572993, [(1, 275), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 154, 28]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 154), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [141, 36, 0]]
** centroid: 3, normalized-entropy: 0.7286561673702678, [(1, 141), (2, 36)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33944968895035804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33944968895035804, 0.24730551567604428] ***
*** finished computation of 3 references, err: [Inf, 0.33944968895035804, 0.24730551567604428] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [93, 192, 21]]
** centroid: 1, normalized-entropy: 0.7630279787875813, [(1, 93), (2, 192), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [194, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [122, 45, 0]]
** centroid: 3, normalized-entropy: 0.8406902534470616, [(1, 122), (2, 45)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31493229486293967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31493229486293967, 0.2514827419044464] ***
*** finished computation of 3 references, err: [Inf, 0.31493229486293967, 0.2514827419044464] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [284, 65, 0]]
** centroid: 1, normalized-entropy: 0.6935528829827777, [(1, 284), (2, 65)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [133, 33, 0]]
** centroid: 2, normalized-entropy: 0.7195119020668815, [(1, 133), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 129, 23]]
** centroid: 3, normalized-entropy: 0.6131232967402233, [(2, 129), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3959085544957234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3959085544957234, 0.30731449081973583] ***
*** finished computation of 3 references, err: [Inf, 0.3959085544957234, 0.30731449081973583] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [262, 35, 0]]
** centroid: 1, normalized-entropy: 0.5231348379863356, [(1, 262), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [154, 34, 0]]
** centroid: 2, normalized-entropy: 0.6819353204567525, [(1, 154), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 153, 28]]
** centroid: 3, normalized-entropy: 0.6214686619473565, [(2, 153), (3, 28)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37463718101750876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37463718101750876, 0.30926254303983486] ***
*** finished computation of 3 references, err: [Inf, 0.37463718101750876, 0.30926254303983486] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [272, 39, 0]]
** centroid: 1, normalized-entropy: 0.5446917368324674, [(1, 272), (2, 39)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 158, 21]]
** centroid: 2, normalized-entropy: 0.5216033521785791, [(2, 158), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [137, 40, 0]]
** centroid: 3, normalized-entropy: 0.7709528994553895, [(1, 137), (2, 40)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41643951846373223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41643951846373223, 0.3076700839371807] ***
*** finished computation of 3 references, err: [Inf, 0.41643951846373223, 0.3076700839371807] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [97, 142, 23]]
** centroid: 1, normalized-entropy: 0.8314287894200109, [(1, 97), (2, 142), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [184, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [136, 85, 0]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(1, 136), (2, 85)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9429849010687334, 0.9260038481595368, 0.9259978541415667, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.23731826754236543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23731826754236543, 0.19234329424854424] ***
*** finished computation of 7 references, err: [Inf, 0.23731826754236543, 0.19234329424854424] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [2, 125, 0]]
** centroid: 1, normalized-entropy: 0.116849760923655, [(1, 2), (2, 125)]
*** center 2: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [76, 26, 0]]
** centroid: 3, normalized-entropy: 0.8189555018403103, [(1, 76), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 21, 0]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(1, 56), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [108, 6, 0]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(1, 108), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 42, 28]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 42), (3, 28)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [92, 2, 0]]
** centroid: 7, normalized-entropy: 0.14854949043034832, [(1, 92), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2225851967115363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2225851967115363, 0.19385098870229284] ***
*** finished computation of 7 references, err: [Inf, 0.2225851967115363, 0.19385098870229284] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [128, 1, 0]]
** centroid: 1, normalized-entropy: 0.06549082131472699, [(1, 128), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 4, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 21]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 56), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 88, 0]]
** centroid: 5, normalized-entropy: 0.7624233236147429, [(1, 25), (2, 88)]
*** center 6: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 88, 0]]
** centroid: 7, normalized-entropy: 0.20905980566852464, [(1, 3), (2, 88)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2488243498893893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2488243498893893, 0.1915808576417492] ***
*** finished computation of 7 references, err: [Inf, 0.2488243498893893, 0.1915808576417492] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 97, 0]]
** centroid: 1, normalized-entropy: 0.8081920174996, [(1, 32), (2, 97)]
*** center 2: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 26, 0]]
** centroid: 3, normalized-entropy: 0.8228368841492258, [(1, 75), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 26, 0]]
** centroid: 4, normalized-entropy: 0.8507707040532602, [(1, 68), (2, 26)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 78, 23]]
** centroid: 5, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1921155050259878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1921155050259878, 0.15375602444215725] ***
*** finished computation of 7 references, err: [Inf, 0.1921155050259878, 0.15375602444215725] ***
*** center 1: selecting labels [1] (freq >= 1) [from [148, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 39, 28]]
** centroid: 2, normalized-entropy: 0.9804679314541813, [(2, 39), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 9, 0]]
** centroid: 3, normalized-entropy: 0.569190343735683, [(1, 58), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [84, 2, 0]]
** centroid: 4, normalized-entropy: 0.15935006268563429, [(1, 84), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 76, 0]]
** centroid: 5, normalized-entropy: 0.8073313266519867, [(1, 25), (2, 76)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 96, 0]]
** centroid: 6, normalized-entropy: 0.4778207445858079, [(1, 11), (2, 96)]
*** center 7: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1933364462738541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1933364462738541, 0.1538919425908772] ***
*** finished computation of 7 references, err: [Inf, 0.1933364462738541, 0.1538919425908772] ***
*** center 1: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [74, 13, 0]]
** centroid: 2, normalized-entropy: 0.6084002154765848, [(1, 74), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 21]]
** centroid: 3, normalized-entropy: 0.8503821170987139, [(2, 55), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 83, 0]]
** centroid: 5, normalized-entropy: 0.21832103023746746, [(1, 3), (2, 83)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 85, 0]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(1, 30), (2, 85)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 1, 0]]
** centroid: 7, normalized-entropy: 0.13303964861069897, [(1, 53), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18636400522901558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18636400522901558, 0.1494270323069188] ***
*** finished computation of 7 references, err: [Inf, 0.18636400522901558, 0.1494270323069188] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [116, 3, 0]]
** centroid: 1, normalized-entropy: 0.16977000753515514, [(1, 116), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [84, 11, 0]]
** centroid: 2, normalized-entropy: 0.5171354891896202, [(1, 84), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 46, 23]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 46), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 85, 0]]
** centroid: 5, normalized-entropy: 0.8374782779405223, [(1, 31), (2, 85)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 77, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 5, 0]]
** centroid: 7, normalized-entropy: 0.39993804743902767, [(1, 58), (2, 5)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9429849010687334, 0.9319828810846774, 0.9260038481595368, 0.9259978541415667, 0.9239748730766695, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 17
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9429849010687334, 0.9319828810846774, 0.9260038481595368, 0.9259978541415667, 0.9239748730766695, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 17
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9429849010687334, 0.9319828810846774, 0.9260038481595368, 0.9259978541415667, 0.9239748730766695, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 17
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9429849010687334, 0.9319828810846774, 0.9260038481595368, 0.9259978541415667, 0.9239748730766695, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 17
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9429849010687334, 0.9319828810846774, 0.9260038481595368, 0.9259978541415667, 0.9239748730766695, 0.9210258162353971, 0.9200188212164261, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9429849010687334
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.17488679455456188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17488679455456188, 0.15282668531858348] ***
*** starting iteration: 2; err: [Inf, 0.17488679455456188, 0.15282668531858348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17488679455456188, 0.15282668531858348, 0.14941673296190486] ***
*** starting iteration: 3; err: [Inf, 0.17488679455456188, 0.15282668531858348, 0.14941673296190486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17488679455456188, 0.15282668531858348, 0.14941673296190486, 0.14766488282160983] ***
*** starting iteration: 4; err: [Inf, 0.17488679455456188, 0.15282668531858348, 0.14941673296190486, 0.14766488282160983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17488679455456188, 0.15282668531858348, 0.14941673296190486, 0.14766488282160983, 0.1468934311878283] ***
*** finished computation of 7 references, err: [Inf, 0.17488679455456188, 0.15282668531858348, 0.14941673296190486, 0.14766488282160983, 0.1468934311878283] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [84, 27, 0]]
** centroid: 1, normalized-entropy: 0.8003922080453356, [(1, 84), (2, 27)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 96, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 37, 0]]
** centroid: 3, normalized-entropy: 0.9696787018231177, [(1, 56), (2, 37)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 48, 28]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(2, 48), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [84, 14, 0]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(1, 84), (2, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22976929196917537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22976929196917537, 0.15337451642750577] ***
*** starting iteration: 2; err: [Inf, 0.22976929196917537, 0.15337451642750577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22976929196917537, 0.15337451642750577, 0.1488227501331453] ***
*** starting iteration: 3; err: [Inf, 0.22976929196917537, 0.15337451642750577, 0.1488227501331453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22976929196917537, 0.15337451642750577, 0.1488227501331453, 0.14736088875885717] ***
*** starting iteration: 4; err: [Inf, 0.22976929196917537, 0.15337451642750577, 0.1488227501331453, 0.14736088875885717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22976929196917537, 0.15337451642750577, 0.1488227501331453, 0.14736088875885717, 0.1470681563457139] ***
*** finished computation of 7 references, err: [Inf, 0.22976929196917537, 0.15337451642750577, 0.1488227501331453, 0.14736088875885717, 0.1470681563457139] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 49, 0]]
** centroid: 1, normalized-entropy: 0.999363485672765, [(1, 52), (2, 49)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 84, 1]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [103, 4, 0]]
** centroid: 3, normalized-entropy: 0.2301627406079554, [(1, 103), (2, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 77, 20]]
** centroid: 5, normalized-entropy: 0.7341280428958428, [(2, 77), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 23, 0]]
** centroid: 7, normalized-entropy: 0.8607781176165941, [(1, 58), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1957872655630849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957872655630849, 0.15684761486478385] ***
*** starting iteration: 2; err: [Inf, 0.1957872655630849, 0.15684761486478385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662] ***
*** starting iteration: 3; err: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662, 0.1500614334283204] ***
*** starting iteration: 4; err: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662, 0.1500614334283204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662, 0.1500614334283204, 0.14865323488294765] ***
*** starting iteration: 5; err: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662, 0.1500614334283204, 0.14865323488294765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662, 0.1500614334283204, 0.14865323488294765, 0.14776182768330945] ***
*** finished computation of 7 references, err: [Inf, 0.1957872655630849, 0.15684761486478385, 0.15215956896258662, 0.1500614334283204, 0.14865323488294765, 0.14776182768330945] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 58, 0]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(1, 4), (2, 58)]
*** center 2: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [58, 32, 0]]
** centroid: 3, normalized-entropy: 0.9389320105807949, [(1, 58), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [37, 57, 0]]
** centroid: 4, normalized-entropy: 0.9670941140642181, [(1, 37), (2, 57)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 80, 23]]
** centroid: 5, normalized-entropy: 0.7661493370832159, [(2, 80), (3, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22150771470611785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22150771470611785, 0.18999212190324255] ***
*** starting iteration: 2; err: [Inf, 0.22150771470611785, 0.18999212190324255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22150771470611785, 0.18999212190324255, 0.18868816245973738] ***
*** starting iteration: 3; err: [Inf, 0.22150771470611785, 0.18999212190324255, 0.18868816245973738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22150771470611785, 0.18999212190324255, 0.18868816245973738, 0.18825220936831008] ***
*** finished computation of 7 references, err: [Inf, 0.22150771470611785, 0.18999212190324255, 0.18868816245973738, 0.18825220936831008] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 27, 0]]
** centroid: 2, normalized-entropy: 0.8224042259549892, [(1, 78), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 81, 0]]
** centroid: 3, normalized-entropy: 0.9036488915053315, [(1, 38), (2, 81)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 44, 0]]
** centroid: 4, normalized-entropy: 0.9999046950184836, [(1, 43), (2, 44)]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 70, 28]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 70), (3, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2179790223799255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2179790223799255, 0.20397722987607164] ***
*** starting iteration: 2; err: [Inf, 0.2179790223799255, 0.20397722987607164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2179790223799255, 0.20397722987607164, 0.20013649523819516] ***
*** starting iteration: 3; err: [Inf, 0.2179790223799255, 0.20397722987607164, 0.20013649523819516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2179790223799255, 0.20397722987607164, 0.20013649523819516, 0.19895935092383865] ***
*** starting iteration: 4; err: [Inf, 0.2179790223799255, 0.20397722987607164, 0.20013649523819516, 0.19895935092383865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2179790223799255, 0.20397722987607164, 0.20013649523819516, 0.19895935092383865, 0.1984177930392269] ***
*** finished computation of 7 references, err: [Inf, 0.2179790223799255, 0.20397722987607164, 0.20013649523819516, 0.19895935092383865, 0.1984177930392269] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [90, 13, 0]]
** centroid: 1, normalized-entropy: 0.5469617407220055, [(1, 90), (2, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 17, 0]]
** centroid: 3, normalized-entropy: 0.7266645172796352, [(1, 67), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [33, 68, 0]]
** centroid: 4, normalized-entropy: 0.9115532734067251, [(1, 33), (2, 68)]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 112, 21]]
** centroid: 6, normalized-entropy: 0.6292492238560344, [(2, 112), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [80, 27, 0]]
** centroid: 7, normalized-entropy: 0.8149603494908418, [(1, 80), (2, 27)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2877188411693478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877188411693478, 0.21154293754714718] ***
*** starting iteration: 2; err: [Inf, 0.2877188411693478, 0.21154293754714718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877188411693478, 0.21154293754714718, 0.18871813655427394] ***
*** starting iteration: 3; err: [Inf, 0.2877188411693478, 0.21154293754714718, 0.18871813655427394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877188411693478, 0.21154293754714718, 0.18871813655427394, 0.18742441447839878] ***
*** starting iteration: 4; err: [Inf, 0.2877188411693478, 0.21154293754714718, 0.18871813655427394, 0.18742441447839878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2877188411693478, 0.21154293754714718, 0.18871813655427394, 0.18742441447839878, 0.18663781558790396] ***
*** finished computation of 7 references, err: [Inf, 0.2877188411693478, 0.21154293754714718, 0.18871813655427394, 0.18742441447839878, 0.18663781558790396] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [80, 11, 0]]
** centroid: 1, normalized-entropy: 0.5318826028800231, [(1, 80), (2, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 21, 0]]
** centroid: 3, normalized-entropy: 0.8605553930586318, [(1, 53), (2, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [24, 85, 0]]
** centroid: 5, normalized-entropy: 0.7605024019419504, [(1, 24), (2, 85)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 95, 23]]
** centroid: 6, normalized-entropy: 0.7116412885080164, [(2, 95), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [79, 15, 0]]
** centroid: 7, normalized-entropy: 0.6332905746550958, [(1, 79), (2, 15)]
finished with 12 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9529919140697584, 0.9429849010687334, 0.9319828810846774, 0.9260038481595368, 0.9259978541415667, 0.9239748730766695, 0.9210258162353971, 0.9200188212164261, 0.9169678660696624, 0.8990037942133751, 0.891993790197383, 0.8799877722033411, 0.8700137263011515, 0.8530206853560146, 0.8489507471543399, 0.8489507471543399, 0.8199277121432811, 0.8159057260853668, 0.7930235624846403]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9529919140697584
finished with 21
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.43138618148267605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556] ***
*** starting iteration: 2; err: [Inf, 0.43138618148267605, 0.34770467956431556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913] ***
*** starting iteration: 3; err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417] ***
*** starting iteration: 4; err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658] ***
*** starting iteration: 5; err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882] ***
*** starting iteration: 6; err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882, 0.3373254146839439] ***
*** starting iteration: 7; err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882, 0.3373254146839439] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882, 0.3373254146839439, 0.3347880020346101] ***
*** starting iteration: 8; err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882, 0.3373254146839439, 0.3347880020346101] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882, 0.3373254146839439, 0.3347880020346101, 0.3337976814655995] ***
*** finished computation of 3 references, err: [Inf, 0.43138618148267605, 0.34770467956431556, 0.34325248887342913, 0.34128595510212417, 0.3401185944452658, 0.3387606353596882, 0.3373254146839439, 0.3347880020346101, 0.3337976814655995] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [63, 148, 1]]
** centroid: 1, normalized-entropy: 0.579596484665378, [(1, 63), (2, 148), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [251, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [102, 74, 27]]
** centroid: 3, normalized-entropy: 0.8938512191079941, [(1, 102), (2, 74), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35724099481204663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35724099481204663, 0.3299032836842506] ***
*** starting iteration: 2; err: [Inf, 0.35724099481204663, 0.3299032836842506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35724099481204663, 0.3299032836842506, 0.32423013386999383] ***
*** starting iteration: 3; err: [Inf, 0.35724099481204663, 0.3299032836842506, 0.32423013386999383] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35724099481204663, 0.3299032836842506, 0.32423013386999383, 0.3237981357300344] ***
*** finished computation of 3 references, err: [Inf, 0.35724099481204663, 0.3299032836842506, 0.32423013386999383, 0.3237981357300344] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [110, 131, 0]]
** centroid: 1, normalized-entropy: 0.9945159682253204, [(1, 110), (2, 131)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [54, 101, 21]]
** centroid: 2, normalized-entropy: 0.8509593861162654, [(1, 54), (2, 101), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [245, 5, 0]]
** centroid: 3, normalized-entropy: 0.14144054254182067, [(1, 245), (2, 5)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47936994940422284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427] ***
*** starting iteration: 2; err: [Inf, 0.47936994940422284, 0.35621770479991427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235] ***
*** starting iteration: 3; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828] ***
*** starting iteration: 4; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236] ***
*** starting iteration: 5; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727] ***
*** starting iteration: 6; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295] ***
*** starting iteration: 7; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725] ***
*** starting iteration: 8; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725, 0.32601524997262404] ***
*** starting iteration: 9; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725, 0.32601524997262404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725, 0.32601524997262404, 0.31423908490771385] ***
*** starting iteration: 10; err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725, 0.32601524997262404, 0.31423908490771385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725, 0.32601524997262404, 0.31423908490771385, 0.29642614970232234] ***
*** finished computation of 3 references, err: [Inf, 0.47936994940422284, 0.35621770479991427, 0.3490917255775235, 0.3452626649175828, 0.342766332155236, 0.33961775984525727, 0.3360175959922295, 0.33144709206677725, 0.32601524997262404, 0.31423908490771385, 0.29642614970232234] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [243, 8, 0]]
** centroid: 1, normalized-entropy: 0.2036971859180838, [(1, 243), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [174, 35, 0]]
** centroid: 2, normalized-entropy: 0.651870740354794, [(1, 174), (2, 35)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 184, 23]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 184), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3254981799765739] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254981799765739, 0.2522460538418488] ***
*** starting iteration: 2; err: [Inf, 0.3254981799765739, 0.2522460538418488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486] ***
*** starting iteration: 3; err: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486, 0.24531877648180445] ***
*** starting iteration: 4; err: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486, 0.24531877648180445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486, 0.24531877648180445, 0.2442559679332483] ***
*** starting iteration: 5; err: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486, 0.24531877648180445, 0.2442559679332483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486, 0.24531877648180445, 0.2442559679332483, 0.24353443189767432] ***
*** finished computation of 3 references, err: [Inf, 0.3254981799765739, 0.2522460538418488, 0.24664380160571486, 0.24531877648180445, 0.2442559679332483, 0.24353443189767432] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [97, 84, 14]]
** centroid: 1, normalized-entropy: 0.8185269543963396, [(1, 97), (2, 84), (3, 14)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [115, 138, 14]]
** centroid: 2, normalized-entropy: 0.7814433960923862, [(1, 115), (2, 138), (3, 14)]
*** center 3: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2878355445100115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2878355445100115, 0.26430968046774794] ***
*** starting iteration: 2; err: [Inf, 0.2878355445100115, 0.26430968046774794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2878355445100115, 0.26430968046774794, 0.24775227184743917] ***
*** starting iteration: 3; err: [Inf, 0.2878355445100115, 0.26430968046774794, 0.24775227184743917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2878355445100115, 0.26430968046774794, 0.24775227184743917, 0.2449589929706801] ***
*** starting iteration: 4; err: [Inf, 0.2878355445100115, 0.26430968046774794, 0.24775227184743917, 0.2449589929706801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2878355445100115, 0.26430968046774794, 0.24775227184743917, 0.2449589929706801, 0.2446042963916595] ***
*** finished computation of 3 references, err: [Inf, 0.2878355445100115, 0.26430968046774794, 0.24775227184743917, 0.2449589929706801, 0.2446042963916595] ***
*** center 1: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [106, 88, 1]]
** centroid: 2, normalized-entropy: 0.6530603768326829, [(1, 106), (2, 88), (3, 1)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [83, 149, 20]]
** centroid: 3, normalized-entropy: 0.7988061315065581, [(1, 83), (2, 149), (3, 20)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37131842129167053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018] ***
*** starting iteration: 2; err: [Inf, 0.37131842129167053, 0.2954108517455018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159] ***
*** starting iteration: 3; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718] ***
*** starting iteration: 4; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188] ***
*** starting iteration: 5; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845] ***
*** starting iteration: 6; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205] ***
*** starting iteration: 7; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205, 0.2368964501886979] ***
*** starting iteration: 8; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205, 0.2368964501886979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205, 0.2368964501886979, 0.23588231157908018] ***
*** starting iteration: 9; err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205, 0.2368964501886979, 0.23588231157908018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205, 0.2368964501886979, 0.23588231157908018, 0.2350916071212676] ***
*** finished computation of 3 references, err: [Inf, 0.37131842129167053, 0.2954108517455018, 0.2877457599774159, 0.2732479105182718, 0.24327190702214188, 0.23926587774511845, 0.2381110622909205, 0.2368964501886979, 0.23588231157908018, 0.2350916071212676] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [250, 5, 0]]
** centroid: 1, normalized-entropy: 0.13923299905509884, [(1, 250), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [166, 37, 0]]
** centroid: 2, normalized-entropy: 0.6850092170282274, [(1, 166), (2, 37)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 185, 23]]
** centroid: 3, normalized-entropy: 0.3426056134512635, [(1, 1), (2, 185), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.189609716149047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189609716149047, 0.16473678076872603] ***
*** starting iteration: 2; err: [Inf, 0.189609716149047, 0.16473678076872603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902] ***
*** starting iteration: 3; err: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902, 0.15301383105199784] ***
*** starting iteration: 4; err: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902, 0.15301383105199784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902, 0.15301383105199784, 0.15136743950191886] ***
*** starting iteration: 5; err: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902, 0.15301383105199784, 0.15136743950191886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902, 0.15301383105199784, 0.15136743950191886, 0.15041706339083613] ***
*** finished computation of 7 references, err: [Inf, 0.189609716149047, 0.16473678076872603, 0.15609501476259902, 0.15301383105199784, 0.15136743950191886, 0.15041706339083613] ***
*** center 1: selecting labels [1] (freq >= 2) [from [132, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 122, 36]]
** centroid: 2, normalized-entropy: 0.7742411580847273, [(2, 122), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [128, 2, 0]]
** centroid: 4, normalized-entropy: 0.11467550533614682, [(1, 128), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [85, 48, 0]]
** centroid: 5, normalized-entropy: 0.9434295813183314, [(1, 85), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 96, 0]]
** centroid: 6, normalized-entropy: 0.8980587934501658, [(1, 44), (2, 96)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [44, 75, 0]]
** centroid: 7, normalized-entropy: 0.9504783262723793, [(1, 44), (2, 75)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18304011110868304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304011110868304, 0.1566728380471468] ***
*** starting iteration: 2; err: [Inf, 0.18304011110868304, 0.1566728380471468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304011110868304, 0.1566728380471468, 0.1522896381635219] ***
*** starting iteration: 3; err: [Inf, 0.18304011110868304, 0.1566728380471468, 0.1522896381635219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304011110868304, 0.1566728380471468, 0.1522896381635219, 0.15100204674713313] ***
*** starting iteration: 4; err: [Inf, 0.18304011110868304, 0.1566728380471468, 0.1522896381635219, 0.15100204674713313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304011110868304, 0.1566728380471468, 0.1522896381635219, 0.15100204674713313, 0.1500853340290487] ***
*** finished computation of 7 references, err: [Inf, 0.18304011110868304, 0.1566728380471468, 0.1522896381635219, 0.15100204674713313, 0.1500853340290487] ***
*** center 1: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 19, 0]]
** centroid: 3, normalized-entropy: 0.8009591077369054, [(1, 59), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 45, 0]]
** centroid: 4, normalized-entropy: 0.4079059801389762, [(1, 4), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [88, 10, 0]]
** centroid: 5, normalized-entropy: 0.47543164626872053, [(1, 88), (2, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 35, 19]]
** centroid: 7, normalized-entropy: 0.9357110512652843, [(2, 35), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22689606586191804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497] ***
*** starting iteration: 2; err: [Inf, 0.22689606586191804, 0.17488649844564497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567] ***
*** starting iteration: 3; err: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588] ***
*** starting iteration: 4; err: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509] ***
*** starting iteration: 5; err: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509, 0.14985342866182327] ***
*** starting iteration: 6; err: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509, 0.14985342866182327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509, 0.14985342866182327, 0.1487907431481872] ***
*** starting iteration: 7; err: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509, 0.14985342866182327, 0.1487907431481872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509, 0.14985342866182327, 0.1487907431481872, 0.1478281236011535] ***
*** finished computation of 7 references, err: [Inf, 0.22689606586191804, 0.17488649844564497, 0.16123029853403567, 0.15454316612705588, 0.1514301944002509, 0.14985342866182327, 0.1487907431481872, 0.1478281236011535] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [32, 36, 0]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(1, 32), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 4, 0]]
** centroid: 2, normalized-entropy: 0.34918437350730797, [(1, 57), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 14, 0]]
** centroid: 4, normalized-entropy: 0.7276874545656657, [(1, 55), (2, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 64, 15]]
** centroid: 6, normalized-entropy: 0.7012065844539666, [(2, 64), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 72, 0]]
** centroid: 7, normalized-entropy: 0.34673146824966367, [(1, 5), (2, 72)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24767463459447026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24767463459447026, 0.15562866695411504] ***
*** starting iteration: 2; err: [Inf, 0.24767463459447026, 0.15562866695411504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24767463459447026, 0.15562866695411504, 0.14626425090432166] ***
*** starting iteration: 3; err: [Inf, 0.24767463459447026, 0.15562866695411504, 0.14626425090432166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24767463459447026, 0.15562866695411504, 0.14626425090432166, 0.14444961952138693] ***
*** starting iteration: 4; err: [Inf, 0.24767463459447026, 0.15562866695411504, 0.14626425090432166, 0.14444961952138693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24767463459447026, 0.15562866695411504, 0.14626425090432166, 0.14444961952138693, 0.1441508136736229] ***
*** finished computation of 7 references, err: [Inf, 0.24767463459447026, 0.15562866695411504, 0.14626425090432166, 0.14444961952138693, 0.1441508136736229] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 12, 0]]
** centroid: 1, normalized-entropy: 0.5961045458832345, [(1, 71), (2, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 8, 0]]
** centroid: 3, normalized-entropy: 0.5381411852224502, [(1, 57), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [36, 45, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 36), (2, 45)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 48, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 69, 16]]
** centroid: 6, normalized-entropy: 0.6977652006354232, [(2, 69), (3, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21025306782592088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554] ***
*** starting iteration: 2; err: [Inf, 0.21025306782592088, 0.16681602546479554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437] ***
*** starting iteration: 3; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973] ***
*** starting iteration: 4; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758] ***
*** starting iteration: 5; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302] ***
*** starting iteration: 6; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155] ***
*** starting iteration: 7; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155, 0.14546757863275706] ***
*** starting iteration: 8; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155, 0.14546757863275706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155, 0.14546757863275706, 0.1443022353942506] ***
*** starting iteration: 9; err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155, 0.14546757863275706, 0.1443022353942506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155, 0.14546757863275706, 0.1443022353942506, 0.1440833960021846] ***
*** finished computation of 7 references, err: [Inf, 0.21025306782592088, 0.16681602546479554, 0.16084093108214437, 0.15789762272126973, 0.15544156210310758, 0.15140561475977302, 0.14786575299315155, 0.14546757863275706, 0.1443022353942506, 0.1440833960021846] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 71, 16]]
** centroid: 2, normalized-entropy: 0.6885521684368613, [(2, 71), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [82, 2, 0]]
** centroid: 3, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 53, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 16, 0]]
** centroid: 6, normalized-entropy: 0.8238116333123173, [(1, 46), (2, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 35, 0]]
** centroid: 7, normalized-entropy: 0.9957274520849256, [(1, 30), (2, 35)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20156772138550877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20156772138550877, 0.15342572608869523] ***
*** starting iteration: 2; err: [Inf, 0.20156772138550877, 0.15342572608869523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773] ***
*** starting iteration: 3; err: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773, 0.14794760948698968] ***
*** starting iteration: 4; err: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773, 0.14794760948698968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773, 0.14794760948698968, 0.14694493621587754] ***
*** starting iteration: 5; err: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773, 0.14794760948698968, 0.14694493621587754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773, 0.14794760948698968, 0.14694493621587754, 0.1467205102527514] ***
*** finished computation of 7 references, err: [Inf, 0.20156772138550877, 0.15342572608869523, 0.15038319023139773, 0.14794760948698968, 0.14694493621587754, 0.1467205102527514] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 61, 1]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 9, 0]]
** centroid: 2, normalized-entropy: 0.5535072654547254, [(1, 61), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 47, 0]]
** centroid: 3, normalized-entropy: 0.9897525351939971, [(1, 37), (2, 47)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 16, 0]]
** centroid: 5, normalized-entropy: 0.7990485210442682, [(1, 50), (2, 16)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 43, 16]]
** centroid: 7, normalized-entropy: 0.8431619569518377, [(2, 43), (3, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2014847979741171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014847979741171, 0.16347927636094392] ***
*** starting iteration: 2; err: [Inf, 0.2014847979741171, 0.16347927636094392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725] ***
*** starting iteration: 3; err: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725, 0.14772702123830095] ***
*** starting iteration: 4; err: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725, 0.14772702123830095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725, 0.14772702123830095, 0.14654938970319928] ***
*** starting iteration: 5; err: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725, 0.14772702123830095, 0.14654938970319928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725, 0.14772702123830095, 0.14654938970319928, 0.14609621793590485] ***
*** finished computation of 7 references, err: [Inf, 0.2014847979741171, 0.16347927636094392, 0.15286367775080725, 0.14772702123830095, 0.14654938970319928, 0.14609621793590485] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 27, 0]]
** centroid: 1, normalized-entropy: 0.9386808697586004, [(1, 49), (2, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 3, 0]]
** centroid: 3, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 63, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 56, 6]]
** centroid: 5, normalized-entropy: 0.45868581620054033, [(2, 56), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 13, 0]]
** centroid: 7, normalized-entropy: 0.6652735227649414, [(1, 62), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19039576721563936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19039576721563936, 0.15010092785768211] ***
*** starting iteration: 2; err: [Inf, 0.19039576721563936, 0.15010092785768211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19039576721563936, 0.15010092785768211, 0.14662102183140815] ***
*** starting iteration: 3; err: [Inf, 0.19039576721563936, 0.15010092785768211, 0.14662102183140815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19039576721563936, 0.15010092785768211, 0.14662102183140815, 0.14497665621712805] ***
*** starting iteration: 4; err: [Inf, 0.19039576721563936, 0.15010092785768211, 0.14662102183140815, 0.14497665621712805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19039576721563936, 0.15010092785768211, 0.14662102183140815, 0.14497665621712805, 0.1443916724822484] ***
*** finished computation of 7 references, err: [Inf, 0.19039576721563936, 0.15010092785768211, 0.14662102183140815, 0.14497665621712805, 0.1443916724822484] ***
*** center 1: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 57, 18]]
** centroid: 2, normalized-entropy: 0.7950402793845225, [(2, 57), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 46, 0]]
** centroid: 3, normalized-entropy: 0.9837082626231858, [(1, 34), (2, 46)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 11, 0]]
** centroid: 4, normalized-entropy: 0.5558227377664954, [(1, 74), (2, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 48, 0]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(1, 6), (2, 48)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21946749401465057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654] ***
*** starting iteration: 2; err: [Inf, 0.21946749401465057, 0.16831320366449654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225] ***
*** starting iteration: 3; err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326] ***
*** starting iteration: 4; err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975] ***
*** starting iteration: 5; err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429] ***
*** starting iteration: 6; err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429, 0.1538352326788008] ***
*** starting iteration: 7; err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429, 0.1538352326788008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429, 0.1538352326788008, 0.15206489245127885] ***
*** starting iteration: 8; err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429, 0.1538352326788008, 0.15206489245127885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429, 0.1538352326788008, 0.15206489245127885, 0.15116246611066161] ***
*** finished computation of 7 references, err: [Inf, 0.21946749401465057, 0.16831320366449654, 0.1638748647440225, 0.16093376033520326, 0.1587757398406975, 0.1561329536079429, 0.1538352326788008, 0.15206489245127885, 0.15116246611066161] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 74, 17]]
** centroid: 2, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 16, 0]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(1, 60), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 48, 0]]
** centroid: 5, normalized-entropy: 0.7706290693639406, [(1, 14), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 22, 0]]
** centroid: 6, normalized-entropy: 0.8067955503968327, [(1, 67), (2, 22)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17865846545808017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17865846545808017, 0.1544434285417665] ***
*** starting iteration: 2; err: [Inf, 0.17865846545808017, 0.1544434285417665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17865846545808017, 0.1544434285417665, 0.15114327517244966] ***
*** starting iteration: 3; err: [Inf, 0.17865846545808017, 0.1544434285417665, 0.15114327517244966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17865846545808017, 0.1544434285417665, 0.15114327517244966, 0.15019913907162846] ***
*** finished computation of 7 references, err: [Inf, 0.17865846545808017, 0.1544434285417665, 0.15114327517244966, 0.15019913907162846] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 54, 0]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(1, 16), (2, 54)]
*** center 2: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 9, 0]]
** centroid: 3, normalized-entropy: 0.6226343162547099, [(1, 49), (2, 9)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 51, 9]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(2, 51), (3, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 13, 0]]
** centroid: 5, normalized-entropy: 0.550405815580872, [(1, 89), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [70, 3, 0]]
** centroid: 6, normalized-entropy: 0.24729443986205674, [(1, 70), (2, 3)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 7, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19294402865320445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294402865320445, 0.15135712379589678] ***
*** starting iteration: 2; err: [Inf, 0.19294402865320445, 0.15135712379589678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294402865320445, 0.15135712379589678, 0.1464903659503907] ***
*** starting iteration: 3; err: [Inf, 0.19294402865320445, 0.15135712379589678, 0.1464903659503907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294402865320445, 0.15135712379589678, 0.1464903659503907, 0.14489287852868438] ***
*** starting iteration: 4; err: [Inf, 0.19294402865320445, 0.15135712379589678, 0.1464903659503907, 0.14489287852868438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19294402865320445, 0.15135712379589678, 0.1464903659503907, 0.14489287852868438, 0.14439179421402515] ***
*** finished computation of 7 references, err: [Inf, 0.19294402865320445, 0.15135712379589678, 0.1464903659503907, 0.14489287852868438, 0.14439179421402515] ***
*** center 1: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 30, 0]]
** centroid: 2, normalized-entropy: 0.9677884628267678, [(1, 46), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 20]]
** centroid: 3, normalized-entropy: 0.8794587736429037, [(2, 47), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 19, 0]]
** centroid: 4, normalized-entropy: 0.8009591077369054, [(1, 59), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 62, 0]]
** centroid: 5, normalized-entropy: 0.32984607020714635, [(1, 4), (2, 62)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 11, 0]]
** centroid: 7, normalized-entropy: 0.7076690004167966, [(1, 46), (2, 11)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19853322652168573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903] ***
*** starting iteration: 2; err: [Inf, 0.19853322652168573, 0.1688174149300903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962] ***
*** starting iteration: 3; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153] ***
*** starting iteration: 4; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863] ***
*** starting iteration: 5; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425] ***
*** starting iteration: 6; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482] ***
*** starting iteration: 7; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482, 0.14719745847955346] ***
*** starting iteration: 8; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482, 0.14719745847955346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482, 0.14719745847955346, 0.14494276124984026] ***
*** starting iteration: 9; err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482, 0.14719745847955346, 0.14494276124984026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482, 0.14719745847955346, 0.14494276124984026, 0.14424686771258713] ***
*** finished computation of 7 references, err: [Inf, 0.19853322652168573, 0.1688174149300903, 0.15927339346508962, 0.15411132418271153, 0.1521677676634863, 0.15028399193659425, 0.1490424498077482, 0.14719745847955346, 0.14494276124984026, 0.14424686771258713] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 89, 1]]
** centroid: 1, normalized-entropy: 0.15240699892386778, [(1, 2), (2, 89)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 20, 0]]
** centroid: 2, normalized-entropy: 0.8418521897563208, [(1, 54), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 6, 0]]
** centroid: 3, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
*** center 4: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 57, 7]]
** centroid: 7, normalized-entropy: 0.49802788653447644, [(2, 57), (3, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18759249219298363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763] ***
*** starting iteration: 2; err: [Inf, 0.18759249219298363, 0.16452065673656763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345] ***
*** starting iteration: 3; err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608] ***
*** starting iteration: 4; err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102] ***
*** starting iteration: 5; err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497] ***
*** starting iteration: 6; err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497, 0.15027539079543203] ***
*** starting iteration: 7; err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497, 0.15027539079543203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497, 0.15027539079543203, 0.14768916631117462] ***
*** starting iteration: 8; err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497, 0.15027539079543203, 0.14768916631117462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497, 0.15027539079543203, 0.14768916631117462, 0.14690525508811697] ***
*** finished computation of 7 references, err: [Inf, 0.18759249219298363, 0.16452065673656763, 0.15916890150122345, 0.15634114659577608, 0.15427597859688102, 0.15283057812368497, 0.15027539079543203, 0.14768916631117462, 0.14690525508811697] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 71, 0]]
** centroid: 1, normalized-entropy: 0.2447650820208971, [(1, 3), (2, 71)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [12, 74, 0]]
** centroid: 2, normalized-entropy: 0.5830194167347007, [(1, 12), (2, 74)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 5, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 3, 0]]
** centroid: 5, normalized-entropy: 0.2899860470332091, [(1, 56), (2, 3)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 41, 11]]
** centroid: 6, normalized-entropy: 0.7444131797881749, [(2, 41), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2318597804810852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2318597804810852, 0.1741450287606567] ***
*** starting iteration: 2; err: [Inf, 0.2318597804810852, 0.1741450287606567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545] ***
*** starting iteration: 3; err: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545, 0.15110981839336454] ***
*** starting iteration: 4; err: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545, 0.15110981839336454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545, 0.15110981839336454, 0.14989360552839934] ***
*** starting iteration: 5; err: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545, 0.15110981839336454, 0.14989360552839934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545, 0.15110981839336454, 0.14989360552839934, 0.14958680757693946] ***
*** finished computation of 7 references, err: [Inf, 0.2318597804810852, 0.1741450287606567, 0.15758834288455545, 0.15110981839336454, 0.14989360552839934, 0.14958680757693946] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 22]]
** centroid: 1, normalized-entropy: 0.975119064940866, [(2, 32), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [26, 52, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 26), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [86, 5, 0]]
** centroid: 5, normalized-entropy: 0.30704288878312236, [(1, 86), (2, 5)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [18, 29, 0]]
** centroid: 7, normalized-entropy: 0.9601186626422924, [(1, 18), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17574369971267878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17574369971267878, 0.1574417982790619] ***
*** starting iteration: 2; err: [Inf, 0.17574369971267878, 0.1574417982790619] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685] ***
*** starting iteration: 3; err: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685, 0.1516754522919655] ***
*** starting iteration: 4; err: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685, 0.1516754522919655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685, 0.1516754522919655, 0.1502252688407898] ***
*** starting iteration: 5; err: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685, 0.1516754522919655, 0.1502252688407898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685, 0.1516754522919655, 0.1502252688407898, 0.14925805545970797] ***
*** finished computation of 7 references, err: [Inf, 0.17574369971267878, 0.1574417982790619, 0.1533135494645685, 0.1516754522919655, 0.1502252688407898, 0.14925805545970797] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [83, 9, 0]]
** centroid: 1, normalized-entropy: 0.4620663276355394, [(1, 83), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 38, 0]]
** centroid: 2, normalized-entropy: 0.9884374283487116, [(1, 49), (2, 38)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 19, 0]]
** centroid: 4, normalized-entropy: 0.9007196798623592, [(1, 41), (2, 19)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 66, 9]]
** centroid: 5, normalized-entropy: 0.5293608652873645, [(2, 66), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 46, 8]]
** centroid: 7, normalized-entropy: 0.6051865766334207, [(2, 46), (3, 8)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23889345617685467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938] ***
*** starting iteration: 2; err: [Inf, 0.23889345617685467, 0.19001852173171938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298] ***
*** starting iteration: 3; err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887] ***
*** starting iteration: 4; err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065] ***
*** starting iteration: 5; err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364] ***
*** starting iteration: 6; err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364, 0.15109824753552675] ***
*** starting iteration: 7; err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364, 0.15109824753552675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364, 0.15109824753552675, 0.1495093579031527] ***
*** starting iteration: 8; err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364, 0.15109824753552675, 0.1495093579031527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364, 0.15109824753552675, 0.1495093579031527, 0.14933537379745393] ***
*** finished computation of 7 references, err: [Inf, 0.23889345617685467, 0.19001852173171938, 0.1712128541134298, 0.16220023944228887, 0.15675315972045065, 0.153346195676364, 0.15109824753552675, 0.1495093579031527, 0.14933537379745393] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 31, 0]]
** centroid: 3, normalized-entropy: 0.9860400318404435, [(1, 41), (2, 31)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 21]]
** centroid: 4, normalized-entropy: 0.7927652363756529, [(2, 67), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [47, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 52, 0]]
** centroid: 6, normalized-entropy: 0.30540057087920036, [(1, 3), (2, 52)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [73, 22, 0]]
** centroid: 7, normalized-entropy: 0.7807536250860868, [(1, 73), (2, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22472484124684705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472484124684705, 0.1787190601732582] ***
*** starting iteration: 2; err: [Inf, 0.22472484124684705, 0.1787190601732582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568] ***
*** starting iteration: 3; err: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748] ***
*** starting iteration: 4; err: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748, 0.15328845757432283] ***
*** starting iteration: 5; err: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748, 0.15328845757432283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748, 0.15328845757432283, 0.1515213694954291] ***
*** starting iteration: 6; err: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748, 0.15328845757432283, 0.1515213694954291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748, 0.15328845757432283, 0.1515213694954291, 0.15080579314753415] ***
*** finished computation of 7 references, err: [Inf, 0.22472484124684705, 0.1787190601732582, 0.16580737841315568, 0.15777615897380748, 0.15328845757432283, 0.1515213694954291, 0.15080579314753415] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 48, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [39, 46, 0]]
** centroid: 2, normalized-entropy: 0.9951022712641691, [(1, 39), (2, 46)]
*** center 3: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 5, 0]]
** centroid: 4, normalized-entropy: 0.340373285759646, [(1, 74), (2, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 30, 16]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 30), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 46, 0]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(1, 2), (2, 46)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24123229137156157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24123229137156157, 0.15993383433669806] ***
*** starting iteration: 2; err: [Inf, 0.24123229137156157, 0.15993383433669806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24123229137156157, 0.15993383433669806, 0.14923970896285027] ***
*** starting iteration: 3; err: [Inf, 0.24123229137156157, 0.15993383433669806, 0.14923970896285027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24123229137156157, 0.15993383433669806, 0.14923970896285027, 0.14688212824985386] ***
*** starting iteration: 4; err: [Inf, 0.24123229137156157, 0.15993383433669806, 0.14923970896285027, 0.14688212824985386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24123229137156157, 0.15993383433669806, 0.14923970896285027, 0.14688212824985386, 0.14664060826972128] ***
*** finished computation of 7 references, err: [Inf, 0.24123229137156157, 0.15993383433669806, 0.14923970896285027, 0.14688212824985386, 0.14664060826972128] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [8, 63, 0]]
** centroid: 1, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 2, 0]]
** centroid: 2, normalized-entropy: 0.2192973081321754, [(1, 55), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 69, 17]]
** centroid: 4, normalized-entropy: 0.7172524777375696, [(2, 69), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 12, 0]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(1, 51), (2, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 14, 0]]
** centroid: 7, normalized-entropy: 0.6454495903301855, [(1, 71), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21149227140843868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21149227140843868, 0.16196293275430798] ***
*** starting iteration: 2; err: [Inf, 0.21149227140843868, 0.16196293275430798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234] ***
*** starting iteration: 3; err: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234, 0.1488295473624021] ***
*** starting iteration: 4; err: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234, 0.1488295473624021] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234, 0.1488295473624021, 0.14719124743528664] ***
*** starting iteration: 5; err: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234, 0.1488295473624021, 0.14719124743528664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234, 0.1488295473624021, 0.14719124743528664, 0.14655296793580055] ***
*** finished computation of 7 references, err: [Inf, 0.21149227140843868, 0.16196293275430798, 0.15579290535487234, 0.1488295473624021, 0.14719124743528664, 0.14655296793580055] ***
*** center 1: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 61, 0]]
** centroid: 3, normalized-entropy: 0.6167482598263911, [(1, 11), (2, 61)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [10, 56, 0]]
** centroid: 4, normalized-entropy: 0.6136190195993708, [(1, 10), (2, 56)]
*** center 5: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 48, 19]]
** centroid: 6, normalized-entropy: 0.8602858652332406, [(2, 48), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 3, 0]]
** centroid: 7, normalized-entropy: 0.23750814382859295, [(1, 74), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16940149690583348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16940149690583348, 0.14892958925291896] ***
*** starting iteration: 2; err: [Inf, 0.16940149690583348, 0.14892958925291896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16940149690583348, 0.14892958925291896, 0.1462824981957674] ***
*** starting iteration: 3; err: [Inf, 0.16940149690583348, 0.14892958925291896, 0.1462824981957674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16940149690583348, 0.14892958925291896, 0.1462824981957674, 0.14587026956025512] ***
*** finished computation of 7 references, err: [Inf, 0.16940149690583348, 0.14892958925291896, 0.1462824981957674, 0.14587026956025512] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 47, 18]]
** centroid: 1, normalized-entropy: 0.8512243352621381, [(2, 47), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 61, 0]]
** centroid: 4, normalized-entropy: 0.7166336117927455, [(1, 15), (2, 61)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [20, 52, 0]]
** centroid: 5, normalized-entropy: 0.8524051786494784, [(1, 20), (2, 52)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 3, 0]]
** centroid: 6, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [47, 4, 0]]
** centroid: 7, normalized-entropy: 0.3966277727783787, [(1, 47), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20180838872585447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20180838872585447, 0.16017247370444238] ***
*** starting iteration: 2; err: [Inf, 0.20180838872585447, 0.16017247370444238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164] ***
*** starting iteration: 3; err: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008] ***
*** starting iteration: 4; err: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008, 0.15143699565902352] ***
*** starting iteration: 5; err: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008, 0.15143699565902352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008, 0.15143699565902352, 0.15026102414075285] ***
*** starting iteration: 6; err: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008, 0.15143699565902352, 0.15026102414075285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008, 0.15143699565902352, 0.15026102414075285, 0.14966742335632444] ***
*** finished computation of 7 references, err: [Inf, 0.20180838872585447, 0.16017247370444238, 0.1558161823307164, 0.15289069234021008, 0.15143699565902352, 0.15026102414075285, 0.14966742335632444] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 86, 17]]
** centroid: 3, normalized-entropy: 0.646251622274129, [(2, 86), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 31, 0]]
** centroid: 4, normalized-entropy: 0.9835585673909616, [(1, 42), (2, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 11, 0]]
** centroid: 6, normalized-entropy: 0.6559420757694151, [(1, 54), (2, 11)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 37, 0]]
** centroid: 7, normalized-entropy: 0.999871756640849, [(1, 38), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18166031679604203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18166031679604203, 0.1530155633445829] ***
*** starting iteration: 2; err: [Inf, 0.18166031679604203, 0.1530155633445829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18166031679604203, 0.1530155633445829, 0.1451065005385317] ***
*** starting iteration: 3; err: [Inf, 0.18166031679604203, 0.1530155633445829, 0.1451065005385317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18166031679604203, 0.1530155633445829, 0.1451065005385317, 0.14378097281232477] ***
*** starting iteration: 4; err: [Inf, 0.18166031679604203, 0.1530155633445829, 0.1451065005385317, 0.14378097281232477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18166031679604203, 0.1530155633445829, 0.1451065005385317, 0.14378097281232477, 0.14348532622680069] ***
*** finished computation of 7 references, err: [Inf, 0.18166031679604203, 0.1530155633445829, 0.1451065005385317, 0.14378097281232477, 0.14348532622680069] ***
*** center 1: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [7, 60, 0]]
** centroid: 2, normalized-entropy: 0.4830306801456181, [(1, 7), (2, 60)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [80, 2, 0]]
** centroid: 3, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 15]]
** centroid: 4, normalized-entropy: 0.7012065844539666, [(2, 64), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [28, 43, 0]]
** centroid: 6, normalized-entropy: 0.9675594819018211, [(1, 28), (2, 43)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [53, 4, 0]]
** centroid: 7, normalized-entropy: 0.36657801255334593, [(1, 53), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19462693629041314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19462693629041314, 0.1513911016918719] ***
*** starting iteration: 2; err: [Inf, 0.19462693629041314, 0.1513911016918719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19462693629041314, 0.1513911016918719, 0.14739113741368054] ***
*** starting iteration: 3; err: [Inf, 0.19462693629041314, 0.1513911016918719, 0.14739113741368054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19462693629041314, 0.1513911016918719, 0.14739113741368054, 0.14526461844891309] ***
*** starting iteration: 4; err: [Inf, 0.19462693629041314, 0.1513911016918719, 0.14739113741368054, 0.14526461844891309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19462693629041314, 0.1513911016918719, 0.14739113741368054, 0.14526461844891309, 0.14433721100725233] ***
*** finished computation of 7 references, err: [Inf, 0.19462693629041314, 0.1513911016918719, 0.14739113741368054, 0.14526461844891309, 0.14433721100725233] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 17, 0]]
** centroid: 1, normalized-entropy: 0.7564041945982506, [(1, 61), (2, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 2]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 48), (3, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 4, 0]]
** centroid: 4, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 52, 14]]
** centroid: 6, normalized-entropy: 0.7455178428108284, [(2, 52), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [44, 36, 0]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(1, 44), (2, 36)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18375792421400547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18375792421400547, 0.15616340049239807] ***
*** starting iteration: 2; err: [Inf, 0.18375792421400547, 0.15616340049239807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18375792421400547, 0.15616340049239807, 0.15160122398752718] ***
*** starting iteration: 3; err: [Inf, 0.18375792421400547, 0.15616340049239807, 0.15160122398752718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18375792421400547, 0.15616340049239807, 0.15160122398752718, 0.15076995768025517] ***
*** finished computation of 7 references, err: [Inf, 0.18375792421400547, 0.15616340049239807, 0.15160122398752718, 0.15076995768025517] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 16, 0]]
** centroid: 1, normalized-entropy: 0.9321115676166747, [(1, 30), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 90, 20]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 90), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 56, 0]]
** centroid: 3, normalized-entropy: 0.8701883352082787, [(1, 23), (2, 56)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 11, 0]]
** centroid: 4, normalized-entropy: 0.693965967334286, [(1, 48), (2, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18908211334235966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18908211334235966, 0.16514827813766897] ***
*** starting iteration: 2; err: [Inf, 0.18908211334235966, 0.16514827813766897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395] ***
*** starting iteration: 3; err: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268] ***
*** starting iteration: 4; err: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268, 0.15170959063246847] ***
*** starting iteration: 5; err: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268, 0.15170959063246847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268, 0.15170959063246847, 0.15064020222425462] ***
*** starting iteration: 6; err: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268, 0.15170959063246847, 0.15064020222425462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268, 0.15170959063246847, 0.15064020222425462, 0.149885669413954] ***
*** finished computation of 7 references, err: [Inf, 0.18908211334235966, 0.16514827813766897, 0.15803559556929395, 0.15349686157610268, 0.15170959063246847, 0.15064020222425462, 0.149885669413954] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 2, 0]]
** centroid: 3, normalized-entropy: 0.2006223243127146, [(1, 62), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [67, 15, 0]]
** centroid: 4, normalized-entropy: 0.6864381668766382, [(1, 67), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 64, 14]]
** centroid: 5, normalized-entropy: 0.6789538995185759, [(2, 64), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 23, 0]]
** centroid: 6, normalized-entropy: 0.8796975782775168, [(1, 54), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 11, 0]]
** centroid: 7, normalized-entropy: 0.6681273338436138, [(1, 52), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20995835956465453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667] ***
*** starting iteration: 2; err: [Inf, 0.20995835956465453, 0.18308328360691667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015] ***
*** starting iteration: 3; err: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073] ***
*** starting iteration: 4; err: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327] ***
*** starting iteration: 5; err: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327, 0.15291166098974646] ***
*** starting iteration: 6; err: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327, 0.15291166098974646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327, 0.15291166098974646, 0.1518446398396045] ***
*** starting iteration: 7; err: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327, 0.15291166098974646, 0.1518446398396045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327, 0.15291166098974646, 0.1518446398396045, 0.15118119481392206] ***
*** finished computation of 7 references, err: [Inf, 0.20995835956465453, 0.18308328360691667, 0.16537996186316015, 0.15772838496603073, 0.15443427420966327, 0.15291166098974646, 0.1518446398396045, 0.15118119481392206] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 55, 0]]
** centroid: 1, normalized-entropy: 0.7698205808588191, [(1, 16), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 3, 0]]
** centroid: 2, normalized-entropy: 0.2243269603450881, [(1, 80), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 3, 0]]
** centroid: 3, normalized-entropy: 0.2795055456366802, [(1, 59), (2, 3)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 33, 17]]
** centroid: 6, normalized-entropy: 0.9248187049730301, [(2, 33), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [77, 15, 0]]
** centroid: 7, normalized-entropy: 0.6415410585827175, [(1, 77), (2, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2118931544665247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118931544665247, 0.1655594398956746] ***
*** starting iteration: 2; err: [Inf, 0.2118931544665247, 0.1655594398956746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034] ***
*** starting iteration: 3; err: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574] ***
*** starting iteration: 4; err: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574, 0.14941184728313237] ***
*** starting iteration: 5; err: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574, 0.14941184728313237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574, 0.14941184728313237, 0.148152056703344] ***
*** starting iteration: 6; err: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574, 0.14941184728313237, 0.148152056703344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574, 0.14941184728313237, 0.148152056703344, 0.14779559907410295] ***
*** finished computation of 7 references, err: [Inf, 0.2118931544665247, 0.1655594398956746, 0.15656687626522034, 0.15187897379137574, 0.14941184728313237, 0.148152056703344, 0.14779559907410295] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [59, 24, 0]]
** centroid: 1, normalized-entropy: 0.8676293117125105, [(1, 59), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [37, 19, 0]]
** centroid: 2, normalized-entropy: 0.9241335419915458, [(1, 37), (2, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 31, 0]]
** centroid: 3, normalized-entropy: 0.9809470132751208, [(1, 43), (2, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 72, 15]]
** centroid: 6, normalized-entropy: 0.6631968402398286, [(2, 72), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16948414428997785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16948414428997785, 0.14890489184949546] ***
*** starting iteration: 2; err: [Inf, 0.16948414428997785, 0.14890489184949546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16948414428997785, 0.14890489184949546, 0.14614766942430288] ***
*** starting iteration: 3; err: [Inf, 0.16948414428997785, 0.14890489184949546, 0.14614766942430288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16948414428997785, 0.14890489184949546, 0.14614766942430288, 0.14568776606582104] ***
*** finished computation of 7 references, err: [Inf, 0.16948414428997785, 0.14890489184949546, 0.14614766942430288, 0.14568776606582104] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [95, 3, 0]]
** centroid: 2, normalized-entropy: 0.19745300438456026, [(1, 95), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 10, 0]]
** centroid: 3, normalized-entropy: 0.576291461217437, [(1, 63), (2, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [44, 6, 0]]
** centroid: 6, normalized-entropy: 0.5293608652873645, [(1, 44), (2, 6)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 24, 18]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 24), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2079296915428713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2079296915428713, 0.1670030503831804] ***
*** starting iteration: 2; err: [Inf, 0.2079296915428713, 0.1670030503831804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326] ***
*** starting iteration: 3; err: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836] ***
*** starting iteration: 4; err: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836, 0.14745820553600789] ***
*** starting iteration: 5; err: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836, 0.14745820553600789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836, 0.14745820553600789, 0.14601451552659273] ***
*** starting iteration: 6; err: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836, 0.14745820553600789, 0.14601451552659273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836, 0.14745820553600789, 0.14601451552659273, 0.14529067113623023] ***
*** finished computation of 7 references, err: [Inf, 0.2079296915428713, 0.1670030503831804, 0.15472804050706326, 0.15008999682217836, 0.14745820553600789, 0.14601451552659273, 0.14529067113623023] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 4, 0]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(1, 54), (2, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 14, 0]]
** centroid: 3, normalized-entropy: 0.6278191534832795, [(1, 75), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 2, 0]]
** centroid: 4, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 55, 17]]
** centroid: 5, normalized-entropy: 0.7885131605379784, [(2, 55), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 11, 0]]
** centroid: 6, normalized-entropy: 0.6442142137378306, [(1, 56), (2, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 86, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1834994568526745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1834994568526745, 0.15163778757979163] ***
*** starting iteration: 2; err: [Inf, 0.1834994568526745, 0.15163778757979163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1834994568526745, 0.15163778757979163, 0.148673535682261] ***
*** starting iteration: 3; err: [Inf, 0.1834994568526745, 0.15163778757979163, 0.148673535682261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1834994568526745, 0.15163778757979163, 0.148673535682261, 0.14815014368202536] ***
*** finished computation of 7 references, err: [Inf, 0.1834994568526745, 0.15163778757979163, 0.148673535682261, 0.14815014368202536] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 77, 0]]
** centroid: 1, normalized-entropy: 0.5146464316834292, [(1, 10), (2, 77)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 68, 15]]
** centroid: 2, normalized-entropy: 0.6816559115981193, [(2, 68), (3, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [45, 21, 0]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(1, 45), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 4, 0]]
** centroid: 5, normalized-entropy: 0.3576467062456333, [(1, 55), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 6, 0]]
** centroid: 6, normalized-entropy: 0.47983202361612853, [(1, 52), (2, 6)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22895957613922654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22895957613922654, 0.15775040868669749] ***
*** starting iteration: 2; err: [Inf, 0.22895957613922654, 0.15775040868669749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768] ***
*** starting iteration: 3; err: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768, 0.1476234091296792] ***
*** starting iteration: 4; err: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768, 0.1476234091296792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768, 0.1476234091296792, 0.1455143461143598] ***
*** starting iteration: 5; err: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768, 0.1476234091296792, 0.1455143461143598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768, 0.1476234091296792, 0.1455143461143598, 0.14452528770826756] ***
*** finished computation of 7 references, err: [Inf, 0.22895957613922654, 0.15775040868669749, 0.15042701655253768, 0.1476234091296792, 0.1455143461143598, 0.14452528770826756] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 41, 20]]
** centroid: 1, normalized-entropy: 0.9127341558073343, [(2, 41), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 2, 0]]
** centroid: 2, normalized-entropy: 0.20307392998664567, [(1, 61), (2, 2)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 10, 0]]
** centroid: 5, normalized-entropy: 0.49596907206183377, [(1, 82), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [16, 72, 0]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(1, 16), (2, 72)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 343,3 => 36,1 => 621), Dict(2 => 372,3 => 39,1 => 589))
[ Info: ===== scores for single classifier: {"micro_f1":0.951,"precision":0.951,"recall":0.951,"macro_recall":0.9577438219203924,"macro_f1":0.9007291954980324,"accuracy":0.951,"class_f1":{"2":0.9304964539007092,"3":0.7959183673469388,"1":0.9757727652464494},"class_precision":{"2":0.984984984984985,"3":0.6610169491525424,"1":0.9605263157894737},"class_recall":{"2":0.8817204301075269,"3":1.0,"1":0.9915110356536503}}
[ Info: ===== scores for 1: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9806640256555367,"macro_f1":0.9458826638071921,"accuracy":0.974,"class_f1":{"2":0.9649595687331537,"3":0.8863636363636364,"1":0.9863247863247864},"class_precision":{"2":0.9675675675675676,"3":0.7959183673469388,"1":0.9931153184165232},"class_recall":{"2":0.9623655913978495,"3":1.0,"1":0.9796264855687606}}
[ Info: ===== scores for 5: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9632979263709315,"macro_f1":0.9433202231838638,"accuracy":0.958,"class_f1":{"2":0.9444444444444444,"3":0.9156626506024097,"1":0.9698535745047373},"class_precision":{"2":0.9296875,"3":0.8636363636363636,"1":0.9842657342657343},"class_recall":{"2":0.9596774193548387,"3":0.9743589743589743,"1":0.9558573853989814}}
[ Info: ===== scores for 7: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9639581791534253,"macro_f1":0.946826009165464,"accuracy":0.958,"class_f1":{"2":0.9447368421052631,"3":0.9268292682926831,"1":0.9689119170984456},"class_precision":{"2":0.9252577319587629,"3":0.8837209302325582,"1":0.9859402460456942},"class_recall":{"2":0.9650537634408602,"3":0.9743589743589743,"1":0.9524617996604414}}
[ Info: ===== scores for 9: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9597136969802506,"macro_f1":0.9274155267098615,"accuracy":0.954,"class_f1":{"2":0.9388297872340426,"3":0.8735632183908045,"1":0.9698535745047373},"class_precision":{"2":0.9289473684210526,"3":0.7916666666666666,"1":0.9842657342657343},"class_recall":{"2":0.9489247311827957,"3":0.9743589743589743,"1":0.9558573853989814}}
[ Info: ===== scores for 11: {"micro_f1":0.956,"precision":0.956,"recall":0.956,"macro_recall":0.9605154325018502,"macro_f1":0.9228179509314233,"accuracy":0.956,"class_f1":{"2":0.9411764705882354,"3":0.853932584269663,"1":0.9733447979363714},"class_precision":{"2":0.9361702127659575,"3":0.76,"1":0.9860627177700348},"class_recall":{"2":0.946236559139785,"3":0.9743589743589743,"1":0.9609507640067911}}
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.955, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.955, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.951, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.951, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.974,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9806640256555367,"macro_f1":0.9458826638071921,"accuracy":0.974,"class_f1":{"2":0.9649595687331537,"3":0.8863636363636364,"1":0.9863247863247864},"class_precision":{"2":0.9675675675675676,"3":0.7959183673469388,"1":0.9931153184165232},"class_recall":{"2":0.9623655913978495,"3":1.0,"1":0.9796264855687606}}
Test Summary: | Pass  Total
AKNC          |    8      8
[331, 1, 1, 2, 2, 2, 1, 8, 2, 1, 7, 14, 19, 15, 5, 1, 3, 2, 12, 12, 8, 9, 8, 6, 2, 1, 7, 18, 1, 2, 2, 23, 7, 4, 5, 26, 39, 6, 6, 14, 4, 65, 2, 56, 6, 3, 4, 3, 37, 1, 21, 8, 20, 20, 6, 7, 42, 2, 26, 43, 6, 10, 11, 5, 3, 4, 2, 13, 2, 7, 18, 18, 4, 9, 1, 5, 8, 25, 34, 8, 2, 47, 8, 5, 30, 2, 25, 17, 18, 1, 4, 16, 10, 139, 8, 2, 10, 8, 11, 17, 3, 34, 6, 14, 9, 34, 18, 14, 14, 39, 21, 5, 5, 4, 8, 7, 2, 25, 19, 5, 37, 29, 39, 823, 49, 31, 2, 2, 38, 19, 9, 35, 44, 6, 7, 53, 116, 8, 5, 51, 120, 4, 12, 13, 40, 2, 8, 7, 24, 1, 4, 89, 46, 9, 64, 18, 11, 17, 48, 3, 1, 29, 17, 94, 65, 103, 1, 36, 18, 10, 2, 38, 25, 14, 180, 70, 12, 30, 16, 118, 154, 2, 38, 9, 6, 14, 51, 5, 72, 34, 10, 35, 25, 10, 10, 21, 12, 13, 32, 64, 245, 15, 7, 66, 21, 7, 6, 25, 6, 4, 6, 7, 54, 30, 5, 61, 130, 12, 27, 25, 20, 55, 41, 12, 171, 15, 18, 3, 67, 4, 4, 37, 21, 11, 21, 46, 61, 50, 23, 14, 18, 34, 19, 13, 29, 122, 26, 50, 7, 21, 8, 84, 9, 19, 89, 19, 121, 2, 298, 58, 110, 29, 16, 45, 718, 2, 50, 19, 54, 13, 61, 11, 7, 7, 26, 30, 2, 11, 124, 28, 11, 58, 11, 20, 17, 37, 142, 1, 8, 99, 93, 2, 22, 30, 15, 45, 16, 12, 124, 66]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5879999999999999, speedup = 0.2955412421717487, eval_ratio = 0.070327)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3957248263888889,"recall":0.38628472222222227,"f1":null,"seconds":0.00010438449680805206,"exhaustive_search_seconds":0.0002963673323392868,"evaluations":482.1171875,"distances_sum":1740.7147981683024}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5651041666666664,"recall":0.5651041666666664,"f1":null,"seconds":0.00018101558089256287,"exhaustive_search_seconds":0.0002963673323392868,"evaluations":652.34375,"distances_sum":1638.636851955787}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6527777777777778,"recall":0.6527777777777778,"f1":0.6527777777777778,"seconds":0.0004009343683719635,"exhaustive_search_seconds":0.0002963673323392868,"evaluations":764.28125,"distances_sum":1595.665453022887}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7404513888888884,"recall":0.7404513888888884,"f1":0.7404513888888884,"seconds":0.000586729496717453,"exhaustive_search_seconds":0.0002963673323392868,"evaluations":900.7578125,"distances_sum":1562.0391684894016}
KCenters.DeloneInvIndex> reached performance {"precision":0.810763888888888,"recall":0.810763888888888,"f1":0.810763888888888,"seconds":0.0006257537752389908,"exhaustive_search_seconds":0.0002963673323392868,"evaluations":1012.0,"distances_sum":1538.0225824042425}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7419999999999999, speedup = 0.7756082485812217, eval_ratio = 0.08907000000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
