Julia Version 1.5.0-DEV.616
Commit bc2fbef2bf (2020-04-12 16:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_aa93G8/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_aa93G8/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.06477518069646823 -0.02615414994008382; 0.06477518069646823 0.0 0.006676303490145807; 0.02615414994008382 -0.006676303490145807 0.0])
dAA = so3([0.0 -0.04640426483562193 0.045405151676847805; 0.04640426483562193 0.0 0.15652977320572378; -0.045405151676847805 -0.15652977320572378 0.0])
dAA = so3([0.0 -0.2977846835890068 -0.1519474422611459; 0.2977846835890068 0.0 0.06884467000514001; 0.1519474422611459 -0.06884467000514001 0.0])
dAA = Quaternion(0.9955064157053876, [-0.018481991313528692, -0.05968847752352518, -0.07115249775954649])
dAA = SO3([0.9955483004234791 -0.08851584286258846 0.032380967963413776; 0.0759389047203092 0.956783704557145 0.2807102161371859; -0.05582888386670366 -0.27700160334595786 0.9592461871021258])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9870240063208268 -0.1344514102626547 0.08778627013814735; 0.09069146004806306 0.9179417571521515 0.38620977402283735; -0.13250913183903612 -0.37323685342527974 0.9182241454157373]), [-0.06676303490145807, -0.2615414994008382, 0.6477518069646823])
xj = SE3(SO3([0.8935544263823122 0.3501753665642603 -0.2809585374110615; -0.32886894418399565 0.9365469611215189 0.12134664051943068; 0.30562346873870944 -0.01603129020490507 0.9520174857062685]), [-0.6884467000514001, -1.519474422611459, 2.977846835890068])
Dx = SE3(SO3([0.8116361645688654 0.432692596876119 -0.3924587277313908; -0.5360921310755244 0.8185974595860142 -0.2061635907676873; 0.23206025804269975 0.3777238617931411 0.8963663987841309]), [-1.0364593446743668, -1.9408002491728311, 1.5991482364940828])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
