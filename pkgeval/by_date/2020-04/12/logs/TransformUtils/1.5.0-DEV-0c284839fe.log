Julia Version 1.5.0-DEV.613
Commit 0c284839fe (2020-04-11 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_g7Ah8G/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_g7Ah8G/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.06483776305195792 0.05609591498384724; -0.06483776305195792 0.0 0.03265541011384804; -0.05609591498384724 -0.03265541011384804 0.0])
dAA = so3([0.0 0.2779265083071116 -0.06153085348035558; -0.2779265083071116 0.0 -0.023176041313528985; 0.06153085348035558 0.023176041313528985 0.0])
dAA = so3([0.0 0.08971761224790835 0.06273652646275228; -0.08971761224790835 0.0 0.12665297442809348; -0.06273652646275228 -0.12665297442809348 0.0])
dAA = Quaternion(0.9979945207395742, [-0.01834152172957175, 0.0012948380068717456, 0.06057102070270607])
dAA = SO3([0.996515161246979 0.07872557057968518 0.02756479533410247; -0.07644589315655176 0.9941902612537549 -0.07577433501976806; -0.033370028834345075 0.07340305828161374 0.9967439150606846])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.7573598856763912 0.632997650398336 -0.16037449347832572; -0.6415381503744771 0.7670886957789294 -0.0019324653362864808; 0.12179821502114972 0.10434992763949226 0.9870543487667204]), [-0.3265541011384804, 0.5609591498384724, -0.6483776305195792])
xj = SE3(SO3([0.9544440837603223 -0.2983839548795917 -0.001872550488664668; 0.2972977699365511 0.9503958290837276 0.09144290049537872; -0.02550543012129647 -0.08783384046407168 0.9958085606700013]), [-1.2665297442809347, 0.6273652646275227, -0.8971761224790834])
Dx = SE3(SO3([0.5290232848635533 -0.8463972252562457 0.06120540131968547; 0.8295531312679183 0.5309960997535015 0.17287204646836704; -0.17881824983979547 -0.04068020556852571 0.9830407694491289]), [-0.7848051139049055, -0.5700250981883488, -0.09495784331924328])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
