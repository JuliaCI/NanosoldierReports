Julia Version 1.5.0-DEV.616
Commit bc2fbef2bf (2020-04-12 16:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.2.4
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_vjTzPn/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_vjTzPn/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723254992144125
curgen: 20 fitness: 0.21723254992144125
curgen: 30 fitness: 0.21723254992144125
curgen: 40 fitness: 0.21723340374707809
curgen: 50 fitness: 0.21723340374707809
CoordinateCreature{Array{Float64,1}}([-0.22247697477493575], -0.21723340374707809) -0.22247697477493575 -0.21723340374707809
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579498029130316
curgen: 100 fitness: 3.2582875155865882
curgen: 150 fitness: 3.2582875155865882
curgen: 200 fitness: 3.2583473932207583
curgen: 250 fitness: 3.25837985392129
curgen: 300 fitness: 3.25837985392129
curgen: 350 fitness: 3.258392458126938
curgen: 400 fitness: 3.258486327148546
curgen: 450 fitness: 3.258486327148546
curgen: 500 fitness: 3.258487864367726
CoordinateCreature{Array{Float64,1}}([0.2224867159147706, 0.22250127951641274, 0.22273705637430774, 0.22244706458609242, 0.22266333830500856, -0.22248805524788662, -0.22252344915299388, 0.22240335780107645, -0.22244211959878762, 0.22254601164602725, 0.22302339122930356, 0.22259625988083356, -0.22238111482248066, -0.22267832187550313, 0.22255254685463155], -3.258487864367726) [0.2224867159147706, 0.22250127951641274, 0.22273705637430774, 0.22244706458609242, 0.22266333830500856, -0.22248805524788662, -0.22252344915299388, 0.22240335780107645, -0.22244211959878762, 0.22254601164602725, 0.22302339122930356, 0.22259625988083356, -0.22238111482248066, -0.22267832187550313, 0.22255254685463155] -3.258487864367726
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0010568317456716159
curgen: 100 fitness: -0.001047081375105563
curgen: 150 fitness: -0.000854634341436622
curgen: 200 fitness: -0.000854634341436622
curgen: 250 fitness: -0.000854634341436622
curgen: 300 fitness: -0.000854634341436622
curgen: 350 fitness: -0.000854634341436622
curgen: 400 fitness: -0.0007261757536127789
curgen: 450 fitness: -0.0007261757536127789
curgen: 500 fitness: -0.0007261757536127789
CoordinateCreature{Array{Float64,1}}([5.4632577544788674e-5, -0.0008477632165879645, 0.000436157364098864, 9.486226925500325e-6, -3.93186927669098e-8, 0.00013733053350364205, 6.427470347404791e-5, 0.001291538283676218, -0.0006624641404867008, 5.2632652779910543e-5, 0.0002889732396909265, -3.582724193119339e-7, -0.00014841571318548663, 0.00018248286066741682, 0.000690495508527729], 0.0007261757536127789) [5.4632577544788674e-5, -0.0008477632165879645, 0.000436157364098864, 9.486226925500325e-6, -3.93186927669098e-8, 0.00013733053350364205, 6.427470347404791e-5, 0.001291538283676218, -0.0006624641404867008, 5.2632652779910543e-5, 0.0002889732396909265, -3.582724193119339e-7, -0.00014841571318548663, 0.00018248286066741682, 0.000690495508527729] 0.0007261757536127789
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
