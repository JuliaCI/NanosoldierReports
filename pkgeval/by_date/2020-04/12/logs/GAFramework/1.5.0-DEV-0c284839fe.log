Julia Version 1.5.0-DEV.613
Commit 0c284839fe (2020-04-11 01:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_EWGxDs/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_EWGxDs/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172171764458706
curgen: 20 fitness: 0.2172171764458706
curgen: 30 fitness: 0.21723085584070395
curgen: 40 fitness: 0.21723085584070395
curgen: 50 fitness: 0.2172335793496294
CoordinateCreature{Array{Float64,1}}([-0.2225149430003553], -0.2172335793496294) -0.2225149430003553 -0.2172335793496294
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578306744338588
curgen: 100 fitness: 3.2579793425769474
curgen: 150 fitness: 3.2580334151864596
curgen: 200 fitness: 3.258101996276868
curgen: 250 fitness: 3.2581350692178526
curgen: 300 fitness: 3.258228313561875
curgen: 350 fitness: 3.258231235689922
curgen: 400 fitness: 3.258257991424873
curgen: 450 fitness: 3.2583720543645636
curgen: 500 fitness: 3.2584266405047457
CoordinateCreature{Array{Float64,1}}([-0.22266640407540217, -0.22258767812203797, 0.22251520068612868, 0.222834463592978, 0.22254443310200828, 0.2223290091929469, 0.22258361690024736, 0.22261583667415935, -0.22244423192181995, -0.2234775320941582, -0.22254886261123377, -0.2223634828582235, -0.22177687279318373, 0.22284991159858572, -0.2224393374728549], -3.2584266405047457) [-0.22266640407540217, -0.22258767812203797, 0.22251520068612868, 0.222834463592978, 0.22254443310200828, 0.2223290091929469, 0.22258361690024736, 0.22261583667415935, -0.22244423192181995, -0.2234775320941582, -0.22254886261123377, -0.2223634828582235, -0.22177687279318373, 0.22284991159858572, -0.2224393374728549] -3.2584266405047457
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0007175693023953045
curgen: 100 fitness: -0.0006263006822564421
curgen: 150 fitness: -0.0006263006822564421
curgen: 200 fitness: -0.0006263006822564421
curgen: 250 fitness: -0.0005437625611364183
curgen: 300 fitness: -0.0005437625611364183
curgen: 350 fitness: -0.0005279317403221739
curgen: 400 fitness: -0.0004933145455083832
curgen: 450 fitness: -0.00032993961889360435
curgen: 500 fitness: -0.00032993961889360435
CoordinateCreature{Array{Float64,1}}([0.00018671742406468038, -0.0001486982617032004, 0.00011916404056567755, -0.00036770999020075985, 0.00042971816099776763, -0.0007400649537596748, 0.00015935427624505106, -0.00038747101263111264, 7.248362530556723e-5, -0.00024004035639696745, -0.00023665851662760053, 0.0002119976864958528, 0.00018965230049442362, 0.0004574265338429162, 0.000373861843072233], 0.00032993961889360435) [0.00018671742406468038, -0.0001486982617032004, 0.00011916404056567755, -0.00036770999020075985, 0.00042971816099776763, -0.0007400649537596748, 0.00015935427624505106, -0.00038747101263111264, 7.248362530556723e-5, -0.00024004035639696745, -0.00023665851662760053, 0.0002119976864958528, 0.00018965230049442362, 0.0004574265338429162, 0.000373861843072233] 0.00032993961889360435
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
