Julia Version 1.5.0-DEV.616
Commit bc2fbef2bf (2020-04-12 16:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ProgressMeter ──────────────── v1.2.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Requires ───────────────────── v1.0.1
  Installed OrderedCollections ─────────── v1.1.0
  Installed StatsFuns ──────────────────── v0.9.4
  Installed StaticArrays ───────────────── v0.12.1
  Installed AdvancedHMC ────────────────── v0.2.21
  Installed DataStructures ─────────────── v0.17.12
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ArgCheck ───────────────────── v2.0.0
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed MacroTools ─────────────────── v0.5.5
  Installed DataAPI ────────────────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayLayouts ───────────────── v0.1.5
  Installed Rmath ──────────────────────── v0.6.1
  Installed Missings ───────────────────── v0.4.3
  Installed LazyArrays ─────────────────── v0.15.1
  Installed StatsBase ──────────────────── v0.32.2
  Installed Parameters ─────────────────── v0.12.0
  Installed FillArrays ─────────────────── v0.8.7
Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.21
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.21
  [dce04be8] + ArgCheck v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.12
  [1a297f60] + FillArrays v0.8.7
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.15.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+0.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+1.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+2.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
┌ Warning: Overlapping ranges for julia in "/usr/local/share/julia/registries/General/C/Cairo_jll/Compat.toml" for version 1.16.0+3.
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:157
Status `/tmp/jl_2hz5OB/Project.toml`
  [0bf59076] AdvancedHMC v0.2.21
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.6.7
  [31c24e10] Distributions v0.23.2
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [5078a376] LazyArrays v0.15.1
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [d96e819e] Parameters v0.12.0
  [92933f4c] ProgressMeter v1.2.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [fce5fe82] Turing v0.10.1
  [b8865327] UnicodePlots v1.2.0
  [e88e6eb3] Zygote v0.4.15
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_2hz5OB/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.5.6
  [1520ce14] AbstractTrees v0.3.2
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.21
  [5b7e9947] AdvancedMH v0.4.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.3
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.6.7
  [b99e7846] BinaryProvider v0.5.8
  [d360d2e6] ChainRulesCore v0.7.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.12
  [2b5f629d] DiffEqBase v6.27.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.4.10
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.5.0
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.7
  [6a86dc24] FiniteDiff v2.3.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.4.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.1.0
  [5078a376] LazyArrays v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.3.4
  [093fc24a] LightGraphs v1.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.0
  [c7f686f2] MCMCChains v3.0.11
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.33.0
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v1.0.1
  [f27b6e38] Polynomials v0.5.3
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.0
  [731186ca] RecursiveArrayTools v2.3.1
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.2.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.6.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.10.1
  [3a884ed6] UnPack v0.1.0
  [b8865327] UnicodePlots v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/haUrH/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.150077519
│   t_steps = 0.008048307
└   t_step / t_steps = 18.647091742399986
WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition combine_axes(Any, Any) in module Broadcast at broadcast.jl:474 overwritten in module DiffEqBase at /home/pkgeval/.julia/packages/DiffEqBase/MJVig/src/diffeqfastbc.jl:18.
  ** incremental compilation may be fatally broken for this module **

Sampling  0%|                               |  ETA: 6:33:36[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.0002552853256419471
  log_density:                   -10.73502366793193
  hamiltonian_energy:            16.52970162290472
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.273128714248767
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▊                           |  ETA: 0:00:23[K
  iterations:                    1432
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.692443168148731
  hamiltonian_energy:            21.844525161978225
  hamiltonian_energy_error:      -0.49630909385162525
  max_hamiltonian_energy_error:  -0.6389871363770716
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7221746572949171
  nom_step_size:                 0.7221746572949171
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8123111531167869, 0.9184 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:19[K
  iterations:                    1726
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9065389961755022
  log_density:                   -18.285653397407
  hamiltonian_energy:            22.253503141126473
  hamiltonian_energy_error:      0.3133525361034515
  max_hamiltonian_energy_error:  0.3133525361034515
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7910681130253683
  nom_step_size:                 0.7910681130253683
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8123111531167869, 0.9184 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 17%|█████▎                         |  ETA: 0:00:16[K
  iterations:                    2056
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6934107575763424
  log_density:                   -18.268364581408534
  hamiltonian_energy:            26.72397720294079
  hamiltonian_energy_error:      0.3906419520953257
  max_hamiltonian_energy_error:  0.7217537796747742
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 21%|██████▌                        |  ETA: 0:00:13[K
  iterations:                    2502
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9011644377563501
  log_density:                   -14.193970903462745
  hamiltonian_energy:            20.548491408056854
  hamiltonian_energy_error:      -0.03721762086606972
  max_hamiltonian_energy_error:  0.20190293295343764
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▊                       |  ETA: 0:00:11[K
  iterations:                    2986
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.5321388195673487
  log_density:                   -16.536230745637713
  hamiltonian_energy:            22.159950876130633
  hamiltonian_energy_error:      0.5102507151558484
  max_hamiltonian_energy_error:  0.8942706456549772
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 30%|█████████▎                     |  ETA: 0:00:09[K
  iterations:                    3564
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9528772359387031
  log_density:                   -14.207539735927837
  hamiltonian_energy:            21.283179823416365
  hamiltonian_energy_error:      -0.2614242112441083
  max_hamiltonian_energy_error:  -0.40699771600117174
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▋                    |  ETA: 0:00:07[K
  iterations:                    4129
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9825443218409495
  log_density:                   -15.081829502195092
  hamiltonian_energy:            19.61891653516477
  hamiltonian_energy_error:      0.047674813430550245
  max_hamiltonian_energy_error:  0.0766638597986038
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 38%|███████████▉                   |  ETA: 0:00:06[K
  iterations:                    4617
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9965690478522345
  log_density:                   -11.505351537149634
  hamiltonian_energy:            18.373156980386828
  hamiltonian_energy_error:      -0.5515139648386764
  max_hamiltonian_energy_error:  -0.5515139648386764
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 43%|█████████████▎                 |  ETA: 0:00:05[K
  iterations:                    5117
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8130120610277848
  log_density:                   -16.05724962911636
  hamiltonian_energy:            20.978930120782522
  hamiltonian_energy_error:      0.27423449448862414
  max_hamiltonian_energy_error:  0.5519925927451226
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:05[K
  iterations:                    5598
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7615422143862987
  log_density:                   -14.561852169561977
  hamiltonian_energy:            17.284770013649307
  hamiltonian_energy_error:      0.35820221621262505
  max_hamiltonian_energy_error:  0.4830624280796805
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:04[K
  iterations:                    6095
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9726408462000885
  log_density:                   -12.19984206388559
  hamiltonian_energy:            13.357703634454133
  hamiltonian_energy_error:      0.06906438318208075
  max_hamiltonian_energy_error:  -0.13899325290579867
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 56%|█████████████████▎             |  ETA: 0:00:03[K
  iterations:                    6676
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9886184673296886
  log_density:                   -14.190047577823034
  hamiltonian_energy:            15.878424747567978
  hamiltonian_energy_error:      0.08302376937580824
  max_hamiltonian_energy_error:  -0.28908976183301327
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▊            |  ETA: 0:00:03[K
  iterations:                    7242
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9987413134774226
  log_density:                   -12.952461768265769
  hamiltonian_energy:            15.844790572606351
  hamiltonian_energy_error:      0.008849850318679131
  max_hamiltonian_energy_error:  -0.0485124702908859
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 65%|████████████████████           |  ETA: 0:00:02[K
  iterations:                    7752
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8289469496439855
  log_density:                   -12.843025288776445
  hamiltonian_energy:            19.075538442534253
  hamiltonian_energy_error:      -0.04779778288248693
  max_hamiltonian_energy_error:  0.46290218036851627
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▎         |  ETA: 0:00:02[K
  iterations:                    8250
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9679979927212089
  log_density:                   -11.685615928699669
  hamiltonian_energy:            14.535937669834585
  hamiltonian_energy_error:      -0.005018308323167631
  max_hamiltonian_energy_error:  0.0657716325139468
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 74%|██████████████████████▉        |  ETA: 0:00:02[K
  iterations:                    8832
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -15.559915139270108
  hamiltonian_energy:            19.936846416887057
  hamiltonian_energy_error:      -0.001696216405644435
  max_hamiltonian_energy_error:  -0.13675435402129565
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 78%|████████████████████████▎      |  ETA: 0:00:01[K
  iterations:                    9409
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9902963201734083
  log_density:                   -10.371263665544205
  hamiltonian_energy:            14.799851207487576
  hamiltonian_energy_error:      -0.38045894918557366
  max_hamiltonian_energy_error:  -0.38045894918557366
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 83%|█████████████████████████▋     |  ETA: 0:00:01[K
  iterations:                    9906
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8945902733523087
  log_density:                   -13.249021252430307
  hamiltonian_energy:            16.306552378902257
  hamiltonian_energy_error:      0.12590014916900927
  max_hamiltonian_energy_error:  0.20352785426923958
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 87%|███████████████████████████    |  ETA: 0:00:01[K
  iterations:                    10443
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9980010534184827
  log_density:                   -12.777801042637199
  hamiltonian_energy:            18.77910869929783
  hamiltonian_energy_error:      -0.3981585314899192
  max_hamiltonian_energy_error:  -0.4458778974366169
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 91%|████████████████████████████▎  |  ETA: 0:00:00[K
  iterations:                    10919
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.647931069667482
  hamiltonian_energy:            19.011565545160124
  hamiltonian_energy_error:      -0.18905213615697747
  max_hamiltonian_energy_error:  -0.19409714097564645
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 96%|█████████████████████████████▊ |  ETA: 0:00:00[K
  iterations:                    11515
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9791258365561326
  log_density:                   -10.622206236999968
  hamiltonian_energy:            13.518818461060885
  hamiltonian_energy_error:      -0.12048593270034758
  max_hamiltonian_energy_error:  -0.12048593270034758
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:05[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9891484524888671
  log_density:                   -14.029579642830724
  hamiltonian_energy:            21.470078882241832
  hamiltonian_energy_error:      -0.5357119329598703
  max_hamiltonian_energy_error:  -0.7472636378508035
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.683663584541453
  nom_step_size:                 0.683663584541453
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9753797758152976, 1.0005 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 5.233914535 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9753797758152976, 1.0005 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.684), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.1225821774087745
└   average_acceptance_rate = 0.8722064896899331
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.139153957 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠈⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⢠⢆⠀⠀⡜⢇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⢠⢆⠀⠀⠀⢠⠃⢱⠀⠀⡎⠈⢆⡜⠀⠈⡆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠈⢢⣀⣀⠇⠀⠀⢇⡸⠀⠀⠈⠁⠀⠀⠘│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠘⠇⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠀⠀⠀⣀⠤⠒⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢀⠔⢆⢀⠎⢀⠤⠤⠔⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠣⢄⡠⠓⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2874   2874
    Testing AdvancedHMC tests passed 
