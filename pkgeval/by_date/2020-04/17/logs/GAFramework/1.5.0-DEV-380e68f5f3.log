Julia Version 1.5.0-DEV.640
Commit 380e68f5f3 (2020-04-17 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_cftByZ/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_cftByZ/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21718702936167245
curgen: 20 fitness: 0.21721661411771861
curgen: 30 fitness: 0.2172207608367184
curgen: 40 fitness: 0.21722156071027388
curgen: 50 fitness: 0.2172325058481572
CoordinateCreature{Array{Float64,1}}([-0.22270744293535022], -0.2172325058481572) -0.22270744293535022 -0.2172325058481572
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258406071620762
curgen: 100 fitness: 3.258451301901455
curgen: 150 fitness: 3.2584754574937924
curgen: 200 fitness: 3.25847560161222
curgen: 250 fitness: 3.25847560161222
curgen: 300 fitness: 3.25847560161222
curgen: 350 fitness: 3.258476289660946
curgen: 400 fitness: 3.258476289660946
curgen: 450 fitness: 3.2584790714937326
curgen: 500 fitness: 3.2584836005163593
CoordinateCreature{Array{Float64,1}}([-0.22259194298830995, 0.22254125270546232, 0.2225732393870327, 0.22212233926748107, -0.22255343594562296, 0.22245157841165042, -0.22248297879179652, 0.222326554603386, 0.22234258012812344, -0.22264713716730467, -0.22252967818419575, -0.22264612013610166, -0.22264595570958157, -0.22275549537076267, -0.2228779729789819], -3.2584836005163593) [-0.22259194298830995, 0.22254125270546232, 0.2225732393870327, 0.22212233926748107, -0.22255343594562296, 0.22245157841165042, -0.22248297879179652, 0.222326554603386, 0.22234258012812344, -0.22264713716730467, -0.22252967818419575, -0.22264612013610166, -0.22264595570958157, -0.22275549537076267, -0.2228779729789819] -3.2584836005163593
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0036817778746183194
curgen: 100 fitness: -0.0009684148216138055
curgen: 150 fitness: -0.0008516666675859597
curgen: 200 fitness: -0.0008516666675859597
curgen: 250 fitness: -0.0007824039167019237
curgen: 300 fitness: -0.0007694285821742142
curgen: 350 fitness: -0.0007647191460478098
curgen: 400 fitness: -0.0005288318168936712
curgen: 450 fitness: -0.0005288318168936712
curgen: 500 fitness: -0.0005288318168936712
CoordinateCreature{Array{Float64,1}}([-0.0002824385015762145, -0.0005675438448434808, -9.946658319123086e-5, -9.269479165081927e-5, -3.804546982984883e-5, 5.202615952821675e-5, 0.0005193504751664479, -0.0002834726612919461, -0.0003489596066306229, 0.000660285074957406, -0.00022630656679027954, 0.00013596897053347323, 0.0004107517503757356, -0.0010364713026129494, -0.00014336651096153092], 0.0005288318168936712) [-0.0002824385015762145, -0.0005675438448434808, -9.946658319123086e-5, -9.269479165081927e-5, -3.804546982984883e-5, 5.202615952821675e-5, 0.0005193504751664479, -0.0002834726612919461, -0.0003489596066306229, 0.000660285074957406, -0.00022630656679027954, 0.00013596897053347323, 0.0004107517503757356, -0.0010364713026129494, -0.00014336651096153092] 0.0005288318168936712
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
