Julia Version 1.5.0-DEV.638
Commit b0f3403f06 (2020-04-16 01:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed DistributionsAD ────────────── v0.5.0
  Installed OrderedCollections ─────────── v1.1.0
  Installed OpenBLAS_jll ───────────────── v0.3.9+2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Arpack ─────────────────────── v0.4.0
  Installed NNlib ──────────────────────── v0.6.6
  Installed Rmath ──────────────────────── v0.6.1
  Installed Adapt ──────────────────────── v1.0.1
  Installed RecipesBase ────────────────── v1.0.0
  Installed Combinatorics ──────────────── v1.0.0
  Installed Compat ─────────────────────── v3.8.0
  Installed SpecialFunctions ───────────── v0.10.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed CommonSubexpressions ───────── v0.2.0
  Installed QuadGK ─────────────────────── v2.3.1
  Installed StatsFuns ──────────────────── v0.9.4
  Installed DataAPI ────────────────────── v1.1.0
  Installed ForwardDiff ────────────────── v0.10.10
  Installed StaticArrays ───────────────── v0.12.1
  Installed Tracker ────────────────────── v0.2.6
  Installed ZygoteRules ────────────────── v0.2.0
  Installed Missings ───────────────────── v0.4.3
  Installed Polynomials ────────────────── v0.5.3
  Installed MacroTools ─────────────────── v0.5.5
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed DiffResults ────────────────── v1.0.2
  Installed Zygote ─────────────────────── v0.4.15
  Installed PDMats ─────────────────────── v0.9.12
  Installed StatsBase ──────────────────── v0.33.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ArrayLayouts ───────────────── v0.2.4
  Installed FillArrays ─────────────────── v0.8.7
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed Requires ───────────────────── v1.0.1
  Installed IRTools ────────────────────── v0.3.1
  Installed Distributions ──────────────── v0.23.2
  Installed BinaryProvider ─────────────── v0.5.8
  Installed DataStructures ─────────────── v0.17.12
Updating `~/.julia/environments/v1.5/Project.toml`
  [ced4e74d] + DistributionsAD v0.5.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.1
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4c555306] + ArrayLayouts v0.2.4
  [b99e7846] + BinaryProvider v0.5.8
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v3.8.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.12
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [31c24e10] + Distributions v0.23.2
  [ced4e74d] + DistributionsAD v0.5.0
  [1a297f60] + FillArrays v0.8.7
  [f6369f11] + ForwardDiff v0.10.10
  [7869d1d1] + IRTools v0.3.1
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.3
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.3
  [4536629a] + OpenBLAS_jll v0.3.9+2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.12
  [f27b6e38] + Polynomials v0.5.3
  [1fd47b50] + QuadGK v2.3.1
  [3cdcf5f2] + RecipesBase v1.0.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.4
  [9f7883ad] + Tracker v0.2.6
  [e88e6eb3] + Zygote v0.4.15
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing DistributionsAD
Status `/tmp/jl_0xh3tx/Project.toml`
  [861a8166] Combinatorics v1.0.0
  [34da2185] Compat v3.8.0
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.0
  [1a297f60] FillArrays v0.8.7
  [26cc04aa] FiniteDifferences v0.9.6
  [f6369f11] ForwardDiff v0.10.10
  [1914dd2f] MacroTools v0.5.5
  [77ba4419] NaNMath v0.3.3
  [90014a1f] PDMats v0.9.12
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.2.0
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.4
  [9f7883ad] Tracker v0.2.6
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_0xh3tx/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4c555306] ArrayLayouts v0.2.4
  [b99e7846] BinaryProvider v0.5.8
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.12
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.0
  [1a297f60] FillArrays v0.8.7
  [26cc04aa] FiniteDifferences v0.9.6
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [7869d1d1] IRTools v0.3.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.9+2
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.12
  [f27b6e38] Polynomials v0.5.3
  [1fd47b50] QuadGK v2.3.1
  [3cdcf5f2] RecipesBase v1.0.0
  [ae029012] Requires v1.0.1
  [37e2e3b7] ReverseDiff v1.2.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.4
  [9f7883ad] Tracker v0.2.6
  [e88e6eb3] Zygote v0.4.15
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
WARNING: could not import Compiler.just_construct_ssa into Wrap

==================================================

Testing: Univariate discrete distributions

[ Info: Testing: Bernoulli
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:86 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:87 =#
│         BetaBinomial(10, a, b)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:89 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:90 =#
│         Binomial(10, p)
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:92 =#
│         Categorical(p / sum(p))
└     end
┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:93 =#
│         Categorical(p / sum(p))
└     end
[ Info: Testing: Geometric
[ Info: Testing: NegativeBinomial
[ Info: Testing: Poisson
[ Info: Testing: Skellam
[ Info: Testing: PoissonBinomial
[ Info: Testing: TuringPoissonBinomial
Test Summary:                     | Pass  Total
Univariate discrete distributions |  102    102

==================================================

Testing: Univariate continuous distributions

[ Info: Testing: Arcsine
[ Info: Testing: Beta
[ Info: Testing: BetaPrime
[ Info: Testing: Biweight
[ Info: Testing: Cauchy
[ Info: Testing: Chi
[ Info: Testing: Chisq
[ Info: Testing: Cosine
[ Info: Testing: Epanechnikov
┌ Info: Testing: s->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:162 =#
│         Erlang(1, s)
└     end
[ Info: Testing: Exponential
[ Info: Testing: FDist
[ Info: Testing: Frechet
[ Info: Testing: Gamma
[ Info: Testing: GeneralizedExtremeValue
[ Info: Testing: GeneralizedPareto
[ Info: Testing: Gumbel
[ Info: Testing: InverseGamma
[ Info: Testing: InverseGaussian
[ Info: Testing: Kolmogorov
[ Info: Testing: Laplace
[ Info: Testing: Levy
┌ Info: Testing: (a, b)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:233 =#
│         LocationScale(a, b, Normal())
└     end
[ Info: Testing: Logistic
[ Info: Testing: LogitNormal
[ Info: Testing: LogNormal
[ Info: Testing: Normal
[ Info: Testing: NormalCanon
[ Info: Testing: NormalInverseGaussian
[ Info: Testing: Pareto
[ Info: Testing: PGeneralizedGaussian
[ Info: Testing: Rayleigh
[ Info: Testing: Semicircle
[ Info: Testing: SymTriangularDist
[ Info: Testing: TDist
[ Info: Testing: TriangularDist
[ Info: Testing: Triweight
┌ Info: Testing: (mu, sigma, l, u)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:308 =#
│         truncated(Normal(mu, sigma), l, u)
└     end
[ Info: Testing: Uniform
[ Info: Testing: TuringUniform
[ Info: Testing: VonMises
[ Info: Testing: Weibull
Test Summary:                       | Pass  Total
Univariate continuous distributions | 1107   1107

==================================================

Testing: Multivariate discrete distributions

┌ Info: Testing: p->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:350 =#
│         Multinomial(2, p / sum(p))
└     end
┌ Info: Testing: (var"##x#410",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#410"), 2)
└     end
┌ Info: Testing: (var"##x#411",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#411"), 2)
└     end
┌ Info: Testing: (var"##x#412", var"##x#413")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:86 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#412", var"##x#413"), 2)
└     end
┌ Info: Testing: (var"##x#414",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:89 =#
│                     Binomial(10, p)
│                 end))(var"##x#414"), 2)
└     end
┌ Info: Testing: (var"##x#415",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:92 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#415"), 2)
└     end
┌ Info: Testing: (var"##x#416",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Geometric(var"##x#416"), 2)
└     end
┌ Info: Testing: (var"##x#417", var"##x#418")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(NegativeBinomial(var"##x#417", var"##x#418"), 2)
└     end
┌ Info: Testing: (var"##x#419",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Poisson(var"##x#419"), 2)
└     end
┌ Info: Testing: (var"##x#420", var"##x#421")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Skellam(var"##x#420", var"##x#421"), 2)
└     end
┌ Info: Testing: (var"##x#422",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(PoissonBinomial(var"##x#422"), 2)
└     end
┌ Info: Testing: (var"##x#423",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(TuringPoissonBinomial(var"##x#423"), 2)
└     end
┌ Info: Testing: (var"##x#424",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#424"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#425",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#425"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#426", var"##x#427")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:86 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#426", var"##x#427"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#428",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:89 =#
│                             Binomial(10, p)
│                         end))(var"##x#428"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#429",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:92 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#429"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#430",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Geometric(var"##x#430"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#431", var"##x#432")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#431", var"##x#432"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#433",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Poisson(var"##x#433"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#434", var"##x#435")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Skellam(var"##x#434", var"##x#435"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#436",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#436"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#437",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#437"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#438",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#438"), 2)
└     end
┌ Info: Testing: (var"##x#439",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Bernoulli(var"##x#439"), 2)
└     end
┌ Info: Testing: (var"##x#440", var"##x#441")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:86 =#
│                     BetaBinomial(10, a, b)
│                 end))(var"##x#440", var"##x#441"), 2)
└     end
┌ Info: Testing: (var"##x#442",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:89 =#
│                     Binomial(10, p)
│                 end))(var"##x#442"), 2)
└     end
┌ Info: Testing: (var"##x#443",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(((p->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:92 =#
│                     Categorical(p / sum(p))
│                 end))(var"##x#443"), 2)
└     end
┌ Info: Testing: (var"##x#444",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Geometric(var"##x#444"), 2)
└     end
┌ Info: Testing: (var"##x#445", var"##x#446")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(NegativeBinomial(var"##x#445", var"##x#446"), 2)
└     end
┌ Info: Testing: (var"##x#447",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Poisson(var"##x#447"), 2)
└     end
┌ Info: Testing: (var"##x#448", var"##x#449")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Skellam(var"##x#448", var"##x#449"), 2)
└     end
┌ Info: Testing: (var"##x#450",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(PoissonBinomial(var"##x#450"), 2)
└     end
┌ Info: Testing: (var"##x#451",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(TuringPoissonBinomial(var"##x#451"), 2)
└     end
┌ Info: Testing: (var"##x#452",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#452"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#453",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Bernoulli(var"##x#453"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#454", var"##x#455")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:86 =#
│                             BetaBinomial(10, a, b)
│                         end))(var"##x#454", var"##x#455"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#456",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:89 =#
│                             Binomial(10, p)
│                         end))(var"##x#456"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#457",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((p->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:92 =#
│                             Categorical(p / sum(p))
│                         end))(var"##x#457"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#458",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Geometric(var"##x#458"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#459", var"##x#460")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NegativeBinomial(var"##x#459", var"##x#460"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#461",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Poisson(var"##x#461"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#462", var"##x#463")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Skellam(var"##x#462", var"##x#463"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#464",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PoissonBinomial(var"##x#464"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#465",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringPoissonBinomial(var"##x#465"), prod((2,))), 2))
└     end
Test Summary:                       | Pass  Total
Multivariate discrete distributions |  207    207

==================================================

Testing: Multivariate continuous distributions

┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Arcsine(), 2)
└     end
┌ Info: Testing: (var"##x#466",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Arcsine(var"##x#466"), 2)
└     end
┌ Info: Testing: (var"##x#467", var"##x#468")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Arcsine(var"##x#467", var"##x#468"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Beta(), 2)
└     end
┌ Info: Testing: (var"##x#469",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Beta(var"##x#469"), 2)
└     end
┌ Info: Testing: (var"##x#470", var"##x#471")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Beta(var"##x#470", var"##x#471"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(BetaPrime(), 2)
└     end
┌ Info: Testing: (var"##x#472",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(BetaPrime(var"##x#472"), 2)
└     end
┌ Info: Testing: (var"##x#473", var"##x#474")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(BetaPrime(var"##x#473", var"##x#474"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Biweight(), 2)
└     end
┌ Info: Testing: (var"##x#475",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Biweight(var"##x#475"), 2)
└     end
┌ Info: Testing: (var"##x#476", var"##x#477")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Biweight(var"##x#476", var"##x#477"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Cauchy(), 2)
└     end
┌ Info: Testing: (var"##x#478",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Cauchy(var"##x#478"), 2)
└     end
┌ Info: Testing: (var"##x#479", var"##x#480")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Cauchy(var"##x#479", var"##x#480"), 2)
└     end
┌ Info: Testing: (var"##x#481",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Chi(var"##x#481"), 2)
└     end
┌ Info: Testing: (var"##x#482",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Chisq(var"##x#482"), 2)
└     end
┌ Info: Testing: (var"##x#483", var"##x#484")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Cosine(var"##x#483", var"##x#484"), 2)
└     end
┌ Info: Testing: (var"##x#485", var"##x#486")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Epanechnikov(var"##x#485", var"##x#486"), 2)
└     end
┌ Info: Testing: (var"##x#487",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(((s->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:162 =#
│                     Erlang(1, s)
│                 end))(var"##x#487"), 2)
└     end
┌ Info: Testing: (var"##x#488",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Exponential(var"##x#488"), 2)
└     end
┌ Info: Testing: (var"##x#489", var"##x#490")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(FDist(var"##x#489", var"##x#490"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Frechet(), 2)
└     end
┌ Info: Testing: (var"##x#491",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Frechet(var"##x#491"), 2)
└     end
┌ Info: Testing: (var"##x#492", var"##x#493")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Frechet(var"##x#492", var"##x#493"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Gamma(), 2)
└     end
┌ Info: Testing: (var"##x#494",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Gamma(var"##x#494"), 2)
└     end
┌ Info: Testing: (var"##x#495", var"##x#496")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Gamma(var"##x#495", var"##x#496"), 2)
└     end
┌ Info: Testing: (var"##x#497", var"##x#498", var"##x#499")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(GeneralizedExtremeValue(var"##x#497", var"##x#498", var"##x#499"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(GeneralizedPareto(), 2)
└     end
┌ Info: Testing: (var"##x#500", var"##x#501")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(GeneralizedPareto(var"##x#500", var"##x#501"), 2)
└     end
┌ Info: Testing: (var"##x#502", var"##x#503", var"##x#504")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(GeneralizedPareto(var"##x#502", var"##x#503", var"##x#504"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Gumbel(), 2)
└     end
┌ Info: Testing: (var"##x#505",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Gumbel(var"##x#505"), 2)
└     end
┌ Info: Testing: (var"##x#506", var"##x#507")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Gumbel(var"##x#506", var"##x#507"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(InverseGamma(), 2)
└     end
┌ Info: Testing: (var"##x#508",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(InverseGamma(var"##x#508"), 2)
└     end
┌ Info: Testing: (var"##x#509", var"##x#510")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(InverseGamma(var"##x#509", var"##x#510"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(InverseGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#511",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(InverseGaussian(var"##x#511"), 2)
└     end
┌ Info: Testing: (var"##x#512", var"##x#513")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(InverseGaussian(var"##x#512", var"##x#513"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Kolmogorov(), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Laplace(), 2)
└     end
┌ Info: Testing: (var"##x#514",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Laplace(var"##x#514"), 2)
└     end
┌ Info: Testing: (var"##x#515", var"##x#516")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Laplace(var"##x#515", var"##x#516"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Levy(), 2)
└     end
┌ Info: Testing: (var"##x#517",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Levy(var"##x#517"), 2)
└     end
┌ Info: Testing: (var"##x#518", var"##x#519")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Levy(var"##x#518", var"##x#519"), 2)
└     end
┌ Info: Testing: (var"##x#520", var"##x#521")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist((((a, b)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:233 =#
│                     LocationScale(a, b, Normal())
│                 end))(var"##x#520", var"##x#521"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Logistic(), 2)
└     end
┌ Info: Testing: (var"##x#522",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Logistic(var"##x#522"), 2)
└     end
┌ Info: Testing: (var"##x#523", var"##x#524")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Logistic(var"##x#523", var"##x#524"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(LogitNormal(), 2)
└     end
┌ Info: Testing: (var"##x#525",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(LogitNormal(var"##x#525"), 2)
└     end
┌ Info: Testing: (var"##x#526", var"##x#527")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(LogitNormal(var"##x#526", var"##x#527"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(LogNormal(), 2)
└     end
┌ Info: Testing: (var"##x#528",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(LogNormal(var"##x#528"), 2)
└     end
┌ Info: Testing: (var"##x#529", var"##x#530")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(LogNormal(var"##x#529", var"##x#530"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Normal(), 2)
└     end
┌ Info: Testing: (var"##x#531",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Normal(var"##x#531"), 2)
└     end
┌ Info: Testing: (var"##x#532", var"##x#533")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Normal(var"##x#532", var"##x#533"), 2)
└     end
┌ Info: Testing: (var"##x#534", var"##x#535")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(NormalCanon(var"##x#534", var"##x#535"), 2)
└     end
┌ Info: Testing: (var"##x#536", var"##x#537", var"##x#538", var"##x#539")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(NormalInverseGaussian(var"##x#536", var"##x#537", var"##x#538", var"##x#539"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Pareto(), 2)
└     end
┌ Info: Testing: (var"##x#540",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Pareto(var"##x#540"), 2)
└     end
┌ Info: Testing: (var"##x#541", var"##x#542")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Pareto(var"##x#541", var"##x#542"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(PGeneralizedGaussian(), 2)
└     end
┌ Info: Testing: (var"##x#543", var"##x#544", var"##x#545")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(PGeneralizedGaussian(var"##x#543", var"##x#544", var"##x#545"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Rayleigh(), 2)
└     end
┌ Info: Testing: (var"##x#546",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Rayleigh(var"##x#546"), 2)
└     end
┌ Info: Testing: (var"##x#547",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Semicircle(var"##x#547"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(SymTriangularDist(), 2)
└     end
┌ Info: Testing: (var"##x#548",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(SymTriangularDist(var"##x#548"), 2)
└     end
┌ Info: Testing: (var"##x#549", var"##x#550")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(SymTriangularDist(var"##x#549", var"##x#550"), 2)
└     end
┌ Info: Testing: (var"##x#551",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(TDist(var"##x#551"), 2)
└     end
┌ Info: Testing: (var"##x#552", var"##x#553")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Triweight(var"##x#552", var"##x#553"), 2)
└     end
┌ Info: Testing: (var"##x#554", var"##x#555", var"##x#556", var"##x#557")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist((((mu, sigma, l, u)->begin
│                     #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:308 =#
│                     truncated(Normal(mu, sigma), l, u)
│                 end))(var"##x#554", var"##x#555", var"##x#556", var"##x#557"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Uniform(), 2)
└     end
┌ Info: Testing: (var"##x#558", var"##x#559")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Uniform(var"##x#558", var"##x#559"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(TuringUniform(), 2)
└     end
┌ Info: Testing: (var"##x#560", var"##x#561")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(TuringUniform(var"##x#560", var"##x#561"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Weibull(), 2)
└     end
┌ Info: Testing: (var"##x#562",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Weibull(var"##x#562"), 2)
└     end
┌ Info: Testing: (var"##x#563", var"##x#564")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:22 =#
│         filldist(Weibull(var"##x#563", var"##x#564"), 2)
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Arcsine(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#565",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Arcsine(var"##x#565"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#566", var"##x#567")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Arcsine(var"##x#566", var"##x#567"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Beta(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#568",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Beta(var"##x#568"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#569", var"##x#570")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Beta(var"##x#569", var"##x#570"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(BetaPrime(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#571",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(BetaPrime(var"##x#571"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#572", var"##x#573")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(BetaPrime(var"##x#572", var"##x#573"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Biweight(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#574",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Biweight(var"##x#574"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#575", var"##x#576")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Biweight(var"##x#575", var"##x#576"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cauchy(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#577",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cauchy(var"##x#577"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#578", var"##x#579")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cauchy(var"##x#578", var"##x#579"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#580",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Chi(var"##x#580"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#581",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Chisq(var"##x#581"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#582", var"##x#583")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Cosine(var"##x#582", var"##x#583"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#584", var"##x#585")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Epanechnikov(var"##x#584", var"##x#585"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#586",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(((s->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:162 =#
│                             Erlang(1, s)
│                         end))(var"##x#586"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#587",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Exponential(var"##x#587"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#588", var"##x#589")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(FDist(var"##x#588", var"##x#589"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Frechet(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#590",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Frechet(var"##x#590"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#591", var"##x#592")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Frechet(var"##x#591", var"##x#592"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gamma(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#593",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gamma(var"##x#593"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#594", var"##x#595")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gamma(var"##x#594", var"##x#595"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#596", var"##x#597", var"##x#598")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedExtremeValue(var"##x#596", var"##x#597", var"##x#598"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedPareto(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#599", var"##x#600")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedPareto(var"##x#599", var"##x#600"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#601", var"##x#602", var"##x#603")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(GeneralizedPareto(var"##x#601", var"##x#602", var"##x#603"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gumbel(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#604",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gumbel(var"##x#604"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#605", var"##x#606")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Gumbel(var"##x#605", var"##x#606"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGamma(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#607",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGamma(var"##x#607"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#608", var"##x#609")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGamma(var"##x#608", var"##x#609"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGaussian(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#610",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGaussian(var"##x#610"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#611", var"##x#612")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(InverseGaussian(var"##x#611", var"##x#612"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Kolmogorov(), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Laplace(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#613",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Laplace(var"##x#613"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#614", var"##x#615")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Laplace(var"##x#614", var"##x#615"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Levy(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#616",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Levy(var"##x#616"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#617", var"##x#618")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Levy(var"##x#617", var"##x#618"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#619", var"##x#620")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((a, b)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:233 =#
│                             LocationScale(a, b, Normal())
│                         end))(var"##x#619", var"##x#620"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Logistic(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#621",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Logistic(var"##x#621"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#622", var"##x#623")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Logistic(var"##x#622", var"##x#623"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogitNormal(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#624",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogitNormal(var"##x#624"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#625", var"##x#626")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogitNormal(var"##x#625", var"##x#626"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogNormal(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#627",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogNormal(var"##x#627"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#628", var"##x#629")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(LogNormal(var"##x#628", var"##x#629"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Normal(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#630",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Normal(var"##x#630"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#631", var"##x#632")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Normal(var"##x#631", var"##x#632"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#633", var"##x#634")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NormalCanon(var"##x#633", var"##x#634"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#635", var"##x#636", var"##x#637", var"##x#638")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(NormalInverseGaussian(var"##x#635", var"##x#636", var"##x#637", var"##x#638"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Pareto(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#639",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Pareto(var"##x#639"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#640", var"##x#641")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Pareto(var"##x#640", var"##x#641"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PGeneralizedGaussian(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#642", var"##x#643", var"##x#644")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(PGeneralizedGaussian(var"##x#642", var"##x#643", var"##x#644"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Rayleigh(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#645",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Rayleigh(var"##x#645"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#646",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Semicircle(var"##x#646"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(SymTriangularDist(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#647",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(SymTriangularDist(var"##x#647"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#648", var"##x#649")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(SymTriangularDist(var"##x#648", var"##x#649"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#650",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TDist(var"##x#650"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#651", var"##x#652")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Triweight(var"##x#651", var"##x#652"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#653", var"##x#654", var"##x#655", var"##x#656")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill((((mu, sigma, l, u)->begin
│                             #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:308 =#
│                             truncated(Normal(mu, sigma), l, u)
│                         end))(var"##x#653", var"##x#654", var"##x#655", var"##x#656"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Uniform(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#657", var"##x#658")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Uniform(var"##x#657", var"##x#658"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringUniform(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#659", var"##x#660")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(TuringUniform(var"##x#659", var"##x#660"), prod((2,))), 2))
└     end
┌ Info: Testing: ()->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Weibull(), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#661",)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Weibull(var"##x#661"), prod((2,))), 2))
└     end
┌ Info: Testing: (var"##x#662", var"##x#663")->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:26 =#
│         arraydist(reshape(fill(Weibull(var"##x#662", var"##x#663"), prod((2,))), 2))
└     end
[ Info: Testing: MvNormal
┌ Info: Testing: (m, v)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:370 =#
│         MvNormal(m, v * I)
└     end
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:374 =#
│         MvNormal(dim, cov_num)
└     end
[ Info: Testing: TuringMvNormal
┌ Info: Testing: (m, v)->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:379 =#
│         TuringMvNormal(m, v * I)
└     end
┌ Info: Testing: cov_num->begin
│         #= /home/pkgeval/.julia/packages/DistributionsAD/0NPGX/test/distributions.jl:383 =#
│         TuringMvNormal(dim, cov_num)
└     end
[ Info: Testing: MvLogNormal

signal (15): Terminated
in expression starting at none:16
