Julia Version 1.5.0-DEV.640
Commit 380e68f5f3 (2020-04-17 17:55 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_pI6Zyy/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_pI6Zyy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.10775652507831526 -0.009409488849345423; 0.10775652507831526 0.0 0.07614279143876773; 0.009409488849345423 -0.07614279143876773 0.0])
dAA = so3([0.0 0.2075526102713921 -0.0477575834452659; -0.2075526102713921 0.0 -0.008531356551862962; 0.0477575834452659 0.008531356551862962 0.0])
dAA = so3([0.0 -0.009121119550464513 0.02552147907833477; 0.009121119550464513 0.0 0.17653436327572247; -0.02552147907833477 -0.17653436327572247 0.0])
dAA = Quaternion(0.9983705361100846, [0.019876321901458396, -0.052712403062238095, -0.009088840318555846])
dAA = SO3([0.9671471354443886 0.21392154089585563 -0.13734625128650593; -0.23487619055150383 0.9586286924177883 -0.16082352186597293; 0.0972604416694009 0.18779937277345782 0.9773800704291902])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8615759877795961 0.49342852833585754 -0.11922711397129082; -0.49591532119291304 0.8683142636279837 0.009916339360985415; 0.10841960840984104 0.050582872639878054 0.9928174865038158]), [-0.7614279143876772, -0.09409488849345422, 1.0775652507831526])
xj = SE3(SO3([0.964440165090498 0.03686587223070551 -0.26171754894328775; -0.06353389987490146 0.9935262356460455 -0.09417570095138375; 0.25655138184562354 0.10745476512313339 0.9605388393633197]), [-1.7653436327572247, 0.2552147907833477, 0.09121119550464513])
Dx = SE3(SO3([0.8902611226119685 -0.44929192842504656 -0.0746451379379803; 0.4336920057167889 0.8863190454794652 -0.16232619566083328; 0.1390912568892309 0.11213970158901435 0.9839097060119393]), [-1.1451178189228088, -0.24194270010493774, -0.8561117068710515])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
