Julia Version 1.5.0-DEV.638
Commit b0f3403f06 (2020-04-16 01:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_LzCl2D/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_LzCl2D/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.09780569887631663 -0.0704864298303872; 0.09780569887631663 0.0 -0.005146039832846658; 0.0704864298303872 0.005146039832846658 0.0])
dAA = so3([0.0 -0.006927303338057741 0.15807447087307655; 0.006927303338057741 0.0 0.11043445445763869; -0.15807447087307655 -0.11043445445763869 0.0])
dAA = so3([0.0 0.01929830279431992 0.07845993878648938; -0.01929830279431992 0.0 0.0834036583586923; -0.07845993878648938 -0.0834036583586923 0.0])
dAA = Quaternion(0.997372912928185, [0.02668915068472454, -0.059423581679502915, -0.03168279869668929])
dAA = SO3([0.9992794314633381 0.034894038401068334 0.014933986017558834; -0.035958281178246565 0.9962890814262143 0.07819890181848191; -0.012149891728490137 -0.07867955461856138 0.9968259165049888])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9232693610613995 -0.07015741819243733 0.37769249873123883; -0.03684865300382359 0.9624744754388908 0.2688588122052837; -0.3823818297161611 -0.26214656358839356 0.8860379876177529]), [0.05146039832846658, -0.7048642983038721, 0.9780569887631663])
xj = SE3(SO3([0.9437962954193511 0.14269665073015406 -0.2981379187944825; -0.18426267349963685 0.9759869305658564 -0.11617563651387702; 0.27440083802254545 0.1645818253484712 0.9474265158087407]), [-0.834036583586923, 0.7845993878648938, -0.19298302794319916])
Dx = SE3(SO3([0.773242139442576 0.032850542289768775 -0.6332593747127127; -0.3154956681391248 0.8862067204874431 -0.3392641035363717; 0.5500537039014599 0.46212389078488336 0.6956165843265427]), [-0.4246525389892243, 1.802679078303007, -0.9715760700547239])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
