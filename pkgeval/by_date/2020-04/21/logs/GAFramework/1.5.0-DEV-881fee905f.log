Julia Version 1.5.0-DEV.651
Commit 881fee905f (2020-04-20 16:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_oG09co/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_oG09co/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723362814306355
curgen: 20 fitness: 0.21723362814306355
curgen: 30 fitness: 0.21723362814306355
curgen: 40 fitness: 0.21723362814306355
curgen: 50 fitness: 0.21723362814306355
CoordinateCreature{Array{Float64,1}}([0.22254691777480565], -0.21723362814306355) 0.22254691777480565 -0.21723362814306355
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257942510718007
curgen: 100 fitness: 3.258290294684213
curgen: 150 fitness: 3.2582914550737887
curgen: 200 fitness: 3.258295430586081
curgen: 250 fitness: 3.258348781960618
curgen: 300 fitness: 3.258416207914677
curgen: 350 fitness: 3.258416207914677
curgen: 400 fitness: 3.258445283346007
curgen: 450 fitness: 3.258445283346007
curgen: 500 fitness: 3.258459461117366
CoordinateCreature{Array{Float64,1}}([-0.2233374461648897, 0.22245084939734694, -0.22228015262701803, 0.22221321165653818, -0.22253258727294323, -0.22265749616004568, -0.22247607545111606, 0.2226255252984909, 0.2226608185590489, 0.22265371761375558, -0.22243297908602233, -0.2222765433691486, 0.22261746828862355, -0.22230848794853658, 0.22261796881971246], -3.258459461117366) [-0.2233374461648897, 0.22245084939734694, -0.22228015262701803, 0.22221321165653818, -0.22253258727294323, -0.22265749616004568, -0.22247607545111606, 0.2226255252984909, 0.2226608185590489, 0.22265371761375558, -0.22243297908602233, -0.2222765433691486, 0.22261746828862355, -0.22230848794853658, 0.22261796881971246] -3.258459461117366
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0030932073463816323
curgen: 100 fitness: -0.00204810314619408
curgen: 150 fitness: -0.0015729065635525785
curgen: 200 fitness: -0.0009013025972421929
curgen: 250 fitness: -0.0009013025972421929
curgen: 300 fitness: -0.0008270441414595098
curgen: 350 fitness: -0.0007024655886311848
curgen: 400 fitness: -0.0007024655886311848
curgen: 450 fitness: -0.0007024655886311848
curgen: 500 fitness: -0.0007024655886311848
CoordinateCreature{Array{Float64,1}}([-8.934037453515278e-5, 0.0007756717485464331, -0.00017951453338493266, -0.0009409827436747294, -1.2421175204310676e-5, 0.0002677936076861925, -0.0007924917930038494, -0.00045006984148049877, -1.1484226225809557e-5, 0.0005691132271295662, -0.0005232376782822485, -4.93467606438326e-5, 0.0006043088868238516, -0.00038085676514221234, -2.299720306252911e-5], 0.0007024655886311848) [-8.934037453515278e-5, 0.0007756717485464331, -0.00017951453338493266, -0.0009409827436747294, -1.2421175204310676e-5, 0.0002677936076861925, -0.0007924917930038494, -0.00045006984148049877, -1.1484226225809557e-5, 0.0005691132271295662, -0.0005232376782822485, -4.93467606438326e-5, 0.0006043088868238516, -0.00038085676514221234, -2.299720306252911e-5] 0.0007024655886311848
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
