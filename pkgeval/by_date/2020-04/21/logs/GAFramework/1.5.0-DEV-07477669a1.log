Julia Version 1.5.0-DEV.658
Commit 07477669a1 (2020-04-21 14:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_8Bmhlz/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_8Bmhlz/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172206546692163
curgen: 20 fitness: 0.2172206546692163
curgen: 30 fitness: 0.2172206546692163
curgen: 40 fitness: 0.2172206546692163
curgen: 50 fitness: 0.2172206546692163
CoordinateCreature{Array{Float64,1}}([-0.22309032817768332], -0.2172206546692163) -0.22309032817768332 -0.2172206546692163
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258169124470877
curgen: 100 fitness: 3.258194779772098
curgen: 150 fitness: 3.2583968694145726
curgen: 200 fitness: 3.2583968694145726
curgen: 250 fitness: 3.258429257283644
curgen: 300 fitness: 3.2584823335601
curgen: 350 fitness: 3.258482470233974
curgen: 400 fitness: 3.2584826500822497
curgen: 450 fitness: 3.2584868844019623
curgen: 500 fitness: 3.2584868844019623
CoordinateCreature{Array{Float64,1}}([0.2223735191297944, -0.2223951542185715, 0.22261343257371255, -0.22266348155744226, 0.22254002078459767, 0.22261020395279846, 0.22272013097586968, -0.22295442537485266, -0.2228360962749918, 0.22244664732469183, -0.22266323390628442, 0.22254779441984504, 0.22243590738622784, -0.2225920915649856, -0.22247317760392177], -3.2584868844019623) [0.2223735191297944, -0.2223951542185715, 0.22261343257371255, -0.22266348155744226, 0.22254002078459767, 0.22261020395279846, 0.22272013097586968, -0.22295442537485266, -0.2228360962749918, 0.22244664732469183, -0.22266323390628442, 0.22254779441984504, 0.22243590738622784, -0.2225920915649856, -0.22247317760392177] -3.2584868844019623
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0013103622631547296
curgen: 100 fitness: -0.001219307033181849
curgen: 150 fitness: -0.001219307033181849
curgen: 200 fitness: -0.000860860582378109
curgen: 250 fitness: -0.0008004890875383808
curgen: 300 fitness: -0.0007904961277915845
curgen: 350 fitness: -0.0007904961277915845
curgen: 400 fitness: -0.0007904961277915845
curgen: 450 fitness: -0.0007904961277915845
curgen: 500 fitness: -0.0006911666257849447
CoordinateCreature{Array{Float64,1}}([6.95538088241669e-5, -0.00011134112241170972, 0.0001038146174516743, -0.0005056409532334031, -0.0005878431386656017, 0.00015388731488893222, -0.0004207844730214566, 0.0008480217355018871, -0.001039313187830277, 0.0006800047351228503, -0.00011962436809546072, -0.00034709645413368625, 0.00010188250546559642, 0.0003287327697977724, 0.00037271043958794596], 0.0006911666257849447) [6.95538088241669e-5, -0.00011134112241170972, 0.0001038146174516743, -0.0005056409532334031, -0.0005878431386656017, 0.00015388731488893222, -0.0004207844730214566, 0.0008480217355018871, -0.001039313187830277, 0.0006800047351228503, -0.00011962436809546072, -0.00034709645413368625, 0.00010188250546559642, 0.0003287327697977724, 0.00037271043958794596] 0.0006911666257849447
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
