Julia Version 1.5.0-DEV.651
Commit 881fee905f (2020-04-20 16:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_cmCZ9f/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_cmCZ9f/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0032497752073290032 -0.13199353751132223; 0.0032497752073290032 0.0 0.055961192531022844; 0.13199353751132223 -0.055961192531022844 0.0])
dAA = so3([0.0 0.012413853964435735 0.1001043921324867; -0.012413853964435735 0.0 -0.09007817851239826; -0.1001043921324867 0.09007817851239826 0.0])
dAA = so3([0.0 0.03284300749469323 -0.07035672811037308; -0.03284300749469323 0.0 -0.1640630862385904; 0.07035672811037308 0.1640630862385904 0.0])
dAA = Quaternion(0.9858321756345485, [0.14423287450734204, 0.06365105523020193, -0.057274274880471855])
dAA = SO3([0.9931647845322349 0.11617258575175991 0.011297835402835597; -0.11624723166440652 0.9932010238160534 0.006189298918744277; -0.010501994829620474 -0.007460335816420018 0.9999170223044036])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9685048776526028 0.05835817873584839 0.24205913520822042; -0.0025353421838198425 0.9744071173596638 -0.22477620354219288; -0.24898167403069585 0.21708314677437573 0.9438660039345665]), [-0.5596119253102284, -1.3199353751132221, 0.03249775207329003])
xj = SE3(SO3([0.9130868425281281 0.33199822959505326 0.2367479536295163; -0.093453771947311 0.735527185706474 -0.6710187416127317; -0.3969115902954124 0.5905733947888816 0.7026266824258116]), [1.6406308623859038, -0.7035672811037308, -0.32843007494693227])
Dx = SE3(SO3([0.9833897101930987 0.17263513916104314 0.056051642377190486; -0.12393875238450869 0.8642812677286009 -0.48750084708727826; -0.13260416111006723 0.47245634611071696 0.8713214891622987]), [2.219247582449918, 0.6506442711349035, 0.05337648048349519])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
