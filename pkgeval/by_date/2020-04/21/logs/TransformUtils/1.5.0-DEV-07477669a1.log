Julia Version 1.5.0-DEV.658
Commit 07477669a1 (2020-04-21 14:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Kk3uMK/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Kk3uMK/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.017225668322954676 0.0303999818664303; 0.017225668322954676 0.0 -0.06392975211822906; -0.0303999818664303 0.06392975211822906 0.0])
dAA = so3([0.0 0.08004642480410568 -0.08171088785148718; -0.08004642480410568 0.0 -0.051147576005339083; 0.08171088785148718 0.051147576005339083 0.0])
dAA = so3([0.0 0.0931217514663794 0.04791085251093943; -0.0931217514663794 0.0 -0.026492628043113954; -0.04791085251093943 0.026492628043113954 0.0])
dAA = Quaternion(0.9995242040345165, [0.0053836880873008265, 0.017472356539944143, -0.024841461484507915])
dAA = SO3([0.9947617604310189 -0.10059577955808786 0.018152936932669193; 0.09870138200887328 0.9914437734979936 0.08542412529021419; -0.0265909227692335 -0.083184933294199 0.9961792959598795])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9594454446776813 0.18390540639196323 -0.21364278641473766; -0.20981322174856923 0.9720313787093057 -0.10551497895546431; 0.18826271714477105 0.1460609472250992 0.9711968641984872]), [0.6392975211822906, 0.303999818664303, 0.17225668322954676])
xj = SE3(SO3([0.9884862713166911 0.12440398917809156 0.08613094040472455; -0.1222300062973383 0.992045550855976 -0.03009070599729509; -0.08918922008279684 0.019216464384487857 0.9958293079225887]), [0.2649262804311395, 0.47910852510939433, -0.9312175146637939])
Dx = SE3(SO3([0.9572531166440081 -0.08516768863083549 0.2764288977090027; 0.04994950593096249 0.989984745717861 0.13204260715085403; -0.28490615565934335 -0.11259071035935014 0.9519200672368405]), [-0.6036719542070396, -0.05981222440473666, -1.0101855571658072])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
