Julia Version 1.5.0-DEV.555
Commit c54f80c785 (2020-04-01 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.4
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_ys4FdU/Project.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_ys4FdU/Manifest.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723362277572825
curgen: 20 fitness: 0.21723362277572825
curgen: 30 fitness: 0.21723362277572825
curgen: 40 fitness: 0.21723362277572825
curgen: 50 fitness: 0.21723362277572825
CoordinateCreature{Array{Float64,1}}([0.22255923828293148], -0.21723362277572825) 0.22255923828293148 -0.21723362277572825
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580690221033985
curgen: 100 fitness: 3.2581358150193016
curgen: 150 fitness: 3.258262363208015
curgen: 200 fitness: 3.2583380880542197
curgen: 250 fitness: 3.2584111361044186
curgen: 300 fitness: 3.2584641652569433
curgen: 350 fitness: 3.258466209854171
curgen: 400 fitness: 3.2584672270772783
curgen: 450 fitness: 3.2584672270772783
curgen: 500 fitness: 3.258478425715152
CoordinateCreature{Array{Float64,1}}([0.22288387112822342, 0.2225567352996375, 0.22245918481655116, 0.22255587167414204, -0.22232654961411433, -0.22254905976466585, -0.22278217183940327, -0.2225702188986612, 0.22277314480917948, -0.2224460220253712, -0.22309246033690727, -0.2225566467694824, -0.22254402413036276, -0.22260881337434477, -0.22259497670876857], -3.258478425715152) [0.22288387112822342, 0.2225567352996375, 0.22245918481655116, 0.22255587167414204, -0.22232654961411433, -0.22254905976466585, -0.22278217183940327, -0.2225702188986612, 0.22277314480917948, -0.2224460220253712, -0.22309246033690727, -0.2225566467694824, -0.22254402413036276, -0.22260881337434477, -0.22259497670876857] -3.258478425715152
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.006198727463896603
curgen: 100 fitness: -0.005805446207858722
curgen: 150 fitness: -0.00435255770790377
curgen: 200 fitness: -0.0038761736281855974
curgen: 250 fitness: -0.0019261265820773588
curgen: 300 fitness: -0.0016299962621815212
curgen: 350 fitness: -0.0016299962621815212
curgen: 400 fitness: -0.0016299962621815212
curgen: 450 fitness: -0.0015486775634769856
curgen: 500 fitness: -0.0015486775634769856
CoordinateCreature{Array{Float64,1}}([-0.0001340325393288654, 0.000679208642055909, -0.0011126282497207047, 0.00034750482734398954, 0.0007061769835334179, 0.0002045176152059261, 0.00024983378875081003, -0.00029450667978045907, 0.0004811379678969483, 4.182240677410307e-5, 0.0015400346775127569, -0.001502125486203151, 0.00013089742232940606, 0.00010879464277221279, -0.0006230828894690252], 0.0015486775634769856) [-0.0001340325393288654, 0.000679208642055909, -0.0011126282497207047, 0.00034750482734398954, 0.0007061769835334179, 0.0002045176152059261, 0.00024983378875081003, -0.00029450667978045907, 0.0004811379678969483, 4.182240677410307e-5, 0.0015400346775127569, -0.001502125486203151, 0.00013089742232940606, 0.00010879464277221279, -0.0006230828894690252] 0.0015486775634769856
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
