Julia Version 1.5.0-DEV.552
Commit 351d7e9a45 (2020-03-31 14:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   91ca9103 + GAFramework v0.4.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   5789e2e9 + FileIO v1.2.4
   91ca9103 + GAFramework v0.4.1
   2a0f44e3 + Base64
   ade2ca70 + Dates
   8ba89e20 + Distributed
   9fa8497b + Future
   b77e0a4c + InteractiveUtils
   76f85450 + LibGit2
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
   56ddb016 + Logging
   d6f4376e + Markdown
   44cfe95a + Pkg
   de0858da + Printf
   3fa0cd96 + REPL
   9a3f8284 + Random
   ea8e919c + SHA
   9e88b42a + Serialization
   6462fe0b + Sockets
   2f01184e + SparseArrays
   8dfed614 + Test
   cf7118a7 + UUIDs
   4ec0a83e + Unicode
    Testing GAFramework
     Status `/tmp/jl_syKnCj/Project.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   9fa8497b Future
   37e2e46d LinearAlgebra
   9a3f8284 Random
   2f01184e SparseArrays
   8dfed614 Test
     Status `/tmp/jl_syKnCj/Manifest.toml`
   5789e2e9 FileIO v1.2.4
   91ca9103 GAFramework v0.4.1
   2a0f44e3 Base64
   ade2ca70 Dates
   8ba89e20 Distributed
   9fa8497b Future
   b77e0a4c InteractiveUtils
   76f85450 LibGit2
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   44cfe95a Pkg
   de0858da Printf
   3fa0cd96 REPL
   9a3f8284 Random
   ea8e919c SHA
   9e88b42a Serialization
   6462fe0b Sockets
   2f01184e SparseArrays
   8dfed614 Test
   cf7118a7 UUIDs
   4ec0a83e Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.217233187290713
curgen: 20 fitness: 0.217233187290713
curgen: 30 fitness: 0.217233187290713
curgen: 40 fitness: 0.217233187290713
curgen: 50 fitness: 0.217233187290713
CoordinateCreature{Array{Float64,1}}([-0.22264797659877594], -0.217233187290713) -0.22264797659877594 -0.217233187290713
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578030825344824
curgen: 100 fitness: 3.2582782481646344
curgen: 150 fitness: 3.2584059457471377
curgen: 200 fitness: 3.258407170346169
curgen: 250 fitness: 3.2584242619359105
curgen: 300 fitness: 3.258436424415191
curgen: 350 fitness: 3.258476418044996
curgen: 400 fitness: 3.2584767951176343
curgen: 450 fitness: 3.2584767951176343
curgen: 500 fitness: 3.258478809923625
CoordinateCreature{Array{Float64,1}}([0.22283911404113682, 0.22280076286476713, -0.22272787331111293, -0.22252193866034714, -0.2224708543260955, -0.2225336310921703, 0.22246281888341574, 0.22246234994270303, 0.22232914385294036, -0.22206344414139495, 0.2225346743313295, 0.22234508306041428, -0.22249731280291785, -0.22232860590318596, 0.222569338781675], -3.258478809923625) [0.22283911404113682, 0.22280076286476713, -0.22272787331111293, -0.22252193866034714, -0.2224708543260955, -0.2225336310921703, 0.22246281888341574, 0.22246234994270303, 0.22232914385294036, -0.22206344414139495, 0.2225346743313295, 0.22234508306041428, -0.22249731280291785, -0.22232860590318596, 0.222569338781675] -3.258478809923625
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.000981729613386051
curgen: 100 fitness: -0.0007689096672720552
curgen: 150 fitness: -0.0006849267311963558
curgen: 200 fitness: -0.0006849267311963558
curgen: 250 fitness: -0.0004769485207987145
curgen: 300 fitness: -0.0004769485207987145
curgen: 350 fitness: -0.0004769485207987145
curgen: 400 fitness: -0.0004769485207987145
curgen: 450 fitness: -0.0004769485207987145
curgen: 500 fitness: -0.0004769485207987145
CoordinateCreature{Array{Float64,1}}([0.00024199105613990685, 8.191412161683335e-5, -0.0001530574661239882, -5.06006424758241e-5, -0.00021881133556526973, 0.0006313066897614252, 0.000697578221122563, 0.0002885737635961935, 0.0005724403351769718, -0.0003725455501094238, 0.0007099643386321395, -0.00016021551864597546, 9.042345007980718e-5, -3.322444411781207e-5, 0.0005394655095663291], 0.0004769485207987145) [0.00024199105613990685, 8.191412161683335e-5, -0.0001530574661239882, -5.06006424758241e-5, -0.00021881133556526973, 0.0006313066897614252, 0.000697578221122563, 0.0002885737635961935, 0.0005724403351769718, -0.0003725455501094238, 0.0007099643386321395, -0.00016021551864597546, 9.042345007980718e-5, -3.322444411781207e-5, 0.0005394655095663291] 0.0004769485207987145
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
