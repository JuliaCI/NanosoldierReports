Julia Version 1.5.0-DEV.555
Commit c54f80c785 (2020-04-01 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_C0kTAM/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_C0kTAM/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.2732389532235144 0.007876878286081052; 0.2732389532235144 0.0 0.015214183638341759; -0.007876878286081052 -0.015214183638341759 0.0])
dAA = so3([0.0 0.07467608100220305 -0.034571049487540646; -0.07467608100220305 0.0 0.07098126753672636; 0.034571049487540646 -0.07098126753672636 0.0])
dAA = so3([0.0 0.052229476097484934 -0.02821556011249146; -0.052229476097484934 0.0 0.0816023088361903; 0.02821556011249146 -0.0816023088361903 0.0])
dAA = Quaternion(0.9988442386518664, [-0.028673221494561654, -0.020238357363305377, -0.03283964330397948])
dAA = SO3([0.9907973823064958 0.03675447441336287 0.13026763153290843; -0.02703109968079627 0.9967687775492068 -0.0756394325276669; -0.13262679542476702 0.07142207441441388 0.9885894094221827])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9789683625610089 0.19202335737846424 -0.06890555366383425; -0.17678060762660805 0.9670321083191044 0.18329625813713535; 0.1018310457168352 -0.16726007204653093 0.98063984542094]), [-0.15214183638341758, 0.07876878286081052, 2.7323895322351435])
xj = SE3(SO3([0.9814706156838349 0.1672146314365674 -0.09356654093599326; -0.1524626539590151 0.9772782521188377 0.14724930248840942; 0.1160627834276242 -0.13025546041944808 0.9846638742910954]), [-0.8160230883619028, -0.2821556011249146, -0.5222947609748493])
Dx = SE3(SO3([0.9995999167502307 -0.022330059040978806 -0.01736015253844958; 0.02161633157598058 0.9989551011863518 -0.040267108450479774; 0.01824117984476613 0.03987573544139131 0.9990381299434369]), [-0.9175422153318069, 0.06787255447599949, -3.2120840860078266])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
