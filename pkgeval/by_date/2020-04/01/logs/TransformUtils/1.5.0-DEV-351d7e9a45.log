Julia Version 1.5.0-DEV.552
Commit 351d7e9a45 (2020-03-31 14:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.4
   Updating `~/.julia/environments/v1.5/Project.toml`
   9b8138ad + TransformUtils v0.2.4
   Updating `~/.julia/environments/v1.5/Manifest.toml`
   9b8138ad + TransformUtils v0.2.4
   8f399da3 + Libdl
   37e2e46d + LinearAlgebra
    Testing TransformUtils
     Status `/tmp/jl_a4Kbxa/Project.toml`
   9b8138ad TransformUtils v0.2.4
   37e2e46d LinearAlgebra
   8dfed614 Test
     Status `/tmp/jl_a4Kbxa/Manifest.toml`
   9b8138ad TransformUtils v0.2.4
   2a0f44e3 Base64
   8ba89e20 Distributed
   b77e0a4c InteractiveUtils
   8f399da3 Libdl
   37e2e46d LinearAlgebra
   56ddb016 Logging
   d6f4376e Markdown
   9a3f8284 Random
   9e88b42a Serialization
   6462fe0b Sockets
   8dfed614 Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/xHerP/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.03977293804640543 -0.09499844572638975; -0.03977293804640543 0.0 -0.016508375660955265; 0.09499844572638975 0.016508375660955265 0.0])
dAA = so3([0.0 -0.018295543901522195 -0.10402289018679561; 0.018295543901522195 0.0 0.016194844257312473; 0.10402289018679561 -0.016194844257312473 0.0])
dAA = so3([0.0 0.17578833593144985 -0.004342505459085142; -0.17578833593144985 0.0 -0.185983493429839; 0.004342505459085142 0.185983493429839 0.0])
dAA = Quaternion(0.9962639530721489, [-0.013751139171795712, -0.028982013400891977, 0.08018157444053939])
dAA = SO3([0.9906575754958792 -0.09257602727020482 0.1001361437618467; 0.10104531645786032 0.9914055068035762 -0.08309611965354163; -0.09158281571647488 0.09243808876437859 0.9914977496752232])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9653459146943629 -0.03996355162026927 -0.2578956756612988; 0.0504300528943157 0.9981454433387158 0.034095215312927765; 0.2560548276209224 -0.045919369377774084 0.9655709900198779]), [0.16508375660955266, -0.9499844572638975, -0.39772938046405426])
xj = SE3(SO3([0.9102570902793883 -0.3857042188463556 -0.15054662121822693; 0.396679604920276 0.9165864807123368 0.05014493409774161; 0.11864788509027643 -0.10536355603099062 0.9873303400706923]), [1.8598349342983898, -0.04342505459085142, -1.7578833593144985])
Dx = SE3(SO3([0.9290979006453888 -0.35309333441621465 0.11000994594658386; 0.354118597840127 0.9351389576572536 0.010730728560903291; -0.10666353491270386 0.02898667042874166 0.9938725588612367]), [1.3334649718415579, 0.8996072736863716, -1.7194848859578478])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
