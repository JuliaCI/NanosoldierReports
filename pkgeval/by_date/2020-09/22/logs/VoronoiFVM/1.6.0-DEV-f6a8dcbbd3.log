Julia Version 1.6.0-DEV.1007
Commit f6a8dcbbd3* (2020-09-22 17:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed NaNMath ────────────────────── v0.3.4
  Installed RecipesBase ────────────────── v1.1.0
  Installed DocStringExtensions ────────── v0.8.3
  Installed Triangulate ────────────────── v0.5.1
  Installed CommonSubexpressions ───────── v0.3.0
  Installed FiniteDiff ─────────────────── v2.7.0
  Installed DiffResults ────────────────── v1.0.2
  Installed VoronoiFVM ─────────────────── v0.8.6
  Installed MacroTools ─────────────────── v0.5.5
  Installed ArrayInterface ─────────────── v2.13.2
  Installed StaticArrays ───────────────── v0.12.4
  Installed Adapt ──────────────────────── v2.1.0
  Installed Compat ─────────────────────── v3.16.0
  Installed ElasticArrays ──────────────── v1.2.4
  Installed OrderedCollections ─────────── v1.3.1
  Installed Inflate ────────────────────── v0.1.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed ExtendableGrids ────────────── v0.3.0
  Installed AbstractTrees ──────────────── v0.3.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Cassette ───────────────────── v0.3.3
  Installed DataStructures ─────────────── v0.17.20
  Installed LightGraphs ────────────────── v1.3.3
  Installed Triangle_jll ───────────────── v1.6.0+0
  Installed SparsityDetection ──────────── v0.3.3
  Installed IterativeSolvers ───────────── v0.8.4
  Installed ForwardDiff ────────────────── v0.10.12
  Installed Requires ───────────────────── v1.0.3
  Installed SimpleTraits ───────────────── v0.9.3
  Installed SparseDiffTools ────────────── v1.10.0
  Installed ExtendableSparse ───────────── v0.3.1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed VertexSafeGraphs ───────────── v0.1.2
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
Updating `~/.julia/environments/v1.6/Project.toml`
  [82b139dc] + VoronoiFVM v0.8.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.1.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.13.2
  [7057c7e9] + Cassette v0.3.3
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.16.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [ffbed154] + DocStringExtensions v0.8.3
  [fdbdab4c] + ElasticArrays v1.2.4
  [cfc395e8] + ExtendableGrids v0.3.0
  [95c220a8] + ExtendableSparse v0.3.1
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [d25df0c9] + Inflate v0.1.2
  [42fd0dbc] + IterativeSolvers v0.8.4
  [093fc24a] + LightGraphs v1.3.3
  [1914dd2f] + MacroTools v0.5.5
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [ae029012] + Requires v1.0.3
  [699a6c99] + SimpleTraits v0.9.3
  [47a9eef4] + SparseDiffTools v1.10.0
  [684fba80] + SparsityDetection v0.3.3
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [5639c1d2] + Triangle_jll v1.6.0+0
  [f7e6ffb2] + Triangulate v0.5.1
  [19fa3120] + VertexSafeGraphs v0.1.2
  [82b139dc] + VoronoiFVM v0.8.6
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing VoronoiFVM
Status `/tmp/jl_ZUBsoR/Project.toml`
  [163ba53b] DiffResults v1.0.2
  [ffbed154] DocStringExtensions v0.8.3
  [cfc395e8] ExtendableGrids v0.3.0
  [95c220a8] ExtendableSparse v0.3.1
  [f6369f11] ForwardDiff v0.10.12
  [42fd0dbc] IterativeSolvers v0.8.4
  [47a9eef4] SparseDiffTools v1.10.0
  [684fba80] SparsityDetection v0.3.3
  [82b139dc] VoronoiFVM v0.8.6
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ZUBsoR/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.13.2
  [7057c7e9] Cassette v0.3.3
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.16.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [ffbed154] DocStringExtensions v0.8.3
  [fdbdab4c] ElasticArrays v1.2.4
  [cfc395e8] ExtendableGrids v0.3.0
  [95c220a8] ExtendableSparse v0.3.1
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.8.4
  [093fc24a] LightGraphs v1.3.3
  [1914dd2f] MacroTools v0.5.5
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [3cdcf5f2] RecipesBase v1.1.0
  [ae029012] Requires v1.0.3
  [699a6c99] SimpleTraits v0.9.3
  [47a9eef4] SparseDiffTools v1.10.0
  [684fba80] SparsityDetection v0.3.3
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [5639c1d2] Triangle_jll v1.6.0+0
  [f7e6ffb2] Triangulate v0.5.1
  [19fa3120] VertexSafeGraphs v0.1.2
  [82b139dc] VoronoiFVM v0.8.6
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Directory /home/pkgeval/.julia/packages/VoronoiFVM/IBapR/test:
  runtests:
  test_prepare_edges:
   compile:  4.078214 seconds (4.12 M allocations: 235.331 MiB, 6.65% gc time)
       run:  0.000929 seconds (282 allocations: 18.328 KiB)
  xgrid:
121.261526 seconds (7.48 M allocations: 470.796 MiB, 0.24% gc time)
Directory /home/pkgeval/.julia/packages/VoronoiFVM/IBapR/test/../examples:
  Example101_Laplace1D:
   compile: 14.934231 seconds (22.46 M allocations: 1.103 GiB, 7.64% gc time)
       run:  0.004465 seconds (845 allocations: 65.039 KiB)
  Example102_StationaryConvectionDiffusion1D:
   compile:  8.806631 seconds (12.27 M allocations: 684.584 MiB, 6.49% gc time)
       run:  0.004676 seconds (3.70 k allocations: 240.312 KiB)
  Example105_NonlinearPoisson1D:
   compile:  4.150908 seconds (3.46 M allocations: 197.349 MiB, 4.11% gc time)
       run:  0.003319 seconds (5.63 k allocations: 358.734 KiB)
  Example106_NonlinearDiffusion1D:
   compile:  3.195488 seconds (3.92 M allocations: 222.726 MiB, 3.90% gc time)
       run:  0.193723 seconds (520.08 k allocations: 26.921 MiB)
  Example107_NonlinearStorage1D:
   compile:  2.730660 seconds (2.55 M allocations: 138.588 MiB, 1.98% gc time)
       run:  0.324476 seconds (689.53 k allocations: 35.913 MiB, 13.61% gc time)
  Example110_ReactionDiffusion1D_TwoSpecies:
   compile:  3.255199 seconds (4.17 M allocations: 209.330 MiB, 2.69% gc time)
       run:  0.651374 seconds (2.07 M allocations: 87.350 MiB, 3.31% gc time)
  Example115_HeterogeneousCatalysis1D:
   compile:  3.959360 seconds (4.02 M allocations: 214.237 MiB, 2.55% gc time)
       run:  0.247210 seconds (817.17 k allocations: 37.514 MiB, 5.82% gc time)
  Example120_ThreeRegions1D:
   compile:  6.854250 seconds (15.14 M allocations: 664.589 MiB, 2.95% gc time)
       run:  3.540624 seconds (12.47 M allocations: 511.910 MiB, 3.19% gc time)
  Example121_PoissonPointCharge1D:
   compile:  3.287538 seconds (3.49 M allocations: 206.238 MiB, 4.15% gc time)
       run:  0.004958 seconds (9.09 k allocations: 479.016 KiB)
  Example125_TestFunctions1D:
   compile:  7.040919 seconds (6.66 M allocations: 369.412 MiB, 3.76% gc time)
       run:  0.462033 seconds (841.42 k allocations: 33.107 MiB, 48.98% gc time)
  Example150_Impedance1D:
   compile: 16.338854 seconds (16.90 M allocations: 980.659 MiB, 3.81% gc time)
       run:  0.012440 seconds (30.72 k allocations: 7.033 MiB)
  Example160_UnipolarDriftDiffusion1D:
   compile:  5.887128 seconds (6.54 M allocations: 333.028 MiB, 2.35% gc time)
       run:  0.994406 seconds (3.43 M allocations: 162.734 MiB, 2.66% gc time)
  Example202_Laplace2D_Unstructured:
   compile:  2.713195 seconds (2.45 M allocations: 142.075 MiB, 2.05% gc time)
       run:  0.004711 seconds (9.16 k allocations: 315.273 KiB)
  Example203_CoordinateSystems:
   compile:  2.422834 seconds (3.11 M allocations: 152.192 MiB, 2.29% gc time)
       run:  0.130743 seconds (868.50 k allocations: 19.158 MiB, 14.42% gc time)
  Example205_NonlinearPoisson2D:
   compile: 10.699932 seconds (18.02 M allocations: 622.469 MiB, 2.87% gc time)
       run:  2.974220 seconds (11.93 M allocations: 292.709 MiB, 2.26% gc time)
  Example210_NonlinearPoisson2D_Reaction:
   compile:  4.953044 seconds (16.37 M allocations: 528.321 MiB, 2.61% gc time)
       run:  3.532705 seconds (14.82 M allocations: 435.349 MiB, 1.95% gc time)
  Example215_NonlinearPoisson2D_BoundaryReaction:
   compile:  4.403247 seconds (16.52 M allocations: 494.279 MiB, 2.82% gc time)
       run:  3.095225 seconds (14.96 M allocations: 401.260 MiB, 2.15% gc time)
  Example220_NonlinearPoisson2D_BoundarySpecies:
   compile:  6.437727 seconds (24.89 M allocations: 762.535 MiB, 3.92% gc time)
       run:  4.121392 seconds (22.52 M allocations: 622.275 MiB, 2.95% gc time)
  Example405_GenericOperator:
   compile:Error During Test at /home/pkgeval/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:23
  Test threw exception
  Expression: eval(Meta.parse("Example405_GenericOperator.test()"))
  type #getproperty has no field generic_operator
  Stacktrace:
    [1] tagged_getfield
      @ ~/.julia/packages/Cassette/158rp/src/tagging.jl:610 [inlined]
    [2] tagged_getfield(context::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, x::Function, name::Symbol)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/tagging.jl:608
    [3] overdub
      @ ~/.julia/packages/Cassette/158rp/src/context.jl:289 [inlined]
    [4] getproperty
      @ ./Base.jl:33 [inlined]
    [5] recurse(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::typeof(getproperty), ::typeof(getproperty), ::Symbol)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] overdub
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/propagate_tags.jl:58 [inlined]
    [7] generic_operator
      @ ~/.julia/packages/VoronoiFVM/IBapR/src/vfvm_abstractsystem.jl:167 [inlined]
    [8] recurse(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::VoronoiFVM.var"#generic_operator#5"{VoronoiFVM.SparseSystem{Float64, Int32}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [9] overdub(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}})
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/propagate_tags.jl:45
   [10] overdub(ctx::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, #unused#::typeof(Core._apply_iterate), iter::Function, f::Function, args::Tuple{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}})
      @ SparsityDetection ~/.julia/packages/Cassette/158rp/src/context.jl:266
   [11] #2
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/controlflow.jl:148 [inlined]
   [12] recurse(overdub_context#241::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, overdub_arguments#242::SparsityDetection.var"#2#3"{VoronoiFVM.var"#generic_operator#5"{VoronoiFVM.SparseSystem{Float64, Int32}}, Tuple{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:parent, :dims, :mi), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:node_dof,), Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:m, :n, :colptr, :rowval, :nzval), Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}, Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Tuple{Cassette.Immutable{Cassette.Meta{Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, NamedTuple{(:divisor, :multiplier, :addmul, :shift), NTuple{4, Cassette.Immutable{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}}}}}}}}}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [13] abstract_run(::SparsityDetection.var"#22#24", ::Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x000000008b707eec, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Vararg{Any, N} where N; verbose::Bool)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/controlflow.jl:148
   [14] jacobian_sparsity(::Function, ::Vector{Float64}, ::Base.ReshapedArray{Float64, 1, VoronoiFVM.SparseSolutionArray{Float64, Int32}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}; sparsity::SparsityDetection.Sparsity, verbose::Bool, raw::Bool)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/jacobian.jl:135
   [15] jacobian_sparsity
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/jacobian.jl:130 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/VoronoiFVM/IBapR/src/vfvm_abstractsystem.jl:172 [inlined]
   [17] macro expansion
      @ ./timing.jl:233 [inlined]
   [18] _complete!(this::VoronoiFVM.SparseSystem{Float64, Int32}; create_newtonvectors::Bool)
      @ VoronoiFVM ~/.julia/packages/VoronoiFVM/IBapR/src/vfvm_abstractsystem.jl:171
   [19] _solve!(solution::VoronoiFVM.SparseSolutionArray{Float64, Int32}, oldsol::VoronoiFVM.SparseSolutionArray{Float64, Int32}, this::VoronoiFVM.SparseSystem{Float64, Int32}, control::VoronoiFVM.NewtonControl, tstep::Float64)
      @ VoronoiFVM ~/.julia/packages/VoronoiFVM/IBapR/src/vfvm_solver.jl:84
   [20] solve!(solution::VoronoiFVM.SparseSolutionArray{Float64, Int32}, inival::VoronoiFVM.SparseSolutionArray{Float64, Int32}, this::VoronoiFVM.SparseSystem{Float64, Int32}; control::VoronoiFVM.NewtonControl, tstep::Float64)
      @ VoronoiFVM ~/.julia/packages/VoronoiFVM/IBapR/src/vfvm_solver.jl:650
   [21] main(; n::Int64, Plotter::Nothing, verbose::Bool, unknown_storage::Symbol)
      @ Main.Example405_GenericOperator ~/.julia/packages/VoronoiFVM/IBapR/examples/Example405_GenericOperator.jl:98
   [22] test()
      @ Main.Example405_GenericOperator ~/.julia/packages/VoronoiFVM/IBapR/examples/Example405_GenericOperator.jl:112
   [23] top-level scope
      @ none:1
   [24] eval
      @ ./boot.jl:360 [inlined]
   [25] eval(x::Expr)
      @ Base.MainInclude ./client.jl:446
   [26] macro expansion
      @ ./timing.jl:174 [inlined]
   [27] top-level scope
      @ ~/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:23
   [28] eval
      @ ./boot.jl:360 [inlined]
   [29] macro expansion
      @ ~/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:19 [inlined]
   [30] macro expansion
      @ ./timing.jl:174 [inlined]
   [31] run_tests_from_directory(testdir::String, prefix::String)
      @ Main ~/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:13
   [32] macro expansion
      @ ~/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:37 [inlined]
   [33] macro expansion
      @ ./timing.jl:174 [inlined]
   [34] run_all_tests()
      @ Main ~/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:35
   [35] top-level scope
      @ ~/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:41
   [36] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [37] top-level scope
      @ none:6
   [38] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [39] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [40] _start()
      @ Base ./client.jl:485
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/VoronoiFVM/IBapR/test/runtests.jl:41
ERROR: Package VoronoiFVM errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
