Julia Version 1.6.0-DEV.1007
Commit f6a8dcbbd3* (2020-09-22 17:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed ArrayInterface ─────────────── v2.13.2
  Installed NaNMath ────────────────────── v0.3.4
  Installed Adapt ──────────────────────── v2.1.0
  Installed DiffResults ────────────────── v1.0.2
  Installed FiniteDiff ─────────────────── v2.7.0
  Installed Inflate ────────────────────── v0.1.2
  Installed CommonSubexpressions ───────── v0.3.0
  Installed SparseDiffTools ────────────── v1.10.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OrderedCollections ─────────── v1.3.1
  Installed DiffRules ──────────────────── v1.0.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed StaticArrays ───────────────── v0.12.4
  Installed LightGraphs ────────────────── v1.3.0
  Installed Compat ─────────────────────── v3.16.0
  Installed SimpleTraits ───────────────── v0.9.3
  Installed VertexSafeGraphs ───────────── v0.1.2
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Requires ───────────────────── v1.0.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DataStructures ─────────────── v0.18.6
  Installed ForwardDiff ────────────────── v0.10.12
Updating `~/.julia/environments/v1.6/Project.toml`
  [47a9eef4] + SparseDiffTools v1.10.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [79e6a3ab] + Adapt v2.1.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.13.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.16.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.18.6
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [d25df0c9] + Inflate v0.1.2
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.5
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [ae029012] + Requires v1.0.3
  [699a6c99] + SimpleTraits v0.9.3
  [47a9eef4] + SparseDiffTools v1.10.0
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [19fa3120] + VertexSafeGraphs v0.1.2
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SparseDiffTools
Status `/tmp/jl_Tj3hsj/Project.toml`
  [79e6a3ab] Adapt v2.1.0
  [4fba245c] ArrayInterface v2.13.2
  [aae01518] BandedMatrices v0.15.20
  [ffab5731] BlockBandedMatrices v0.9.4
  [34da2185] Compat v3.16.0
  [864edb3b] DataStructures v0.18.6
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [42fd0dbc] IterativeSolvers v0.8.4
  [093fc24a] LightGraphs v1.3.0
  [ae029012] Requires v1.0.3
  [1bc83da4] SafeTestsets v0.0.1
  [47a9eef4] SparseDiffTools v1.10.0
  [684fba80] SparsityDetection v0.3.3
  [90137ffa] StaticArrays v0.12.4
  [19fa3120] VertexSafeGraphs v0.1.2
  [e88e6eb3] Zygote v0.5.7
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Tj3hsj/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.13.2
  [4c555306] ArrayLayouts v0.4.8
  [aae01518] BandedMatrices v0.15.20
  [8e7c35d0] BlockArrays v0.12.13
  [ffab5731] BlockBandedMatrices v0.9.4
  [7057c7e9] Cassette v0.3.3
  [082447d4] ChainRules v0.7.20
  [d360d2e6] ChainRulesCore v0.9.10
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.16.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [adafc99b] CpuId v0.2.2
  [864edb3b] DataStructures v0.18.6
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [ffbed154] DocStringExtensions v0.8.3
  [1a297f60] FillArrays v0.9.6
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [7869d1d1] IRTools v0.4.1
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.8.4
  [093fc24a] LightGraphs v1.3.0
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.6.0
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.7.4
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.2.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.3
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.3
  [47a9eef4] SparseDiffTools v1.10.0
  [684fba80] SparsityDetection v0.3.3
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [e88e6eb3] Zygote v0.5.7
  [700de1a5] ZygoteRules v0.2.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary:                  | Pass  Total
Exact coloring via contraction |   20     20
 93.156751 seconds (5.78 M allocations: 373.545 MiB, 0.28% gc time)
Test Summary:              | Pass  Total
Greedy distance-1 coloring |   20     20
  0.324333 seconds (147.06 k allocations: 9.162 MiB)
Test Summary:        | Pass  Total
Greedy star coloring | 1101   1101
  1.247261 seconds (655.77 k allocations: 38.853 MiB, 13.98% gc time)
┌ Warning: `find_root` is deprecated, use `find_root!` instead.
│   caller = find at acyclic_coloring.jl:195 [inlined]
└ @ Core ~/.julia/packages/SparseDiffTools/Z3AsD/src/coloring/acyclic_coloring.jl:195
┌ Warning: `find_root` is deprecated, use `find_root!` instead.
│   caller = find at acyclic_coloring.jl:195 [inlined]
└ @ Core ~/.julia/packages/SparseDiffTools/Z3AsD/src/coloring/acyclic_coloring.jl:195
┌ Warning: `find_root` is deprecated, use `find_root!` instead.
│   caller = find at acyclic_coloring.jl:195 [inlined]
└ @ Core ~/.julia/packages/SparseDiffTools/Z3AsD/src/coloring/acyclic_coloring.jl:195
┌ Warning: `find_root` is deprecated, use `find_root!` instead.
│   caller = find at acyclic_coloring.jl:195 [inlined]
└ @ Core ~/.julia/packages/SparseDiffTools/Z3AsD/src/coloring/acyclic_coloring.jl:195
┌ Warning: `find_root` is deprecated, use `find_root!` instead.
│   caller = find at acyclic_coloring.jl:195 [inlined]
└ @ Core ~/.julia/packages/SparseDiffTools/Z3AsD/src/coloring/acyclic_coloring.jl:195
Test Summary:    |   Pass   Total
Acyclic coloring | 325518  325518
 13.946933 seconds (12.32 M allocations: 755.200 MiB, 4.48% gc time)
┌ Warning: Assignment to `n` in soft scope is ambiguous because a global variable by the same name exists: `n` will be treated as a new local. Disambiguate by using `local n` to suppress this warning or `global n` to assign to the existing global variable.
└ @ ~/.julia/packages/SparseDiffTools/Z3AsD/test/test_matrix2graph.jl:13
Test Summary:              |  Pass  Total
Matrix to graph conversion | 83856  83856
  3.399469 seconds (4.51 M allocations: 499.874 MiB, 4.31% gc time)
[ Info: ended definitions
[ Info: second passed
[ Info: third passed
[ Info: 4th passed
[ Info: 5
Test Summary:            | Pass  Total
AD using colorvec vector |   43     43
1051.415987 seconds (607.88 M allocations: 44.791 GiB, 1.85% gc time)
Integration test: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: MethodError: no method matching -(::typeof(length), ::Int64)
  Closest candidates are:
    -(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8} at int.jl:86
    -(!Matched::BlockArrays.Block{N, T} where T, ::Integer) where N at /home/pkgeval/.julia/packages/BlockArrays/p9CDA/src/blockindices.jl:65
    -(!Matched::T, ::Integer) where T<:AbstractChar at char.jl:222
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Function, ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:457
    [2] fallback
      @ ~/.julia/packages/Cassette/158rp/src/context.jl:454 [inlined]
    [3] overdub(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Function, ::Int64)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/propagate_tags.jl:56
    [4] f
      @ ~/.julia/packages/SparseDiffTools/Z3AsD/test/test_integration.jl:22 [inlined]
    [5] recurse(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::typeof(Main.##247.f), ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] overdub(::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}})
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/propagate_tags.jl:45
    [7] overdub(ctx::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, #unused#::typeof(Core._apply_iterate), iter::Function, f::Function, args::Tuple{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}})
      @ SparsityDetection ~/.julia/packages/Cassette/158rp/src/context.jl:266
    [8] #2
      @ ~/.julia/packages/SparsityDetection/PbKzm/src/controlflow.jl:148 [inlined]
    [9] recurse(overdub_context#241::Cassette.Context{nametype(JacobianSparsityContext), Tuple{SparsityDetection.Sparsity, SparsityDetection.Path}, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, SparsityDetection.var"##PassType#241", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, overdub_arguments#242::SparsityDetection.var"#2#3"{typeof(Main.##247.f), Tuple{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}}})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] abstract_run(::SparsityDetection.var"#22#24", ::Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}, ::Function, ::Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, ::Vararg{Cassette.Tagged{Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Vector{Float64}, Union{SparsityDetection.JacInput, SparsityDetection.JacOutput, SparsityDetection.ProvinanceSet}, Vector{Cassette.Meta{SparsityDetection.ProvinanceSet, Cassette.NoMetaMeta}}, Cassette.Context{nametype(JacobianSparsityContext), SparsityDetection.Sparsity, Cassette.Tag{nametype(JacobianSparsityContext), 0x00000000899fc76c, Nothing}, Cassette.var"##PassType#243", IdDict{Module, Dict{Symbol, Cassette.BindingMeta}}, Cassette.DisableHooks}}, N} where N; verbose::Bool)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/controlflow.jl:148
   [11] jacobian_sparsity(::Function, ::Vector{Float64}, ::Vector{Float64}; sparsity::SparsityDetection.Sparsity, verbose::Bool, raw::Bool)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/jacobian.jl:135
   [12] jacobian_sparsity(::Function, ::Vector{Float64}, ::Vector{Float64})
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/jacobian.jl:130
   [13] sparsity!(::Function, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/SparsityDetection.jl:19
   [14] sparsity!(::Function, ::Vararg{Any, N} where N)
      @ SparsityDetection ~/.julia/packages/SparsityDetection/PbKzm/src/SparsityDetection.jl:19
   [15] top-level scope
      @ ~/.julia/packages/SparseDiffTools/Z3AsD/test/test_integration.jl:40
   [16] include(mod::Module, _path::String)
      @ Base ./Base.jl:379
   [17] include(x::String)
      @ Main.##247 ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [18] top-level scope
      @ ~/.julia/packages/SparseDiffTools/Z3AsD/test/runtests.jl:21
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/SparseDiffTools/Z3AsD/test/runtests.jl:21
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [22] top-level scope
      @ ~/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [23] top-level scope
      @ timing.jl:174
   [24] top-level scope
      @ ~/.julia/packages/SparseDiffTools/Z3AsD/test/runtests.jl:21
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/SparseDiffTools/Z3AsD/test/test_integration.jl:40
Test Summary:    | Error  Total
Integration test |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SparseDiffTools/Z3AsD/test/runtests.jl:14
ERROR: Package SparseDiffTools errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
