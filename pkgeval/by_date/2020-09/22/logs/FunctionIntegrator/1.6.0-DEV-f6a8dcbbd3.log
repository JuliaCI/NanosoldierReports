Julia Version 1.6.0-DEV.1007
Commit f6a8dcbbd3* (2020-09-22 17:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_0kiOvB/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_0kiOvB/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.920671 seconds (1.39 M allocations: 73.955 MiB, 3.12% gc time)
Running: chebyshev_quadrature with k=1
  1.631294 seconds (2.20 M allocations: 126.523 MiB, 3.42% gc time)
Running: chebyshev_quadrature with k=2
  0.311307 seconds (409.38 k allocations: 23.561 MiB, 7.06% gc time)
Running: chebyshev_quadrature with k=3
  0.340403 seconds (522.57 k allocations: 28.732 MiB)
Running: chebyshev_quadrature with k=4
  0.348389 seconds (467.40 k allocations: 25.344 MiB, 11.05% gc time)
Running: jacobi_quadrature with α=β=1
 36.612104 seconds (37.13 M allocations: 3.033 GiB, 9.24% gc time)
Running: laguerre_quadrature with k=1
  3.193724 seconds (3.18 M allocations: 177.211 MiB, 5.85% gc time)
Running: legendre_quadrature
  0.242495 seconds (206.09 k allocations: 11.831 MiB)
Running: lobatto_quadrature
  0.393466 seconds (329.57 k allocations: 19.893 MiB)
Running: radau_quadrature
  0.392354 seconds (446.98 k allocations: 27.232 MiB, 4.64% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.531610 seconds (100.02 M allocations: 1.491 GiB, 0.72% gc time)
Running: rectangle_rule_midpoint.
  0.144543 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 84.119805 seconds (100.02 M allocations: 1.491 GiB, 0.73% gc time)
Running: rombergs_method
  0.654584 seconds (723.16 k allocations: 41.736 MiB, 4.84% gc time)
Running: simpsons_rule
  0.041867 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.108278 seconds (108.53 k allocations: 5.752 MiB)
Running: trapezoidal_rule
  0.363955 seconds (1.51 M allocations: 25.672 MiB, 6.88% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.076316 seconds (30.99 k allocations: 1.865 MiB)
Running: chebyshev_quadrature with k=1
  0.454717 seconds (298.83 k allocations: 15.717 MiB, 5.73% gc time)
Running: chebyshev_quadrature with k=2
  0.152620 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.165874 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.257296 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.852396 seconds (504.11 k allocations: 161.809 MiB, 10.35% gc time)
Running: legendre_quadrature
  0.183815 seconds (41.15 k allocations: 2.367 MiB)
Running: lobatto_quadrature
  0.024256 seconds (15.58 k allocations: 991.700 KiB)
Running: radau_quadrature
  0.024102 seconds (15.69 k allocations: 998.118 KiB)
Running: rectangle_rule_left
 35.445989 seconds (471.41 M allocations: 7.025 GiB, 7.90% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 35.136969 seconds (476.96 M allocations: 7.107 GiB, 7.92% gc time)
Running: rombergs_method
  0.425498 seconds (326.57 k allocations: 18.531 MiB, 3.86% gc time)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.070341 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.055331 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029682 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.128007 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.121142 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.140053 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.135237 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.314805 seconds (364.11 k allocations: 19.015 MiB)
Running: legendre_quadrature
  0.082778 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000214 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000111 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000584 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000368 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000534 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.084707 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000054 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027107 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024067 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060657 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.182257 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.233151 seconds (283.17 k allocations: 15.902 MiB)
Running: chebyshev_quadrature with k=3
  0.253580 seconds (262.91 k allocations: 14.340 MiB, 14.57% gc time)
Running: chebyshev_quadrature with k=4
  0.197823 seconds (262.93 k allocations: 14.233 MiB)
Running: jacobi_quadrature with α=β=1
  2.825378 seconds (447.18 k allocations: 163.192 MiB, 8.04% gc time)
Running: legendre_quadrature
  0.160638 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.191690 seconds (196.77 k allocations: 11.439 MiB)
Running: radau_quadrature
  0.217409 seconds (196.76 k allocations: 11.425 MiB, 8.36% gc time)
Running: rectangle_rule_left
  0.983473 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.025003 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  1.041166 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.145501 seconds (134.26 k allocations: 7.763 MiB)
Running: simpsons_rule
  0.029989 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.031296 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.028587 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.047139 seconds (99.53 k allocations: 2.979 MiB)
Running: chebyshev_quadrature with k=1
  0.214371 seconds (237.19 k allocations: 13.035 MiB)
Running: chebyshev_quadrature with k=2
  0.318970 seconds (290.20 k allocations: 15.933 MiB, 7.83% gc time)
Running: chebyshev_quadrature with k=3
  0.277501 seconds (269.61 k allocations: 14.319 MiB)
Running: chebyshev_quadrature with k=4
  0.253926 seconds (269.63 k allocations: 14.322 MiB)
Running: hermite_quadrature with k=2
 16.085052 seconds (20.89 M allocations: 1.088 GiB, 11.47% gc time)
Running: jacobi_quadrature with α=β=1
  0.395198 seconds (456.35 k allocations: 49.425 MiB)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.208318 seconds (276.26 k allocations: 15.239 MiB)
Running: legendre_quadrature
  0.203788 seconds (191.98 k allocations: 11.043 MiB)
Running: lobatto_quadrature
  0.330002 seconds (217.42 k allocations: 37.198 MiB, 21.43% gc time)
Running: radau_quadrature
  0.216499 seconds (214.00 k allocations: 29.855 MiB, 11.27% gc time)
Running: rectangle_rule_left
  0.025386 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.024121 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.022272 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.108145 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.033394 seconds (39.37 k allocations: 2.062 MiB)
Running: simpsons38_rule
  0.035117 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.026154 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034687 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.179594 seconds (232.72 k allocations: 12.840 MiB)
Running: chebyshev_quadrature with k=2
  0.250772 seconds (285.38 k allocations: 15.643 MiB, 11.68% gc time)
Running: chebyshev_quadrature with k=3
  0.217513 seconds (265.03 k allocations: 14.134 MiB)
Running: chebyshev_quadrature with k=4
  0.209814 seconds (265.06 k allocations: 14.118 MiB)
Running: hermite_quadrature with k=2
  0.156947 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
  9.827616 seconds (449.62 k allocations: 1.175 GiB, 13.32% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.269048 seconds (271.55 k allocations: 15.066 MiB, 5.61% gc time)
Running: legendre_quadrature
  0.180502 seconds (187.55 k allocations: 10.831 MiB)
Running: lobatto_quadrature
  0.209989 seconds (208.18 k allocations: 22.920 MiB)
Running: radau_quadrature
  0.210856 seconds (207.33 k allocations: 20.914 MiB, 6.86% gc time)
Running: rectangle_rule_left
  0.025101 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.066704 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.022511 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.121277 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.029641 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.035181 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.022653 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029043 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.211438 seconds (231.10 k allocations: 13.043 MiB, 8.08% gc time)
Running: chebyshev_quadrature with k=2
  0.215709 seconds (283.67 k allocations: 15.985 MiB)
Running: chebyshev_quadrature with k=3
  0.269837 seconds (263.41 k allocations: 14.334 MiB)
Running: chebyshev_quadrature with k=4
  0.272579 seconds (263.43 k allocations: 14.159 MiB, 8.36% gc time)
Running: jacobi_quadrature with α=β=1
  2.924397 seconds (447.71 k allocations: 194.255 MiB, 8.11% gc time)
Running: legendre_quadrature
  0.177087 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.226185 seconds (197.26 k allocations: 11.451 MiB, 8.84% gc time)
Running: radau_quadrature
  0.188630 seconds (197.26 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  0.329553 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.024704 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.111788 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.154066 seconds (145.02 k allocations: 8.487 MiB)
Running: simpsons_rule
  0.035426 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.035674 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.027076 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032660 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.245770 seconds (231.69 k allocations: 12.988 MiB, 9.35% gc time)
Running: chebyshev_quadrature with k=2
  0.227439 seconds (284.30 k allocations: 15.891 MiB)
Running: chebyshev_quadrature with k=3
  0.229251 seconds (263.99 k allocations: 14.254 MiB)
Running: chebyshev_quadrature with k=4
  0.282156 seconds (264.01 k allocations: 14.333 MiB, 8.30% gc time)
Running: jacobi_quadrature with α=β=1
  2.338457 seconds (448.43 k allocations: 149.030 MiB, 4.51% gc time)
Running: legendre_quadrature
  0.144455 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.199309 seconds (197.86 k allocations: 11.461 MiB, 8.55% gc time)
Running: radau_quadrature
  0.164658 seconds (197.85 k allocations: 11.466 MiB)
Running: rectangle_rule_left
  0.963393 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.026925 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.044680 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.137164 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.030505 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.031573 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.025807 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179107 seconds (145.08 k allocations: 8.694 MiB)
Running: chebyshev_quadrature with k=1
  0.165421 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.178970 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.184498 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.196001 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.232315 seconds (480.51 k allocations: 167.763 MiB, 6.26% gc time)
Running: legendre_quadrature
  0.128804 seconds (18.73 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000097 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000046 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 45.737263 seconds (590.00 M allocations: 8.792 GiB, 2.74% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.601502 seconds (592.75 M allocations: 8.833 GiB, 2.47% gc time)
Running: rombergs_method
  0.148440 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000043 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028267 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025151 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.414776 seconds (629.32 M allocations: 9.387 GiB, 4.06% gc time)
Running: chebyshev_quadrature with k=1
  0.745216 seconds (419.20 k allocations: 23.144 MiB, 4.84% gc time)
Running: chebyshev_quadrature with k=2
 14.701684 seconds (473.85 k allocations: 4.040 GiB, 3.86% gc time)
Running: chebyshev_quadrature with k=3
  6.253763 seconds (277.36 k allocations: 1.643 GiB, 5.28% gc time)
Running: chebyshev_quadrature with k=4
  8.555029 seconds (277.38 k allocations: 2.261 GiB, 2.34% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 66.344873 seconds (484.52 k allocations: 13.254 GiB, 3.11% gc time)
Running: legendre_quadrature.
  6.831854 seconds (223.24 k allocations: 1.976 GiB, 2.29% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.568075 seconds (8.23 M allocations: 13.383 GiB, 4.17% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.741228 seconds (7.23 M allocations: 13.369 GiB, 3.65% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.004312 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.065072 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.708336 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.062907 seconds (438.15 k allocations: 152.669 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.428909 seconds (600.04 M allocations: 8.943 GiB, 8.37% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.940769 seconds (600.05 M allocations: 8.943 GiB, 8.35% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.801762 seconds (600.03 M allocations: 8.943 GiB, 8.78% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058929 seconds (180.46 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.208026 seconds (247.70 k allocations: 13.465 MiB)
Running: chebyshev_quadrature with k=2
  0.325868 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.237174 seconds (248.58 k allocations: 12.831 MiB)
Running: chebyshev_quadrature with k=4
  0.275832 seconds (248.60 k allocations: 12.827 MiB)
Running: jacobi_quadrature with α=β=1
  0.389184 seconds (389.29 k allocations: 34.992 MiB)
Running: laguerre_quadrature with k=2
  0.237186 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.127984 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.037454 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.029363 seconds (9.32 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.054164 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.046324 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.050001 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.250562 seconds (171.76 k allocations: 9.798 MiB)
Running: simpsons_rule
  0.002203 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.052648 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.212530 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001930 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.152235 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.174439 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.190040 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.154559 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
 10.430633 seconds (366.38 k allocations: 904.821 MiB, 3.38% gc time)
Running: legendre_quadrature
  0.076920 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000169 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000131 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.056683 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000509 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.102829 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.112331 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000058 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001430 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000714 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.142477 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.134303 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.171407 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.234243 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  2.901676 seconds (372.94 k allocations: 252.941 MiB)
Running: legendre_quadrature
  0.095373 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000112 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000073 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.238274 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001096 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.914382 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.101886 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000075 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001930 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
