Julia Version 1.6.0-DEV.1007
Commit f6a8dcbbd3* (2020-09-22 17:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_zFxqzj/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_zFxqzj/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07672051803217593 0.09421081840982382; 0.07672051803217593 0.0 -0.23072987032296527; -0.09421081840982382 0.23072987032296527 0.0])
dAA = so3([0.0 -0.14624070357333416 -0.11585411173387601; 0.14624070357333416 0.0 -0.04103898598424138; 0.11585411173387601 0.04103898598424138 0.0])
dAA = so3([0.0 0.12022645467215134 -0.12528390473194437; -0.12022645467215134 0.0 -0.01107525366625787; 0.12528390473194437 0.01107525366625787 0.0])
dAA = Quaternion(0.9979350656957053, [0.06091380545050387, 0.011881325307979418, -0.01655134645195513])
dAA = SO3([0.9966140623594527 -0.03455481329717591 0.07460814691028453; 0.05560233224579908 0.951699442250283 -0.30195455331776055; -0.06057054858771759 0.3050805410026963 0.950398375495921])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8932752012378342 -0.3664393422311754 -0.26034904132469966; 0.33728401817584097 0.9292644724403089 -0.1506885242591264; 0.297151318248238 0.04679475104558059 0.9536830423877298]), [2.3072987032296526, 0.9421081840982382, 0.7672051803217592])
xj = SE3(SO3([0.9948539400049957 0.08735020841265752 0.051337891920117354; -0.06797249985247776 0.9511505740287018 -0.3011516640974705; -0.07513572599197578 0.2961123547154629 0.9521933081389107]), [0.1107525366625787, -1.2528390473194435, -1.2022645467215134])
Dx = SE3(SO3([0.8434256355584606 0.4868258390499315 0.227230719129561; -0.43123401019980917 0.8657183873920191 -0.25410411680717193; -0.3204222616014657 0.11632831196528315 0.9401049399431478]), [-3.287671366505796, -1.326946394149218, -0.9756278333569927])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
