Julia Version 1.6.0-DEV.993
Commit 5a86131b14* (2020-09-21 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_sdn420/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_sdn420/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21679118996944402
curgen: 20 fitness: 0.2172173490300719
curgen: 30 fitness: 0.21722433353354845
curgen: 40 fitness: 0.21723319294712518
curgen: 50 fitness: 0.21723329153800902
CoordinateCreature{Vector{Float64}}([0.22263537868275465], -0.21723329153800902) 0.22263537868275465 -0.21723329153800902
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581937400719223
curgen: 100 fitness: 3.258221096185393
curgen: 150 fitness: 3.2582780078595475
curgen: 200 fitness: 3.258322279219974
curgen: 250 fitness: 3.258418261805493
curgen: 300 fitness: 3.258421929655166
curgen: 350 fitness: 3.258421929655166
curgen: 400 fitness: 3.258426999838339
curgen: 450 fitness: 3.258450215030807
curgen: 500 fitness: 3.258450215030807
CoordinateCreature{Vector{Float64}}([-0.22244744719195256, 0.22251162436223215, 0.22273413270643289, -0.22254532046565428, -0.2224217410165825, 0.22269051353198066, 0.22281304950774344, -0.22209799297713942, -0.22265321289087342, 0.22254666593368821, 0.22261114502039112, 0.22247795869839515, -0.2234118016858306, 0.2224940485890441, -0.2228706846375986], -3.258450215030807) [-0.22244744719195256, 0.22251162436223215, 0.22273413270643289, -0.22254532046565428, -0.2224217410165825, 0.22269051353198066, 0.22281304950774344, -0.22209799297713942, -0.22265321289087342, 0.22254666593368821, 0.22261114502039112, 0.22247795869839515, -0.2234118016858306, 0.2224940485890441, -0.2228706846375986] -3.258450215030807
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002809970183648147
curgen: 100 fitness: -0.0026443150499630974
curgen: 150 fitness: -0.002148169560371116
curgen: 200 fitness: -0.0021312596601603673
curgen: 250 fitness: -0.002098989957488584
curgen: 300 fitness: -0.0018358015695696395
curgen: 350 fitness: -0.0016340758791386634
curgen: 400 fitness: -0.0016156043194257563
curgen: 450 fitness: -0.0015758980389364297
curgen: 500 fitness: -0.0014684160012166103
CoordinateCreature{Vector{Float64}}([-0.0015177050960279695, -0.00021623975752874938, 0.0007456098570721673, -0.00022918204396253552, 0.00028261243470869884, 0.00021635257845709028, 0.00039042707805249507, -0.0002754366216899799, 0.001627791758474187, -0.00010263554508618781, -0.0001377433516677692, -0.00012343247645246443, 0.00015252356231230078, 0.0006951923287051233, 0.0009418078018305266], 0.0014684160012166103) [-0.0015177050960279695, -0.00021623975752874938, 0.0007456098570721673, -0.00022918204396253552, 0.00028261243470869884, 0.00021635257845709028, 0.00039042707805249507, -0.0002754366216899799, 0.001627791758474187, -0.00010263554508618781, -0.0001377433516677692, -0.00012343247645246443, 0.00015252356231230078, 0.0006951923287051233, 0.0009418078018305266] 0.0014684160012166103
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
