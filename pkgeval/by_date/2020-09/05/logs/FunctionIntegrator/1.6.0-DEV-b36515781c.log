Julia Version 1.6.0-DEV.846
Commit b36515781c (2020-09-05 13:16 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_fsCBqW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_fsCBqW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.218187 seconds (1.47 M allocations: 78.258 MiB, 4.36% gc time)
Running: chebyshev_quadrature with k=1
  1.738897 seconds (2.21 M allocations: 126.401 MiB, 3.01% gc time)
Running: chebyshev_quadrature with k=2
  0.292291 seconds (417.33 k allocations: 23.854 MiB)
Running: chebyshev_quadrature with k=3
  0.367867 seconds (532.74 k allocations: 29.117 MiB, 3.72% gc time)
Running: chebyshev_quadrature with k=4
  0.315064 seconds (476.24 k allocations: 25.710 MiB)
Running: jacobi_quadrature with α=β=1
 39.577424 seconds (38.15 M allocations: 3.084 GiB, 9.06% gc time)
Running: laguerre_quadrature with k=1
  3.034517 seconds (3.26 M allocations: 180.442 MiB, 2.70% gc time)
Running: legendre_quadrature
  0.200553 seconds (211.65 k allocations: 12.066 MiB)
Running: lobatto_quadrature
  0.351515 seconds (342.81 k allocations: 20.537 MiB, 11.39% gc time)
Running: radau_quadrature
  0.279762 seconds (325.44 k allocations: 19.569 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.885681 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.144472 seconds (173.41 k allocations: 3.857 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.947320 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rombergs_method
  0.560284 seconds (741.97 k allocations: 42.427 MiB, 5.48% gc time)
Running: simpsons_rule
  0.040789 seconds (46.84 k allocations: 2.079 MiB)
Running: simpsons38_rule
  0.163858 seconds (112.47 k allocations: 5.913 MiB)
Running: trapezoidal_rule
  0.355277 seconds (1.52 M allocations: 25.787 MiB, 4.04% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.086101 seconds (32.18 k allocations: 1.903 MiB)
Running: chebyshev_quadrature with k=1
  0.475656 seconds (281.38 k allocations: 14.621 MiB)
Running: chebyshev_quadrature with k=2
  0.153519 seconds (94.41 k allocations: 2.692 MiB)
Running: chebyshev_quadrature with k=3
  0.161539 seconds (82.63 k allocations: 2.491 MiB)
Running: chebyshev_quadrature with k=4
  0.186952 seconds (65.24 k allocations: 2.137 MiB, 13.04% gc time)
Running: jacobi_quadrature with α=β=1
  1.891652 seconds (513.80 k allocations: 162.243 MiB, 1.71% gc time)
Running: legendre_quadrature
  0.189565 seconds (43.27 k allocations: 2.481 MiB)
Running: lobatto_quadrature
  0.022028 seconds (17.14 k allocations: 1.060 MiB)
Running: radau_quadrature
  0.021443 seconds (17.12 k allocations: 1.059 MiB)
Running: rectangle_rule_left
 27.743585 seconds (471.41 M allocations: 7.025 GiB, 2.26% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.461424 seconds (476.96 M allocations: 7.107 GiB, 2.30% gc time)
Running: rombergs_method
  0.377027 seconds (335.81 k allocations: 18.900 MiB, 2.32% gc time)
Running: simpsons_rule
  0.000031 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065650 seconds (19.59 k allocations: 1.169 MiB)
Running: trapezoidal_rule
  0.057093 seconds (18.06 k allocations: 1.075 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031084 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.117253 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.118556 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.120575 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.124712 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.353828 seconds (370.75 k allocations: 19.294 MiB)
Running: legendre_quadrature
  0.069446 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000177 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000057 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000525 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000371 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000503 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072208 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000064 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024429 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022191 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.092300 seconds (74.72 k allocations: 4.293 MiB, 31.84% gc time)
Running: chebyshev_quadrature with k=1
  0.181545 seconds (235.33 k allocations: 13.171 MiB)
Running: chebyshev_quadrature with k=2
  0.214813 seconds (289.10 k allocations: 16.135 MiB)
Running: chebyshev_quadrature with k=3
  0.229425 seconds (268.03 k allocations: 14.527 MiB, 11.09% gc time)
Running: chebyshev_quadrature with k=4
  0.202103 seconds (268.05 k allocations: 14.441 MiB)
Running: jacobi_quadrature with α=β=1
  2.041047 seconds (456.19 k allocations: 163.565 MiB, 28.02% gc time)
Running: legendre_quadrature
  0.149827 seconds (189.62 k allocations: 10.853 MiB)
Running: lobatto_quadrature
  0.170832 seconds (201.27 k allocations: 11.578 MiB)
Running: radau_quadrature
  0.168283 seconds (201.27 k allocations: 11.639 MiB)
Running: rectangle_rule_left
  1.112431 seconds (19.49 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.027547 seconds (25.61 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  1.073718 seconds (18.01 k allocations: 1.082 MiB)
Running: rombergs_method
  0.141990 seconds (137.14 k allocations: 7.863 MiB, 9.79% gc time)
Running: simpsons_rule
  0.030517 seconds (28.59 k allocations: 1.764 MiB)
Running: simpsons38_rule
  0.036105 seconds (44.06 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.027748 seconds (44.96 k allocations: 1.800 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.038453 seconds (100.78 k allocations: 3.022 MiB)
Running: chebyshev_quadrature with k=1
  0.186617 seconds (242.06 k allocations: 13.240 MiB)
Running: chebyshev_quadrature with k=2
  0.240463 seconds (296.27 k allocations: 16.134 MiB, 8.48% gc time)
Running: chebyshev_quadrature with k=3
  0.263923 seconds (274.89 k allocations: 14.535 MiB)
Running: chebyshev_quadrature with k=4
  0.205116 seconds (274.92 k allocations: 14.545 MiB)
Running: hermite_quadrature with k=2
 14.808809 seconds (21.32 M allocations: 1.104 GiB, 8.40% gc time)
Running: jacobi_quadrature with α=β=1
  0.484846 seconds (465.56 k allocations: 49.875 MiB, 6.77% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.223143 seconds (282.32 k allocations: 15.477 MiB)
Running: legendre_quadrature
  0.192139 seconds (196.33 k allocations: 11.190 MiB, 16.04% gc time)
Running: lobatto_quadrature
  0.220101 seconds (222.10 k allocations: 37.351 MiB)
Running: radau_quadrature
  0.229940 seconds (218.68 k allocations: 30.016 MiB, 8.15% gc time)
Running: rectangle_rule_left
  0.029210 seconds (22.54 k allocations: 1.320 MiB)
Running: rectangle_rule_midpoint
  0.028921 seconds (27.52 k allocations: 1.678 MiB)
Running: rectangle_rule_right
  0.026788 seconds (19.19 k allocations: 1.139 MiB)
Running: rombergs_method
  0.118596 seconds (139.69 k allocations: 7.906 MiB)
Running: simpsons_rule
  0.041227 seconds (40.62 k allocations: 2.104 MiB)
Running: simpsons38_rule
  0.045401 seconds (59.22 k allocations: 3.128 MiB)
Running: trapezoidal_rule
  0.032341 seconds (31.16 k allocations: 1.732 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041677 seconds (61.05 k allocations: 2.318 MiB)
Running: chebyshev_quadrature with k=1
  0.251498 seconds (237.50 k allocations: 13.083 MiB, 14.67% gc time)
Running: chebyshev_quadrature with k=2
  0.239324 seconds (291.38 k allocations: 15.872 MiB)
Running: chebyshev_quadrature with k=3
  0.202758 seconds (270.22 k allocations: 14.326 MiB)
Running: chebyshev_quadrature with k=4
  0.218448 seconds (270.24 k allocations: 14.327 MiB)
Running: hermite_quadrature with k=2
  0.174515 seconds (174.48 k allocations: 9.919 MiB, 14.99% gc time)
Running: jacobi_quadrature with α=β=1
  6.681999 seconds (458.70 k allocations: 1.175 GiB, 16.03% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.220571 seconds (277.50 k allocations: 15.294 MiB)
Running: legendre_quadrature
  0.188926 seconds (191.80 k allocations: 11.089 MiB, 8.87% gc time)
Running: lobatto_quadrature
  0.201188 seconds (212.75 k allocations: 23.081 MiB)
Running: radau_quadrature
  0.212539 seconds (211.90 k allocations: 21.012 MiB, 7.37% gc time)
Running: rectangle_rule_left
  0.028756 seconds (20.20 k allocations: 1.209 MiB)
Running: rectangle_rule_midpoint
  0.027280 seconds (26.34 k allocations: 1.622 MiB)
Running: rectangle_rule_right
  0.027037 seconds (18.00 k allocations: 1.082 MiB)
Running: rombergs_method
  0.126444 seconds (135.40 k allocations: 7.721 MiB)
Running: simpsons_rule
  0.034764 seconds (33.03 k allocations: 1.889 MiB)
Running: simpsons38_rule
  0.040166 seconds (49.92 k allocations: 2.882 MiB)
Running: trapezoidal_rule
  0.071229 seconds (25.97 k allocations: 1.565 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034905 seconds (32.00 k allocations: 1.912 MiB)
Running: chebyshev_quadrature with k=1
  0.197358 seconds (235.83 k allocations: 13.224 MiB)
Running: chebyshev_quadrature with k=2
  0.281676 seconds (289.62 k allocations: 16.213 MiB, 7.66% gc time)
Running: chebyshev_quadrature with k=3
  0.214782 seconds (268.55 k allocations: 14.555 MiB)
Running: chebyshev_quadrature with k=4
  0.227489 seconds (268.58 k allocations: 14.376 MiB)
Running: jacobi_quadrature with α=β=1
  1.610448 seconds (456.75 k allocations: 194.629 MiB, 4.79% gc time)
Running: legendre_quadrature
  0.157797 seconds (190.13 k allocations: 10.882 MiB)
Running: lobatto_quadrature
  0.180699 seconds (201.79 k allocations: 11.605 MiB)
Running: radau_quadrature
  0.185731 seconds (201.78 k allocations: 11.603 MiB, 7.78% gc time)
Running: rectangle_rule_left
  0.319876 seconds (20.04 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.025815 seconds (25.97 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  0.113940 seconds (18.37 k allocations: 1.101 MiB)
Running: rombergs_method
  0.128625 seconds (148.32 k allocations: 8.599 MiB)
Running: simpsons_rule
  0.034555 seconds (29.31 k allocations: 1.795 MiB)
Running: simpsons38_rule
  0.034180 seconds (44.80 k allocations: 2.765 MiB)
Running: trapezoidal_rule
  0.024185 seconds (45.92 k allocations: 1.835 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034707 seconds (32.73 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.201289 seconds (236.43 k allocations: 13.171 MiB)
Running: chebyshev_quadrature with k=2
  0.244530 seconds (290.26 k allocations: 16.128 MiB, 7.43% gc time)
Running: chebyshev_quadrature with k=3
  0.202589 seconds (269.14 k allocations: 14.474 MiB)
Running: chebyshev_quadrature with k=4
  0.197994 seconds (269.16 k allocations: 14.557 MiB)
Running: jacobi_quadrature with α=β=1
  1.321357 seconds (457.47 k allocations: 149.321 MiB, 6.75% gc time)
Running: legendre_quadrature
  0.157437 seconds (190.73 k allocations: 10.930 MiB)
Running: lobatto_quadrature
  0.176979 seconds (202.39 k allocations: 11.618 MiB)
Running: radau_quadrature
  0.205053 seconds (202.39 k allocations: 11.622 MiB, 9.07% gc time)
Running: rectangle_rule_left
  1.207794 seconds (20.29 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.026810 seconds (25.96 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  1.136785 seconds (18.35 k allocations: 1.100 MiB)
Running: rombergs_method
  0.169140 seconds (138.40 k allocations: 7.920 MiB)
Running: simpsons_rule
  0.037220 seconds (30.02 k allocations: 1.822 MiB)
Running: simpsons38_rule
  0.038277 seconds (45.51 k allocations: 2.792 MiB)
Running: trapezoidal_rule
  0.029983 seconds (58.16 k allocations: 2.035 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.169153 seconds (150.66 k allocations: 8.881 MiB)
Running: chebyshev_quadrature with k=1
  0.158287 seconds (70.50 k allocations: 2.219 MiB)
Running: chebyshev_quadrature with k=2
  0.158363 seconds (105.70 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=3
  0.158953 seconds (93.14 k allocations: 2.669 MiB)
Running: chebyshev_quadrature with k=4
  0.173496 seconds (72.67 k allocations: 2.265 MiB)
Running: jacobi_quadrature with α=β=1
  2.892109 seconds (487.48 k allocations: 168.056 MiB, 5.40% gc time)
Running: legendre_quadrature
  0.109284 seconds (19.30 k allocations: 1.107 MiB)
Running: lobatto_quadrature
  0.000133 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000095 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 42.952179 seconds (590.00 M allocations: 8.792 GiB, 2.90% gc time)
Running: rectangle_rule_midpoint
  0.000094 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.552287 seconds (592.75 M allocations: 8.833 GiB, 2.68% gc time)
Running: rombergs_method
  0.127520 seconds (21.07 k allocations: 1.180 MiB)
Running: simpsons_rule
  0.000064 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030332 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024241 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.044451 seconds (629.33 M allocations: 9.387 GiB, 3.82% gc time)
Running: chebyshev_quadrature with k=1
  0.531976 seconds (429.33 k allocations: 23.580 MiB, 2.72% gc time)
Running: chebyshev_quadrature with k=2
 12.500843 seconds (485.21 k allocations: 4.041 GiB, 4.15% gc time)
Running: chebyshev_quadrature with k=3
  5.722297 seconds (282.70 k allocations: 1.643 GiB, 4.69% gc time)
Running: chebyshev_quadrature with k=4
  7.647803 seconds (282.72 k allocations: 2.262 GiB, 2.48% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 53.877638 seconds (495.71 k allocations: 13.255 GiB, 2.94% gc time)
Running: legendre_quadrature.
  5.695384 seconds (229.21 k allocations: 1.976 GiB, 1.07% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.294712 seconds (8.24 M allocations: 13.384 GiB, 3.91% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.536999 seconds (7.24 M allocations: 13.369 GiB, 3.33% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.904659 seconds (23.05 k allocations: 1.373 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.974874 seconds (31.59 k allocations: 1.922 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.198883 seconds (23.26 k allocations: 1.384 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.331143 seconds (449.52 k allocations: 153.129 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.269576 seconds (600.04 M allocations: 8.943 GiB, 8.81% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.545321 seconds (600.05 M allocations: 8.943 GiB, 8.26% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.987695 seconds (600.03 M allocations: 8.943 GiB, 8.35% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.070434 seconds (181.75 k allocations: 4.453 MiB)
Running: chebyshev_quadrature with k=1
  0.230907 seconds (252.62 k allocations: 13.687 MiB)
Running: chebyshev_quadrature with k=2
  0.209515 seconds (277.53 k allocations: 14.737 MiB)
Running: chebyshev_quadrature with k=3
  0.205496 seconds (252.96 k allocations: 13.021 MiB)
Running: chebyshev_quadrature with k=4
  0.225616 seconds (252.98 k allocations: 13.015 MiB)
Running: jacobi_quadrature with α=β=1
  0.386867 seconds (396.27 k allocations: 35.299 MiB)
Running: laguerre_quadrature with k=2
  0.203889 seconds (184.62 k allocations: 10.655 MiB)
Running: legendre_quadrature
  0.131527 seconds (148.77 k allocations: 8.175 MiB)
Running: lobatto_quadrature
  0.036108 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.031956 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.062552 seconds (19.51 k allocations: 1.143 MiB)
Running: rectangle_rule_midpoint
  0.048761 seconds (26.44 k allocations: 1.608 MiB)
Running: rectangle_rule_right
  0.057386 seconds (18.10 k allocations: 1.069 MiB)
Running: rombergs_method
  0.239610 seconds (178.40 k allocations: 10.163 MiB)
Running: simpsons_rule
  0.001997 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054781 seconds (80.61 k allocations: 3.446 MiB)
Running: trapezoidal_rule
  0.185796 seconds (2.39 M allocations: 37.721 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002101 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.125255 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.125723 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.121838 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.119061 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.250905 seconds (372.96 k allocations: 905.167 MiB, 4.12% gc time)
Running: legendre_quadrature
  0.065867 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000171 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000124 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.945551 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000518 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.941344 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065087 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000066 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000079 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000958 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000730 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.112278 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.123751 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.132102 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.132893 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.035363 seconds (379.63 k allocations: 253.224 MiB)
Running: legendre_quadrature
  0.076393 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000036 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.667469 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001097 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.738751 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075785 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000058 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001629 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
