Julia Version 1.6.0-DEV.842
Commit 594ac899ff (2020-09-04 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_eiyg5h/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_eiyg5h/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.066108 seconds (1.47 M allocations: 78.163 MiB, 5.30% gc time)
Running: chebyshev_quadrature with k=1
  1.926658 seconds (2.22 M allocations: 126.547 MiB, 2.68% gc time)
Running: chebyshev_quadrature with k=2
  0.309023 seconds (417.32 k allocations: 23.848 MiB)
Running: chebyshev_quadrature with k=3
  0.397336 seconds (532.74 k allocations: 29.127 MiB, 4.85% gc time)
Running: chebyshev_quadrature with k=4
  0.336022 seconds (476.24 k allocations: 25.704 MiB)
Running: jacobi_quadrature with α=β=1
 46.838155 seconds (38.17 M allocations: 3.084 GiB, 8.87% gc time)
Running: laguerre_quadrature with k=1
  3.888186 seconds (3.26 M allocations: 180.433 MiB, 2.91% gc time)
Running: legendre_quadrature
  0.243886 seconds (211.75 k allocations: 12.071 MiB)
Running: lobatto_quadrature
  0.438023 seconds (343.02 k allocations: 20.572 MiB, 6.91% gc time)
Running: radau_quadrature
  0.360423 seconds (325.66 k allocations: 19.586 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.177324 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rectangle_rule_midpoint.
  0.143070 seconds (173.41 k allocations: 3.857 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.554964 seconds (100.02 M allocations: 1.491 GiB, 0.23% gc time)
Running: rombergs_method
  0.519300 seconds (742.07 k allocations: 42.432 MiB, 6.10% gc time)
Running: simpsons_rule
  0.033503 seconds (46.84 k allocations: 2.079 MiB)
Running: simpsons38_rule
  0.089676 seconds (112.59 k allocations: 5.919 MiB)
Running: trapezoidal_rule
  0.293099 seconds (1.52 M allocations: 25.793 MiB, 4.86% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081998 seconds (32.18 k allocations: 1.903 MiB)
Running: chebyshev_quadrature with k=1
  0.472029 seconds (281.59 k allocations: 14.637 MiB)
Running: chebyshev_quadrature with k=2
  0.146796 seconds (94.41 k allocations: 2.692 MiB)
Running: chebyshev_quadrature with k=3
  0.152505 seconds (82.63 k allocations: 2.491 MiB)
Running: chebyshev_quadrature with k=4
  0.151871 seconds (65.24 k allocations: 2.137 MiB)
Running: jacobi_quadrature with α=β=1
  2.499976 seconds (513.76 k allocations: 162.242 MiB, 22.62% gc time)
Running: legendre_quadrature
  0.160860 seconds (43.36 k allocations: 2.486 MiB)
Running: lobatto_quadrature
  0.021477 seconds (17.23 k allocations: 1.065 MiB)
Running: radau_quadrature
  0.021581 seconds (17.22 k allocations: 1.064 MiB)
Running: rectangle_rule_left
 28.943661 seconds (471.41 M allocations: 7.025 GiB, 2.47% gc time)
Running: rectangle_rule_midpoint
  0.000065 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.687042 seconds (476.96 M allocations: 7.107 GiB, 2.31% gc time)
Running: rombergs_method
  0.372026 seconds (335.91 k allocations: 18.905 MiB)
Running: simpsons_rule
  0.000021 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.069273 seconds (19.59 k allocations: 1.169 MiB)
Running: trapezoidal_rule
  0.060077 seconds (18.05 k allocations: 1.075 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028999 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.102952 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.100530 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.106924 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.108051 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.305638 seconds (370.75 k allocations: 19.294 MiB)
Running: legendre_quadrature
  0.063885 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000087 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000036 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000533 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000377 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000524 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.066907 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000038 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023661 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020444 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.055582 seconds (74.72 k allocations: 4.293 MiB)
Running: chebyshev_quadrature with k=1
  0.175779 seconds (235.33 k allocations: 13.168 MiB)
Running: chebyshev_quadrature with k=2
  0.229102 seconds (289.11 k allocations: 16.132 MiB, 10.93% gc time)
Running: chebyshev_quadrature with k=3
  0.197801 seconds (268.03 k allocations: 14.543 MiB)
Running: chebyshev_quadrature with k=4
  0.290615 seconds (268.06 k allocations: 14.442 MiB, 10.40% gc time)
Running: jacobi_quadrature with α=β=1
  2.558166 seconds (456.19 k allocations: 163.564 MiB, 2.23% gc time)
Running: legendre_quadrature
  0.165496 seconds (189.62 k allocations: 10.854 MiB)
Running: lobatto_quadrature
  0.198591 seconds (201.27 k allocations: 11.574 MiB, 10.35% gc time)
Running: radau_quadrature
  0.169305 seconds (201.27 k allocations: 11.577 MiB)
Running: rectangle_rule_left
  1.087634 seconds (19.49 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.025738 seconds (25.61 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  1.088984 seconds (18.01 k allocations: 1.082 MiB)
Running: rombergs_method
  0.130063 seconds (137.14 k allocations: 7.864 MiB)
Running: simpsons_rule
  0.031477 seconds (28.59 k allocations: 1.765 MiB)
Running: simpsons38_rule
  0.036586 seconds (44.06 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.028013 seconds (44.96 k allocations: 1.800 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.075705 seconds (100.78 k allocations: 3.022 MiB, 46.56% gc time)
Running: chebyshev_quadrature with k=1
  0.185303 seconds (242.06 k allocations: 13.221 MiB)
Running: chebyshev_quadrature with k=2
  0.211128 seconds (296.27 k allocations: 16.118 MiB)
Running: chebyshev_quadrature with k=3
  0.232534 seconds (274.89 k allocations: 14.535 MiB, 8.37% gc time)
Running: chebyshev_quadrature with k=4
  0.211381 seconds (274.92 k allocations: 14.549 MiB)
Running: hermite_quadrature with k=2
 14.757861 seconds (21.36 M allocations: 1.107 GiB, 9.60% gc time)
Running: jacobi_quadrature with α=β=1
  0.401346 seconds (465.56 k allocations: 49.875 MiB)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.196534 seconds (282.32 k allocations: 15.477 MiB)
Running: legendre_quadrature
  0.145661 seconds (196.33 k allocations: 11.190 MiB)
Running: lobatto_quadrature
  0.238421 seconds (222.10 k allocations: 37.351 MiB, 14.81% gc time)
Running: radau_quadrature
  0.290940 seconds (218.68 k allocations: 30.017 MiB, 7.90% gc time)
Running: rectangle_rule_left
  0.028599 seconds (22.54 k allocations: 1.320 MiB)
Running: rectangle_rule_midpoint
  0.027931 seconds (27.52 k allocations: 1.678 MiB)
Running: rectangle_rule_right
  0.024960 seconds (19.19 k allocations: 1.139 MiB)
Running: rombergs_method
  0.112079 seconds (139.69 k allocations: 7.906 MiB)
Running: simpsons_rule
  0.041881 seconds (40.62 k allocations: 2.104 MiB)
Running: simpsons38_rule
  0.051294 seconds (59.22 k allocations: 3.128 MiB)
Running: trapezoidal_rule
  0.054799 seconds (31.16 k allocations: 1.732 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.049783 seconds (61.05 k allocations: 2.318 MiB)
Running: chebyshev_quadrature with k=1
  0.241970 seconds (237.50 k allocations: 13.005 MiB)
Running: chebyshev_quadrature with k=2
  0.274531 seconds (291.38 k allocations: 15.872 MiB, 9.56% gc time)
Running: chebyshev_quadrature with k=3
  0.301767 seconds (270.22 k allocations: 14.326 MiB)
Running: chebyshev_quadrature with k=4
  0.285342 seconds (270.24 k allocations: 14.328 MiB)
Running: hermite_quadrature with k=2
  0.259875 seconds (174.48 k allocations: 9.919 MiB)
Running: jacobi_quadrature with α=β=1
  8.555409 seconds (458.70 k allocations: 1.175 GiB, 8.63% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.233302 seconds (277.50 k allocations: 15.293 MiB)
Running: legendre_quadrature
  0.174010 seconds (191.79 k allocations: 10.964 MiB)
Running: lobatto_quadrature
  0.237153 seconds (212.75 k allocations: 23.081 MiB, 6.27% gc time)
Running: radau_quadrature
  0.210526 seconds (211.90 k allocations: 21.012 MiB)
Running: rectangle_rule_left
  0.028061 seconds (20.20 k allocations: 1.209 MiB)
Running: rectangle_rule_midpoint
  0.029467 seconds (26.34 k allocations: 1.622 MiB)
Running: rectangle_rule_right
  0.027516 seconds (18.00 k allocations: 1.082 MiB)
Running: rombergs_method
  0.158276 seconds (135.40 k allocations: 7.721 MiB)
Running: simpsons_rule
  0.045414 seconds (33.03 k allocations: 1.889 MiB)
Running: simpsons38_rule
  0.054917 seconds (49.92 k allocations: 2.882 MiB)
Running: trapezoidal_rule
  0.098715 seconds (25.97 k allocations: 1.565 MiB, 24.39% gc time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030561 seconds (32.00 k allocations: 1.912 MiB)
Running: chebyshev_quadrature with k=1
  0.193887 seconds (235.83 k allocations: 13.224 MiB)
Running: chebyshev_quadrature with k=2
  0.257264 seconds (289.62 k allocations: 16.212 MiB)
Running: chebyshev_quadrature with k=3
  0.261424 seconds (268.55 k allocations: 14.538 MiB, 7.55% gc time)
Running: chebyshev_quadrature with k=4
  0.245476 seconds (268.58 k allocations: 14.377 MiB)
Running: jacobi_quadrature with α=β=1
  2.092161 seconds (456.75 k allocations: 194.687 MiB, 8.51% gc time)
Running: legendre_quadrature
  0.194965 seconds (190.13 k allocations: 10.882 MiB, 7.95% gc time)
Running: lobatto_quadrature
  0.184705 seconds (201.79 k allocations: 11.605 MiB)
Running: radau_quadrature
  0.199368 seconds (201.78 k allocations: 11.600 MiB)
Running: rectangle_rule_left
  0.301637 seconds (20.04 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.024690 seconds (25.97 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  0.105015 seconds (18.37 k allocations: 1.101 MiB)
Running: rombergs_method
  0.143239 seconds (148.32 k allocations: 8.599 MiB)
Running: simpsons_rule
  0.030581 seconds (29.31 k allocations: 1.795 MiB)
Running: simpsons38_rule
  0.051230 seconds (44.80 k allocations: 2.765 MiB, 33.52% gc time)
Running: trapezoidal_rule
  0.025679 seconds (45.92 k allocations: 1.835 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030868 seconds (32.73 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.193785 seconds (236.43 k allocations: 13.171 MiB)
Running: chebyshev_quadrature with k=2
  0.242957 seconds (290.26 k allocations: 16.132 MiB)
Running: chebyshev_quadrature with k=3
  0.227726 seconds (269.14 k allocations: 14.478 MiB)
Running: chebyshev_quadrature with k=4
  0.242986 seconds (269.16 k allocations: 14.541 MiB)
Running: jacobi_quadrature with α=β=1
  2.250207 seconds (457.47 k allocations: 149.329 MiB, 9.44% gc time)
Running: legendre_quadrature
  0.174472 seconds (190.73 k allocations: 10.930 MiB, 10.55% gc time)
Running: lobatto_quadrature
  0.175472 seconds (202.40 k allocations: 11.622 MiB)
Running: radau_quadrature
  0.183951 seconds (202.39 k allocations: 11.637 MiB)
Running: rectangle_rule_left
  1.151479 seconds (20.29 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.027944 seconds (25.96 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  1.193119 seconds (18.35 k allocations: 1.100 MiB)
Running: rombergs_method
  0.142884 seconds (138.40 k allocations: 7.920 MiB)
Running: simpsons_rule
  0.035383 seconds (30.02 k allocations: 1.823 MiB)
Running: simpsons38_rule
  0.068726 seconds (45.51 k allocations: 2.792 MiB, 25.99% gc time)
Running: trapezoidal_rule
  0.029541 seconds (58.16 k allocations: 2.035 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.217884 seconds (150.67 k allocations: 8.881 MiB, 9.56% gc time)
Running: chebyshev_quadrature with k=1
  0.152877 seconds (70.50 k allocations: 2.219 MiB)
Running: chebyshev_quadrature with k=2
  0.158015 seconds (105.70 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=3
  0.178303 seconds (93.14 k allocations: 2.732 MiB)
Running: chebyshev_quadrature with k=4
  0.178242 seconds (72.68 k allocations: 2.266 MiB)
Running: jacobi_quadrature with α=β=1
  2.307336 seconds (487.34 k allocations: 168.049 MiB, 8.79% gc time)
Running: legendre_quadrature
  0.127217 seconds (19.30 k allocations: 1.107 MiB)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000038 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.323621 seconds (590.00 M allocations: 8.792 GiB, 3.44% gc time)
Running: rectangle_rule_midpoint
  0.000054 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.643332 seconds (592.75 M allocations: 8.833 GiB, 3.53% gc time)
Running: rombergs_method
  0.131099 seconds (21.07 k allocations: 1.179 MiB)
Running: simpsons_rule
  0.000058 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030676 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023784 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.699561 seconds (629.33 M allocations: 9.387 GiB, 5.09% gc time)
Running: chebyshev_quadrature with k=1
  0.551162 seconds (429.43 k allocations: 23.585 MiB, 6.01% gc time)
Running: chebyshev_quadrature with k=2
 13.445473 seconds (485.31 k allocations: 4.041 GiB, 4.77% gc time)
Running: chebyshev_quadrature with k=3
  6.304635 seconds (282.70 k allocations: 1.643 GiB, 4.45% gc time)
Running: chebyshev_quadrature with k=4
  8.078502 seconds (282.72 k allocations: 2.262 GiB, 2.39% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.172013 seconds (495.81 k allocations: 13.255 GiB, 2.61% gc time)
Running: legendre_quadrature.
  6.139146 seconds (229.30 k allocations: 1.976 GiB, 3.15% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.271797 seconds (8.24 M allocations: 13.384 GiB, 3.43% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.638624 seconds (7.24 M allocations: 13.369 GiB, 2.62% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.011411 seconds (23.05 k allocations: 1.373 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.057924 seconds (31.59 k allocations: 1.922 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.085621 seconds (23.26 k allocations: 1.384 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.187646 seconds (449.62 k allocations: 153.133 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.031637 seconds (600.04 M allocations: 8.943 GiB, 8.32% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.195149 seconds (600.05 M allocations: 8.943 GiB, 7.90% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.787411 seconds (600.03 M allocations: 8.943 GiB, 9.00% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063670 seconds (181.75 k allocations: 4.453 MiB)
Running: chebyshev_quadrature with k=1
  0.234169 seconds (252.62 k allocations: 13.750 MiB)
Running: chebyshev_quadrature with k=2
  0.215740 seconds (277.53 k allocations: 14.738 MiB)
Running: chebyshev_quadrature with k=3
  0.205646 seconds (252.96 k allocations: 13.021 MiB)
Running: chebyshev_quadrature with k=4
  0.218364 seconds (252.98 k allocations: 13.015 MiB)
Running: jacobi_quadrature with α=β=1
  0.406540 seconds (396.27 k allocations: 35.361 MiB)
Running: laguerre_quadrature with k=2
  0.203327 seconds (184.62 k allocations: 10.655 MiB)
Running: legendre_quadrature
  0.156304 seconds (148.77 k allocations: 8.191 MiB)
Running: lobatto_quadrature
  0.039444 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.033887 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.063760 seconds (19.51 k allocations: 1.143 MiB)
Running: rectangle_rule_midpoint
  0.051901 seconds (26.44 k allocations: 1.608 MiB)
Running: rectangle_rule_right
  0.055649 seconds (18.10 k allocations: 1.069 MiB)
Running: rombergs_method
  0.252015 seconds (178.30 k allocations: 10.094 MiB)
Running: simpsons_rule
  0.002010 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055742 seconds (80.61 k allocations: 3.446 MiB)
Running: trapezoidal_rule
  0.188278 seconds (2.39 M allocations: 37.721 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002200 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.151226 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.145197 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.131113 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.131100 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  7.143319 seconds (372.96 k allocations: 905.105 MiB, 3.98% gc time)
Running: legendre_quadrature
  0.072856 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000184 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000206 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.792680 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000502 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.885686 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064526 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000834 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000708 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.112458 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.117961 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.126105 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.126836 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.370709 seconds (379.63 k allocations: 253.228 MiB)
Running: legendre_quadrature
  0.075178 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000100 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000052 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.740378 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001170 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.884212 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.104311 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000076 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001650 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
