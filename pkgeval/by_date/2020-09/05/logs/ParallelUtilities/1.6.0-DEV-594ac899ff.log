Julia Version 1.6.0-DEV.842
Commit 594ac899ff (2020-09-04 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Reexport ─────────── v0.2.0
  Installed Compat ───────────── v3.15.0
  Installed ProgressMeter ────── v1.3.2
  Installed OrderedCollections ─ v1.3.0
  Installed OffsetArrays ─────── v1.1.3
  Installed ParallelUtilities ── v0.7.6
  Installed DataStructures ───── v0.18.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [fad6cfc8] + ParallelUtilities v0.7.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [864edb3b] + DataStructures v0.18.4
  [6fe1bfb0] + OffsetArrays v1.1.3
  [bac558e1] + OrderedCollections v1.3.0
  [fad6cfc8] + ParallelUtilities v0.7.6
  [92933f4c] + ProgressMeter v1.3.2
  [189a3867] + Reexport v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing ParallelUtilities
Status `/tmp/jl_GyuXOg/Project.toml`
  [864edb3b] DataStructures v0.18.4
  [fad6cfc8] ParallelUtilities v0.7.6
  [8ba89e20] Distributed
  [44cfe95a] Pkg
  [8dfed614] Test
Status `/tmp/jl_GyuXOg/Manifest.toml`
  [34da2185] Compat v3.15.0
  [864edb3b] DataStructures v0.18.4
  [6fe1bfb0] OffsetArrays v1.1.3
  [bac558e1] OrderedCollections v1.3.0
  [fad6cfc8] ParallelUtilities v0.7.6
  [92933f4c] ProgressMeter v1.3.2
  [189a3867] Reexport v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Failed at /home/pkgeval/.julia/packages/ParallelUtilities/HIHGQ/test/tests.jl:16
  Expression: isempty(Test.detect_ambiguities(Base, Core, ParallelUtilities))
   Evaluated: isempty(Tuple{Method, Method}[(vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121, vcat(X::Number...) in Base at abstractarray.jl:1427), (vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121, vcat(A::BitMatrix...) in Base at bitarray.jl:1811), (convert(::Type{T}, x::T) where T in Base at essentials.jl:205, convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70), (vcat(Xin::Union{Vector{T} where T, Matrix{T} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:(Vector{T} where T) where var"#s851", LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.Hermitian{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.SymTridiagonal, LinearAlgebra.Symmetric{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:(Vector{T} where T) where var"#s849", LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector}...) in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1091, vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976), (hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122, hcat(B::BitVector...) in Base at bitarray.jl:1759), (hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122, hcat(A::Union{BitMatrix, BitVector}...) in Base at bitarray.jl:1786), (convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70, convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35), (convert(::Type{T}, x::T) where T in Base at essentials.jl:205, convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69), (convert(::Type{T}, x::T) where T in Base at essentials.jl:205, convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36), (convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67, convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70), (vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121, vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976), (hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122, hcat(X::Number...) in Base at abstractarray.jl:1428), (vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121, vcat(V::BitVector...) in Base at bitarray.jl:1772), (vcat(A::Union{Vector{T} where T, Matrix{T} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:(Vector{T} where T) where var"#s851", LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:(Vector{T} where T) where var"#s849"}...) in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1115, vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976), (hvcat(rows::Tuple{Vararg{Int64, N} where N}, xs::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1123, hvcat(rows::Tuple{Vararg{Int64, N} where N}, xs::Number...) in Base at abstractarray.jl:1875)])
ERROR: LoadError: LoadError: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/ParallelUtilities/HIHGQ/test/tests.jl:16
in expression starting at /home/pkgeval/.julia/packages/ParallelUtilities/HIHGQ/test/singlehost.jl:6
in expression starting at /home/pkgeval/.julia/packages/ParallelUtilities/HIHGQ/test/runtests.jl:1
ERROR: Package ParallelUtilities errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
