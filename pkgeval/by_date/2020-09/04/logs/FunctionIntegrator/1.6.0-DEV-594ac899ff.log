Julia Version 1.6.0-DEV.842
Commit 594ac899ff (2020-09-04 17:00 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_zipT89/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_zipT89/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.107970 seconds (1.47 M allocations: 78.163 MiB, 1.70% gc time)
Running: chebyshev_quadrature with k=1
  1.955357 seconds (2.22 M allocations: 126.547 MiB, 8.46% gc time)
Running: chebyshev_quadrature with k=2
  0.275979 seconds (417.32 k allocations: 23.848 MiB)
Running: chebyshev_quadrature with k=3
  0.397926 seconds (532.74 k allocations: 29.127 MiB, 5.11% gc time)
Running: chebyshev_quadrature with k=4
  0.294207 seconds (476.24 k allocations: 25.704 MiB)
Running: jacobi_quadrature with α=β=1
 42.580295 seconds (38.17 M allocations: 3.084 GiB, 9.12% gc time)
Running: laguerre_quadrature with k=1
  3.216778 seconds (3.26 M allocations: 180.433 MiB, 3.52% gc time)
Running: legendre_quadrature
  0.212772 seconds (211.75 k allocations: 12.071 MiB)
Running: lobatto_quadrature
  0.363226 seconds (343.02 k allocations: 20.572 MiB)
Running: radau_quadrature
  0.289324 seconds (325.66 k allocations: 19.586 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 82.253294 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time)
Running: rectangle_rule_midpoint.
  0.151663 seconds (173.41 k allocations: 3.857 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.314511 seconds (100.02 M allocations: 1.491 GiB, 0.43% gc time)
Running: rombergs_method
  0.602938 seconds (742.07 k allocations: 42.432 MiB)
Running: simpsons_rule
  0.044423 seconds (46.84 k allocations: 2.079 MiB)
Running: simpsons38_rule
  0.157637 seconds (112.59 k allocations: 5.919 MiB, 25.94% gc time)
Running: trapezoidal_rule
  0.308919 seconds (1.52 M allocations: 25.793 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.084230 seconds (32.18 k allocations: 1.903 MiB)
Running: chebyshev_quadrature with k=1
  0.477327 seconds (281.59 k allocations: 14.637 MiB)
Running: chebyshev_quadrature with k=2
  0.152564 seconds (94.41 k allocations: 2.692 MiB)
Running: chebyshev_quadrature with k=3
  0.159869 seconds (82.63 k allocations: 2.491 MiB)
Running: chebyshev_quadrature with k=4
  0.159832 seconds (65.24 k allocations: 2.137 MiB)
Running: jacobi_quadrature with α=β=1
  2.048731 seconds (513.76 k allocations: 162.242 MiB, 4.23% gc time)
Running: legendre_quadrature
  0.130198 seconds (43.36 k allocations: 2.486 MiB)
Running: lobatto_quadrature
  0.020846 seconds (17.23 k allocations: 1.065 MiB)
Running: radau_quadrature
  0.026149 seconds (17.22 k allocations: 1.064 MiB)
Running: rectangle_rule_left
 28.353745 seconds (471.41 M allocations: 7.025 GiB, 3.26% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.534001 seconds (476.96 M allocations: 7.107 GiB, 2.27% gc time)
Running: rombergs_method
  0.414552 seconds (335.91 k allocations: 18.905 MiB, 0.95% gc time)
Running: simpsons_rule
  0.000047 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.073636 seconds (19.59 k allocations: 1.169 MiB)
Running: trapezoidal_rule
  0.064966 seconds (18.05 k allocations: 1.075 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029519 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.186681 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.105076 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.117501 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.146612 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.504924 seconds (370.75 k allocations: 19.294 MiB, 6.05% gc time)
Running: legendre_quadrature
  0.084055 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000098 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000040 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000510 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000392 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000567 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075356 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000036 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.029299 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.026846 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.079912 seconds (74.72 k allocations: 4.293 MiB)
Running: chebyshev_quadrature with k=1
  0.232053 seconds (235.33 k allocations: 13.168 MiB)
Running: chebyshev_quadrature with k=2
  0.269078 seconds (289.11 k allocations: 16.132 MiB)
Running: chebyshev_quadrature with k=3
  0.339685 seconds (268.03 k allocations: 14.543 MiB)
Running: chebyshev_quadrature with k=4
  0.315714 seconds (268.06 k allocations: 14.442 MiB)
Running: jacobi_quadrature with α=β=1
  2.771324 seconds (456.19 k allocations: 163.564 MiB, 8.64% gc time)
Running: legendre_quadrature
  0.166973 seconds (189.62 k allocations: 10.854 MiB)
Running: lobatto_quadrature
  0.204123 seconds (201.27 k allocations: 11.574 MiB)
Running: radau_quadrature
  0.233736 seconds (201.27 k allocations: 11.577 MiB, 11.74% gc time)
Running: rectangle_rule_left
  1.258686 seconds (19.49 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.026326 seconds (25.61 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  1.279842 seconds (18.01 k allocations: 1.082 MiB)
Running: rombergs_method
  0.154347 seconds (137.14 k allocations: 7.864 MiB)
Running: simpsons_rule
  0.033096 seconds (28.59 k allocations: 1.764 MiB)
Running: simpsons38_rule
  0.042434 seconds (44.06 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.027764 seconds (44.96 k allocations: 1.800 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051885 seconds (100.78 k allocations: 3.022 MiB)
Running: chebyshev_quadrature with k=1
  0.260543 seconds (242.06 k allocations: 13.221 MiB, 7.92% gc time)
Running: chebyshev_quadrature with k=2
  0.368378 seconds (296.27 k allocations: 16.118 MiB)
Running: chebyshev_quadrature with k=3
  0.281189 seconds (274.89 k allocations: 14.535 MiB)
Running: chebyshev_quadrature with k=4
  0.259191 seconds (274.92 k allocations: 14.549 MiB, 7.75% gc time)
Running: hermite_quadrature with k=2
 15.202946 seconds (21.36 M allocations: 1.107 GiB, 8.40% gc time)
Running: jacobi_quadrature with α=β=1
  0.739327 seconds (465.56 k allocations: 49.875 MiB, 43.19% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.217442 seconds (282.32 k allocations: 15.477 MiB)
Running: legendre_quadrature
  0.156198 seconds (196.33 k allocations: 11.190 MiB)
Running: lobatto_quadrature
  0.241080 seconds (222.10 k allocations: 37.351 MiB, 6.51% gc time)
Running: radau_quadrature
  0.221131 seconds (218.68 k allocations: 30.017 MiB, 6.29% gc time)
Running: rectangle_rule_left
  0.030284 seconds (22.54 k allocations: 1.320 MiB)
Running: rectangle_rule_midpoint
  0.029351 seconds (27.52 k allocations: 1.678 MiB)
Running: rectangle_rule_right
  0.027173 seconds (19.19 k allocations: 1.139 MiB)
Running: rombergs_method
  0.119274 seconds (139.69 k allocations: 7.906 MiB)
Running: simpsons_rule
  0.039519 seconds (40.62 k allocations: 2.104 MiB)
Running: simpsons38_rule
  0.043695 seconds (59.22 k allocations: 3.128 MiB)
Running: trapezoidal_rule
  0.031294 seconds (31.16 k allocations: 1.732 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042974 seconds (61.05 k allocations: 2.318 MiB)
Running: chebyshev_quadrature with k=1
  0.195701 seconds (237.50 k allocations: 13.005 MiB)
Running: chebyshev_quadrature with k=2
  0.248483 seconds (291.38 k allocations: 15.872 MiB, 7.53% gc time)
Running: chebyshev_quadrature with k=3
  0.213826 seconds (270.22 k allocations: 14.326 MiB)
Running: chebyshev_quadrature with k=4
  0.210880 seconds (270.24 k allocations: 14.327 MiB)
Running: hermite_quadrature with k=2
  0.170678 seconds (174.48 k allocations: 9.919 MiB, 10.43% gc time)
Running: jacobi_quadrature with α=β=1
 12.600183 seconds (458.70 k allocations: 1.175 GiB, 14.27% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.256672 seconds (277.50 k allocations: 15.294 MiB, 12.52% gc time)
Running: legendre_quadrature
  0.169166 seconds (191.79 k allocations: 10.964 MiB)
Running: lobatto_quadrature
  0.299016 seconds (212.75 k allocations: 23.081 MiB)
Running: radau_quadrature
  0.244367 seconds (211.90 k allocations: 21.012 MiB, 6.23% gc time)
Running: rectangle_rule_left
  0.029804 seconds (20.20 k allocations: 1.209 MiB)
Running: rectangle_rule_midpoint
  0.029450 seconds (26.34 k allocations: 1.622 MiB)
Running: rectangle_rule_right
  0.032254 seconds (18.00 k allocations: 1.082 MiB)
Running: rombergs_method
  0.161636 seconds (135.40 k allocations: 7.721 MiB)
Running: simpsons_rule
  0.036207 seconds (33.03 k allocations: 1.889 MiB)
Running: simpsons38_rule
  0.049586 seconds (49.92 k allocations: 2.882 MiB)
Running: trapezoidal_rule
  0.102238 seconds (25.97 k allocations: 1.565 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.046730 seconds (32.00 k allocations: 1.912 MiB)
Running: chebyshev_quadrature with k=1
  0.246099 seconds (235.83 k allocations: 13.225 MiB, 8.24% gc time)
Running: chebyshev_quadrature with k=2
  0.253588 seconds (289.62 k allocations: 16.213 MiB)
Running: chebyshev_quadrature with k=3
  0.224452 seconds (268.55 k allocations: 14.538 MiB)
Running: chebyshev_quadrature with k=4
  0.298064 seconds (268.58 k allocations: 14.376 MiB, 6.46% gc time)
Running: jacobi_quadrature with α=β=1
  2.658618 seconds (456.75 k allocations: 194.687 MiB, 5.55% gc time)
Running: legendre_quadrature
  0.168289 seconds (190.13 k allocations: 10.882 MiB)
Running: lobatto_quadrature
  0.194126 seconds (201.79 k allocations: 11.606 MiB, 8.46% gc time)
Running: radau_quadrature
  0.177894 seconds (201.78 k allocations: 11.600 MiB)
Running: rectangle_rule_left
  0.319225 seconds (20.04 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.027465 seconds (25.97 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  0.108991 seconds (18.37 k allocations: 1.101 MiB)
Running: rombergs_method
  0.138827 seconds (148.32 k allocations: 8.599 MiB)
Running: simpsons_rule
  0.031330 seconds (29.31 k allocations: 1.795 MiB)
Running: simpsons38_rule
  0.037699 seconds (44.80 k allocations: 2.765 MiB)
Running: trapezoidal_rule
  0.027773 seconds (45.92 k allocations: 1.835 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033406 seconds (32.73 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.269191 seconds (236.43 k allocations: 13.171 MiB, 6.74% gc time)
Running: chebyshev_quadrature with k=2
  0.264810 seconds (290.26 k allocations: 16.132 MiB)
Running: chebyshev_quadrature with k=3
  0.220789 seconds (269.14 k allocations: 14.474 MiB)
Running: chebyshev_quadrature with k=4
  0.241375 seconds (269.16 k allocations: 14.557 MiB, 8.22% gc time)
Running: jacobi_quadrature with α=β=1
  1.800256 seconds (457.47 k allocations: 149.317 MiB, 10.75% gc time)
Running: legendre_quadrature
  0.160088 seconds (190.73 k allocations: 10.930 MiB)
Running: lobatto_quadrature
  0.211687 seconds (202.40 k allocations: 11.622 MiB, 9.52% gc time)
Running: radau_quadrature
  0.174888 seconds (202.39 k allocations: 11.622 MiB)
Running: rectangle_rule_left
  1.180787 seconds (20.29 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.027500 seconds (25.96 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  1.229102 seconds (18.35 k allocations: 1.100 MiB)
Running: rombergs_method
  0.135695 seconds (138.40 k allocations: 7.920 MiB)
Running: simpsons_rule
  0.051275 seconds (30.02 k allocations: 1.822 MiB)
Running: simpsons38_rule
  0.037147 seconds (45.51 k allocations: 2.792 MiB)
Running: trapezoidal_rule
  0.030403 seconds (58.16 k allocations: 2.035 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179237 seconds (150.67 k allocations: 8.881 MiB)
Running: chebyshev_quadrature with k=1
  0.177911 seconds (70.50 k allocations: 2.219 MiB)
Running: chebyshev_quadrature with k=2
  0.218103 seconds (105.70 k allocations: 2.884 MiB, 18.30% gc time)
Running: chebyshev_quadrature with k=3
  0.195116 seconds (93.14 k allocations: 2.732 MiB)
Running: chebyshev_quadrature with k=4
  0.161629 seconds (72.68 k allocations: 2.266 MiB)
Running: jacobi_quadrature with α=β=1
  2.414647 seconds (487.34 k allocations: 168.049 MiB, 10.32% gc time)
Running: legendre_quadrature
  0.125372 seconds (19.30 k allocations: 1.107 MiB, 12.04% gc time)
Running: lobatto_quadrature
  0.000092 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000040 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.459338 seconds (590.00 M allocations: 8.792 GiB, 2.54% gc time)
Running: rectangle_rule_midpoint
  0.000075 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.899089 seconds (592.75 M allocations: 8.833 GiB, 2.53% gc time)
Running: rombergs_method
  0.146511 seconds (21.07 k allocations: 1.179 MiB)
Running: simpsons_rule
  0.000036 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032004 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025454 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.106423 seconds (629.33 M allocations: 9.387 GiB, 3.77% gc time)
Running: chebyshev_quadrature with k=1
  0.558406 seconds (429.43 k allocations: 23.585 MiB)
Running: chebyshev_quadrature with k=2
 14.638251 seconds (485.31 k allocations: 4.041 GiB, 3.89% gc time)
Running: chebyshev_quadrature with k=3
  6.992622 seconds (282.70 k allocations: 1.643 GiB, 4.85% gc time)
Running: chebyshev_quadrature with k=4
  8.894253 seconds (282.73 k allocations: 2.262 GiB, 2.68% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 66.727738 seconds (495.81 k allocations: 13.255 GiB, 2.50% gc time)
Running: legendre_quadrature.
  5.888430 seconds (229.30 k allocations: 1.976 GiB, 1.72% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 64.457720 seconds (8.24 M allocations: 13.384 GiB, 3.02% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.688715 seconds (7.24 M allocations: 13.369 GiB, 2.06% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.917950 seconds (23.05 k allocations: 1.373 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.949350 seconds (31.59 k allocations: 1.922 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.012530 seconds (23.26 k allocations: 1.384 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.081115 seconds (449.62 k allocations: 153.133 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.187547 seconds (600.04 M allocations: 8.943 GiB, 7.63% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.628680 seconds (600.05 M allocations: 8.943 GiB, 7.94% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.997155 seconds (600.03 M allocations: 8.943 GiB, 8.54% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.073547 seconds (181.75 k allocations: 4.453 MiB)
Running: chebyshev_quadrature with k=1
  0.298259 seconds (252.62 k allocations: 13.750 MiB)
Running: chebyshev_quadrature with k=2
  0.367970 seconds (277.53 k allocations: 14.737 MiB)
Running: chebyshev_quadrature with k=3
  0.259279 seconds (252.96 k allocations: 13.021 MiB)
Running: chebyshev_quadrature with k=4
  0.317698 seconds (252.98 k allocations: 13.015 MiB)
Running: jacobi_quadrature with α=β=1
  0.477294 seconds (396.27 k allocations: 35.362 MiB)
Running: laguerre_quadrature with k=2
  0.253613 seconds (184.62 k allocations: 10.655 MiB)
Running: legendre_quadrature
  0.171467 seconds (148.77 k allocations: 8.191 MiB)
Running: lobatto_quadrature
  0.037801 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.040384 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.078304 seconds (19.51 k allocations: 1.143 MiB)
Running: rectangle_rule_midpoint
  0.061043 seconds (26.44 k allocations: 1.608 MiB)
Running: rectangle_rule_right
  0.071371 seconds (18.10 k allocations: 1.069 MiB)
Running: rombergs_method
  0.339752 seconds (178.30 k allocations: 10.094 MiB)
Running: simpsons_rule
  0.002043 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.071047 seconds (80.61 k allocations: 3.446 MiB)
Running: trapezoidal_rule
  0.246135 seconds (2.39 M allocations: 37.721 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002483 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.141398 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.174282 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.170166 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.133611 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  7.355735 seconds (372.96 k allocations: 905.105 MiB, 3.76% gc time)
Running: legendre_quadrature
  0.098383 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000243 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000175 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.441990 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000506 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.001078 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064264 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000058 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000060 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000871 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000639 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.132356 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.113205 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.124763 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.149449 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.050313 seconds (379.63 k allocations: 253.228 MiB)
Running: legendre_quadrature
  0.091681 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000101 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000044 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.141300 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001108 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.589140 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.111566 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000071 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001900 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
