Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_co066F/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_co066F/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.025368 seconds (1.51 M allocations: 81.037 MiB, 4.32% gc time)
Running: chebyshev_quadrature with k=1
  2.113799 seconds (2.22 M allocations: 126.510 MiB, 4.26% gc time)
Running: chebyshev_quadrature with k=2
  0.441862 seconds (417.32 k allocations: 23.860 MiB)
Running: chebyshev_quadrature with k=3
  0.404229 seconds (532.74 k allocations: 29.102 MiB, 4.11% gc time)
Running: chebyshev_quadrature with k=4
  0.387813 seconds (476.24 k allocations: 25.698 MiB)
Running: jacobi_quadrature with α=β=1
 44.485287 seconds (38.17 M allocations: 3.084 GiB, 9.68% gc time)
Running: laguerre_quadrature with k=1
  3.243154 seconds (3.26 M allocations: 180.402 MiB, 2.44% gc time)
Running: legendre_quadrature
  0.213032 seconds (211.59 k allocations: 12.058 MiB)
Running: lobatto_quadrature
  0.420131 seconds (342.85 k allocations: 20.536 MiB)
Running: radau_quadrature
  0.346966 seconds (325.49 k allocations: 19.572 MiB, 16.17% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.617826 seconds (100.02 M allocations: 1.491 GiB, 0.56% gc time)
Running: rectangle_rule_midpoint.
  0.145217 seconds (173.41 k allocations: 3.856 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.717906 seconds (100.02 M allocations: 1.491 GiB, 0.45% gc time)
Running: rombergs_method
  0.564603 seconds (741.91 k allocations: 42.429 MiB, 6.45% gc time)
Running: simpsons_rule
  0.038698 seconds (46.84 k allocations: 2.079 MiB)
Running: simpsons38_rule
  0.097243 seconds (112.51 k allocations: 5.913 MiB)
Running: trapezoidal_rule
  0.318418 seconds (1.52 M allocations: 25.788 MiB, 4.20% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.093561 seconds (32.19 k allocations: 1.903 MiB)
Running: chebyshev_quadrature with k=1
  0.494659 seconds (281.41 k allocations: 14.622 MiB)
Running: chebyshev_quadrature with k=2
  0.153554 seconds (94.41 k allocations: 2.692 MiB)
Running: chebyshev_quadrature with k=3
  0.167255 seconds (82.63 k allocations: 2.490 MiB)
Running: chebyshev_quadrature with k=4
  0.156121 seconds (65.24 k allocations: 2.137 MiB)
Running: jacobi_quadrature with α=β=1
  1.847661 seconds (513.75 k allocations: 162.236 MiB, 4.48% gc time)
Running: legendre_quadrature
  0.170486 seconds (43.20 k allocations: 2.474 MiB)
Running: lobatto_quadrature
  0.031673 seconds (17.07 k allocations: 1.053 MiB)
Running: radau_quadrature
  0.023374 seconds (17.06 k allocations: 1.053 MiB)
Running: rectangle_rule_left
 31.657499 seconds (471.41 M allocations: 7.025 GiB, 4.55% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.368172 seconds (476.96 M allocations: 7.107 GiB, 4.62% gc time)
Running: rombergs_method
  0.387818 seconds (335.75 k allocations: 18.891 MiB)
Running: simpsons_rule
  0.000025 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.067867 seconds (19.60 k allocations: 1.169 MiB)
Running: trapezoidal_rule
  0.066228 seconds (18.06 k allocations: 1.075 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030384 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.113161 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.117327 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.120945 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.127295 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.316027 seconds (370.75 k allocations: 19.292 MiB)
Running: legendre_quadrature
  0.067973 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000081 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000519 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000372 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000515 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072819 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000035 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024515 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022082 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.069170 seconds (74.72 k allocations: 4.292 MiB)
Running: chebyshev_quadrature with k=1
  0.243932 seconds (235.33 k allocations: 13.166 MiB, 13.64% gc time)
Running: chebyshev_quadrature with k=2
  0.248161 seconds (289.11 k allocations: 16.131 MiB)
Running: chebyshev_quadrature with k=3
  0.212019 seconds (268.03 k allocations: 14.525 MiB)
Running: chebyshev_quadrature with k=4
  0.243076 seconds (268.05 k allocations: 14.439 MiB, 12.08% gc time)
Running: jacobi_quadrature with α=β=1
  2.533037 seconds (456.19 k allocations: 163.577 MiB, 5.10% gc time)
Running: legendre_quadrature
  0.207896 seconds (189.62 k allocations: 10.851 MiB, 8.92% gc time)
Running: lobatto_quadrature
  0.245411 seconds (201.27 k allocations: 11.572 MiB)
Running: radau_quadrature
  0.184319 seconds (201.27 k allocations: 11.574 MiB)
Running: rectangle_rule_left
  1.170946 seconds (19.49 k allocations: 1.168 MiB)
Running: rectangle_rule_midpoint
  0.026066 seconds (25.61 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  1.287934 seconds (18.01 k allocations: 1.081 MiB)
Running: rombergs_method
  0.206705 seconds (137.14 k allocations: 7.861 MiB)
Running: simpsons_rule
  0.047589 seconds (28.59 k allocations: 1.765 MiB)
Running: simpsons38_rule
  0.038797 seconds (44.06 k allocations: 2.733 MiB)
Running: trapezoidal_rule
  0.026492 seconds (44.96 k allocations: 1.800 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.070331 seconds (100.78 k allocations: 3.022 MiB, 38.99% gc time)
Running: chebyshev_quadrature with k=1
  0.234858 seconds (242.06 k allocations: 13.219 MiB)
Running: chebyshev_quadrature with k=2
  0.350330 seconds (296.27 k allocations: 16.147 MiB)
Running: chebyshev_quadrature with k=3
  0.225763 seconds (274.89 k allocations: 14.533 MiB)
Running: chebyshev_quadrature with k=4
  0.228177 seconds (274.92 k allocations: 14.543 MiB)
Running: hermite_quadrature with k=2
 16.141937 seconds (21.36 M allocations: 1.107 GiB, 8.33% gc time)
Running: jacobi_quadrature with α=β=1
  0.456744 seconds (465.55 k allocations: 49.812 MiB, 5.17% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.267735 seconds (282.32 k allocations: 15.474 MiB)
Running: legendre_quadrature
  0.172812 seconds (196.33 k allocations: 11.188 MiB)
Running: lobatto_quadrature
  0.241697 seconds (222.10 k allocations: 37.349 MiB, 7.09% gc time)
Running: radau_quadrature
  0.246472 seconds (218.68 k allocations: 30.013 MiB, 5.59% gc time)
Running: rectangle_rule_left
  0.038067 seconds (22.54 k allocations: 1.320 MiB)
Running: rectangle_rule_midpoint
  0.031725 seconds (27.52 k allocations: 1.677 MiB)
Running: rectangle_rule_right
  0.030897 seconds (19.19 k allocations: 1.139 MiB)
Running: rombergs_method
  0.143864 seconds (139.69 k allocations: 7.904 MiB)
Running: simpsons_rule
  0.054437 seconds (40.62 k allocations: 2.103 MiB)
Running: simpsons38_rule
  0.044299 seconds (59.22 k allocations: 3.127 MiB)
Running: trapezoidal_rule
  0.033767 seconds (31.16 k allocations: 1.732 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.037871 seconds (61.05 k allocations: 2.318 MiB)
Running: chebyshev_quadrature with k=1
  0.255197 seconds (237.50 k allocations: 13.003 MiB, 6.58% gc time)
Running: chebyshev_quadrature with k=2
  0.223497 seconds (291.38 k allocations: 15.874 MiB)
Running: chebyshev_quadrature with k=3
  0.212856 seconds (270.22 k allocations: 14.324 MiB)
Running: chebyshev_quadrature with k=4
  0.243859 seconds (270.24 k allocations: 14.325 MiB, 7.04% gc time)
Running: hermite_quadrature with k=2
  0.191555 seconds (174.48 k allocations: 9.917 MiB)
Running: jacobi_quadrature with α=β=1
 10.089351 seconds (458.70 k allocations: 1.175 GiB, 16.18% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.270126 seconds (277.50 k allocations: 15.290 MiB)
Running: legendre_quadrature
  0.191285 seconds (191.79 k allocations: 10.962 MiB)
Running: lobatto_quadrature
  0.238279 seconds (212.75 k allocations: 23.078 MiB)
Running: radau_quadrature
  0.217528 seconds (211.90 k allocations: 21.010 MiB)
Running: rectangle_rule_left
  0.029233 seconds (20.20 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.029840 seconds (26.34 k allocations: 1.622 MiB)
Running: rectangle_rule_right
  0.052344 seconds (18.00 k allocations: 1.082 MiB, 49.68% gc time)
Running: rombergs_method
  0.112293 seconds (135.40 k allocations: 7.720 MiB)
Running: simpsons_rule
  0.034093 seconds (33.03 k allocations: 1.889 MiB)
Running: simpsons38_rule
  0.039726 seconds (49.92 k allocations: 2.882 MiB)
Running: trapezoidal_rule
  0.074418 seconds (25.97 k allocations: 1.565 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033486 seconds (32.00 k allocations: 1.914 MiB)
Running: chebyshev_quadrature with k=1
  0.239603 seconds (235.83 k allocations: 13.222 MiB)
Running: chebyshev_quadrature with k=2
  0.234708 seconds (289.62 k allocations: 16.272 MiB)
Running: chebyshev_quadrature with k=3
  0.289411 seconds (268.55 k allocations: 14.536 MiB)
Running: chebyshev_quadrature with k=4
  0.279647 seconds (268.58 k allocations: 14.374 MiB, 7.89% gc time)
Running: jacobi_quadrature with α=β=1
  2.202765 seconds (456.75 k allocations: 194.622 MiB, 4.28% gc time)
Running: legendre_quadrature
  0.176825 seconds (190.13 k allocations: 10.883 MiB)
Running: lobatto_quadrature
  0.206855 seconds (201.79 k allocations: 11.603 MiB)
Running: radau_quadrature
  0.209692 seconds (201.78 k allocations: 11.598 MiB, 9.71% gc time)
Running: rectangle_rule_left
  0.316438 seconds (20.04 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.033497 seconds (25.97 k allocations: 1.603 MiB)
Running: rectangle_rule_right
  0.108547 seconds (18.37 k allocations: 1.101 MiB)
Running: rombergs_method
  0.152550 seconds (148.32 k allocations: 8.597 MiB)
Running: simpsons_rule
  0.032187 seconds (29.31 k allocations: 1.795 MiB)
Running: simpsons38_rule
  0.035247 seconds (44.80 k allocations: 2.764 MiB)
Running: trapezoidal_rule
  0.032308 seconds (45.92 k allocations: 1.834 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033787 seconds (32.73 k allocations: 1.863 MiB)
Running: chebyshev_quadrature with k=1
  0.212558 seconds (236.43 k allocations: 13.231 MiB)
Running: chebyshev_quadrature with k=2
  0.265348 seconds (290.26 k allocations: 16.125 MiB)
Running: chebyshev_quadrature with k=3
  0.258416 seconds (269.14 k allocations: 14.460 MiB, 8.65% gc time)
Running: chebyshev_quadrature with k=4
  0.226175 seconds (269.17 k allocations: 14.567 MiB)
Running: jacobi_quadrature with α=β=1
  1.422242 seconds (457.47 k allocations: 149.309 MiB, 3.10% gc time)
Running: legendre_quadrature
  0.177606 seconds (190.73 k allocations: 10.928 MiB, 8.80% gc time)
Running: lobatto_quadrature
  0.186565 seconds (202.40 k allocations: 11.616 MiB)
Running: radau_quadrature
  0.173670 seconds (202.39 k allocations: 11.620 MiB)
Running: rectangle_rule_left
  1.194633 seconds (20.29 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.027151 seconds (25.96 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  1.213540 seconds (18.35 k allocations: 1.100 MiB)
Running: rombergs_method
  0.188407 seconds (138.40 k allocations: 7.918 MiB)
Running: simpsons_rule
  0.032266 seconds (30.02 k allocations: 1.821 MiB)
Running: simpsons38_rule
  0.036810 seconds (45.51 k allocations: 2.792 MiB)
Running: trapezoidal_rule
  0.027895 seconds (58.16 k allocations: 2.034 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.171638 seconds (150.68 k allocations: 8.880 MiB)
Running: chebyshev_quadrature with k=1
  0.159708 seconds (70.50 k allocations: 2.219 MiB)
Running: chebyshev_quadrature with k=2
  0.168962 seconds (105.70 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=3
  0.200359 seconds (93.14 k allocations: 2.669 MiB, 11.98% gc time)
Running: chebyshev_quadrature with k=4
  0.228246 seconds (72.67 k allocations: 2.265 MiB)
Running: jacobi_quadrature with α=β=1
  2.789710 seconds (487.50 k allocations: 168.057 MiB, 5.64% gc time)
Running: legendre_quadrature
  0.137471 seconds (19.30 k allocations: 1.106 MiB)
Running: lobatto_quadrature
  0.000281 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000073 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 49.490624 seconds (590.00 M allocations: 8.792 GiB, 4.83% gc time)
Running: rectangle_rule_midpoint
  0.000038 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 51.033806 seconds (592.75 M allocations: 8.833 GiB, 4.49% gc time)
Running: rombergs_method
  0.135069 seconds (21.07 k allocations: 1.179 MiB)
Running: simpsons_rule
  0.000163 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033128 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025998 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.415315 seconds (629.33 M allocations: 9.387 GiB, 6.31% gc time)
Running: chebyshev_quadrature with k=1
  0.573121 seconds (429.26 k allocations: 23.570 MiB, 6.16% gc time)
Running: chebyshev_quadrature with k=2
 13.818919 seconds (485.15 k allocations: 4.041 GiB, 3.94% gc time)
Running: chebyshev_quadrature with k=3
  5.656682 seconds (282.70 k allocations: 1.643 GiB, 4.62% gc time)
Running: chebyshev_quadrature with k=4
  8.310478 seconds (282.72 k allocations: 2.262 GiB, 2.25% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 59.711121 seconds (495.64 k allocations: 13.255 GiB, 2.63% gc time)
Running: legendre_quadrature.
  5.769948 seconds (229.14 k allocations: 1.976 GiB, 1.25% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.864687 seconds (8.24 M allocations: 13.384 GiB, 4.36% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.517283 seconds (7.24 M allocations: 13.369 GiB, 2.97% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.304416 seconds (23.05 k allocations: 1.373 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.165599 seconds (31.59 k allocations: 1.921 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.038346 seconds (23.26 k allocations: 1.383 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.085244 seconds (449.46 k allocations: 153.117 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.800149 seconds (600.04 M allocations: 8.943 GiB, 8.62% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.213686 seconds (600.05 M allocations: 8.943 GiB, 8.04% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.942087 seconds (600.03 M allocations: 8.943 GiB, 8.97% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065257 seconds (181.75 k allocations: 4.452 MiB)
Running: chebyshev_quadrature with k=1
  0.273551 seconds (252.62 k allocations: 13.685 MiB)
Running: chebyshev_quadrature with k=2
  0.274229 seconds (277.53 k allocations: 14.737 MiB)
Running: chebyshev_quadrature with k=3
  0.260918 seconds (252.96 k allocations: 13.024 MiB)
Running: chebyshev_quadrature with k=4
  0.252597 seconds (252.99 k allocations: 13.033 MiB)
Running: jacobi_quadrature with α=β=1
  0.437393 seconds (396.27 k allocations: 35.296 MiB)
Running: laguerre_quadrature with k=2
  0.205151 seconds (184.63 k allocations: 10.715 MiB)
Running: legendre_quadrature
  0.138449 seconds (148.77 k allocations: 8.174 MiB)
Running: lobatto_quadrature
  0.041611 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.034093 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.061617 seconds (19.51 k allocations: 1.143 MiB)
Running: rectangle_rule_midpoint
  0.055868 seconds (26.44 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.056684 seconds (18.10 k allocations: 1.069 MiB)
Running: rombergs_method
  0.280426 seconds (178.48 k allocations: 10.101 MiB)
Running: simpsons_rule
  0.001920 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.071787 seconds (80.61 k allocations: 3.445 MiB)
Running: trapezoidal_rule
  0.226444 seconds (2.39 M allocations: 37.721 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001716 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.123417 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.136044 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.134482 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.118388 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  7.030143 seconds (372.96 k allocations: 905.102 MiB, 4.94% gc time)
Running: legendre_quadrature
  0.084031 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000192 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000154 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.781606 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000517 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.005826 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.078729 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000982 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000709 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.116710 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.156531 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.150833 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.138581 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  1.912461 seconds (379.63 k allocations: 253.237 MiB)
Running: legendre_quadrature
  0.075723 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000106 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000055 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.617816 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001068 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.721074 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.074415 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001762 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
