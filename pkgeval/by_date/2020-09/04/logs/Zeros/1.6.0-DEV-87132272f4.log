Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Zeros â”€ v0.2.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [bd1ec220] + Zeros v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [bd1ec220] + Zeros v0.2.2
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
    Testing Zeros
Status `/tmp/jl_T3aLYX/Project.toml`
  [bd1ec220] Zeros v0.2.2
  [8dfed614] Test
Status `/tmp/jl_T3aLYX/Manifest.toml`
  [bd1ec220] Zeros v0.2.2
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
Complex(x::Real) in Base at complex.jl:16

convert(::Type{T}, x::T) where T in Base at essentials.jl:205
convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
BigInt(x::Integer) in Base.GMP at gmp.jl:310

convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70
convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35

convert(::Type{T}, x::T) where T in Base at essentials.jl:205
convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69

One(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:40
(::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
Rational(n::Integer) in Base at rational.jl:40

hvcat(rows::Tuple{Vararg{Int64, N} where N}, xs::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1123
hvcat(rows::Tuple{Vararg{Int64, N} where N}, xs::Number...) in Base at abstractarray.jl:1875

hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122
hcat(X::Number...) in Base at abstractarray.jl:1428

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
Bool(x::Real) in Base at float.jl:73

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
Rational(n::Integer) in Base at rational.jl:40

convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70

vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(A::BitMatrix...) in Base at bitarray.jl:1811

Zero(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:39
(::Type{T})(x::Rational) where T<:Integer in Base at rational.jl:109

One(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:40
(::Type{T})(x::Float16) where T<:Integer in Base at float.jl:71

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
Complex(x::Real) in Base at complex.jl:16

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
Float16(x::Integer) in Base at float.jl:51

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
Complex{T}(x::Real) where T<:Real in Base at complex.jl:35

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
BigFloat(x::Integer; precision) in Base.MPFR at mpfr.jl:227

Zero(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:39
(::Type{T})(z::Complex) where T<:Real in Base at complex.jl:37

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
Complex{T}(x::Real) where T<:Real in Base at complex.jl:35

vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(V::BitVector...) in Base at bitarray.jl:1772

hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122
hcat(B::BitVector...) in Base at bitarray.jl:1759

vcat(Xin::Union{Vector{T} where T, Matrix{T} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:(Vector{T} where T) where var"#s851", LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.Hermitian{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.SymTridiagonal, LinearAlgebra.Symmetric{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:SparseArrays.SparseVector where var"#s851", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:(Vector{T} where T) where var"#s849", LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:SparseArrays.SparseVector where var"#s849", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector}...) in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1091
vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976

convert(::Type{T}, x::T) where T in Base at essentials.jl:205
convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36

vcat(A::Union{Vector{T} where T, Matrix{T} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Adjoint{var"#s851", var"#s850"} where var"#s850"<:(Vector{T} where T) where var"#s851", LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Transpose{var"#s849", var"#s848"} where var"#s848"<:(Vector{T} where T) where var"#s849"}...) in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1115
vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
Rational{T}(x::Integer) where T<:Integer in Base at rational.jl:101

(::Type{T})(::Zero) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:32
Float16(x::Integer) in Base at float.jl:51

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
Rational{T}(x::Integer) where T<:Integer in Base at rational.jl:101

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
BigFloat(x::Integer; precision) in Base.MPFR at mpfr.jl:227

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
BigInt(x::Integer) in Base.GMP at gmp.jl:310

One(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:40
(::Type{T})(x::BigFloat) where T<:Integer in Base.MPFR at mpfr.jl:326

hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122
hcat(A::Union{BitMatrix, BitVector}...) in Base at bitarray.jl:1786

vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(X::Number...) in Base at abstractarray.jl:1427

Zero(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:39
(::Type{T})(x::Float16) where T<:Integer in Base at float.jl:71

Zero(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:39
(::Type{T})(x::BigFloat) where T<:Integer in Base.MPFR at mpfr.jl:326

vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976

One(x::Number) in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:40
(::Type{T})(x::Rational) where T<:Integer in Base at rational.jl:109

(::Type{T})(::One) where T<:Number in Zeros at /home/pkgeval/.julia/packages/Zeros/KG7Cs/src/Zeros.jl:33
Bool(x::Real) in Base at float.jl:73

ambiguities: Test Failed at /home/pkgeval/.julia/packages/Zeros/KG7Cs/test/runtests.jl:10
  Expression: length(detect_ambiguities(Zeros)) == 0
   Evaluated: 24 == 0
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Zeros/KG7Cs/test/runtests.jl:10 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/Zeros/KG7Cs/test/runtests.jl:6
ambiguities: Test Failed at /home/pkgeval/.julia/packages/Zeros/KG7Cs/test/runtests.jl:11
  Expression: length(ambiguities) <= 5
   Evaluated: 39 <= 5
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Zeros/KG7Cs/test/runtests.jl:11 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/Zeros/KG7Cs/test/runtests.jl:6
Test Summary: | Fail  Total
ambiguities   |    2      2
ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Zeros/KG7Cs/test/runtests.jl:5
ERROR: Package Zeros errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
