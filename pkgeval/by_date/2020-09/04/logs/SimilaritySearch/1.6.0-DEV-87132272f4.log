Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed Compat ───────────── v3.15.0
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.0
  Installed DataStructures ───── v0.18.4
  Installed SimilaritySearch ─── v0.3.20
  Installed SortingAlgorithms ── v0.3.1
  Installed Parsers ──────────── v1.0.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.4
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_kmBtnM/Project.toml`
  [864edb3b] DataStructures v0.18.4
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_kmBtnM/Manifest.toml`
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(20, 0.028253436f0), Item(13, 0.030583262f0), Item(5, 0.050201654f0), Item(37, 0.088876724f0)])
Vsorted = Item[Item(20, 0.028253436f0), Item(13, 0.030583262f0), Item(5, 0.050201654f0), Item(37, 0.088876724f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004487816492716471, 0.004816699028015137, 301.0, 52.87956814467907))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004383357365926107, 0.004387299219767253, 301.0, 77.37773156166077))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004510267575581869, 0.0046947717666625975, 301.0, 42.69558501243591))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004662521680196126, 0.004557394981384277, 301.0, 10.279878728004405))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004188799858093261, 0.005482133229573568, 301.0, 47.757599318400025))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015869935353597005, 0.00014670689900716147, 301.0, 190.84292642772198))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.167888641357422e-5, 0.010132630666097006, 300.0, 26.50592951104045)
p = PerformanceResult(1.0, 1.0, 1.0, 5.844434102376302e-5, 3.100236256917318e-5, 300.0, 26.50592951104045)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003892374038696289, 0.0038069009780883787, 300.0, 1.5150332847879326)
p = PerformanceResult(1.0, 1.0, 1.0, 5.2086512247721355e-5, 2.2498766581217446e-5, 300.0, 1.5150332847879326)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.167888641357422e-5, 0.010132630666097006, 300.0, 26.50592951104045), PerformanceResult(1.0, 1.0, 1.0, 5.844434102376302e-5, 3.100236256917318e-5, 300.0, 26.50592951104045), PerformanceResult(1.0, 1.0, 1.0, 0.003892374038696289, 0.0038069009780883787, 300.0, 1.5150332847879326), PerformanceResult(1.0, 1.0, 1.0, 5.2086512247721355e-5, 2.2498766581217446e-5, 300.0, 1.5150332847879326))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 120.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007941659291585286, 0.0042313019434611, 347.8666666666667, 28666.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007364320755004883, 0.0033275683720906577, 303.8666666666667, 6988.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4302800496419272e-5, 1.2866655985514323e-5, 97.4, 52.799588203430176))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2371610005696613e-5, 1.1833508809407552e-5, 86.9, 77.23635351657867))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5081634521484376e-5, 1.873175303141276e-5, 92.56666666666666, 42.66657865047455))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.90493392944336e-5, 0.0001842975616455078, 97.03333333333333, 47.70622053183615))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8266666666666667, 0.8266666666666667, 0.8266666666666667, 5.734761555989583e-5, 0.000147398312886556, 71.0, 200.27358098328114))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-04T21:02:52.188
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9055555555555554, 0.9039999999999996, 0.9047368421052631, 6.690263748168946e-5, 2.513885498046875e-5, 154.17, 51.094074357068166))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.302408218383789e-5, 2.2830963134765626e-5, 157.87, 0.0))
*** advance 1 from 1000; 2020-09-04T21:02:52.905
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9050000000000002, 0.9010000000000004, 0.9026797385620918, 2.383708953857422e-5, 2.460956573486328e-5, 154.43, 75.15821188688278))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.28118896484375e-5, 2.15601921081543e-5, 158.38, 0.0))
*** advance 1 from 1000; 2020-09-04T21:02:53.589
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9143333333333333, 0.911, 0.9122500000000001, 6.635189056396485e-5, 4.0130615234375e-5, 155.95, 41.30687495134771))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3951530456542967e-5, 3.677129745483398e-5, 159.71, 0.0))
*** advance 1 from 1000; 2020-09-04T21:02:54.355
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9150714285714286, 0.9109999999999999, 0.9127254901960785, 0.00012146711349487305, 0.0006413984298706054, 155.12, 45.38005297188647))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010907888412475586, 0.0005635690689086915, 159.16, 0.0))
*** advance 1 from 1000; 2020-09-04T21:02:55.018
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9610000000000004, 0.9610000000000004, 0.9610000000000004, 9.296655654907227e-5, 0.0004018092155456543, 168.1, 191.92025556229055))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.754180908203125e-5, 0.0004396486282348633, 173.5, 0.0))
*** advance 1 from 1000; 2020-09-04T21:02:56.158
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9055555555555554, 0.9039999999999996, 0.9047368421052631, 3.3087730407714844e-5, 7.1868896484375e-5, 154.17, 51.10530898836441))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.3333301544189454e-5, 7.31205940246582e-5, 157.87, 0.01252044815919362))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:02:58.150
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7379999999999999, 0.7379999999999999, 0.7379999999999999, 0.0017456936836242676, 9.369134902954102e-5, 199.48, 188.66666859388351))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:02:59.172
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7540000000000002, 0.7540000000000002, 0.7540000000000002, 0.0016035890579223632, 7.680892944335938e-5, 202.87, 107.05555782467127))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:03:00.050
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6159999999999998, 0.6159999999999998, 0.6159999999999998, 0.001566915512084961, 7.532119750976563e-5, 247.79, 0.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:03:00.916
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9590000000000002, 0.9530000000000001, 0.9556666666666668, 0.001628408432006836, 2.1488666534423827e-5, 218.72, 604.2000207602978))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:03:02.044
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6030000000000001, 0.6030000000000001, 0.6030000000000001, 0.0017623567581176757, 0.00046160936355590823, 259.16, 2326.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:03:03.016
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.371, 0.371, 0.371, 0.0015864777565002442, 0.00030388832092285154, 253.02, 3644.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-04T21:03:03.938
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6040000000000003, 0.6040000000000003, 0.6040000000000003, 0.00163346529006958, 3.66520881652832e-5, 243.11, 2349.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0140845070422535, conf: {"restarts":12}, perf: {"precision":1.0,"recall":0.984375,"f1":0.9913518772893773,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":2.076849341392517e-6,"evaluations":8.875,"distances_sum":621.0574703291059}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0463215258855585, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9706933691308693,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":2.076849341392517e-6,"evaluations":8.6015625,"distances_sum":595.0502793863416}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0463215258855585,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9706933691308693,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":2.076849341392517e-6,"evaluations":8.6015625,"distances_sum":595.0502793863416}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0463215258855585,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9706933691308693,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":2.076849341392517e-6,"evaluations":8.6015625,"distances_sum":595.0502793863416}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0463215258855585,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9706933691308693,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":2.076849341392517e-6,"evaluations":8.6015625,"distances_sum":595.0502793863416}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8854166666666654, conf: {"restarts":8}, perf: {"precision":0.8854166666666654,"recall":0.8854166666666654,"f1":0.8854166666666654,"seconds":2.3849308490753174e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":50.2421875,"distances_sum":302.57846638932824}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8845486111111099, conf: {"restarts":10}, perf: {"precision":0.8845486111111099,"recall":0.8845486111111099,"f1":0.8845486111111099,"seconds":0.00014183111488819122,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":54.109375,"distances_sum":303.6055397428572}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8897569444444434, conf: {"restarts":11}, perf: {"precision":0.8897569444444434,"recall":0.8897569444444434,"f1":0.8897569444444434,"seconds":2.2532418370246887e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":55.4921875,"distances_sum":304.3078156001866}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666656, conf: {"restarts":4}, perf: {"precision":0.8697916666666656,"recall":0.8697916666666656,"f1":0.8697916666666656,"seconds":1.1267140507698059e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":39.21875,"distances_sum":304.7475434727967}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8897569444444434,"state":{"restarts":11},"perf":{"precision":0.8897569444444434,"recall":0.8897569444444434,"f1":0.8897569444444434,"seconds":2.2532418370246887e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":55.4921875,"distances_sum":304.3078156001866}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6310979534045567, conf: {"restarts":14}, perf: {"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.6425346732139587e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":60.6953125,"distances_sum":300.475729290396}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5867768595041323, conf: {"restarts":15}, perf: {"precision":0.9123263888888877,"recall":0.9123263888888877,"f1":0.9123263888888877,"seconds":1.918710768222809e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":62.390625,"distances_sum":297.67355139926076}, best_list's length: 6, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8940972222222212, conf: {"restarts":12}, perf: {"precision":0.8940972222222212,"recall":0.8940972222222212,"f1":0.8940972222222212,"seconds":3.2261013984680176e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":57.8671875,"distances_sum":303.543478641659}, best_list's length: 8, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5685109543260305, conf: {"restarts":17}, perf: {"precision":0.9027777777777762,"recall":0.9027777777777762,"f1":0.9027777777777762,"seconds":3.637559711933136e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":63.1171875,"distances_sum":300.63786520436406}, best_list's length: 9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6310979534045567,"state":{"restarts":14},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.6425346732139587e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":60.6953125,"distances_sum":300.475729290396}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6310979534045567,"state":{"restarts":14},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.6425346732139587e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":60.6953125,"distances_sum":300.475729290396}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.6310979534045567,"state":{"restarts":14},"perf":{"precision":0.9010416666666655,"recall":0.9010416666666655,"f1":0.9010416666666655,"seconds":2.6425346732139587e-5,"exhaustive_search_seconds":8.085742592811584e-6,"evaluations":60.6953125,"distances_sum":300.475729290396}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8671874999999993,"state":{"restarts":14},"perf":{"precision":0.8671874999999993,"recall":0.8671874999999993,"f1":0.8671874999999993,"seconds":6.549060344696045e-5,"exhaustive_search_seconds":3.259442746639252e-5,"evaluations":153.03125,"distances_sum":123.05492381006479}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8671874999999993,"state":{"restarts":14},"perf":{"precision":0.8671874999999993,"recall":0.8671874999999993,"f1":0.8671874999999993,"seconds":6.549060344696045e-5,"exhaustive_search_seconds":3.259442746639252e-5,"evaluations":153.03125,"distances_sum":123.05492381006479}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8454861111111102, conf: {"restarts":23}, perf: {"precision":0.8454861111111102,"recall":0.8454861111111102,"f1":0.8454861111111102,"seconds":0.00016378052532672882,"exhaustive_search_seconds":0.00047141313552856445,"evaluations":320.890625,"distances_sum":55.65780546143651}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8454861111111102,"state":{"restarts":23},"perf":{"precision":0.8454861111111102,"recall":0.8454861111111102,"f1":0.8454861111111102,"seconds":0.00016378052532672882,"exhaustive_search_seconds":0.00047141313552856445,"evaluations":320.890625,"distances_sum":55.65780546143651}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8454861111111102,"state":{"restarts":23},"perf":{"precision":0.8454861111111102,"recall":0.8454861111111102,"f1":0.8454861111111102,"seconds":0.00016378052532672882,"exhaustive_search_seconds":0.00047141313552856445,"evaluations":320.890625,"distances_sum":55.65780546143651}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(23), SatNeighborhood(32), 2020-09-04T21:03:11.889
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5205, 0.021362226f0), Item(9165, 0.029481884f0), Item(4940, 0.03636847f0), Item(5575, 0.041134983f0), Item(5983, 0.042170558f0), Item(9244, 0.043251906f0), Item(4727, 0.05410935f0), Item(8259, 0.06436972f0), Item(6796, 0.06867295f0), Item(3762, 0.07281267f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0686456400742115, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9558098151848156,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.421875,"distances_sum":574.1038153842092}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0716279069767443, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9585050366300373,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.3984375,"distances_sum":566.4075103476644}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0716279069767443,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9585050366300373,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.3984375,"distances_sum":566.4075103476644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0716279069767443,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9585050366300373,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.3984375,"distances_sum":566.4075103476644}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0716279069767443,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9585050366300373,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.3984375,"distances_sum":566.4075103476644}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.105121293800539,"state":{"bsize":2},"perf":{"precision":0.9340277777777766,"recall":0.9340277777777766,"f1":0.9340277777777766,"seconds":1.691468060016632e-5,"exhaustive_search_seconds":8.070841431617737e-6,"evaluations":31.8828125,"distances_sum":285.6168779209256}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.105121293800539,"state":{"bsize":2},"perf":{"precision":0.9340277777777766,"recall":0.9340277777777766,"f1":0.9340277777777766,"seconds":1.691468060016632e-5,"exhaustive_search_seconds":8.070841431617737e-6,"evaluations":31.8828125,"distances_sum":285.6168779209256}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.84965081038345,"state":{"bsize":2},"perf":{"precision":0.9479166666666659,"recall":0.9479166666666659,"f1":0.9479166666666659,"seconds":3.165937960147858e-5,"exhaustive_search_seconds":2.942979335784912e-5,"evaluations":59.2890625,"distances_sum":125.75521007180214}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.84965081038345,"state":{"bsize":2},"perf":{"precision":0.9479166666666659,"recall":0.9479166666666659,"f1":0.9479166666666659,"seconds":3.165937960147858e-5,"exhaustive_search_seconds":2.942979335784912e-5,"evaluations":59.2890625,"distances_sum":125.75521007180214}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.08837006327732, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.957165896892548e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":107.4140625,"distances_sum":54.09151295851916}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 89.04237463025383, conf: {"bsize":10}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.721595466136932e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":113.5703125,"distances_sum":54.09151295851916}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.47630057803468, conf: {"bsize":4}, perf: {"precision":0.9791666666666663,"recall":0.9791666666666663,"f1":0.9791666666666663,"seconds":6.840378046035767e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":108.125,"distances_sum":54.1791612720117}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":94.08837006327732,"state":{"bsize":8},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.957165896892548e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":107.4140625,"distances_sum":54.09151295851916}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.92804676959976, conf: {"bsize":5}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.74612820148468e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":104.234375,"distances_sum":54.10765829589218}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.7141271368312, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.884895265102386e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":105.5703125,"distances_sum":54.098631530068815}, best_list's length: 9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.92804676959976,"state":{"bsize":5},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.74612820148468e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":104.234375,"distances_sum":54.10765829589218}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.92804676959976,"state":{"bsize":5},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.74612820148468e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":104.234375,"distances_sum":54.10765829589218}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.92804676959976,"state":{"bsize":5},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.74612820148468e-5,"exhaustive_search_seconds":0.0005145389586687088,"evaluations":104.234375,"distances_sum":54.10765829589218}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-09-04T21:03:16.142
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(8228, 0.04023317f0), Item(251, 0.047118798f0), Item(5509, 0.05820511f0), Item(875, 0.060165294f0), Item(1173, 0.061773952f0), Item(8595, 0.066264704f0), Item(9568, 0.066575624f0), Item(9980, 0.06735653f0), Item(7176, 0.067975335f0), Item(342, 0.07229636f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
