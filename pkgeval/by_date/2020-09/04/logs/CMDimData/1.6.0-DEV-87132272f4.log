Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed NumericIO ───────── v0.3.1
  Installed ColorTypes ──────── v0.10.9
  Installed Reexport ────────── v0.2.0
  Installed MDDatasets ──────── v0.3.3
  Installed FixedPointNumbers ─ v0.8.4
  Installed CMDimData ───────── v0.2.0
  Installed Colors ──────────── v0.12.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [70385e83] + CMDimData v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [70385e83] + CMDimData v0.2.0
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [53c48c17] + FixedPointNumbers v0.8.4
  [176e4ad4] + MDDatasets v0.3.3
  [6c575b1c] + NumericIO v0.3.1
  [189a3867] + Reexport v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing CMDimData
Status `/tmp/jl_gWstZE/Project.toml`
  [70385e83] CMDimData v0.2.0
  [5ae59095] Colors v0.12.4
  [f67ccb44] HDF5 v0.12.5
  [176e4ad4] MDDatasets v0.3.3
  [6c575b1c] NumericIO v0.3.1
  [44cfe95a] Pkg
  [de0858da] Printf
  [8dfed614] Test
Status `/tmp/jl_gWstZE/Manifest.toml`
  [9e28174c] BinDeps v1.0.1
  [b99e7846] BinaryProvider v0.5.10
  [a74b3585] Blosc v0.7.0
  [0b7ba130] Blosc_jll v1.14.3+1
  [70385e83] CMDimData v0.2.0
  [631607c0] CMake v1.2.0
  [d5fb7624] CMakeWrapper v0.2.4
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [53c48c17] FixedPointNumbers v0.8.4
  [f67ccb44] HDF5 v0.12.5
  [5ced341a] Lz4_jll v1.9.2+2
  [176e4ad4] MDDatasets v0.3.3
  [6c575b1c] NumericIO v0.3.1
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [189a3867] Reexport v0.2.0
  [30578b45] URIParser v0.4.1
  [3a884ed6] UnPack v1.0.2
  [83775a58] Zlib_jll v1.2.11+16
  [3161d3a3] Zstd_jll v1.4.5+1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
:HACK_SHOWTOUNFREEZE
:HACK_SHOWTOUNFREEZE
[ Info: Creating basic Plot object
[ Info: Creating demo Plot object

Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo1.jl...
--------------------------------------------------------------------------------
pcoll = evalfile(f) = PlotCollection("Sample Plot")[
   Plot("Polynomial Equations", Axis{lin}, [lin])[
      Waveform("Constant", DataF1: 401pts)
      Waveform("Linear", DataF1: 401pts)
      Waveform("Quadratic", DataF1: 401pts)
      Waveform("Cubic", DataF1: 401pts)
   ]
]

Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo2.jl...
--------------------------------------------------------------------------------
pcoll = evalfile(f) = PlotCollection("Sample Plot")[
   Plot("Symbol Test", Axis{lin}, [lin])[
      Waveform("sz=1, w=1", DataF1: 11pts)
      Waveform("sz=1, w=2", DataF1: 11pts)
      Waveform("sz=1, w=3", DataF1: 11pts)
      Waveform("sz=3, w=1", DataF1: 11pts)
      Waveform("sz=3, w=2", DataF1: 11pts)
      Waveform("sz=3, w=3", DataF1: 11pts)
      Waveform("sz=5, w=1", DataF1: 11pts)
      Waveform("sz=5, w=2", DataF1: 11pts)
      Waveform("sz=5, w=3", DataF1: 11pts)
      Waveform("sz=1, w=1", DataF1: 11pts)
      Waveform("sz=1, w=5", DataF1: 11pts)
      Waveform("sz=1, w=10", DataF1: 11pts)
      Waveform("sz=2, w=1", DataF1: 11pts)
      Waveform("sz=2, w=5", DataF1: 11pts)
      Waveform("sz=2, w=10", DataF1: 11pts)
   ]
]

Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo3.jl...
--------------------------------------------------------------------------------
pcoll = evalfile(f) = PlotCollection("Multi-Dataset Tests")[
   Plot("Lines", Axis{lin}, [lin])[
      Waveform("", DataHR:["period", "slope", "offset"])
   ]
   Plot("maximum(Lines)", Axis{lin}, [lin])[
      Waveform("", DataHR:["period", "slope", "offset"])
   ]
   Plot("Tones", Axis{lin}, [lin])[
      Waveform("", DataHR:["period", "slope", "offset"])
   ]
   Plot("Sum", Axis{lin}, [lin])[
      Waveform("", DataHR:["period", "slope", "offset"])
   ]
]

Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo4.jl...
--------------------------------------------------------------------------------
pcoll = evalfile(f) = PlotCollection("Mulit-Dataset Tests: Subarrays")[
   Plot("", Axis{lin}, [lin, lin, lin, lin])[
      Waveform("", DataHR:["period", "slope", "offset"])
      Waveform("", DataHR:["slope", "offset"])
      Waveform("", DataHR:["slope", "offset"])
      Waveform("", DataHR:["period", "offset"])
   ]
]

Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo5.jl...
--------------------------------------------------------------------------------
┌ Warning: `DataRS(d::DataHR)` is deprecated, use `convert(DataRS, d)` instead.
│   caller = ip:0x0
└ @ Core :-1
pcoll = evalfile(f) = PlotCollection("DataHR & DataMD")[
   Plot("", Axis{lin}, [lin, lin])[
      Waveform("tones", DataHR:["period", "amp"])
      Waveform("tones", DataRS:["period", "amp"])
   ]
]
[ Info: EasyData tests
[ Info: Write/Read DataF1 comparison
[ Info: Write/Read demo plot comparison
┌ Warning: TODO: Check correspondance of all plot elements!!!
└ @ Main ~/.julia/packages/CMDimData/9fZKq/test/EasyData.jl:37
[ Info: Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo1.jl...
[ Info: Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo2.jl...
[ Info: Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo3.jl...
[ Info: Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo4.jl...
[ Info: Evaluating plots in /home/pkgeval/.julia/packages/CMDimData/9fZKq/sample/plots/demo5.jl...
Test Summary:   | Pass  Total
CMDimData tests |   43     43
    Testing CMDimData tests passed 
