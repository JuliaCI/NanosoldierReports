Julia Version 1.6.0-DEV.898
Commit eee48c58c0 (2020-09-12 15:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed DataAPI ────────────────────── v1.3.0
  Installed FillArrays ─────────────────── v0.9.6
  Installed OrderedCollections ─────────── v1.3.0
  Installed DataStructures ─────────────── v0.18.4
  Installed LSHFunctions ───────────────── v0.1.2
  Installed Distributions ──────────────── v0.23.11
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed Missings ───────────────────── v0.4.4
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed JSON ───────────────────────── v0.21.1
  Installed Rmath ──────────────────────── v0.6.1
  Installed Documenter ─────────────────── v0.25.2
  Installed Parsers ────────────────────── v1.0.10
  Installed PDMats ─────────────────────── v0.10.0
  Installed Compat ─────────────────────── v3.15.0
  Installed Reexport ───────────────────── v0.2.0
  Installed StatsFuns ──────────────────── v0.9.5
  Installed FFTW ───────────────────────── v1.2.4
  Installed DocStringExtensions ────────── v0.8.3
  Installed MKL_jll ────────────────────── v2020.2.254+0
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed QuadGK ─────────────────────── v2.4.1
  Installed StatsBase ──────────────────── v0.33.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [5134c85a] + LSHFunctions v0.1.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [34da2185] + Compat v3.15.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.4
  [31c24e10] + Distributions v0.23.11
  [ffbed154] + DocStringExtensions v0.8.3
  [e30172f5] + Documenter v0.25.2
  [7a1cc6ca] + FFTW v1.2.4
  [f5851436] + FFTW_jll v3.3.9+5
  [1a297f60] + FillArrays v0.9.6
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [682c06a0] + JSON v0.21.1
  [5134c85a] + LSHFunctions v0.1.2
  [856f044c] + MKL_jll v2020.2.254+0
  [e1d29d7a] + Missings v0.4.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [90014a1f] + PDMats v0.10.0
  [69de0a69] + Parsers v1.0.10
  [1fd47b50] + QuadGK v2.4.1
  [189a3867] + Reexport v0.2.0
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [2913bbd2] + StatsBase v0.33.1
  [4c63d2b9] + StatsFuns v0.9.5
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building FFTW → `~/.julia/packages/FFTW/DMUbN/deps/build.log`
    Testing LSHFunctions
Status `/tmp/jl_J2BoBw/Project.toml`
  [31c24e10] Distributions v0.23.11
  [e30172f5] Documenter v0.25.2
  [7a1cc6ca] FFTW v1.2.4
  [5134c85a] LSHFunctions v0.1.2
  [1fd47b50] QuadGK v2.4.1
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [ea8e919c] SHA
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_J2BoBw/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [34da2185] Compat v3.15.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [31c24e10] Distributions v0.23.11
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.9.6
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [682c06a0] JSON v0.21.1
  [5134c85a] LSHFunctions v0.1.2
  [856f044c] MKL_jll v2020.2.254+0
  [e1d29d7a] Missings v0.4.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [90014a1f] PDMats v0.10.0
  [69de0a69] Parsers v1.0.10
  [1fd47b50] QuadGK v2.4.1
  [189a3867] Reexport v0.2.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/function_hashing.md:8-20
│ 
│ ```jldoctest; setup = :(using Random; Random.seed!(0))
│ julia> using LSHFunctions;
│ 
│ julia> μ() = 2π*rand();   # μ samples a random point from [0,2π]
│ 
│ julia> hashfn = MonteCarloHash(cossim, μ, 3);
│ 
│ julia> hashfn(x -> 5x^3 - 2x^2 - 9x + 1)
│ 3-element BitArray{1}:
│  0
│  1
│  1
│ ```
│ 
│ Subexpression:
│ 
│ hashfn(x -> 5x^3 - 2x^2 - 9x + 1)
│ 
│ Evaluated output:
│ 
│ 3-element BitVector:
│  0
│  1
│  1
│ 
│ Expected output:
│ 
│ 3-element BitArray{1}:
│  0
│  1
│  1
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element BitArray{1}:
│     BitVector:
│     0
│     1
│     1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/function_hashing.md:105-121
│ 
│ ```jldoctest; setup = :(using LSHFunctions, Random; Random.seed!(0))
│ julia> μ() = 2π * rand(); # μ samples a random point from [0,2π]
│ 
│ julia> hashfn = MonteCarloHash(L2, μ, 3; volume=2π);
│ 
│ julia> hashfn(cos)
│ 3-element Array{Int32,1}:
│  -1
│   3
│   0
│ 
│ julia> hashfn(x -> x/(2π))
│ 3-element Array{Int32,1}:
│  -1
│  -2
│  -1
│ ```
│ 
│ Subexpression:
│ 
│ hashfn(cos)
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Int32}:
│  -1
│   3
│   0
│ 
│ Expected output:
│ 
│ 3-element Array{Int32,1}:
│  -1
│   3
│   0
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Int32,1}:
│     Vector{Int32}:
│     -1
│      3
│      0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/function_hashing.md:105-121
│ 
│ ```jldoctest; setup = :(using LSHFunctions, Random; Random.seed!(0))
│ julia> μ() = 2π * rand(); # μ samples a random point from [0,2π]
│ 
│ julia> hashfn = MonteCarloHash(L2, μ, 3; volume=2π);
│ 
│ julia> hashfn(cos)
│ 3-element Array{Int32,1}:
│  -1
│   3
│   0
│ 
│ julia> hashfn(x -> x/(2π))
│ 3-element Array{Int32,1}:
│  -1
│  -2
│  -1
│ ```
│ 
│ Subexpression:
│ 
│ hashfn(x -> x/(2π))
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Int32}:
│  -1
│  -2
│  -1
│ 
│ Expected output:
│ 
│ 3-element Array{Int32,1}:
│  -1
│  -2
│  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Int32,1}:
│     Vector{Int32}:
│     -1
│     -2
│     -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/lshfunction_api.md:108-121
│ 
│ ```jldoctest; setup = :(using LSHFunctions)
│ julia> hashfn = LSHFunction(cossim, 5);
│ 
│ julia> hashtype(hashfn)
│ Bool
│ 
│ julia> hashes = hashfn(rand(100));
│ 
│ julia> typeof(hashes)
│ BitArray{1}
│ 
│ julia> typeof(hashes[1]) == hashtype(hashfn)
│ true
│ ```
│ 
│ Subexpression:
│ 
│ typeof(hashes)
│ 
│ Evaluated output:
│ 
│ BitVector = BitArray{1}
│ 
│ Expected output:
│ 
│ BitArray{1}
│ 
│   diff =
│    Warning: Diff output requires color.
│    BitVector = BitArray{1}
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/faq.md:10-22
│ 
│ ```jldoctest; setup = :(using LSHFunctions, Random; Random.seed!(0))
│ julia> hashfn = SimHash();
│ 
│ julia> data = ones(10, 100);  # Each column is a data point
│ 
│ julia> data[end,1:end] .= rand(100);  # Randomize the last dimension of each point
│ 
│ julia> hashes = map(x -> hashfn(x), eachcol(data));
│ 
│ julia> unique(hashes)
│ 1-element Array{BitArray{1},1}:
│  [0]
│ ```
│ 
│ Subexpression:
│ 
│ unique(hashes)
│ 
│ Evaluated output:
│ 
│ 1-element Vector{BitVector}:
│  [0]
│ 
│ Expected output:
│ 
│ 1-element Array{BitArray{1},1}:
│  [0]
│ 
│   diff =
│    Warning: Diff output requires color.
│    1-element Array{BitArray{1},1}:
│     Vector{BitVector}:
│     [0]
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/similarities/lp_distance.md:67-79
│ 
│ ```jldoctest; setup = :(using LSHFunctions)
│ julia> hashfn = L2Hash(128);
│ 
│ julia> hashtype(hashfn)
│ Int32
│ 
│ julia> x = rand(20);
│ 
│ julia> hashes = hashfn(x);
│ 
│ julia> typeof(hashes)
│ Array{Int32,1}
│ ```
│ 
│ Subexpression:
│ 
│ typeof(hashes)
│ 
│ Evaluated output:
│ 
│ Vector{Int32} = Array{Int32, 1}
│ 
│ Expected output:
│ 
│ Array{Int32,1}
│ 
│   diff =
│    Warning: Diff output requires color.
│    Array{Int32,1}Vector{Int32} = Array{Int32, 1}
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/similarities/cosine.md:70-83
│ 
│ ```jldoctest; setup = :(using LSHFunctions)
│ julia> hashfn = SimHash();
│ 
│ julia> n_hashes(hashfn)
│ 1
│ 
│ julia> hashes = hashfn(randn(4));
│ 
│ julia> typeof(hashes)
│ BitArray{1}
│ 
│ julia> length(hashes)
│ 1
│ ```
│ 
│ Subexpression:
│ 
│ typeof(hashes)
│ 
│ Evaluated output:
│ 
│ BitVector = BitArray{1}
│ 
│ Expected output:
│ 
│ BitArray{1}
│ 
│   diff =
│    Warning: Diff output requires color.
│    BitVector = BitArray{1}
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/docs/src/similarities/jaccard.md:31-49
│ 
│ ```jldoctest; setup = :(using LSHFunctions, Random; Random.seed!(0))
│ julia> hashfn = MinHash(5);
│ 
│ julia> n_hashes(hashfn)
│ 5
│ 
│ julia> hashtype(hashfn)
│ UInt64
│ 
│ julia> A = Set([1, 2, 3]);
│ 
│ julia> hashfn(A)
│ 5-element Array{UInt64,1}:
│  0x21be0e591a3b69ea
│  0x19c5f638a776ab3c
│  0x63c12fd5d2f073ab
│  0x5c6b11e538a36352
│  0x129ef927e80a1b39
│ ```
│ 
│ Subexpression:
│ 
│ hashfn(A)
│ 
│ Evaluated output:
│ 
│ 5-element Vector{UInt64}:
│  0x21be0e591a3b69ea
│  0x19c5f638a776ab3c
│  0x63c12fd5d2f073ab
│  0x5c6b11e538a36352
│  0x129ef927e80a1b39
│ 
│ Expected output:
│ 
│ 5-element Array{UInt64,1}:
│  0x21be0e591a3b69ea
│  0x19c5f638a776ab3c
│  0x63c12fd5d2f073ab
│  0x5c6b11e538a36352
│  0x129ef927e80a1b39
│ 
│   diff =
│    Warning: Diff output requires color.
│    5-element Array{UInt64,1}:
│     Vector{UInt64}:
│     0x21be0e591a3b69ea
│     0x19c5f638a776ab3c
│     0x63c12fd5d2f073ab
│     0x5c6b11e538a36352
│     0x129ef927e80a1b39
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/src/utils/hash_compression.jl:40-49
│ 
│ ```jldoctest; setup = :(using LSHFunctions)
│ julia> compressor = HashCompressor(n_bytes=4);
│ 
│ julia> compressor([1, 4, 2, 9, 5, 5])
│ 4-element Array{UInt8,1}:
│  0xf3
│  0x91
│  0x55
│  0x2e
│ ```
│ 
│ Subexpression:
│ 
│ compressor([1, 4, 2, 9, 5, 5])
│ 
│ Evaluated output:
│ 
│ 4-element Vector{UInt8}:
│  0xf3
│  0x91
│  0x55
│  0x2e
│ 
│ Expected output:
│ 
│ 4-element Array{UInt8,1}:
│  0xf3
│  0x91
│  0x55
│  0x2e
│ 
│   diff =
│    Warning: Diff output requires color.
│    4-element Array{UInt8,1}:
│     Vector{UInt8}:
│     0xf3
│     0x91
│     0x55
│     0x2e
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/src/function_hashing/monte_carlo.jl:120-136
│ 
│ ```jldoctest; setup = :(using LSHFunctions, Random; Random.seed!(0))
│ julia> μ() = 2π * rand(); # μ samples a random point from [0,2π]
│ 
│ julia> hashfn = MonteCarloHash(L2, μ, 3; volume=2π);
│ 
│ julia> hashfn(cos)
│ 3-element Array{Int32,1}:
│  -1
│   3
│   0
│ 
│ julia> hashfn(x -> x/(2π))
│ 3-element Array{Int32,1}:
│  -1
│  -2
│  -1
│ ```
│ 
│ Subexpression:
│ 
│ hashfn(cos)
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Int32}:
│  -1
│   3
│   0
│ 
│ Expected output:
│ 
│ 3-element Array{Int32,1}:
│  -1
│   3
│   0
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Int32,1}:
│     Vector{Int32}:
│     -1
│      3
│      0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/LSHFunctions/p8P7r/src/function_hashing/monte_carlo.jl:120-136
│ 
│ ```jldoctest; setup = :(using LSHFunctions, Random; Random.seed!(0))
│ julia> μ() = 2π * rand(); # μ samples a random point from [0,2π]
│ 
│ julia> hashfn = MonteCarloHash(L2, μ, 3; volume=2π);
│ 
│ julia> hashfn(cos)
│ 3-element Array{Int32,1}:
│  -1
│   3
│   0
│ 
│ julia> hashfn(x -> x/(2π))
│ 3-element Array{Int32,1}:
│  -1
│  -2
│  -1
│ ```
│ 
│ Subexpression:
│ 
│ hashfn(x -> x/(2π))
│ 
│ Evaluated output:
│ 
│ 3-element Vector{Int32}:
│  -1
│  -2
│  -1
│ 
│ Expected output:
│ 
│ 3-element Array{Int32,1}:
│  -1
│  -2
│  -1
│ 
│   diff =
│    Warning: Diff output requires color.
│    3-element Array{Int32,1}:
│     Vector{Int32}:
│     -1
│     -2
│     -1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
│     [13] top-level scope
│        @ ~/.julia/packages/LSHFunctions/p8P7r/test/doctests.jl:8
│     [14] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [15] top-level scope
│        @ ~/.julia/packages/LSHFunctions/p8P7r/test/doctests.jl:8
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ ~/.julia/packages/LSHFunctions/p8P7r/test/runtests.jl:17
│     [18] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [19] top-level scope
│        @ none:6
│     [20] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [21] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [22] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: LSHFunctions: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:            | Fail  Total
LSH doctests             |    1      1
  Doctests: LSHFunctions |    1      1
ERROR: LoadError: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/LSHFunctions/p8P7r/test/doctests.jl:7
in expression starting at /home/pkgeval/.julia/packages/LSHFunctions/p8P7r/test/runtests.jl:17
ERROR: Package LSHFunctions errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
