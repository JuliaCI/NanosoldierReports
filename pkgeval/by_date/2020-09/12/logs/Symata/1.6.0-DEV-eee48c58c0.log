Julia Version 1.6.0-DEV.898
Commit eee48c58c0 (2020-09-12 15:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Formatting ─────────────────── v0.4.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Combinatorics ──────────────── v1.0.2
  Installed Primes ─────────────────────── v0.4.0
  Installed IterTools ──────────────────── v1.3.0
  Installed DataStructures ─────────────── v0.17.20
  Installed Polynomials ────────────────── v0.6.1
  Installed Symata ─────────────────────── v0.4.8
  Installed OrderedCollections ─────────── v1.3.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Parsers ────────────────────── v1.0.10
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Roots ──────────────────────── v0.8.4
  Installed JSON ───────────────────────── v0.21.1
  Installed CommonSubexpressions ───────── v0.2.1
  Installed NaNMath ────────────────────── v0.3.4
  Installed RecipesBase ────────────────── v0.8.0
  Installed VersionParsing ─────────────── v1.2.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed QuadGK ─────────────────────── v2.4.1
  Installed Conda ──────────────────────── v1.4.1
  Installed PyCall ─────────────────────── v1.91.4
  Installed ForwardDiff ────────────────── v0.10.11
  Installed StaticArrays ───────────────── v0.12.4
  Installed Memoize ────────────────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [a906b1d5] + Symata v0.4.8
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.2.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] + Conda v1.4.1
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.11
  [c8e1da08] + IterTools v1.3.0
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.5
  [c03570c3] + Memoize v0.4.3
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [f27b6e38] + Polynomials v0.6.1
  [27ebfcd6] + Primes v0.4.0
  [438e738f] + PyCall v1.91.4
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v0.8.0
  [f2b01f46] + Roots v0.8.4
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [a906b1d5] + Symata v0.4.8
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing Symata
Status `/tmp/jl_OGxOB4/Project.toml`
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.2.1
  [8f4d0f93] Conda v1.4.1
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.11
  [c8e1da08] IterTools v1.3.0
  [1914dd2f] MacroTools v0.5.5
  [c03570c3] Memoize v0.4.3
  [f27b6e38] Polynomials v0.6.1
  [27ebfcd6] Primes v0.4.0
  [438e738f] PyCall v1.91.4
  [1fd47b50] QuadGK v2.4.1
  [f2b01f46] Roots v0.8.4
  [276daf66] SpecialFunctions v0.10.3
  [a906b1d5] Symata v0.4.8
  [81def892] VersionParsing v1.2.0
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [d6f4376e] Markdown
  [3fa0cd96] REPL
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_OGxOB4/Manifest.toml`
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.2.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] Conda v1.4.1
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.11
  [c8e1da08] IterTools v1.3.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [c03570c3] Memoize v0.4.3
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [f27b6e38] Polynomials v0.6.1
  [27ebfcd6] Primes v0.4.0
  [438e738f] PyCall v1.91.4
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v0.8.0
  [f2b01f46] Roots v0.8.4
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [a906b1d5] Symata v0.4.8
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: Installing sympy via the Conda sympy package...
[ Info: Running `conda install -q -y sympy` in root environment
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... done

## Package Plan ##

  environment location: /home/pkgeval/.julia/conda/3

  added / updated specs:
    - sympy


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    fastcache-1.1.0            |   py38h7b6447c_0          36 KB
    gmp-6.1.2                  |       h6c8ec71_1         514 KB
    gmpy2-2.0.8                |   py38hd5f6e3b_3         162 KB
    mpc-1.1.0                  |       h10f8cd9_1          90 KB
    mpfr-4.0.2                 |       hb69a4c5_1         487 KB
    mpmath-1.1.0               |           py38_0         776 KB
    sympy-1.6.2                |           py38_0         8.6 MB
    ------------------------------------------------------------
                                           Total:        10.7 MB

The following NEW packages will be INSTALLED:

  fastcache          pkgs/main/linux-64::fastcache-1.1.0-py38h7b6447c_0
  gmp                pkgs/main/linux-64::gmp-6.1.2-h6c8ec71_1
  gmpy2              pkgs/main/linux-64::gmpy2-2.0.8-py38hd5f6e3b_3
  mpc                pkgs/main/linux-64::mpc-1.1.0-h10f8cd9_1
  mpfr               pkgs/main/linux-64::mpfr-4.0.2-hb69a4c5_1
  mpmath             pkgs/main/linux-64::mpmath-1.1.0-py38_0
  sympy              pkgs/main/linux-64::sympy-1.6.2-py38_0


Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
Done testing symbol_test.sj
Done testing block_test.sj
Done testing ntable_test.sj
┌ Warning: For::argb: For called with one argument; between 3 and 4 are expected.
└ @ Symata ~/.julia/packages/Symata/0RhHu/src/wrapout.jl:29
┌ Warning: For::argb: For called with five arguments; between 3 and 4 are expected.
└ @ Symata ~/.julia/packages/Symata/0RhHu/src/wrapout.jl:29
┌ Warning: Throw flag set, but expression is not throw.
│   wrapout($(Expr(:escape, :mx))) = True
└ @ Symata ~/.julia/packages/Symata/0RhHu/src/wrapout.jl:29
┌ Warning: Throw flag set, but expression is not throw.
│   wrapout($(Expr(:escape, :mx))) = True
└ @ Symata ~/.julia/packages/Symata/0RhHu/src/wrapout.jl:29
┌ Warning: Catch: throw set but expr is 
│   wrapout($(Expr(:escape, :res))) = Throw(x,u)
└ @ Symata ~/.julia/packages/Symata/0RhHu/src/wrapout.jl:29
Done testing flowcontrol_test.sj
Done testing input_test.sj
MethodError(parse, ("%e",), 0x0000000000006f43)
┌ Warning: Symata: Error reading file /home/pkgeval/.julia/packages/Symata/0RhHu/src/../symata_test/output_test.sj, line 55
└ @ Symata ~/.julia/packages/Symata/0RhHu/src/IO.jl:85
LoadError("/home/pkgeval/.julia/packages/Symata/0RhHu/symata_test/sjruntests.jl", 68, UndefVarError(:warn))
Error During Test at /home/pkgeval/.julia/packages/Symata/0RhHu/test/runtests.jl:20
  Test threw exception
  Expression: begin
    runtests()
    true
end
  LoadError: LoadError: UndefVarError: warn not defined
  Stacktrace:
    [1] top-level scope
      @ ~/.julia/packages/Symata/0RhHu/symata_test/sjruntests.jl:71
    [2] include(mod::Module, _path::String)
      @ Base ./Base.jl:376
    [3] include
      @ ~/.julia/packages/Symata/0RhHu/src/Symata.jl:2 [inlined]
    [4] run_testsuite
      @ ~/.julia/packages/Symata/0RhHu/src/test.jl:78 [inlined]
    [5] #do_Tests#43
      @ ~/.julia/packages/Symata/0RhHu/src/test.jl:104 [inlined]
    [6] apprules(mx::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/apprules_core.jl:138
    [7] meval_apply_all_rules(nmx::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:487
    [8] meval(mx::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:471
    [9] infseval(mxin::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:384
   [10] doeval
      @ ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:28 [inlined]
   [11] trysymataevaluate(mxin::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:330
   [12] symataevaluate(ex::Expr, options::Symata.EvaluateJuliaSyntaxSimple)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:304
   [13] _sym_inner(ex::Expr, options::Symata.EvaluateJuliaSyntaxSimple)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:151
   [14] @sym(__source__::LineNumberNode, __module__::Module, ex::Any)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:141
   [15] eval
      @ ./boot.jl:345 [inlined]
   [16] eval(x::Expr)
      @ Base.MainInclude ./client.jl:446
   [17] runtests()
      @ Main ~/.julia/packages/Symata/0RhHu/test/runtests.jl:18
   [18] top-level scope
      @ ~/.julia/packages/Symata/0RhHu/test/runtests.jl:20
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [22] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Symata/0RhHu/symata_test/sjruntests.jl:68
  in expression starting at none:1
  
  caused by: MethodError: no method matching parse(::String)
  Closest candidates are:
    parse(!Matched::Type{Sockets.IPAddr}, !Matched::AbstractString) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Sockets/src/IPAddr.jl:246
    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at parse.jl:40
    parse(!Matched::Type{T}, !Matched::AbstractString; base) where T<:Integer at parse.jl:240
    ...
  Stacktrace:
    [1] checkfmt(fmt::String)
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:6
    [2] generate_formatter(fmt::String)
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:17
    [3] sprintf1(fmt::String, x::Rational{Int64})
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:3
    [4] format(x::Rational{Int64}; width::Int64, precision::Int64, leftjustified::Bool, zeropadding::Bool, commas::Bool, signed::Bool, positivespace::Bool, stripzeros::Bool, parens::Bool, alternative::Bool, mixedfraction::Bool, mixedfractionsep::String, fractionsep::String, fractionwidth::Int64, tryden::Int64, suffix::String, autoscale::Symbol, conversion::String)
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:247
    [5] #format#86
      @ ~/.julia/packages/Symata/0RhHu/src/IO.jl:382 [inlined]
    [6] do_Format(::Mxpr{:Format}, ::Rational{Int64}, ::Vararg{Any, N} where N)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/IO.jl:386
    [7] apprules(mx::Mxpr{:Format})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/apprules_core.jl:106
    [8] meval_apply_all_rules(nmx::Mxpr{:Format})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:487
    [9] meval(mx::Mxpr{:Format})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:471
   [10] infseval(mxin::Mxpr{:Format})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:384
   [11] doeval
      @ ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:28 [inlined]
   [12] argeval(arg::Mxpr{:Format})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:508
   [13] meval_arguments(mx::Mxpr{:Isa})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:541
   [14] meval(mx::Mxpr{:Isa})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:467
   [15] infseval(mxin::Mxpr{:Isa})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:384
   [16] doeval
      @ ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:28 [inlined]
   [17] do_If(mxpr::Mxpr{:If}, test::Mxpr{:BigIntInput}, tbranch::Bool, fbranch::Mxpr{:Isa})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/flowcontrol.jl:137
   [18] apprules(mx::Mxpr{:If})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/apprules_core.jl:106
   [19] meval_apply_all_rules(nmx::Mxpr{:If})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:487
   [20] meval(mx::Mxpr{:If})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:471
   [21] infseval(mxin::Mxpr{:If})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:384
   [22] doeval
      @ ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:28 [inlined]
   [23] trysymataevaluate(mxin::Mxpr{:If})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:330
   [24] symataevaluate(ex::Expr, options::Symata.EvaluateJuliaSyntaxSimple)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:304
   [25] read_Symata_file(f::String, test::Symata.SymataPlainTest)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/IO.jl:77
   [26] #runtest#42
      @ ~/.julia/packages/Symata/0RhHu/src/test.jl:72 [inlined]
   [27] runtest(test_type::Symata.SymataPlainTest, fname::String)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/test.jl:71
   [28] runalltests()
      @ Symata ~/.julia/packages/Symata/0RhHu/symata_test/sjruntests.jl:58
   [29] top-level scope
      @ ~/.julia/packages/Symata/0RhHu/symata_test/sjruntests.jl:69
   [30] include(mod::Module, _path::String)
      @ Base ./Base.jl:376
   [31] include
      @ ~/.julia/packages/Symata/0RhHu/src/Symata.jl:2 [inlined]
   [32] run_testsuite
      @ ~/.julia/packages/Symata/0RhHu/src/test.jl:78 [inlined]
   [33] #do_Tests#43
      @ ~/.julia/packages/Symata/0RhHu/src/test.jl:104 [inlined]
   [34] apprules(mx::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/apprules_core.jl:138
   [35] meval_apply_all_rules(nmx::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:487
   [36] meval(mx::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:471
   [37] infseval(mxin::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:384
   [38] doeval
      @ ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:28 [inlined]
   [39] trysymataevaluate(mxin::Mxpr{:Tests})
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:330
   [40] symataevaluate(ex::Expr, options::Symata.EvaluateJuliaSyntaxSimple)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:304
   [41] _sym_inner(ex::Expr, options::Symata.EvaluateJuliaSyntaxSimple)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:151
   [42] @sym(__source__::LineNumberNode, __module__::Module, ex::Any)
      @ Symata ~/.julia/packages/Symata/0RhHu/src/evaluation.jl:141
   [43] eval
      @ ./boot.jl:345 [inlined]
   [44] eval(x::Expr)
      @ Base.MainInclude ./client.jl:446
   [45] runtests()
      @ Main ~/.julia/packages/Symata/0RhHu/test/runtests.jl:18
   [46] top-level scope
      @ ~/.julia/packages/Symata/0RhHu/test/runtests.jl:20
   [47] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [48] top-level scope
      @ none:6
   [49] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [50] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
ERROR: LoadError: There was an error during testing
in expression starting at /home/pkgeval/.julia/packages/Symata/0RhHu/test/runtests.jl:20
/home/pkgeval/.julia/conda/3/lib/python3.8/site-packages/sympy/__init__.py:672: SymPyDeprecationWarning: 

importing sympy.core.containers with 'from sympy import *' has been
deprecated since SymPy 1.6. Use import sympy.core.containers instead.
See https://github.com/sympy/sympy/issues/18245 for more info.

  self.Warn(
/home/pkgeval/.julia/conda/3/lib/python3.8/site-packages/sympy/__init__.py:672: SymPyDeprecationWarning: 

importing sympy.core.numbers with 'from sympy import *' has been
deprecated since SymPy 1.6. Use import sympy.core.numbers instead. See
https://github.com/sympy/sympy/issues/18245 for more info.

  self.Warn(
/home/pkgeval/.julia/conda/3/lib/python3.8/site-packages/sympy/__init__.py:672: SymPyDeprecationWarning: 

importing sympy.logic.boolalg with 'from sympy import *' has been
deprecated since SymPy 1.6. Use import sympy.logic.boolalg instead.
See https://github.com/sympy/sympy/issues/18245 for more info.

  self.Warn(
ERROR: Package Symata errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
