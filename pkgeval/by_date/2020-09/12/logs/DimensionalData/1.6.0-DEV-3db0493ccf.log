Julia Version 1.6.0-DEV.893
Commit 3db0493ccf (2020-09-11 16:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed ConstructionBase ─ v1.0.0
  Installed RecipesBase ────── v1.1.0
  Installed DimensionalData ── v0.12.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [0703355e] + DimensionalData v0.12.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [187b0558] + ConstructionBase v1.0.0
  [0703355e] + DimensionalData v0.12.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [ade2ca70] + Dates
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4ec0a83e] + Unicode
    Testing DimensionalData
Status `/tmp/jl_kexi3l/Project.toml`
  [4c88cf16] Aqua v0.4.9
  [6e4b80f9] BenchmarkTools v0.5.0
  [861a8166] Combinatorics v1.0.2
  [187b0558] ConstructionBase v1.0.0
  [150eb455] CoordinateTransformations v0.6.0
  [0703355e] DimensionalData v0.12.1
  [31c24e10] Distributions v0.23.11
  [e30172f5] Documenter v0.25.2
  [6fe1bfb0] OffsetArrays v1.1.3
  [91a5bcdd] Plots v1.6.3
  [3cdcf5f2] RecipesBase v1.1.0
  [f3b207a7] StatsPlots v0.14.13
  [1986cc42] Unitful v1.4.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_kexi3l/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [4c88cf16] Aqua v0.4.9
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [13072b0f] AxisAlgorithms v1.0.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [6e34b625] Bzip2_jll v1.0.6+4
  [aaaa29a8] Clustering v0.14.1
  [35d6a980] ColorSchemes v3.9.0
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v1.0.2
  [34da2185] Compat v3.15.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [187b0558] ConstructionBase v1.0.0
  [d38c429a] Contour v0.5.5
  [150eb455] CoordinateTransformations v0.6.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [0703355e] DimensionalData v0.12.1
  [b4f34e82] Distances v0.9.0
  [31c24e10] Distributions v0.23.11
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [c87230d0] FFMPEG v0.4.0
  [b22a6f82] FFMPEG_jll v4.3.1+2
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.9.6
  [53c48c17] FixedPointNumbers v0.8.4
  [d7e528f0] FreeType2_jll v2.10.1+4
  [559328eb] FriBidi_jll v1.0.5+5
  [28b8d3ca] GR v0.52.0
  [5c1252a2] GeometryBasics v0.2.15
  [4d00f742] GeometryTypes v0.8.3
  [cd3eb016] HTTP v0.8.17
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.10
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [5ab0869b] KernelDensity v0.6.0
  [c1c5ebd0] LAME_jll v3.100.0+2
  [dd192d2f] LibVPX_jll v1.9.0+0
  [856f044c] MKL_jll v2020.2.254+0
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.4
  [6f286f6a] MultivariateStats v0.7.0
  [77ba4419] NaNMath v0.3.4
  [b8a86587] NearestNeighbors v0.4.6
  [510215fc] Observables v0.3.1
  [6fe1bfb0] OffsetArrays v1.1.3
  [e7412a2a] Ogg_jll v1.3.4+1
  [4536629a] OpenBLAS_jll v0.3.10+0
  [458c3c95] OpenSSL_jll v1.1.1+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [91d4177d] Opus_jll v1.3.1+2
  [bac558e1] OrderedCollections v1.3.0
  [90014a1f] PDMats v0.10.0
  [69de0a69] Parsers v1.0.10
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.6
  [91a5bcdd] Plots v1.6.3
  [1fd47b50] QuadGK v2.4.1
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v1.1.0
  [01d81517] RecipesPipeline v0.1.13
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [992d4aef] Showoff v0.3.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [f3b207a7] StatsPlots v0.14.13
  [09ab397b] StructArrays v0.4.4
  [ab02a1b2] TableOperations v0.2.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [1986cc42] Unitful v1.4.0
  [cc8bc4a8] Widgets v0.6.2
  [efce3f68] WoodburyMatrices v0.5.2
  [83775a58] Zlib_jll v1.2.11+16
  [0ac62f75] libass_jll v0.14.0+3
  [f638f0a6] libfdk_aac_jll v0.1.6+3
  [f27f6e37] libvorbis_jll v1.3.6+5
  [1270edf5] x264_jll v2020.7.14+1
  [dfaa095f] x265_jll v3.0.0+2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Skipping Base.Filesystem.JL_O_RANDOM
Skipping Base.Filesystem.JL_O_SEQUENTIAL
Skipping Base.Filesystem.JL_O_SHORT_LIVED
Skipping Base.Filesystem.JL_O_TEMPORARY
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary:    | Pass  Total
Method ambiguity |    1      1
Test Summary:           | Pass  Total
Unbound type parameters |    1      1
Test Summary:     | Pass  Total
Undefined exports |    1      1
Test Summary:                              |
Compare Project.toml and test/Project.toml | No tests
Test Summary:      |
Stale dependencies | No tests
Test Summary: |
Compat bounds | No tests
Test Summary:           |
Project.toml formatting | No tests
Test Summary:                                          | Pass  Total
DimensionalData [0703355e-b756-11e9-17c0-8b28908087d0] |    1      1
Test Summary:                                          | Pass  Total
DimensionalData [0703355e-b756-11e9-17c0-8b28908087d0] |    1      1
Test Summary: | Pass  Total
map           |    2      2
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:51
  Test threw exception
  Expression: mapreduce((x->begin
                x > 3
            end), +, da; dims = X) == [0 1]
  MethodError: no method matching iterate(::Type{X})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:617
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:617
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s68", var"#s67"} where var"#s67"<:Dict where var"#s68", Base.ValueIterator{var"#s66"} where var"#s66"<:Dict} at dict.jl:693
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, region::Type)
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type)
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::var"#7#12", op::typeof(+), A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type)
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, dims::Type)
      @ Base ./reducedim.jl:324
    [7] #mapreduce#649
      @ ./reducedim.jl:310 [inlined]
    [8] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:51
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:16
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:52
  Test threw exception
  Expression: mapreduce((x->begin
                x > 3
            end), +, da; dims = 2) == ([0 1])'
  ArgumentError: CartesianIndex(1,) not found in Y: range(-38.0, stop=-36.0, length=2) (Sampled: Ordered Regular Points)
  Stacktrace:
    [1] selvalnotfound(dim::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, selval::CartesianIndex{1})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:323
    [2] at(dim::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, selval::CartesianIndex{1}, atol::Nothing, rtol::Nothing)
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:319
    [3] at(#unused#::Points, mode::Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, dim::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, sel::At{CartesianIndex{1}, Nothing, Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:305
    [4] sel2indices(sampling::Points, mode::Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, dim::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, sel::At{CartesianIndex{1}, Nothing, Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:256
    [5] sel2indices(mode::Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, dim::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, sel::At{CartesianIndex{1}, Nothing, Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:250
    [6] sel2indices(dim::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, sel::At{CartesianIndex{1}, Nothing, Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:215
    [7] (::DimensionalData.var"#21#22")(d::Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, l::At{CartesianIndex{1}, Nothing, Nothing})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:205
    [8] map(f::DimensionalData.var"#21#22", t::Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, s::Tuple{Int64, At{CartesianIndex{1}, Nothing, Nothing}})
      @ Base ./tuple.jl:199
    [9] sel2indices(dims::Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, lookup::Tuple{Int64, At{CartesianIndex{1}, Nothing, Nothing}})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:204
   [10] sel2indices(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, lookup::Tuple{Int64, At{CartesianIndex{1}, Nothing, Nothing}})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/selector.jl:202
   [11] getindex(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, i::Int64, I::CartesianIndex{1})
      @ DimensionalData ~/.julia/packages/DimensionalData/IHaNW/src/array.jl:133
   [12] macro expansion
      @ ./reducedim.jl:270 [inlined]
   [13] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [14] _mapreducedim!(f::var"#8#13", op::typeof(+), R::Matrix{Int64}, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing})
      @ Base ./reducedim.jl:269
   [15] mapreducedim!(f::Function, op::Function, R::Matrix{Int64}, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing})
      @ Base ./reducedim.jl:277
   [16] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, dims::Int64)
      @ Base ./reducedim.jl:324
   [17] #mapreduce#649
      @ ./reducedim.jl:310 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:52
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:16
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:53
  Test threw exception
  Expression: dims(mapreduce((x->begin
                    x > 3
                end), +, da; dims = Y())) == (X(LinRange(143.0, 145.0, 2), Sampled(Ordered(), Regular(2.0), Points()), nothing), Y([-37.0], Sampled(Ordered(), Regular(4.0), Points()), nothing))
  MethodError: no method matching iterate(::Y{Colon, AutoMode{AutoOrder}, Nothing})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:617
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:617
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s68", var"#s67"} where var"#s67"<:Dict where var"#s68", Base.ValueIterator{var"#s66"} where var"#s66"<:Dict} at dict.jl:693
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing}, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing}, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::var"#9#14", op::typeof(+), A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, dims::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:324
    [7] #mapreduce#649
      @ ./reducedim.jl:310 [inlined]
    [8] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:53
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:16
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:58
  Test threw exception
  Expression: reduce(+, da; dims = X) == [4 6]
  MethodError: no method matching iterate(::Type{X})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:617
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:617
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s68", var"#s67"} where var"#s67"<:Dict where var"#s68", Base.ValueIterator{var"#s66"} where var"#s66"<:Dict} at dict.jl:693
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, region::Type)
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type)
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::typeof(identity), op::typeof(+), A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Type)
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, dims::Type)
      @ Base ./reducedim.jl:324
    [7] #mapreduce#649
      @ ./reducedim.jl:310 [inlined]
    [8] #reduce#651
      @ ./reducedim.jl:359 [inlined]
    [9] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:58
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:16
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:59
  Test threw exception
  Expression: reduce(+, da; dims = Y()) == ([3 7])'
  MethodError: no method matching iterate(::Y{Colon, AutoMode{AutoOrder}, Nothing})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:617
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:617
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s68", var"#s67"} where var"#s67"<:Dict where var"#s68", Base.ValueIterator{var"#s66"} where var"#s66"<:Dict} at dict.jl:693
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing}, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing}, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::typeof(identity), op::typeof(+), A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, dims::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:324
    [7] #mapreduce#649
      @ ./reducedim.jl:310 [inlined]
    [8] #reduce#651
      @ ./reducedim.jl:359 [inlined]
    [9] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:59
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:16
dimension reducing methods: Error During Test at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:60
  Test threw exception
  Expression: dims(reduce(+, da; dims = Y())) == (X(LinRange(143.0, 145.0, 2), Sampled(Ordered(), Regular(2.0), Points()), nothing), Y([-37.0], Sampled(Ordered(), Regular(4.0), Points()), nothing))
  MethodError: no method matching iterate(::Y{Colon, AutoMode{AutoOrder}, Nothing})
  Closest candidates are:
    iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:617
    iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:617
    iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s68", var"#s67"} where var"#s67"<:Dict where var"#s68", Base.ValueIterator{var"#s66"} where var"#s66"<:Dict} at dict.jl:693
    ...
  Stacktrace:
    [1] reduced_indices(inds::Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:48
    [2] reduced_indices(a::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:15
    [3] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing}, init::Int64, #unused#::Type{Int64})
      @ Base ./reducedim.jl:92
    [4] reducedim_initarray(A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing}, init::Int64)
      @ Base ./reducedim.jl:93
    [5] reducedim_init(f::typeof(identity), op::typeof(+), A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, region::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:172
    [6] _mapreduce_dim(f::Function, op::Function, #unused#::Base._InitialValue, A::DimArray{Int64, 2, Tuple{X{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}, Y{LinRange{Float64}, Sampled{Ordered{Forward, Forward, Forward}, Regular{Float64}, Points}, Nothing}}, Tuple{}, Matrix{Int64}, String, Nothing}, dims::Y{Colon, AutoMode{AutoOrder}, Nothing})
      @ Base ./reducedim.jl:324
    [7] #mapreduce#649
      @ ./reducedim.jl:310 [inlined]
    [8] #reduce#651
      @ ./reducedim.jl:359 [inlined]
    [9] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:60
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/DimensionalData/IHaNW/test/methods.jl:16
Test Summary:              | Pass  Error  Total
dimension reducing methods |   29      6     35
ERROR: LoadError: LoadError: Some tests did not pass: 29 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/methods.jl:15
in expression starting at /home/pkgeval/.julia/packages/DimensionalData/IHaNW/test/runtests.jl:9
ERROR: Package DimensionalData errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
