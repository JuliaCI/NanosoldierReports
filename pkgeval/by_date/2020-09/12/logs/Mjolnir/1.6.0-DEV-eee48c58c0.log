Julia Version 1.6.0-DEV.898
Commit eee48c58c0 (2020-09-12 15:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Mjolnir ──── v0.2.1
  Installed MacroTools ─ v0.5.5
  Installed IRTools ──── v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [1154507a] + Mjolnir v0.2.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7869d1d1] + IRTools v0.4.1
  [1914dd2f] + MacroTools v0.5.5
  [1154507a] + Mjolnir v0.2.1
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
    Testing Mjolnir
Status `/tmp/jl_yk3GbI/Project.toml`
  [7869d1d1] IRTools v0.4.1
  [1914dd2f] MacroTools v0.5.5
  [1154507a] Mjolnir v0.2.1
  [8dfed614] Test
Status `/tmp/jl_yk3GbI/Manifest.toml`
  [7869d1d1] IRTools v0.4.1
  [1914dd2f] MacroTools v0.5.5
  [1154507a] Mjolnir v0.2.1
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Trace: Error During Test at /home/pkgeval/.julia/packages/Mjolnir/7FUVN/test/trace.jl:7
  Test threw exception
  Expression: return_type(ir, Nothing, Int) == Int
  Unrecognised expression return _2
  Stacktrace:
    [1] error(s::String)
      @ Base ./error.jl:33
    [2] step!(inf::Inference)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:200
    [3] infer!(inf::Inference)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:225
    [4] return_type(::IRTools.Inner.IR, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:249
    [5] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/trace.jl:7
    [6] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [7] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:5
Trace: Error During Test at /home/pkgeval/.julia/packages/Mjolnir/7FUVN/test/trace.jl:13
  Test threw exception
  Expression: return_type(ir, Nothing, Const(1.0), Const(2)) == Const(3.0)
  MethodError: no method matching widenconst(::Const{Float64})
  Closest candidates are:
    widenconst(!Matched::Core.Compiler.Conditional) at compiler/typelattice.jl:207
    widenconst(!Matched::Core.Const) at compiler/typelattice.jl:208
    widenconst(!Matched::Core.Compiler.MaybeUndef) at compiler/typelattice.jl:218
    ...
  Stacktrace:
    [1] exprtype(ir::IRTools.Inner.IR, x::IRTools.Inner.Variable; typeof::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/ir/utils.jl:74
    [2] exprtype(ir::Any, x::Any)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:145
    [3] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
    [4] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
    [5] getindex
      @ ./broadcast.jl:575 [inlined]
    [6] copyto_nonleaf!(dest::Vector{Const{typeof(+)}}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(exprtype), Tuple{Tuple{IRTools.Inner.IR}, Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int64}}}}, iter::Base.OneTo{Int64}, state::Int64, count::Int64)
      @ Base.Broadcast ./broadcast.jl:1026
    [7] copy(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(exprtype), Tuple{Tuple{IRTools.Inner.IR}, Vector{Any}}})
      @ Base.Broadcast ./broadcast.jl:880
    [8] materialize
      @ ./broadcast.jl:837 [inlined]
    [9] infercall!(inf::Any, loc::Any, block::Any, ex::Any)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:149
   [10] step!(inf::Inference)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:192
   [11] infer!(inf::Inference)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:225
   [12] return_type(::IRTools.Inner.IR, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:249
   [13] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/trace.jl:13
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:5
Trace: Error During Test at /home/pkgeval/.julia/packages/Mjolnir/7FUVN/test/trace.jl:15
  Test threw exception
  Expression: return_type(ir, Nothing, Int, Const(2.0)) == Float64
  MethodError: no method matching widenconst(::Const{Float64})
  Closest candidates are:
    widenconst(!Matched::Core.Compiler.Conditional) at compiler/typelattice.jl:207
    widenconst(!Matched::Core.Const) at compiler/typelattice.jl:208
    widenconst(!Matched::Core.Compiler.MaybeUndef) at compiler/typelattice.jl:218
    ...
  Stacktrace:
    [1] exprtype(ir::IRTools.Inner.IR, x::IRTools.Inner.Variable; typeof::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/ir/utils.jl:74
    [2] exprtype(ir::Any, x::Any)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:145
    [3] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
    [4] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
    [5] getindex
      @ ./broadcast.jl:575 [inlined]
    [6] copyto_nonleaf!(dest::Vector{Any}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(exprtype), Tuple{Tuple{IRTools.Inner.IR}, Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int64}}}}, iter::Base.OneTo{Int64}, state::Int64, count::Int64)
      @ Base.Broadcast ./broadcast.jl:1026
    [7] restart_copyto_nonleaf!(newdest::Vector{Any}, dest::Vector{Const{typeof(+)}}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(exprtype), Tuple{Tuple{IRTools.Inner.IR}, Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int64}}}}, val::Type, I::Int64, iter::Base.OneTo{Int64}, state::Int64, count::Int64)
      @ Base.Broadcast ./broadcast.jl:1017
    [8] copyto_nonleaf!(dest::Vector{Const{typeof(+)}}, bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(exprtype), Tuple{Tuple{IRTools.Inner.IR}, Base.Broadcast.Extruded{Vector{Any}, Tuple{Bool}, Tuple{Int64}}}}, iter::Base.OneTo{Int64}, state::Int64, count::Int64)
      @ Base.Broadcast ./broadcast.jl:1033
    [9] copy(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(exprtype), Tuple{Tuple{IRTools.Inner.IR}, Vector{Any}}})
      @ Base.Broadcast ./broadcast.jl:880
   [10] materialize
      @ ./broadcast.jl:837 [inlined]
   [11] infercall!(inf::Any, loc::Any, block::Any, ex::Any)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:149
   [12] step!(inf::Inference)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:192
   [13] infer!(inf::Inference)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:225
   [14] return_type(::IRTools.Inner.IR, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/infer.jl:249
   [15] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/trace.jl:15
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:5
Trace: Error During Test at /home/pkgeval/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:5
  Got exception outside of a @test
  LoadError: Tracing Error: deepcopy of Modules not supported
  in Tuple{typeof(f), Int64, Int64}
  Stacktrace:
    [1] trace(::Any, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/trace.jl:268
    [2] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/trace.jl:19
    [3] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [4] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
    [5] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [6] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
    [7] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:5
    [9] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [10] top-level scope
      @ none:6
   [11] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [12] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [13] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/Mjolnir/7FUVN/test/trace.jl:19
  
  caused by: deepcopy of Modules not supported
  Stacktrace:
    [1] error(s::String)
      @ Base ./error.jl:33
    [2] deepcopy_internal(x::Module, stackdict::IdDict{Any, Any})
      @ Base ./deepcopy.jl:33
    [3] deepcopy_internal(x::Any, stackdict::IdDict{Any, Any})
      @ Base ./deepcopy.jl:76
    [4] _deepcopy_array_t(x::Array, T::Type, stackdict::IdDict{Any, Any})
      @ Base ./deepcopy.jl:105
    [5] deepcopy_internal(x::Vector{Core.LineInfoNode}, stackdict::IdDict{Any, Any})
      @ Base ./deepcopy.jl:92
    [6] deepcopy_internal(x::Any, stackdict::IdDict{Any, Any})
      @ Base ./deepcopy.jl:76
    [7] deepcopy(x::IRTools.Inner.IR)
      @ Base ./deepcopy.jl:26
    [8] getir(::Mjolnir.Trace, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/trace.jl:18
    [9] tracecall!(::Mjolnir.Trace, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/trace.jl:228
   [10] trace(::Any, ::Any, ::Vararg{Any, N} where N)
      @ Mjolnir ~/.julia/packages/Mjolnir/7FUVN/src/trace.jl:263
   [11] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/trace.jl:19
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:6
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:5
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
Test Summary: | Error  Total
Mjolnir       |     4      4
  Trace       |     4      4
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Mjolnir/7FUVN/test/runtests.jl:3
ERROR: Package Mjolnir errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
