Julia Version 1.6.0-DEV.1021
Commit ee93bd8426 (2020-09-23 15:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_eLpEXX/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_eLpEXX/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07967830135880874 0.050176924701228136; -0.07967830135880874 0.0 0.09426327782900903; -0.050176924701228136 -0.09426327782900903 0.0])
dAA = so3([0.0 0.027521151451429218 0.04771330348868072; -0.027521151451429218 0.0 0.11400231986967345; -0.04771330348868072 -0.11400231986967345 0.0])
dAA = so3([0.0 -0.03007657776524632 0.14966085878943444; 0.03007657776524632 0.0 -0.09427109385397435; -0.14966085878943444 0.09427109385397435 0.0])
dAA = Quaternion(0.9999437392872432, [-0.010234852341591733, -0.0027448802955127157, -0.0004813418275301823])
dAA = SO3([0.9985659819722476 0.03708717034862295 -0.03860727189705622; -0.03938459175752976 0.9973876142533572 -0.060554115187070434; 0.03626063402498257 0.06198781113677508 0.9974180054974834])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9905977304809013 0.050802958054520626 0.1270243906460421; -0.08451648126116691 0.9573765910984123 0.2762010630175313; -0.10757834708396717 -0.2843398007133262 0.9526687656100558]), [-0.9426327782900903, 0.5017692470122813, -0.7967830135880873])
xj = SE3(SO3([0.9999029467499178 0.0026167415973321517 -0.013683922838275055; -0.0019134164245216407 0.9986886001352469 0.05116071537310078; 0.013799852115781708 -0.051129567016686646 0.9985966810771347]), [0.9427109385397434, 1.4966085878943445, 0.3007657776524632])
Dx = SE3(SO3([0.989178739694403 -0.07631307376472535 -0.12530656690362332; 0.04504232016799266 0.9707921966760202 -0.23565589376638035; 0.1396302629463852 0.2274617014917613 0.9637243195146611]), [1.6654644017508653, 0.7361401300542307, 1.559860772419884])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
