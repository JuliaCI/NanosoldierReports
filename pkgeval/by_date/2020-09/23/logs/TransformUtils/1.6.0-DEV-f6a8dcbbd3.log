Julia Version 1.6.0-DEV.1007
Commit f6a8dcbbd3* (2020-09-22 17:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_bJklwx/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_bJklwx/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.050064978963197185 0.033718358751513564; 0.050064978963197185 0.0 0.09487998356987812; -0.033718358751513564 -0.09487998356987812 0.0])
dAA = so3([0.0 -0.040111447237873965 0.1483431035978503; 0.040111447237873965 0.0 0.0485399218942067; -0.1483431035978503 -0.0485399218942067 0.0])
dAA = so3([0.0 -0.08664463326673623 0.047750969235978685; 0.08664463326673623 0.0 -0.03160350042550506; -0.047750969235978685 0.03160350042550506 0.0])
dAA = Quaternion(0.9942413561732651, [0.08016471395385663, -0.03343354264698573, -0.06276896157747971])
dAA = SO3([0.9882377963628517 0.08209790906569028 -0.12901934415790609; -0.08998134875336192 0.9943394506084937 -0.05650144989400295; 0.12365037289236301 0.06744620293715814 0.9900311080935482])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9271971664154761 -0.11978676051825304 0.35490357365861314; 0.07538869631753572 0.9877759106371888 0.13643787902343973; -0.36690865219922836 -0.09974909708571349 0.9248935931078399]), [-0.9487998356987811, 0.3371835875151356, 0.5006497896319718])
xj = SE3(SO3([0.9381632659790001 0.28266533682228157 -0.19987494522015994; -0.33931988346852127 0.8652734182709005 -0.36900396788747464; 0.06864184620568539 0.41400751079290504 0.9076817052009684]), [0.3160350042550506, 0.4775096923597868, 0.8664463326673623])
Dx = SE3(SO3([0.8190961509257126 0.17541539652177426 -0.5461784820017999; -0.4543985075405854 0.7795397982856537 -0.43109128874711733; 0.35014781433498954 0.6012879023827693 0.7182265426483199]), [1.0491163651080688, -0.049387596954453106, 0.8063630799385888])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
