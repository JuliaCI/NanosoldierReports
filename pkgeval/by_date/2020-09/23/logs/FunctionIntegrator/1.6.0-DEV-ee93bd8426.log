Julia Version 1.6.0-DEV.1021
Commit ee93bd8426 (2020-09-23 15:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_Y0vSgS/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Y0vSgS/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.891203 seconds (1.40 M allocations: 74.311 MiB, 2.46% gc time)
Running: chebyshev_quadrature with k=1
  1.703978 seconds (2.19 M allocations: 126.526 MiB, 4.28% gc time)
Running: chebyshev_quadrature with k=2
  0.334496 seconds (409.38 k allocations: 23.568 MiB, 13.77% gc time)
Running: chebyshev_quadrature with k=3
  0.431056 seconds (473.75 k allocations: 26.630 MiB)
Running: chebyshev_quadrature with k=4
  0.511241 seconds (418.55 k allocations: 23.260 MiB, 14.19% gc time)
Running: jacobi_quadrature with α=β=1
 40.112564 seconds (36.47 M allocations: 3.004 GiB, 9.38% gc time)
Running: laguerre_quadrature with k=1
  2.792200 seconds (3.17 M allocations: 177.039 MiB, 3.20% gc time)
Running: legendre_quadrature
  0.197840 seconds (206.04 k allocations: 11.824 MiB)
Running: lobatto_quadrature
  0.355032 seconds (329.45 k allocations: 19.877 MiB, 6.58% gc time)
Running: radau_quadrature
  0.332094 seconds (446.87 k allocations: 27.215 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 77.231893 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time)
Running: rectangle_rule_midpoint.
  0.142698 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 76.600659 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rombergs_method
  0.531554 seconds (723.11 k allocations: 41.726 MiB, 6.18% gc time)
Running: simpsons_rule
  0.038398 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.093013 seconds (108.43 k allocations: 5.747 MiB)
Running: trapezoidal_rule
  0.309273 seconds (1.51 M allocations: 25.667 MiB, 5.21% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.084948 seconds (30.98 k allocations: 1.865 MiB)
Running: chebyshev_quadrature with k=1
  0.544532 seconds (291.45 k allocations: 15.403 MiB, 16.92% gc time)
Running: chebyshev_quadrature with k=2
  0.152733 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.235357 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.161591 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.944065 seconds (504.09 k allocations: 161.813 MiB, 14.54% gc time)
Running: legendre_quadrature
  0.162200 seconds (41.09 k allocations: 2.364 MiB)
Running: lobatto_quadrature
  0.020277 seconds (15.53 k allocations: 989.075 KiB)
Running: radau_quadrature
  0.020230 seconds (15.64 k allocations: 995.493 KiB)
Running: rectangle_rule_left
 26.130075 seconds (471.41 M allocations: 7.025 GiB, 2.69% gc time)
Running: rectangle_rule_midpoint
  0.000068 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 26.311142 seconds (476.96 M allocations: 7.107 GiB, 2.43% gc time)
Running: rombergs_method
  0.404207 seconds (326.52 k allocations: 18.529 MiB)
Running: simpsons_rule
  0.000027 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.074722 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.064051 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033393 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.108764 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.136563 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.139291 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.139888 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.342352 seconds (364.11 k allocations: 19.017 MiB, 8.25% gc time)
Running: legendre_quadrature
  0.067382 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000086 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000057 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000483 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000334 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000477 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.078409 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000043 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.028493 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024872 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.062539 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.180496 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.227144 seconds (283.17 k allocations: 15.902 MiB)
Running: chebyshev_quadrature with k=3
  0.212164 seconds (234.76 k allocations: 13.133 MiB, 11.68% gc time)
Running: chebyshev_quadrature with k=4
  0.179860 seconds (234.76 k allocations: 13.067 MiB)
Running: jacobi_quadrature with α=β=1
  3.054791 seconds (447.18 k allocations: 163.210 MiB, 6.33% gc time)
Running: legendre_quadrature
  0.242993 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.196981 seconds (196.76 k allocations: 11.419 MiB)
Running: radau_quadrature
  0.180812 seconds (196.76 k allocations: 11.417 MiB)
Running: rectangle_rule_left
  1.059648 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.056256 seconds (24.66 k allocations: 1.555 MiB, 37.53% gc time)
Running: rectangle_rule_right
  1.182566 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.161873 seconds (134.26 k allocations: 7.758 MiB)
Running: simpsons_rule
  0.036467 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.044185 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.029404 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040266 seconds (99.53 k allocations: 2.980 MiB)
Running: chebyshev_quadrature with k=1
  0.192074 seconds (237.20 k allocations: 13.070 MiB)
Running: chebyshev_quadrature with k=2
  0.233551 seconds (290.20 k allocations: 15.871 MiB, 9.46% gc time)
Running: chebyshev_quadrature with k=3
  0.230451 seconds (241.33 k allocations: 13.124 MiB)
Running: chebyshev_quadrature with k=4
  0.185865 seconds (241.33 k allocations: 13.120 MiB)
Running: hermite_quadrature with k=2
 14.890173 seconds (20.09 M allocations: 1.055 GiB, 8.50% gc time)
Running: jacobi_quadrature with α=β=1
  0.427518 seconds (456.36 k allocations: 49.488 MiB, 9.73% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.204339 seconds (276.26 k allocations: 15.243 MiB)
Running: legendre_quadrature
  0.149730 seconds (191.98 k allocations: 11.043 MiB)
Running: lobatto_quadrature
  0.210073 seconds (217.42 k allocations: 37.194 MiB)
Running: radau_quadrature
  0.235839 seconds (214.00 k allocations: 29.854 MiB, 16.44% gc time)
Running: rectangle_rule_left
  0.026008 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.025174 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.022782 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.111339 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.034493 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.035919 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.027316 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036209 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.243966 seconds (232.72 k allocations: 12.824 MiB, 12.44% gc time)
Running: chebyshev_quadrature with k=2
  0.253089 seconds (285.38 k allocations: 15.643 MiB)
Running: chebyshev_quadrature with k=3
  0.217346 seconds (236.87 k allocations: 12.990 MiB)
Running: chebyshev_quadrature with k=4
  0.237558 seconds (236.87 k allocations: 12.929 MiB, 13.31% gc time)
Running: hermite_quadrature with k=2
  0.161728 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
 10.316597 seconds (449.62 k allocations: 1.175 GiB, 11.80% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.219818 seconds (271.55 k allocations: 15.066 MiB, 9.19% gc time)
Running: legendre_quadrature
  0.152353 seconds (187.55 k allocations: 10.877 MiB)
Running: lobatto_quadrature
  0.194239 seconds (208.19 k allocations: 22.958 MiB)
Running: radau_quadrature
  0.210179 seconds (207.33 k allocations: 20.853 MiB, 7.07% gc time)
Running: rectangle_rule_left
  0.023974 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.024226 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.022106 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.110061 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.028982 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.032833 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.025127 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028625 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.199558 seconds (231.10 k allocations: 13.042 MiB, 8.22% gc time)
Running: chebyshev_quadrature with k=2
  0.211878 seconds (283.67 k allocations: 15.985 MiB)
Running: chebyshev_quadrature with k=3
  0.225276 seconds (235.25 k allocations: 13.147 MiB)
Running: chebyshev_quadrature with k=4
  0.205866 seconds (235.25 k allocations: 13.033 MiB, 8.75% gc time)
Running: jacobi_quadrature with α=β=1
  2.874067 seconds (447.72 k allocations: 194.256 MiB, 2.62% gc time)
Running: legendre_quadrature
  0.157283 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.208185 seconds (197.26 k allocations: 11.451 MiB, 9.29% gc time)
Running: radau_quadrature
  0.177285 seconds (197.26 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  0.345428 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.024513 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.117211 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.146007 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.031819 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.033657 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.025663 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033210 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.231253 seconds (231.69 k allocations: 12.988 MiB, 8.64% gc time)
Running: chebyshev_quadrature with k=2
  0.243799 seconds (284.30 k allocations: 15.907 MiB)
Running: chebyshev_quadrature with k=3
  0.200137 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.256628 seconds (235.84 k allocations: 13.144 MiB, 9.09% gc time)
Running: jacobi_quadrature with α=β=1
  2.017685 seconds (448.43 k allocations: 148.944 MiB, 4.86% gc time)
Running: legendre_quadrature
  0.133408 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.179174 seconds (197.86 k allocations: 11.461 MiB, 10.50% gc time)
Running: radau_quadrature
  0.169816 seconds (197.85 k allocations: 11.462 MiB)
Running: rectangle_rule_left
  0.965824 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.025277 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.027760 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.141783 seconds (135.49 k allocations: 7.816 MiB)
Running: simpsons_rule
  0.034196 seconds (28.93 k allocations: 1.786 MiB)
Running: simpsons38_rule
  0.036112 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.030472 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.148464 seconds (145.06 k allocations: 8.694 MiB)
Running: chebyshev_quadrature with k=1
  0.145241 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.157289 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.165382 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.172386 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  1.890352 seconds (480.55 k allocations: 167.764 MiB, 4.65% gc time)
Running: legendre_quadrature
  0.118757 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000115 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000079 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 43.086289 seconds (590.00 M allocations: 8.792 GiB, 2.92% gc time)
Running: rectangle_rule_midpoint
  0.000067 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.448825 seconds (592.75 M allocations: 8.833 GiB, 2.87% gc time)
Running: rombergs_method
  0.147618 seconds (20.51 k allocations: 1.166 MiB)
Running: simpsons_rule
  0.000024 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030210 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.032165 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.450051 seconds (629.32 M allocations: 9.387 GiB, 4.47% gc time)
Running: chebyshev_quadrature with k=1
  0.470116 seconds (413.90 k allocations: 22.943 MiB)
Running: chebyshev_quadrature with k=2
 12.073467 seconds (468.54 k allocations: 4.040 GiB, 4.52% gc time)
Running: chebyshev_quadrature with k=3
  5.820762 seconds (249.12 k allocations: 1.642 GiB, 4.43% gc time)
Running: chebyshev_quadrature with k=4
  7.966260 seconds (249.12 k allocations: 2.260 GiB, 2.58% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 57.112677 seconds (484.48 k allocations: 13.254 GiB, 3.35% gc time)
Running: legendre_quadrature.
  5.570387 seconds (223.19 k allocations: 1.976 GiB, 2.35% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.922086 seconds (8.23 M allocations: 13.383 GiB, 4.12% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.395184 seconds (7.23 M allocations: 13.369 GiB, 3.98% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.147518 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.794410 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.323541 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.323811 seconds (438.09 k allocations: 152.666 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.457932 seconds (600.04 M allocations: 8.943 GiB, 8.63% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.355244 seconds (600.05 M allocations: 8.943 GiB, 8.95% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.339444 seconds (600.03 M allocations: 8.943 GiB, 8.48% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.062057 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.217350 seconds (247.70 k allocations: 13.453 MiB)
Running: chebyshev_quadrature with k=2
  0.215091 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.200377 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.195792 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.413505 seconds (389.30 k allocations: 34.992 MiB)
Running: laguerre_quadrature with k=2
  0.192691 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.122763 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.037272 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.033290 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.052776 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.043536 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.047713 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.259431 seconds (171.76 k allocations: 9.834 MiB)
Running: simpsons_rule
  0.001956 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.048244 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.205929 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002189 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.139391 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.129751 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.112718 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.109958 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  7.213292 seconds (366.38 k allocations: 904.821 MiB, 2.92% gc time)
Running: legendre_quadrature
  0.077568 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000197 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000165 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.011884 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000532 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.467081 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.072368 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000075 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000952 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000739 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.122391 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.123206 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.132063 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.126241 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  2.185113 seconds (372.94 k allocations: 252.986 MiB)
Running: legendre_quadrature
  0.080701 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000110 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000068 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.084875 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001490 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.496462 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.110051 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000062 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001733 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
