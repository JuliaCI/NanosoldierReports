Julia Version 1.6.0-DEV.1034
Commit b1e1bb3138 (2020-09-24 17:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_f9IS9x/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_f9IS9x/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.072444 seconds (1.40 M allocations: 74.340 MiB, 2.59% gc time)
Running: chebyshev_quadrature with k=1
  1.798086 seconds (2.19 M allocations: 126.548 MiB, 4.45% gc time)
Running: chebyshev_quadrature with k=2
  0.361719 seconds (409.38 k allocations: 23.557 MiB, 25.32% gc time)
Running: chebyshev_quadrature with k=3
  0.364345 seconds (473.74 k allocations: 26.615 MiB)
Running: chebyshev_quadrature with k=4
  0.396275 seconds (418.55 k allocations: 23.252 MiB, 12.73% gc time)
Running: jacobi_quadrature with α=β=1
 36.503110 seconds (36.50 M allocations: 3.006 GiB, 8.56% gc time)
Running: laguerre_quadrature with k=1
  2.768419 seconds (3.17 M allocations: 177.049 MiB, 3.19% gc time)
Running: legendre_quadrature
  0.194990 seconds (206.13 k allocations: 11.831 MiB)
Running: lobatto_quadrature
  0.332563 seconds (329.92 k allocations: 19.928 MiB, 7.27% gc time)
Running: radau_quadrature
  0.403906 seconds (443.93 k allocations: 27.112 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.654228 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rectangle_rule_midpoint.
  0.242581 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.021639 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time)
Running: rombergs_method
  0.489396 seconds (723.20 k allocations: 41.738 MiB, 5.67% gc time)
Running: simpsons_rule
  0.039158 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.098470 seconds (108.37 k allocations: 5.743 MiB)
Running: trapezoidal_rule
  0.315603 seconds (1.51 M allocations: 25.664 MiB, 6.33% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.069093 seconds (30.97 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.432350 seconds (291.93 k allocations: 15.452 MiB, 3.93% gc time)
Running: chebyshev_quadrature with k=2
  0.171358 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.149826 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.156621 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.855266 seconds (503.82 k allocations: 161.791 MiB, 5.06% gc time)
Running: legendre_quadrature
  0.145770 seconds (41.19 k allocations: 2.371 MiB)
Running: lobatto_quadrature
  0.020176 seconds (15.62 k allocations: 996.310 KiB)
Running: radau_quadrature
  0.040402 seconds (15.73 k allocations: 1002.728 KiB)
Running: rectangle_rule_left
 26.550294 seconds (471.41 M allocations: 7.025 GiB, 2.42% gc time)
Running: rectangle_rule_midpoint
  0.000027 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.036391 seconds (476.96 M allocations: 7.107 GiB, 2.43% gc time)
Running: rombergs_method
  0.393423 seconds (326.61 k allocations: 18.536 MiB, 1.34% gc time)
Running: simpsons_rule
  0.000039 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065602 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.079085 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.024379 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.085302 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.088557 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.091491 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.088976 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.446297 seconds (364.10 k allocations: 18.999 MiB, 37.98% gc time)
Running: legendre_quadrature
  0.056722 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000110 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000061 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000313 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000223 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000323 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.061519 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000033 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.021622 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.015827 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.053461 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.182118 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.212606 seconds (283.16 k allocations: 15.880 MiB)
Running: chebyshev_quadrature with k=3
  0.207263 seconds (234.76 k allocations: 13.134 MiB, 8.37% gc time)
Running: chebyshev_quadrature with k=4
  0.195064 seconds (234.76 k allocations: 13.067 MiB)
Running: jacobi_quadrature with α=β=1
  2.321311 seconds (447.18 k allocations: 163.231 MiB, 6.65% gc time)
Running: legendre_quadrature
  0.149676 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.182861 seconds (196.76 k allocations: 11.419 MiB)
Running: radau_quadrature
  0.179757 seconds (196.76 k allocations: 11.417 MiB)
Running: rectangle_rule_left
  0.969980 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.045661 seconds (24.66 k allocations: 1.555 MiB, 34.05% gc time)
Running: rectangle_rule_right
  1.011947 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.139497 seconds (134.26 k allocations: 7.758 MiB)
Running: simpsons_rule
  0.027405 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.031454 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.024196 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039962 seconds (99.53 k allocations: 2.980 MiB)
Running: chebyshev_quadrature with k=1
  0.180407 seconds (237.19 k allocations: 13.054 MiB)
Running: chebyshev_quadrature with k=2
  0.217218 seconds (290.20 k allocations: 15.883 MiB, 7.66% gc time)
Running: chebyshev_quadrature with k=3
  0.181950 seconds (241.33 k allocations: 13.116 MiB)
Running: chebyshev_quadrature with k=4
  0.181838 seconds (241.33 k allocations: 13.136 MiB)
Running: hermite_quadrature with k=2
 13.791959 seconds (20.09 M allocations: 1.055 GiB, 8.56% gc time)
Running: jacobi_quadrature with α=β=1
  0.443078 seconds (456.36 k allocations: 49.474 MiB, 8.52% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.224861 seconds (276.26 k allocations: 15.253 MiB)
Running: legendre_quadrature
  0.188570 seconds (191.98 k allocations: 11.046 MiB, 16.52% gc time)
Running: lobatto_quadrature
  0.235350 seconds (217.43 k allocations: 37.260 MiB)
Running: radau_quadrature
  0.220428 seconds (214.00 k allocations: 29.855 MiB, 7.91% gc time)
Running: rectangle_rule_left
  0.027660 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.027563 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.025113 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.121882 seconds (136.74 k allocations: 7.809 MiB)
Running: simpsons_rule
  0.035683 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.052451 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.037065 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041197 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.222286 seconds (232.72 k allocations: 12.824 MiB, 11.79% gc time)
Running: chebyshev_quadrature with k=2
  0.219065 seconds (285.38 k allocations: 15.643 MiB)
Running: chebyshev_quadrature with k=3
  0.190834 seconds (236.87 k allocations: 12.932 MiB)
Running: chebyshev_quadrature with k=4
  0.191808 seconds (236.87 k allocations: 12.929 MiB)
Running: hermite_quadrature with k=2
  0.182039 seconds (170.78 k allocations: 9.789 MiB, 14.83% gc time)
Running: jacobi_quadrature with α=β=1
  8.698348 seconds (449.62 k allocations: 1.175 GiB, 15.52% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.288035 seconds (271.55 k allocations: 15.066 MiB)
Running: legendre_quadrature
  0.224943 seconds (187.55 k allocations: 10.814 MiB, 10.23% gc time)
Running: lobatto_quadrature
  0.213413 seconds (208.18 k allocations: 22.937 MiB)
Running: radau_quadrature
  0.222577 seconds (207.33 k allocations: 20.852 MiB, 8.94% gc time)
Running: rectangle_rule_left
  0.025954 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.028358 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.024762 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.122424 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.039276 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.036968 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.026973 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033487 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.198126 seconds (231.10 k allocations: 13.042 MiB)
Running: chebyshev_quadrature with k=2
  0.244221 seconds (283.67 k allocations: 15.985 MiB, 7.55% gc time)
Running: chebyshev_quadrature with k=3
  0.234707 seconds (235.25 k allocations: 13.208 MiB)
Running: chebyshev_quadrature with k=4
  0.195724 seconds (235.25 k allocations: 12.971 MiB)
Running: jacobi_quadrature with α=β=1
  1.988206 seconds (447.72 k allocations: 194.255 MiB, 4.19% gc time)
Running: legendre_quadrature
  0.155678 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.198545 seconds (197.26 k allocations: 11.461 MiB)
Running: radau_quadrature
  0.230805 seconds (197.26 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  0.355297 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.069960 seconds (25.01 k allocations: 1.573 MiB, 62.15% gc time)
Running: rectangle_rule_right
  0.129938 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.169471 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.035773 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.033908 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.027122 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027181 seconds (31.64 k allocations: 1.827 MiB)
Running: chebyshev_quadrature with k=1
  0.154009 seconds (231.69 k allocations: 13.052 MiB)
Running: chebyshev_quadrature with k=2
  0.211875 seconds (284.30 k allocations: 15.891 MiB, 12.08% gc time)
Running: chebyshev_quadrature with k=3
  0.160618 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.151796 seconds (235.84 k allocations: 13.144 MiB)
Running: jacobi_quadrature with α=β=1
  2.243119 seconds (448.43 k allocations: 148.940 MiB, 3.79% gc time)
Running: legendre_quadrature
  0.182434 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.252262 seconds (197.86 k allocations: 11.460 MiB)
Running: radau_quadrature
  0.186461 seconds (197.85 k allocations: 11.473 MiB)
Running: rectangle_rule_left
  1.035569 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.032218 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.007963 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.181888 seconds (135.49 k allocations: 7.815 MiB, 25.41% gc time)
Running: simpsons_rule
  0.028489 seconds (28.92 k allocations: 1.786 MiB)
Running: simpsons38_rule
  0.031419 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.025953 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.139166 seconds (145.06 k allocations: 8.693 MiB)
Running: chebyshev_quadrature with k=1
  0.141630 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.153206 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.162595 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.154631 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.356806 seconds (480.19 k allocations: 167.744 MiB, 12.18% gc time)
Running: legendre_quadrature
  0.117307 seconds (18.73 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000115 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000058 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 42.454317 seconds (590.00 M allocations: 8.792 GiB, 3.38% gc time)
Running: rectangle_rule_midpoint
  0.000057 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.246735 seconds (592.75 M allocations: 8.833 GiB, 2.96% gc time)
Running: rombergs_method
  0.149619 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000075 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030379 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024984 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.336024 seconds (629.32 M allocations: 9.387 GiB, 4.49% gc time)
Running: chebyshev_quadrature with k=1
  0.412520 seconds (413.99 k allocations: 22.950 MiB, 7.28% gc time)
Running: chebyshev_quadrature with k=2
 13.022999 seconds (468.63 k allocations: 4.040 GiB, 4.92% gc time)
Running: chebyshev_quadrature with k=3
  5.907033 seconds (249.12 k allocations: 1.642 GiB, 4.51% gc time)
Running: chebyshev_quadrature with k=4
  7.973142 seconds (249.12 k allocations: 2.260 GiB, 3.29% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 62.688339 seconds (484.56 k allocations: 13.254 GiB, 3.64% gc time)
Running: legendre_quadrature.
  6.415319 seconds (223.28 k allocations: 1.976 GiB, 2.72% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.036734 seconds (8.23 M allocations: 13.383 GiB, 3.43% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.042266 seconds (7.23 M allocations: 13.369 GiB, 3.14% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.521298 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.937444 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.377600 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.011222 seconds (438.18 k allocations: 152.673 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.573021 seconds (600.04 M allocations: 8.943 GiB, 7.79% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.614039 seconds (600.05 M allocations: 8.943 GiB, 8.50% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.933989 seconds (600.03 M allocations: 8.943 GiB, 8.46% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.056771 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.206454 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.204439 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.180863 seconds (220.25 k allocations: 11.646 MiB)
Running: chebyshev_quadrature with k=4
  0.179449 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.410898 seconds (389.30 k allocations: 34.988 MiB)
Running: laguerre_quadrature with k=2
  0.252997 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.145711 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.035077 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.031386 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.063964 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.055054 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.061637 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.258590 seconds (170.44 k allocations: 9.767 MiB)
Running: simpsons_rule
  0.001964 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055913 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.209148 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002069 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.147129 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.141823 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.117612 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.118587 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  6.654446 seconds (366.38 k allocations: 904.821 MiB, 4.09% gc time)
Running: legendre_quadrature
  0.076109 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000163 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000123 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.263110 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000488 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.178081 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.074606 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000955 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000522 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.121937 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.109572 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.125508 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.110928 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  2.081591 seconds (372.94 k allocations: 252.986 MiB)
Running: legendre_quadrature
  0.077956 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000104 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000040 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.155456 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000211 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.911774 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083592 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000489 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
