Julia Version 1.6.0-DEV.1048
Commit 04a5be7554 (2020-09-25 12:35 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_HgSPq6/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_HgSPq6/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.904145 seconds (1.40 M allocations: 74.729 MiB, 1.90% gc time)
Running: chebyshev_quadrature with k=1
  1.882846 seconds (2.19 M allocations: 126.557 MiB, 3.74% gc time)
Running: chebyshev_quadrature with k=2
  0.295423 seconds (409.38 k allocations: 23.564 MiB, 9.73% gc time)
Running: chebyshev_quadrature with k=3
  0.353833 seconds (473.75 k allocations: 26.617 MiB)
Running: chebyshev_quadrature with k=4
  0.343163 seconds (418.55 k allocations: 23.256 MiB, 17.39% gc time)
Running: jacobi_quadrature with α=β=1
 36.107570 seconds (36.50 M allocations: 3.005 GiB, 9.01% gc time)
Running: laguerre_quadrature with k=1
  2.673050 seconds (3.17 M allocations: 177.106 MiB, 3.26% gc time)
Running: legendre_quadrature
  0.193389 seconds (206.18 k allocations: 11.836 MiB)
Running: lobatto_quadrature
  0.330872 seconds (329.78 k allocations: 19.956 MiB, 6.99% gc time)
Running: radau_quadrature
  0.313541 seconds (447.47 k allocations: 27.329 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 74.165186 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time)
Running: rectangle_rule_midpoint.
  0.140179 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 73.673040 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rombergs_method
  0.508460 seconds (722.94 k allocations: 41.732 MiB, 6.09% gc time)
Running: simpsons_rule
  0.034320 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.072987 seconds (108.54 k allocations: 5.756 MiB)
Running: trapezoidal_rule
  0.299741 seconds (1.51 M allocations: 25.676 MiB, 5.20% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.091896 seconds (30.98 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.597129 seconds (292.66 k allocations: 15.486 MiB, 22.47% gc time)
Running: chebyshev_quadrature with k=2
  0.181327 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.180446 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.160110 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  1.522530 seconds (503.62 k allocations: 161.783 MiB, 3.23% gc time)
Running: legendre_quadrature
  0.177549 seconds (41.23 k allocations: 2.375 MiB)
Running: lobatto_quadrature
  0.020791 seconds (15.67 k allocations: 999.638 KiB)
Running: radau_quadrature
  0.022087 seconds (15.77 k allocations: 1006.853 KiB)
Running: rectangle_rule_left
 26.520431 seconds (471.41 M allocations: 7.025 GiB, 2.55% gc time)
Running: rectangle_rule_midpoint
  0.000069 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 24.714695 seconds (476.96 M allocations: 7.107 GiB, 2.41% gc time)
Running: rombergs_method
  0.302615 seconds (326.50 k allocations: 18.532 MiB, 1.15% gc time)
Running: simpsons_rule
  0.000035 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.057838 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.048749 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.021259 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.087992 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.089711 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.095508 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.086787 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.219195 seconds (363.64 k allocations: 18.976 MiB, 9.48% gc time)
Running: legendre_quadrature
  0.051104 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000083 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000041 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000260 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000187 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000255 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.057143 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000032 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.018272 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.016259 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.039966 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.123742 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.145360 seconds (283.17 k allocations: 15.897 MiB)
Running: chebyshev_quadrature with k=3
  0.184308 seconds (234.76 k allocations: 13.137 MiB, 9.50% gc time)
Running: chebyshev_quadrature with k=4
  0.152236 seconds (234.76 k allocations: 13.068 MiB)
Running: jacobi_quadrature with α=β=1
  1.523031 seconds (446.72 k allocations: 163.188 MiB, 3.25% gc time)
Running: legendre_quadrature
  0.106541 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.119889 seconds (196.61 k allocations: 11.411 MiB)
Running: radau_quadrature
  0.121918 seconds (196.61 k allocations: 11.409 MiB)
Running: rectangle_rule_left
  0.676318 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.018361 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  0.689803 seconds (17.39 k allocations: 1.065 MiB, 3.44% gc time)
Running: rombergs_method
  0.091882 seconds (134.26 k allocations: 7.758 MiB)
Running: simpsons_rule
  0.024413 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.020371 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.019829 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.025671 seconds (99.53 k allocations: 2.980 MiB)
Running: chebyshev_quadrature with k=1
  0.157824 seconds (237.19 k allocations: 13.054 MiB)
Running: chebyshev_quadrature with k=2
  0.184772 seconds (290.20 k allocations: 15.895 MiB, 18.58% gc time)
Running: chebyshev_quadrature with k=3
  0.138324 seconds (241.33 k allocations: 13.116 MiB)
Running: chebyshev_quadrature with k=4
  0.149297 seconds (241.33 k allocations: 13.120 MiB)
Running: hermite_quadrature with k=2
 11.765871 seconds (20.09 M allocations: 1.055 GiB, 9.40% gc time)
Running: jacobi_quadrature with α=β=1
  0.525842 seconds (455.89 k allocations: 49.388 MiB, 28.16% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.182235 seconds (276.26 k allocations: 15.316 MiB)
Running: legendre_quadrature
  0.312693 seconds (191.98 k allocations: 11.046 MiB, 51.33% gc time)
Running: lobatto_quadrature
  0.198484 seconds (217.27 k allocations: 37.186 MiB)
Running: radau_quadrature
  0.188758 seconds (213.85 k allocations: 29.846 MiB, 6.74% gc time)
Running: rectangle_rule_left
  0.024952 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.020728 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.017281 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.093533 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.023792 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.028194 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.025199 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028380 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.149193 seconds (232.72 k allocations: 12.824 MiB)
Running: chebyshev_quadrature with k=2
  0.194563 seconds (285.38 k allocations: 15.643 MiB)
Running: chebyshev_quadrature with k=3
  0.162828 seconds (236.87 k allocations: 12.928 MiB, 9.86% gc time)
Running: chebyshev_quadrature with k=4
  0.176599 seconds (236.87 k allocations: 12.929 MiB)
Running: hermite_quadrature with k=2
  0.122789 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
  8.584897 seconds (449.16 k allocations: 1.175 GiB, 19.56% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.195239 seconds (271.55 k allocations: 15.132 MiB)
Running: legendre_quadrature
  0.159088 seconds (187.55 k allocations: 10.815 MiB, 15.11% gc time)
Running: lobatto_quadrature
  0.173706 seconds (208.03 k allocations: 22.913 MiB)
Running: radau_quadrature
  0.193079 seconds (207.18 k allocations: 20.848 MiB, 6.03% gc time)
Running: rectangle_rule_left
  0.020901 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.022627 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.026301 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.114662 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.035227 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.038615 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.026364 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027701 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.170103 seconds (231.10 k allocations: 13.042 MiB)
Running: chebyshev_quadrature with k=2
  0.217863 seconds (283.67 k allocations: 15.985 MiB, 15.74% gc time)
Running: chebyshev_quadrature with k=3
  0.222211 seconds (235.25 k allocations: 13.162 MiB)
Running: chebyshev_quadrature with k=4
  0.183784 seconds (235.25 k allocations: 12.986 MiB)
Running: jacobi_quadrature with α=β=1
  3.396941 seconds (447.26 k allocations: 194.295 MiB, 3.07% gc time)
Running: legendre_quadrature
  0.168418 seconds (185.93 k allocations: 10.753 MiB)
Running: lobatto_quadrature
  0.172488 seconds (197.10 k allocations: 11.439 MiB)
Running: radau_quadrature
  0.207612 seconds (197.11 k allocations: 11.500 MiB, 11.76% gc time)
Running: rectangle_rule_left
  0.332286 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.029048 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.157219 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.123576 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.023493 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.029119 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.024408 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031642 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.188961 seconds (231.69 k allocations: 12.988 MiB)
Running: chebyshev_quadrature with k=2
  0.255267 seconds (284.30 k allocations: 15.891 MiB, 14.63% gc time)
Running: chebyshev_quadrature with k=3
  0.223804 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.199453 seconds (235.84 k allocations: 13.144 MiB)
Running: jacobi_quadrature with α=β=1
  2.518558 seconds (447.97 k allocations: 148.916 MiB, 4.06% gc time)
Running: legendre_quadrature
  0.154899 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.168098 seconds (197.71 k allocations: 11.452 MiB)
Running: radau_quadrature
  0.165538 seconds (197.70 k allocations: 11.470 MiB)
Running: rectangle_rule_left
  0.920751 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.026567 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  0.972966 seconds (17.69 k allocations: 1.078 MiB, 5.11% gc time)
Running: rombergs_method
  0.150088 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.036186 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.039520 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.034678 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.168292 seconds (145.06 k allocations: 8.692 MiB)
Running: chebyshev_quadrature with k=1
  0.155410 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.136896 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.145383 seconds (92.57 k allocations: 2.655 MiB)
Running: chebyshev_quadrature with k=4
  0.131203 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  1.600153 seconds (479.94 k allocations: 167.732 MiB, 14.98% gc time)
Running: legendre_quadrature
  0.122360 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000103 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000053 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.888236 seconds (590.00 M allocations: 8.792 GiB, 3.54% gc time)
Running: rectangle_rule_midpoint
  0.000060 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.283304 seconds (592.75 M allocations: 8.833 GiB, 3.45% gc time)
Running: rombergs_method
  0.128033 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000045 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.035074 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.027833 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 49.458938 seconds (629.32 M allocations: 9.387 GiB, 3.27% gc time)
Running: chebyshev_quadrature with k=1
  0.484608 seconds (414.04 k allocations: 22.954 MiB, 3.42% gc time)
Running: chebyshev_quadrature with k=2
 24.543242 seconds (468.67 k allocations: 4.040 GiB, 2.49% gc time)
Running: chebyshev_quadrature with k=3
 11.678364 seconds (249.12 k allocations: 1.642 GiB, 2.25% gc time)
Running: chebyshev_quadrature with k=4
 15.663070 seconds (249.12 k allocations: 2.260 GiB, 1.06% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.831599 seconds (484.15 k allocations: 13.254 GiB, 4.29% gc time)
Running: legendre_quadrature.
 13.606915 seconds (223.33 k allocations: 1.976 GiB, 1.55% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.811986 seconds (8.23 M allocations: 13.383 GiB, 4.76% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.186911 seconds (7.23 M allocations: 13.369 GiB, 4.43% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.173751 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.221730 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.142021 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.890004 seconds (438.23 k allocations: 152.680 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.927100 seconds (600.04 M allocations: 8.943 GiB, 5.77% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.022350 seconds (600.05 M allocations: 8.943 GiB, 5.79% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.314755 seconds (600.03 M allocations: 8.943 GiB, 5.55% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.085429 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.276543 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.269084 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.195446 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.194363 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.377773 seconds (388.84 k allocations: 34.969 MiB)
Running: laguerre_quadrature with k=2
  0.208597 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.130959 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.037877 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.034134 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.059157 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.056386 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.054228 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.234871 seconds (171.72 k allocations: 9.838 MiB)
Running: simpsons_rule
  0.001594 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.046463 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.202735 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002047 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.126683 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.127176 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.117709 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.115502 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  5.967407 seconds (365.92 k allocations: 904.797 MiB, 3.06% gc time)
Running: legendre_quadrature
  0.098346 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000277 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000181 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.668742 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000492 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.944619 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081951 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000816 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000725 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.113941 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.118047 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.117039 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.118874 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  2.609051 seconds (372.48 k allocations: 252.985 MiB)
Running: legendre_quadrature
  0.114728 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000100 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000055 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.085417 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000238 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.999047 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083559 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000454 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
