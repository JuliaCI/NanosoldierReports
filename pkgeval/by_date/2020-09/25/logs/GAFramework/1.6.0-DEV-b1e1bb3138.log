Julia Version 1.6.0-DEV.1034
Commit b1e1bb3138 (2020-09-24 17:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ivJ6XE/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ivJ6XE/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21712741350107495
curgen: 20 fitness: 0.21722163607341233
curgen: 30 fitness: 0.21722163607341233
curgen: 40 fitness: 0.2172307094518551
curgen: 50 fitness: 0.2172307094518551
CoordinateCreature{Vector{Float64}}([0.22280509929790132], -0.2172307094518551) 0.22280509929790132 -0.2172307094518551
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257853968369571
curgen: 100 fitness: 3.258083420679219
curgen: 150 fitness: 3.2581556653797663
curgen: 200 fitness: 3.2581886347305637
curgen: 250 fitness: 3.2584025836401067
curgen: 300 fitness: 3.2584025836401067
curgen: 350 fitness: 3.2584025836401067
curgen: 400 fitness: 3.2584656420561724
curgen: 450 fitness: 3.2584656420561724
curgen: 500 fitness: 3.2584656420561724
CoordinateCreature{Vector{Float64}}([-0.22267696828151123, -0.22208578353348513, -0.22264836487730705, -0.2227464737897328, 0.22259974827056142, 0.2225114819609988, -0.22264471868460586, 0.2225236672557846, 0.2222303556378725, 0.22217846429896457, 0.22281853908341498, -0.22228450460206672, 0.22246372101539116, 0.22298204725485787, -0.22262527069691437], -3.2584656420561724) [-0.22267696828151123, -0.22208578353348513, -0.22264836487730705, -0.2227464737897328, 0.22259974827056142, 0.2225114819609988, -0.22264471868460586, 0.2225236672557846, 0.2222303556378725, 0.22217846429896457, 0.22281853908341498, -0.22228450460206672, 0.22246372101539116, 0.22298204725485787, -0.22262527069691437] -3.2584656420561724
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001127441934215767
curgen: 100 fitness: -0.0011272010441700786
curgen: 150 fitness: -0.0011272010441700786
curgen: 200 fitness: -0.0010979502407053587
curgen: 250 fitness: -0.0010979502407053587
curgen: 300 fitness: -0.0007450165414297771
curgen: 350 fitness: -0.0006704864345863371
curgen: 400 fitness: -0.0006704864345863371
curgen: 450 fitness: -0.0006704864345863371
curgen: 500 fitness: -0.0006704864345863371
CoordinateCreature{Vector{Float64}}([0.0008868583545196991, 0.0006461322058649856, -9.97549763572367e-5, 0.0002522406581072427, 0.00032354878747570953, 0.00012876874956696738, -0.0010306191164483804, 0.0002516798415596272, -0.0001221789949541331, -8.21364095780167e-5, 0.00046771868606023943, 0.00047272050069916316, 0.00029823427988151865, -4.508999323691199e-5, -0.000548058999123483], 0.0006704864345863371) [0.0008868583545196991, 0.0006461322058649856, -9.97549763572367e-5, 0.0002522406581072427, 0.00032354878747570953, 0.00012876874956696738, -0.0010306191164483804, 0.0002516798415596272, -0.0001221789949541331, -8.21364095780167e-5, 0.00046771868606023943, 0.00047272050069916316, 0.00029823427988151865, -4.508999323691199e-5, -0.000548058999123483] 0.0006704864345863371
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
