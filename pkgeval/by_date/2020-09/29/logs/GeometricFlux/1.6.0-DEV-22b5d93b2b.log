Julia Version 1.6.0-DEV.1069
Commit 22b5d93b2b (2020-09-28 17:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SimpleTraits ───────────────── v0.9.3
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed CEnum ──────────────────────── v0.4.1
  Installed GeometricFlux ──────────────── v0.6.1
  Installed DataStructures ─────────────── v0.17.20
  Installed MuladdMacro ────────────────── v0.2.2
  Installed LoopVectorization ──────────── v0.8.26
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed CodecZlib ──────────────────── v0.7.0
  Installed GPUCompiler ────────────────── v0.6.1
  Installed Functors ───────────────────── v0.1.0
  Installed MetaGraphs ─────────────────── v0.6.6
  Installed ArrayLayouts ───────────────── v0.3.8
  Installed Juno ───────────────────────── v0.8.4
  Installed ExprTools ──────────────────── v0.1.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed OffsetArrays ───────────────── v1.3.0
  Installed Missings ───────────────────── v0.4.4
  Installed Requires ───────────────────── v1.1.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed ChainRules ─────────────────── v0.7.21
  Installed SimpleWeightedGraphs ───────── v1.1.1
  Installed DiffResults ────────────────── v1.0.2
  Installed Flux ───────────────────────── v0.11.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ForwardDiff ────────────────── v0.10.12
  Installed JLD2 ───────────────────────── v0.2.1
  Installed ColorTypes ─────────────────── v0.10.9
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed TimerOutputs ───────────────── v0.5.6
  Installed Inflate ────────────────────── v0.1.2
  Installed ChainRulesCore ─────────────── v0.9.10
  Installed CommonSubexpressions ───────── v0.3.0
  Installed VectorizationBase ──────────── v0.12.33
  Installed Zygote ─────────────────────── v0.5.8
  Installed NNlib ──────────────────────── v0.7.4
  Installed CpuId ──────────────────────── v0.2.2
  Installed FixedPointNumbers ──────────── v0.8.4
  Installed SpecialFunctions ───────────── v0.10.3
  Installed ZygoteRules ────────────────── v0.2.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed StaticArrays ───────────────── v0.12.4
  Installed BinaryProvider ─────────────── v0.5.10
  Installed DocStringExtensions ────────── v0.8.3
  Installed MacroTools ─────────────────── v0.5.5
  Installed LLVM ───────────────────────── v2.0.0
  Installed StatsBase ──────────────────── v0.33.1
  Installed FillArrays ─────────────────── v0.8.14
  Installed IRTools ────────────────────── v0.4.1
  Installed CUDA ───────────────────────── v1.3.3
  Installed NaNMath ────────────────────── v0.3.4
  Installed Colors ─────────────────────── v0.12.4
  Installed ZipFile ────────────────────── v0.9.2
  Installed AbstractTrees ──────────────── v0.3.3
  Installed Media ──────────────────────── v0.5.0
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed LightGraphs ────────────────── v1.3.3
  Installed UnPack ─────────────────────── v1.0.2
  Installed OrderedCollections ─────────── v1.3.1
  Installed GPUArrays ──────────────────── v5.2.1
  Installed DataAPI ────────────────────── v1.3.0
  Installed Adapt ──────────────────────── v2.3.0
  Installed SIMDPirates ────────────────── v0.8.25
  Installed Reexport ───────────────────── v0.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7e08b658] + GeometricFlux v0.6.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.3.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4c555306] + ArrayLayouts v0.3.8
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v1.3.3
  [082447d4] + ChainRules v0.7.21
  [d360d2e6] + ChainRulesCore v0.9.10
  [944b1d66] + CodecZlib v0.7.0
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [ffbed154] + DocStringExtensions v0.8.3
  [e2ba6199] + ExprTools v0.1.2
  [1a297f60] + FillArrays v0.8.14
  [53c48c17] + FixedPointNumbers v0.8.4
  [587475ba] + Flux v0.11.1
  [f6369f11] + ForwardDiff v0.10.12
  [d9f16b24] + Functors v0.1.0
  [0c68f7d7] + GPUArrays v5.2.1
  [61eb1bfa] + GPUCompiler v0.6.1
  [7e08b658] + GeometricFlux v0.6.1
  [7869d1d1] + IRTools v0.4.1
  [d25df0c9] + Inflate v0.1.2
  [033835bb] + JLD2 v0.2.1
  [e5e0dc1b] + Juno v0.8.4
  [929cbde3] + LLVM v2.0.0
  [093fc24a] + LightGraphs v1.3.3
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.5
  [e89f7d12] + Media v0.5.0
  [626554b9] + MetaGraphs v0.6.6
  [e1d29d7a] + Missings v0.4.4
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.7.4
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [699a6c99] + SimpleTraits v0.9.3
  [47aef6b3] + SimpleWeightedGraphs v1.1.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.1
  [a759f4b9] + TimerOutputs v0.5.6
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [e88e6eb3] + Zygote v0.5.8
  [700de1a5] + ZygoteRules v0.2.0
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [9abbd945] + Profile
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/67ae90a18aa8c22bf159318300e765fbd89ddf6e/build.log`
    Testing GeometricFlux
Status `/tmp/jl_zvhc4U/Project.toml`
  [052768ef] CUDA v1.3.3
  [864edb3b] DataStructures v0.17.20
  [1a297f60] FillArrays v0.8.14
  [587475ba] Flux v0.11.1
  [7e08b658] GeometricFlux v0.6.1
  [093fc24a] LightGraphs v1.3.3
  [626554b9] MetaGraphs v0.6.6
  [ae029012] Requires v1.1.0
  [47aef6b3] SimpleWeightedGraphs v1.1.1
  [90137ffa] StaticArrays v0.12.4
  [e88e6eb3] Zygote v0.5.8
  [700de1a5] ZygoteRules v0.2.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_zvhc4U/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.3.0
  [ec485272] ArnoldiMethod v0.0.4
  [4c555306] ArrayLayouts v0.3.8
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [082447d4] ChainRules v0.7.21
  [d360d2e6] ChainRulesCore v0.9.10
  [944b1d66] CodecZlib v0.7.0
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [ffbed154] DocStringExtensions v0.8.3
  [e2ba6199] ExprTools v0.1.2
  [1a297f60] FillArrays v0.8.14
  [53c48c17] FixedPointNumbers v0.8.4
  [587475ba] Flux v0.11.1
  [f6369f11] ForwardDiff v0.10.12
  [d9f16b24] Functors v0.1.0
  [0c68f7d7] GPUArrays v5.2.1
  [61eb1bfa] GPUCompiler v0.6.1
  [7e08b658] GeometricFlux v0.6.1
  [7869d1d1] IRTools v0.4.1
  [d25df0c9] Inflate v0.1.2
  [033835bb] JLD2 v0.2.1
  [e5e0dc1b] Juno v0.8.4
  [929cbde3] LLVM v2.0.0
  [093fc24a] LightGraphs v1.3.3
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.5
  [e89f7d12] Media v0.5.0
  [626554b9] MetaGraphs v0.6.6
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.7.4
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [699a6c99] SimpleTraits v0.9.3
  [47aef6b3] SimpleWeightedGraphs v1.1.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [a759f4b9] TimerOutputs v0.5.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [e88e6eb3] Zygote v0.5.8
  [700de1a5] ZygoteRules v0.2.0
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_add!(x, us, xs))
            end), ys) == (ones(2, 5),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:16
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_add!(copy(ys), x, xs))
            end), us) == (ones(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:16
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:17
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_add!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:17
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:19
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_sub!(x, us, xs))
            end), ys) == (ones(2, 5),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:19
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:20
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_sub!(copy(ys), x, xs))
            end), us) == (-(ones(2, 3, 4)),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:20
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:21
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_sub!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:21
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:23
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_max!(x, us, xs))
            end), ys) == (ones(2, 5),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:23
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:24
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_max!(copy(ys), x, xs))
            end), us) == (zeros(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:24
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:25
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_max!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:25
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:27
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_min!(x, us, xs))
            end), ys) == (zeros(2, 5),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:27
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:28
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_min!(copy(ys), x, xs))
            end), us) == (ones(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:28
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:29
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_min!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:29
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:31
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_mul!(x, us, xs))
            end), ys) == (∇y_mul,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:31
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:32
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_mul!(copy(ys), x, xs))
            end), us) == (2048 * gather(ys, xs),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:32
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:33
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_mul!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:33
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:35
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_div!(x, us, xs))
            end), ys) == (∇y_div,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:35
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:36
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_div!(copy(ys), x, xs))
            end), us) == (-(gather(ys, xs)) / 8192,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:36
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:37
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_div!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:37
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:39
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_mean!(x, us, xs))
            end), ys) == (ones(2, 5),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Float64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:39
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:40
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_mean!(copy(ys), x, xs))
            end), us) == (∇u_mean,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:40
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
scatter: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:41
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(scatter_mean!(copy(ys), us, x))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:41
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:15
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(sumpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:46
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(sumpool(xs, x))
            end), us) == (ones(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:46
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:48
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(subpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:48
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:49
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(subpool(xs, x))
            end), us) == (-(ones(2, 3, 4)),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:49
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:51
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(maxpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:51
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:52
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(maxpool(xs, x))
            end), us) == (ones(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:52
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:54
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(minpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:54
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:55
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(minpool(xs, x))
            end), us) == (ones(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:55
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:57
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(prodpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:57
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:58
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(prodpool(xs, x))
            end), us) == (2048 * ones(2, 3, 4),)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:58
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:60
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(divpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:60
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:61
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(divpool(xs, x))
            end), us) == (-(ones(2, 3, 4)) / 8192,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:61
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:63
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(meanpool(x, us))
            end), xs) == (nothing,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Matrix{Int64})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:63
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
pool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/grad.jl:64
  Test threw exception
  Expression: Zygote.gradient((x->begin
                sum(meanpool(xs, x))
            end), us) == (∇u_mean,)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] #s2778#1234
      @ ~/.julia/packages/Zygote/chgvX/src/compiler/interface2.jl:34 [inlined]
    [4] #s2778#1234(::Any, ctx::Any, f::Any, args::Any)
      @ Zygote ./none:0
    [5] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [6] _pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:38
    [7] pullback(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:44
    [8] gradient(f::Function, args::Array{Float64, 3})
      @ Zygote ~/.julia/packages/Zygote/chgvX/src/compiler/interface.jl:53
    [9] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:64
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:45
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/grad.jl:14
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e4137504f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886
unknown function (ip: 0x7f2e41374cda)
copy at ./broadcast.jl:862
unknown function (ip: 0x7f2e41374081)
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e413732d1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e4137504f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886
unknown function (ip: 0x7f2e41374cda)
copy at ./broadcast.jl:862
unknown function (ip: 0x7f2e41374081)
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e413732d1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15
  Test threw exception
  Expression: scatter_add!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16
  Test threw exception
  Expression: scatter!(:add, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22
  Test threw exception
  Expression: scatter_sub!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23
  Test threw exception
  Expression: scatter!(:sub, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29
  Test threw exception
  Expression: scatter_max!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30
  Test threw exception
  Expression: scatter!(:max, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36
  Test threw exception
  Expression: scatter_min!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37
  Test threw exception
  Expression: scatter!(:min, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!(dest::CuMatrix{UInt32}, bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:886
   [28] copy(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:862
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404dc97f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404dc751)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404dc97f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404dc751)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15
  Test threw exception
  Expression: scatter_add!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16
  Test threw exception
  Expression: scatter!(:add, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22
  Test threw exception
  Expression: scatter_sub!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23
  Test threw exception
  Expression: scatter!(:sub, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29
  Test threw exception
  Expression: scatter_max!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30
  Test threw exception
  Expression: scatter!(:max, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36
  Test threw exception
  Expression: scatter_min!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37
  Test threw exception
  Expression: scatter!(:min, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{UInt64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e030f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e00e1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e030f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e00e1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15
  Test threw exception
  Expression: scatter_add!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16
  Test threw exception
  Expression: scatter!(:add, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22
  Test threw exception
  Expression: scatter_sub!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23
  Test threw exception
  Expression: scatter!(:sub, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29
  Test threw exception
  Expression: scatter_max!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30
  Test threw exception
  Expression: scatter!(:max, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36
  Test threw exception
  Expression: scatter_min!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37
  Test threw exception
  Expression: scatter!(:min, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e233f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e21b1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e233f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e21b1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15
  Test threw exception
  Expression: scatter_add!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:15 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16
  Test threw exception
  Expression: scatter!(:add, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:16 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:13 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22
  Test threw exception
  Expression: scatter_sub!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:22 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23
  Test threw exception
  Expression: scatter!(:sub, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:23 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:20 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29
  Test threw exception
  Expression: scatter_max!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:29 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30
  Test threw exception
  Expression: scatter!(:max, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:27 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36
  Test threw exception
  Expression: scatter_min!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:36 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37
  Test threw exception
  Expression: scatter!(:min, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Int64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Int64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:37 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:34 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:12 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e5baf)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e4361)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e5baf)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e4361)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48
  Test threw exception
  Expression: scatter_add!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:49
  Test threw exception
  Expression: scatter!(:add, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:49 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:55
  Test threw exception
  Expression: scatter_sub!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:55 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:53 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:56
  Test threw exception
  Expression: scatter!(:sub, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:56 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:53 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:62
  Test threw exception
  Expression: scatter_max!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:62 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:60 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:63
  Test threw exception
  Expression: scatter!(:max, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:63 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:60 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:69
  Test threw exception
  Expression: scatter_min!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:69 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:67 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:70
  Test threw exception
  Expression: scatter!(:min, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:70 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:67 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
mul: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:76
  Test threw exception
  Expression: scatter_mul!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:76 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:74 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
mul: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:77
  Test threw exception
  Expression: scatter!(:mul, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:77 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:74 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e90bf)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e8e91)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404e90bf)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404e8e91)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
div: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:80
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, typeof(*), Tuple{CuArray{Int64, 3}, Int64}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
   [37] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [38] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
   [39] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
   [41] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [42] top-level scope
      @ none:6
   [43] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [44] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [45] _start()
      @ Base ./client.jl:485
mean: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:91
  Test threw exception
  Expression: scatter_mean!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:91 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:89 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
mean: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:92
  Test threw exception
  Expression: scatter!(:mean, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float32}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float32}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:92 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:89 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404ed8af)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404ec061)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e404ed8af)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e404ec061)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48
  Test threw exception
  Expression: scatter_add!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:48 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
add: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:49
  Test threw exception
  Expression: scatter!(:add, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:49 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:55
  Test threw exception
  Expression: scatter_sub!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:55 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:53 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
sub: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:56
  Test threw exception
  Expression: scatter!(:sub, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:56 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:53 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:62
  Test threw exception
  Expression: scatter_max!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:62 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:60 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
max: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:63
  Test threw exception
  Expression: scatter!(:max, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:63 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:60 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:69
  Test threw exception
  Expression: scatter_min!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:69 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:67 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
min: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:70
  Test threw exception
  Expression: scatter!(:min, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:70 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:67 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
mul: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:76
  Test threw exception
  Expression: scatter_mul!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:76 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:74 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
mul: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:77
  Test threw exception
  Expression: scatter!(:mul, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:77 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:74 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
div: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:80
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(*), Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}, Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, typeof(*), Tuple{CuArray{Int64, 3}, Int64}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:81 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
   [37] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [38] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
   [39] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [40] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
   [41] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [42] top-level scope
      @ none:6
   [43] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [44] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [45] _start()
      @ Base ./client.jl:485
mean: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:91
  Test threw exception
  Expression: scatter_mean!(T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:91 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:89 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
mean: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:92
  Test threw exception
  Expression: scatter!(:mean, T.(copy(ys)), T.(us), xs) == T.(ys_)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Float64}, Tuple{Base.Broadcast.Extruded{CuDeviceMatrix{Int64, CUDA.AS.Global}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{2}, Nothing, CUDA.var"#885#886"{Float64}, Tuple{CuMatrix{Int64}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:92 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:89 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:45 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/scatter.jl:10
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e4051991f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e405196f1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e4051991f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e405196f1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10
  Test threw exception
  Expression: sumpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:11
  Test threw exception
  Expression: pool(:add, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:11 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:12
  Test threw exception
  Expression: sumpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:12 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:13
  Test threw exception
  Expression: pool(:add, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:13 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:19
  Test threw exception
  Expression: maxpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:19 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:20
  Test threw exception
  Expression: pool(:max, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:20 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:21
  Test threw exception
  Expression: maxpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:21 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:22
  Test threw exception
  Expression: pool(:max, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:22 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:28
  Test threw exception
  Expression: minpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:28 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:29
  Test threw exception
  Expression: pool(:min, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:29 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:30
  Test threw exception
  Expression: minpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:31
  Test threw exception
  Expression: pool(:min, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:31 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e4051c81f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e4051c5f1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e4051c81f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e4051c5f1)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10
  Test threw exception
  Expression: sumpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:10 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:11
  Test threw exception
  Expression: pool(:add, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:11 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:12
  Test threw exception
  Expression: sumpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:12 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:13
  Test threw exception
  Expression: pool(:add, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:13 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:8 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:19
  Test threw exception
  Expression: maxpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:19 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:20
  Test threw exception
  Expression: pool(:max, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:20 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:21
  Test threw exception
  Expression: maxpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:21 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:22
  Test threw exception
  Expression: pool(:max, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:22 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:17 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:28
  Test threw exception
  Expression: minpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:28 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:29
  Test threw exception
  Expression: pool(:min, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:29 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:30
  Test threw exception
  Expression: minpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:30 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:31
  Test threw exception
  Expression: pool(:min, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{UInt64, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{UInt64}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{UInt64}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:31 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:26 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:7 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:313
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1924
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e40520d3f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e40520b11)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:41 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:39 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /workspace/srcdir/src/rtutils.c:77
emit_expr at /workspace/srcdir/src/codegen.cpp:4549
emit_ssaval_assign at /workspace/srcdir/src/codegen.cpp:3988
emit_stmtpos at /workspace/srcdir/src/codegen.cpp:4230 [inlined]
emit_function at /workspace/srcdir/src/codegen.cpp:6788
jl_emit_code at /workspace/srcdir/src/codegen.cpp:7150
jl_emit_codeinst at /workspace/srcdir/src/codegen.cpp:7184
_jl_compile_codeinst at /workspace/srcdir/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /workspace/srcdir/src/jitlayers.cpp:351
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1930
jl_compile_method_internal at /workspace/srcdir/src/gf.c:2191 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2184 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f2e40520d3f)
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
copyto! at /home/pkgeval/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
copyto! at ./broadcast.jl:886 [inlined]
copy at ./broadcast.jl:862 [inlined]
materialize at ./broadcast.jl:837
unknown function (ip: 0x7f2e40520b11)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:41 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:39 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
macro expansion at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:47 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/runtests.jl:46
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:831
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360 [inlined]
include_string at ./loading.jl:1026
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
_include at ./loading.jl:1080
include at ./client.jl:444
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:115
eval_value at /workspace/srcdir/src/interpreter.c:204
eval_stmt_value at /workspace/srcdir/src/interpreter.c:155 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:561
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:837
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:785
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:880
eval at ./boot.jl:360
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_36143.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /workspace/srcdir/src/gf.c:2192 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2374
jl_apply at /workspace/srcdir/src/julia.h:1687 [inlined]
true_main at /workspace/srcdir/src/jlapi.c:553
repl_entrypoint at /workspace/srcdir/src/jlapi.c:672
main at /workspace/srcdir/cli/loader_exe.c:46
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x400bae)
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:41
  Test threw exception
  Expression: sumpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:41 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:39 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:42
  Test threw exception
  Expression: pool(:add, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:42 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:39 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:43
  Test threw exception
  Expression: sumpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:43 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:39 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
sumpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:44
  Test threw exception
  Expression: pool(:add, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:44 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:39 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
subpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:50
  Test threw exception
  Expression: subpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:50 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:48 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
subpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:51
  Test threw exception
  Expression: pool(:sub, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:51 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:48 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
subpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:52
  Test threw exception
  Expression: subpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:52 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:48 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
subpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:53
  Test threw exception
  Expression: pool(:sub, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:53 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:48 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:59
  Test threw exception
  Expression: maxpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:59 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:57 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:60
  Test threw exception
  Expression: pool(:max, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:60 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:57 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:61
  Test threw exception
  Expression: maxpool(cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:61 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:57 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
maxpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:62
  Test threw exception
  Expression: pool(:max, cluster, T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:62 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:57 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:68
  Test threw exception
  Expression: minpool(CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:68 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:66 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5
minpool: Error During Test at /home/pkgeval/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:69
  Test threw exception
  Expression: pool(:min, CuArray{Int64}(cluster), T.(X)) == T.(y)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:60
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#broadcast_kernel#14", Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#broadcast_kernel#14", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Int32, 3, CUDA.AS.Global}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, CUDA.var"#885#886"{Int32}, Tuple{Base.Broadcast.Extruded{CuDeviceArray{Int64, 3, CUDA.AS.Global}, Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}}}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] #launch_heuristic#838
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19 [inlined]
   [25] launch_heuristic
      @ ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17 [inlined]
   [26] copyto!
      @ ~/.julia/packages/GPUArrays/uaFZh/src/host/broadcast.jl:66 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{CUDA.CuArrayStyle{3}, Nothing, CUDA.var"#885#886"{Int32}, Tuple{CuArray{Int64, 3}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:69 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [32] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:66 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [34] macro expansion
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:38 [inlined]
   [35] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [36] top-level scope
      @ ~/.julia/packages/GeometricFlux/k4atN/test/cuda/pool.jl:5

signal (15): Terminated
in expression starting at none:19
pthread_cond_wait at /lib/x86_64-linux-gnu/libpthread.so.0 (unknown line)
