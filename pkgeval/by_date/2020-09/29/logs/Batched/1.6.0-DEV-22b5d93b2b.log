Julia Version 1.6.0-DEV.1069
Commit 22b5d93b2b (2020-09-28 17:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CUDAapi ─ v0.6.3
  Installed Batched ─ v0.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [1629540a] + Batched v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1629540a] + Batched v0.1.0
  [3895d2a7] + CUDAapi v0.6.3
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
   Building Batched → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/65927ef98b6764f1eee73494c2f4296de1a44ca8/build.log`
    Testing Batched
Status `/tmp/jl_TSbMGU/Project.toml`
  [1629540a] Batched v0.1.0
  [3895d2a7] CUDAapi v0.6.3
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_TSbMGU/Manifest.toml`
  [1629540a] Batched v0.1.0
  [3895d2a7] CUDAapi v0.6.3
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
ERROR: LoadError: LoadError: ArgumentError: Package Batched does not have CuArrays in its dependencies:
- If you have Batched checked out for development and have
  added CuArrays as a dependency but haven't updated your primary
  environment's manifest file, try `Pkg.resolve()`.
- Otherwise you may need to report an issue with Batched
Stacktrace:
  [1] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:816
  [2] include(mod::Module, _path::String)
    @ Base ./Base.jl:389
  [3] include(x::String)
    @ Batched ~/.julia/packages/Batched/yUbIZ/src/Batched.jl:1
  [4] top-level scope
    @ ~/.julia/packages/Batched/yUbIZ/src/Batched.jl:17
  [5] include
    @ ./Base.jl:389 [inlined]
  [6] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt64}}, source::String)
    @ Base ./loading.jl:1144
  [7] top-level scope
    @ none:1
  [8] eval
    @ ./boot.jl:360 [inlined]
  [9] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [10] top-level scope
    @ none:1
in expression starting at /home/pkgeval/.julia/packages/Batched/yUbIZ/src/cuda/cuda.jl:1
in expression starting at /home/pkgeval/.julia/packages/Batched/yUbIZ/src/Batched.jl:1
ERROR: LoadError: LoadError: Failed to precompile Batched [1629540a-9a93-50e9-aec3-2a5ae159dca9] to /home/pkgeval/.julia/compiled/v1.6/Batched/x80dV_LvuXu.ji.
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:33
  [2] compilecache(pkg::Base.PkgId, path::String, show_errors::Bool)
    @ Base ./loading.jl:1279
  [3] compilecache
    @ ./loading.jl:1232 [inlined]
  [4] _require(pkg::Base.PkgId, cache::Base.TOMLCache)
    @ Base ./loading.jl:953
  [5] require(uuidkey::Base.PkgId, cache::Base.TOMLCache)
    @ Base ./loading.jl:846
  [6] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:833
  [7] include(fname::String)
    @ Base.MainInclude ./client.jl:444
  [8] top-level scope
    @ ~/.julia/packages/Batched/yUbIZ/test/runtests.jl:3
  [9] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [10] top-level scope
    @ none:6
in expression starting at /home/pkgeval/.julia/packages/Batched/yUbIZ/test/routines/gemm.jl:1
in expression starting at /home/pkgeval/.julia/packages/Batched/yUbIZ/test/runtests.jl:3
ERROR: Package Batched errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
