Julia Version 1.6.0-DEV.1076
Commit da1d8373cd (2020-09-29 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_9rc01S/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_9rc01S/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.073391 seconds (1.38 M allocations: 73.079 MiB, 1.42% gc time)
Running: chebyshev_quadrature with k=1
  2.067010 seconds (2.19 M allocations: 126.455 MiB, 5.71% gc time)
Running: chebyshev_quadrature with k=2
  0.333348 seconds (409.38 k allocations: 23.550 MiB, 5.04% gc time)
Running: chebyshev_quadrature with k=3
  0.357776 seconds (473.74 k allocations: 26.620 MiB, 11.19% gc time)
Running: chebyshev_quadrature with k=4
  0.337461 seconds (418.55 k allocations: 23.269 MiB)
Running: jacobi_quadrature with α=β=1
 44.235724 seconds (36.49 M allocations: 3.005 GiB, 8.93% gc time)
Running: laguerre_quadrature with k=1
  3.392462 seconds (3.17 M allocations: 177.079 MiB, 2.95% gc time)
Running: legendre_quadrature
  0.230382 seconds (206.21 k allocations: 11.836 MiB)
Running: lobatto_quadrature
  0.364585 seconds (329.36 k allocations: 19.894 MiB)
Running: radau_quadrature
  0.443702 seconds (446.59 k allocations: 27.223 MiB, 3.55% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.730294 seconds (100.02 M allocations: 1.491 GiB, 0.40% gc time)
Running: rectangle_rule_midpoint.
  0.143044 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.327484 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time)
Running: rombergs_method
  0.585128 seconds (722.98 k allocations: 41.727 MiB, 5.28% gc time)
Running: simpsons_rule
  0.037431 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.090228 seconds (108.53 k allocations: 5.754 MiB)
Running: trapezoidal_rule
  0.300198 seconds (1.51 M allocations: 25.674 MiB, 4.13% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.091658 seconds (30.97 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.524409 seconds (290.24 k allocations: 15.321 MiB, 6.37% gc time)
Running: chebyshev_quadrature with k=2
  0.171553 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.279523 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.179825 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.019814 seconds (503.71 k allocations: 161.788 MiB, 9.06% gc time)
Running: legendre_quadrature
  0.162714 seconds (41.27 k allocations: 2.377 MiB)
Running: lobatto_quadrature
  0.021427 seconds (15.70 k allocations: 1001.747 KiB)
Running: radau_quadrature
  0.022203 seconds (15.81 k allocations: 1007.978 KiB)
Running: rectangle_rule_left
 30.590976 seconds (471.41 M allocations: 7.025 GiB, 4.43% gc time)
Running: rectangle_rule_midpoint
  0.000030 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.561411 seconds (476.96 M allocations: 7.107 GiB, 4.55% gc time)
Running: rombergs_method
  0.406650 seconds (326.54 k allocations: 18.533 MiB)
Running: simpsons_rule
  0.000018 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.093665 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.076365 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.040082 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.127341 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.130750 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.125396 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.127218 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.444536 seconds (363.66 k allocations: 18.977 MiB, 7.97% gc time)
Running: legendre_quadrature
  0.145281 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000122 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000072 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000602 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000415 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000685 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.121181 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000039 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.045559 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.030745 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060035 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.198391 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.222025 seconds (283.17 k allocations: 15.895 MiB)
Running: chebyshev_quadrature with k=3
  0.225422 seconds (234.76 k allocations: 13.155 MiB, 11.62% gc time)
Running: chebyshev_quadrature with k=4
  0.198107 seconds (234.76 k allocations: 13.087 MiB)
Running: jacobi_quadrature with α=β=1
  2.446687 seconds (446.74 k allocations: 163.208 MiB, 8.33% gc time)
Running: legendre_quadrature
  0.198023 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.209864 seconds (196.62 k allocations: 11.416 MiB)
Running: radau_quadrature
  0.194872 seconds (196.61 k allocations: 11.413 MiB)
Running: rectangle_rule_left
  0.878340 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.027779 seconds (24.67 k allocations: 1.558 MiB)
Running: rectangle_rule_right
  0.986752 seconds (17.39 k allocations: 1.062 MiB)
Running: rombergs_method
  0.174866 seconds (134.26 k allocations: 7.758 MiB)
Running: simpsons_rule
  0.033046 seconds (27.53 k allocations: 1.730 MiB)
Running: simpsons38_rule
  0.037490 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.029175 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043540 seconds (99.53 k allocations: 2.979 MiB)
Running: chebyshev_quadrature with k=1
  0.221293 seconds (237.19 k allocations: 13.054 MiB)
Running: chebyshev_quadrature with k=2
  0.234995 seconds (290.20 k allocations: 15.879 MiB)
Running: chebyshev_quadrature with k=3
  0.219839 seconds (241.33 k allocations: 13.117 MiB)
Running: chebyshev_quadrature with k=4
  0.226973 seconds (241.33 k allocations: 13.121 MiB)
Running: hermite_quadrature with k=2
 14.429773 seconds (20.09 M allocations: 1.055 GiB, 7.28% gc time)
Running: jacobi_quadrature with α=β=1
  0.511605 seconds (455.91 k allocations: 49.381 MiB, 10.27% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.225290 seconds (276.26 k allocations: 15.253 MiB)
Running: legendre_quadrature
  0.231853 seconds (191.98 k allocations: 11.046 MiB, 24.40% gc time)
Running: lobatto_quadrature
  0.251103 seconds (217.27 k allocations: 37.187 MiB)
Running: radau_quadrature
  0.286124 seconds (213.85 k allocations: 29.845 MiB, 17.79% gc time)
Running: rectangle_rule_left
  0.031492 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.030648 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.028712 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.134294 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.085452 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.043690 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.036264 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043263 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.399267 seconds (232.72 k allocations: 12.824 MiB, 42.05% gc time)
Running: chebyshev_quadrature with k=2
  0.246181 seconds (285.38 k allocations: 15.647 MiB)
Running: chebyshev_quadrature with k=3
  0.211501 seconds (236.87 k allocations: 12.928 MiB)
Running: chebyshev_quadrature with k=4
  0.234456 seconds (236.87 k allocations: 12.929 MiB, 9.18% gc time)
Running: hermite_quadrature with k=2
  0.159662 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
 11.185569 seconds (449.17 k allocations: 1.175 GiB, 13.50% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.226471 seconds (271.55 k allocations: 15.130 MiB)
Running: legendre_quadrature
  0.188318 seconds (187.55 k allocations: 10.814 MiB, 9.33% gc time)
Running: lobatto_quadrature
  0.207031 seconds (208.03 k allocations: 22.913 MiB)
Running: radau_quadrature
  0.295313 seconds (207.18 k allocations: 20.844 MiB, 7.71% gc time)
Running: rectangle_rule_left
  0.053459 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.041760 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.027360 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.145991 seconds (132.58 k allocations: 7.684 MiB)
Running: simpsons_rule
  0.038633 seconds (31.89 k allocations: 1.853 MiB)
Running: simpsons38_rule
  0.043077 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.032860 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.043601 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.199899 seconds (231.10 k allocations: 13.105 MiB)
Running: chebyshev_quadrature with k=2
  0.294563 seconds (283.67 k allocations: 15.985 MiB, 6.45% gc time)
Running: chebyshev_quadrature with k=3
  0.208042 seconds (235.25 k allocations: 13.146 MiB)
Running: chebyshev_quadrature with k=4
  0.195766 seconds (235.25 k allocations: 12.971 MiB)
Running: jacobi_quadrature with α=β=1
  2.345752 seconds (447.27 k allocations: 194.232 MiB, 5.96% gc time)
Running: legendre_quadrature
  0.180311 seconds (185.93 k allocations: 10.749 MiB)
Running: lobatto_quadrature
  0.210821 seconds (197.11 k allocations: 11.440 MiB)
Running: radau_quadrature
  0.191751 seconds (197.11 k allocations: 11.500 MiB)
Running: rectangle_rule_left
  0.289273 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.040771 seconds (25.01 k allocations: 1.573 MiB, 42.18% gc time)
Running: rectangle_rule_right
  0.148010 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.121882 seconds (145.02 k allocations: 8.487 MiB)
Running: simpsons_rule
  0.031018 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.031706 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.024829 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032470 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.193226 seconds (231.69 k allocations: 12.988 MiB)
Running: chebyshev_quadrature with k=2
  0.248006 seconds (284.30 k allocations: 15.891 MiB, 7.68% gc time)
Running: chebyshev_quadrature with k=3
  0.218423 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.196118 seconds (235.84 k allocations: 13.144 MiB)
Running: jacobi_quadrature with α=β=1
  2.268221 seconds (447.98 k allocations: 148.917 MiB, 8.06% gc time)
Running: legendre_quadrature
  0.165085 seconds (186.52 k allocations: 10.762 MiB)
Running: lobatto_quadrature
  0.190742 seconds (197.71 k allocations: 11.453 MiB)
Running: radau_quadrature
  0.182915 seconds (197.71 k allocations: 11.466 MiB)
Running: rectangle_rule_left
  0.953573 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.024870 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  0.980679 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.148948 seconds (135.49 k allocations: 7.815 MiB, 9.53% gc time)
Running: simpsons_rule
  0.032667 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.035252 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.029332 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.194022 seconds (145.06 k allocations: 8.693 MiB, 10.58% gc time)
Running: chebyshev_quadrature with k=1
  0.178874 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.192371 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.197753 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.254238 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  1.547627 seconds (479.97 k allocations: 167.734 MiB, 9.82% gc time)
Running: legendre_quadrature
  0.116872 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000097 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000052 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 42.777735 seconds (590.00 M allocations: 8.792 GiB, 3.00% gc time)
Running: rectangle_rule_midpoint
  0.000061 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.431087 seconds (592.75 M allocations: 8.833 GiB, 3.02% gc time)
Running: rombergs_method
  0.136860 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000031 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031708 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.031376 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.030581 seconds (629.32 M allocations: 9.387 GiB, 2.72% gc time)
Running: chebyshev_quadrature with k=1
  0.519121 seconds (414.07 k allocations: 22.956 MiB)
Running: chebyshev_quadrature with k=2
 24.691733 seconds (468.71 k allocations: 4.040 GiB, 2.18% gc time)
Running: chebyshev_quadrature with k=3
 11.357223 seconds (249.12 k allocations: 1.642 GiB, 2.41% gc time)
Running: chebyshev_quadrature with k=4
 17.693680 seconds (249.12 k allocations: 2.260 GiB, 1.17% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.937362 seconds (484.22 k allocations: 13.254 GiB, 3.77% gc time)
Running: legendre_quadrature.
 13.639181 seconds (223.36 k allocations: 1.976 GiB, 1.30% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.869228 seconds (8.23 M allocations: 13.383 GiB, 5.40% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.968324 seconds (7.23 M allocations: 13.369 GiB, 4.27% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.756030 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.213375 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.756866 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.878999 seconds (438.26 k allocations: 152.678 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.571256 seconds (600.04 M allocations: 8.943 GiB, 5.62% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.204991 seconds (600.05 M allocations: 8.943 GiB, 6.17% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.764403 seconds (600.03 M allocations: 8.943 GiB, 5.90% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.057472 seconds (180.45 k allocations: 4.406 MiB)
Running: chebyshev_quadrature with k=1
  0.257170 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.240686 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.216427 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.218113 seconds (220.25 k allocations: 11.689 MiB)
Running: jacobi_quadrature with α=β=1
  0.412606 seconds (388.85 k allocations: 34.974 MiB)
Running: laguerre_quadrature with k=2
  0.223160 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.143856 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.037919 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.035628 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.059030 seconds (18.87 k allocations: 1.121 MiB)
Running: rectangle_rule_midpoint
  0.047038 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.051808 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.285586 seconds (171.73 k allocations: 9.834 MiB)
Running: simpsons_rule
  0.001741 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054795 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.181236 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001805 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.156220 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.164466 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.148876 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.138377 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  6.561819 seconds (365.93 k allocations: 904.798 MiB, 2.82% gc time)
Running: legendre_quadrature
  0.076248 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000231 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000189 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.652518 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000496 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.849812 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082178 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000830 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000348 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.120878 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.127722 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.139937 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.130592 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  2.297321 seconds (372.50 k allocations: 252.963 MiB)
Running: legendre_quadrature
  0.095721 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000105 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000073 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.079269 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000181 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.728045 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.096230 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000432 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
