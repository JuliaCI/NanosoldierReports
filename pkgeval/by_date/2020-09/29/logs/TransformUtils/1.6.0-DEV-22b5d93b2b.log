Julia Version 1.6.0-DEV.1069
Commit 22b5d93b2b (2020-09-28 17:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_gDghtA/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_gDghtA/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.009081290928448492 0.1057797242258509; -0.009081290928448492 0.0 -0.0244983978973137; -0.1057797242258509 0.0244983978973137 0.0])
dAA = so3([0.0 -0.08813525037143165 0.1619447569316815; 0.08813525037143165 0.0 0.0737727507980577; -0.1619447569316815 -0.0737727507980577 0.0])
dAA = so3([0.0 -0.017588706149414574 -0.08341374305471694; 0.017588706149414574 0.0 -0.0447028294919362; 0.08341374305471694 0.0447028294919362 0.0])
dAA = Quaternion(0.9999234413375685, [-0.011938745397097519, -0.0009096722552830458, -0.003122549978081922])
dAA = SO3([0.9928455977108781 0.010075198693060058 0.11897944981140603; -0.026552505321292153 0.9901139503661147 0.13772918990384697; -0.11641556411104263 -0.1399030223465617 0.9832977986200342])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8959330911266294 -0.2479717814098696 0.3685293636180141; 0.1748234899119288 0.9595589832094925 0.2206429357966818; -0.40833888328114964 -0.13325371802085215 0.9030519381709575]), [0.244983978973137, 1.057797242258509, -0.09081290928448492])
xj = SE3(SO3([0.9998678187688477 0.01568869359763097 -0.004267304023191776; -0.01540623048371434 0.9980986955425972 0.05967949412024557; 0.005195483876345561 -0.05960586254191284 0.9982084692577624]), [0.44702829491936197, -0.8341374305471694, 0.17588706149414574])
Dx = SE3(SO3([0.8909997765238917 0.21288650832933906 -0.40099717306449595; -0.26341450859599624 0.9617869189377267 -0.0746908242115722; 0.36977316681379807 0.17217798097206397 0.9130293248154072]), [-0.2586404018938664, -1.9010629625874294, -0.10213883184329994])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
