Julia Version 1.6.0-DEV.1076
Commit da1d8373cd (2020-09-29 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_HFSbYt/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_HFSbYt/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.155682331657406 -0.0312833344314306; 0.155682331657406 0.0 0.06905456292667497; 0.0312833344314306 -0.06905456292667497 0.0])
dAA = so3([0.0 -0.05901270586866386 -0.09076542103655706; 0.05901270586866386 0.0 0.02936960262259355; 0.09076542103655706 -0.02936960262259355 0.0])
dAA = so3([0.0 -0.07530163425784465 0.1760589806160801; 0.07530163425784465 0.0 -0.027995603908389746; -0.1760589806160801 0.027995603908389746 0.0])
dAA = Quaternion(0.997947772842848, [0.02339723447495681, -0.05841244606328164, -0.011865843494143831])
dAA = SO3([0.9959997689431822 -0.0890047622122439 -0.007912810415375154; 0.087790821174374 0.9912122343708533 -0.09894987696339105; 0.016650284762034374 0.09785938246833087 0.9950609575700678])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9636117338098557 -0.13732954883800216 -0.2293316844221806; 0.15388154344149724 0.986510404662299 0.055836297164923374; 0.21857011930276848 -0.0890944246795377 0.9717454843934165]), [-0.6905456292667497, -0.312833344314306, 1.55682331657406])
xj = SE3(SO3([0.9559098230310962 0.0479067039528855 -0.2897263501116683; -0.08280434080146468 0.990541354253649 -0.10941328373548637; 0.2817443014101498 0.12857983212665094 0.9508350936903774]), [0.27995603908389743, 1.760589806160801, 0.7530163425784465])
Dx = SE3(SO3([0.9699647477427733 0.22669320374018992 -0.08819625567056019; -0.2380638549193983 0.9591446000106281 -0.15286345950346764; 0.04993985499792472 0.1692685075507591 0.9843039079645702]), [1.0785601637045472, 1.9837896748517934, -0.8878903084630042])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
