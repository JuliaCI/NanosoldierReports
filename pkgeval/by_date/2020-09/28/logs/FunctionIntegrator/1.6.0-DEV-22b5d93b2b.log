Julia Version 1.6.0-DEV.1069
Commit 22b5d93b2b (2020-09-28 17:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_dLhTDz/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_dLhTDz/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.828828 seconds (1.38 M allocations: 73.593 MiB, 1.84% gc time)
Running: chebyshev_quadrature with k=1
  1.724372 seconds (2.20 M allocations: 126.767 MiB, 6.56% gc time)
Running: chebyshev_quadrature with k=2
  0.269998 seconds (409.38 k allocations: 23.552 MiB, 8.17% gc time)
Running: chebyshev_quadrature with k=3
  0.353393 seconds (473.74 k allocations: 26.610 MiB)
Running: chebyshev_quadrature with k=4
  0.395544 seconds (418.55 k allocations: 23.257 MiB, 24.45% gc time)
Running: jacobi_quadrature with α=β=1
 35.718805 seconds (36.51 M allocations: 3.006 GiB, 9.46% gc time)
Running: laguerre_quadrature with k=1
  2.439677 seconds (3.17 M allocations: 177.050 MiB, 2.95% gc time)
Running: legendre_quadrature
  0.186651 seconds (205.96 k allocations: 11.881 MiB)
Running: lobatto_quadrature
  0.338681 seconds (329.96 k allocations: 19.942 MiB, 6.25% gc time)
Running: radau_quadrature
  0.357519 seconds (447.77 k allocations: 27.343 MiB, 6.04% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 58.602477 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time)
Running: rectangle_rule_midpoint.
  0.081324 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 57.261331 seconds (100.02 M allocations: 1.491 GiB, 0.23% gc time)
Running: rombergs_method
  0.562160 seconds (723.03 k allocations: 41.737 MiB, 5.24% gc time)
Running: simpsons_rule
  0.030917 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.121260 seconds (108.42 k allocations: 5.746 MiB, 17.08% gc time)
Running: trapezoidal_rule
  0.243106 seconds (1.51 M allocations: 25.667 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081157 seconds (30.98 k allocations: 1.865 MiB)
Running: chebyshev_quadrature with k=1
  0.426293 seconds (290.69 k allocations: 15.380 MiB)
Running: chebyshev_quadrature with k=2
  0.172428 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.194129 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.164473 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.527323 seconds (503.77 k allocations: 161.801 MiB, 8.98% gc time)
Running: legendre_quadrature
  0.170393 seconds (41.01 k allocations: 2.358 MiB)
Running: lobatto_quadrature
  0.021755 seconds (15.45 k allocations: 982.591 KiB)
Running: radau_quadrature
  0.021610 seconds (15.55 k allocations: 989.009 KiB)
Running: rectangle_rule_left
 26.177178 seconds (471.41 M allocations: 7.025 GiB, 2.44% gc time)
Running: rectangle_rule_midpoint
  0.000028 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 25.515753 seconds (476.96 M allocations: 7.107 GiB, 2.50% gc time)
Running: rombergs_method
  0.295143 seconds (326.44 k allocations: 18.522 MiB)
Running: simpsons_rule
  0.000017 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.055929 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.047879 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.019818 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.093690 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.094752 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.084825 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.079260 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.293038 seconds (364.11 k allocations: 19.003 MiB, 9.75% gc time)
Running: legendre_quadrature
  0.077224 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000116 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000090 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000481 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000325 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000456 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.079327 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000039 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025545 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023007 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058003 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.190065 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.244853 seconds (283.16 k allocations: 15.880 MiB, 12.67% gc time)
Running: chebyshev_quadrature with k=3
  0.187806 seconds (234.76 k allocations: 13.135 MiB)
Running: chebyshev_quadrature with k=4
  0.183372 seconds (234.76 k allocations: 13.072 MiB)
Running: jacobi_quadrature with α=β=1
  2.533458 seconds (447.18 k allocations: 163.211 MiB, 4.16% gc time)
Running: legendre_quadrature
  0.152469 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.198617 seconds (196.76 k allocations: 11.419 MiB, 9.99% gc time)
Running: radau_quadrature
  0.142483 seconds (196.76 k allocations: 11.418 MiB)
Running: rectangle_rule_left
  0.730150 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.017912 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  1.060976 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.103093 seconds (134.26 k allocations: 7.763 MiB)
Running: simpsons_rule
  0.024256 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.029138 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.016396 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028202 seconds (99.53 k allocations: 2.980 MiB)
Running: chebyshev_quadrature with k=1
  0.149760 seconds (237.19 k allocations: 13.054 MiB, 10.74% gc time)
Running: chebyshev_quadrature with k=2
  0.141403 seconds (290.20 k allocations: 15.879 MiB)
Running: chebyshev_quadrature with k=3
  0.145608 seconds (241.33 k allocations: 13.116 MiB)
Running: chebyshev_quadrature with k=4
  0.193452 seconds (241.33 k allocations: 13.120 MiB, 10.56% gc time)
Running: hermite_quadrature with k=2
 11.993013 seconds (20.09 M allocations: 1.055 GiB, 10.36% gc time)
Running: jacobi_quadrature with α=β=1
  0.356914 seconds (456.35 k allocations: 49.411 MiB, 7.89% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.235197 seconds (276.26 k allocations: 15.253 MiB, 16.09% gc time)
Running: legendre_quadrature
  0.130836 seconds (191.98 k allocations: 11.043 MiB)
Running: lobatto_quadrature
  0.252095 seconds (217.42 k allocations: 37.197 MiB, 10.01% gc time)
Running: radau_quadrature
  0.233780 seconds (214.00 k allocations: 29.916 MiB)
Running: rectangle_rule_left
  0.026336 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.025256 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.027270 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.114152 seconds (136.74 k allocations: 7.870 MiB)
Running: simpsons_rule
  0.034287 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.060783 seconds (57.34 k allocations: 3.063 MiB, 37.82% gc time)
Running: trapezoidal_rule
  0.027708 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.037914 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.188932 seconds (232.72 k allocations: 12.825 MiB)
Running: chebyshev_quadrature with k=2
  0.216671 seconds (285.38 k allocations: 15.643 MiB)
Running: chebyshev_quadrature with k=3
  0.215333 seconds (236.87 k allocations: 12.928 MiB, 13.04% gc time)
Running: chebyshev_quadrature with k=4
  0.187738 seconds (236.87 k allocations: 12.929 MiB)
Running: hermite_quadrature with k=2
  0.145856 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
  7.956026 seconds (449.62 k allocations: 1.175 GiB, 9.50% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.198089 seconds (271.55 k allocations: 15.066 MiB, 11.36% gc time)
Running: legendre_quadrature
  0.152640 seconds (187.55 k allocations: 10.814 MiB)
Running: lobatto_quadrature
  0.192681 seconds (208.18 k allocations: 22.926 MiB)
Running: radau_quadrature
  0.190128 seconds (207.34 k allocations: 20.868 MiB)
Running: rectangle_rule_left
  0.041519 seconds (19.52 k allocations: 1.188 MiB, 41.66% gc time)
Running: rectangle_rule_midpoint
  0.025021 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.024113 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.113110 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.028017 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.031833 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.024564 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029019 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.179958 seconds (231.10 k allocations: 13.042 MiB)
Running: chebyshev_quadrature with k=2
  0.210504 seconds (283.67 k allocations: 16.064 MiB)
Running: chebyshev_quadrature with k=3
  0.222824 seconds (235.25 k allocations: 13.146 MiB)
Running: chebyshev_quadrature with k=4
  0.199736 seconds (235.25 k allocations: 12.971 MiB, 11.78% gc time)
Running: jacobi_quadrature with α=β=1
  2.290595 seconds (447.72 k allocations: 194.255 MiB, 4.42% gc time)
Running: legendre_quadrature
  0.184505 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.174999 seconds (197.26 k allocations: 11.451 MiB)
Running: radau_quadrature
  0.179848 seconds (197.26 k allocations: 11.449 MiB)
Running: rectangle_rule_left
  0.342184 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.022335 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.144447 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.113772 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.028551 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.030425 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.022703 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031153 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.238958 seconds (231.69 k allocations: 12.988 MiB, 13.76% gc time)
Running: chebyshev_quadrature with k=2
  0.247025 seconds (284.30 k allocations: 15.895 MiB)
Running: chebyshev_quadrature with k=3
  0.204981 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.190328 seconds (235.84 k allocations: 13.144 MiB)
Running: jacobi_quadrature with α=β=1
  2.429021 seconds (448.43 k allocations: 148.940 MiB, 5.21% gc time)
Running: legendre_quadrature
  0.177335 seconds (186.52 k allocations: 10.758 MiB, 8.33% gc time)
Running: lobatto_quadrature
  0.183607 seconds (197.86 k allocations: 11.464 MiB)
Running: radau_quadrature
  0.162203 seconds (197.85 k allocations: 11.474 MiB)
Running: rectangle_rule_left
  0.939710 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.024914 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.194148 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.163321 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.058067 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.027883 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.022477 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.149516 seconds (145.08 k allocations: 8.694 MiB)
Running: chebyshev_quadrature with k=1
  0.147612 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.153638 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.168573 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.240358 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  1.766219 seconds (480.31 k allocations: 167.755 MiB, 10.19% gc time)
Running: legendre_quadrature
  0.120673 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000090 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000051 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 48.700211 seconds (590.00 M allocations: 8.792 GiB, 7.40% gc time)
Running: rectangle_rule_midpoint
  0.000074 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 41.883880 seconds (592.75 M allocations: 8.833 GiB, 7.56% gc time)
Running: rombergs_method
  0.134118 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000066 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.019745 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.020454 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.895336 seconds (629.32 M allocations: 9.387 GiB, 6.60% gc time)
Running: chebyshev_quadrature with k=1
  0.507801 seconds (413.82 k allocations: 22.937 MiB)
Running: chebyshev_quadrature with k=2
 26.139692 seconds (468.46 k allocations: 4.040 GiB, 2.34% gc time)
Running: chebyshev_quadrature with k=3
 12.134681 seconds (249.12 k allocations: 1.642 GiB, 2.17% gc time)
Running: chebyshev_quadrature with k=4
 17.981786 seconds (249.12 k allocations: 2.260 GiB, 1.00% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 60.953208 seconds (484.40 k allocations: 13.254 GiB, 3.85% gc time)
Running: legendre_quadrature.
 13.905775 seconds (223.11 k allocations: 1.976 GiB, 1.62% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.685877 seconds (8.23 M allocations: 13.383 GiB, 4.41% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.136947 seconds (7.23 M allocations: 13.369 GiB, 4.55% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 18.875498 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.651948 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.696241 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.974161 seconds (438.01 k allocations: 152.660 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.575567 seconds (600.04 M allocations: 8.943 GiB, 5.86% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.483406 seconds (600.05 M allocations: 8.943 GiB, 6.10% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.293127 seconds (600.03 M allocations: 8.943 GiB, 5.70% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060268 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.214315 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.213063 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.189943 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.184119 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.368252 seconds (389.30 k allocations: 34.988 MiB)
Running: laguerre_quadrature with k=2
  0.196291 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.131890 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.034187 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.033241 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.054918 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.042071 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.051551 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.230337 seconds (171.79 k allocations: 9.840 MiB)
Running: simpsons_rule
  0.001852 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.046323 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.163427 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002039 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.141904 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.159155 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.142225 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.135028 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  7.813308 seconds (366.38 k allocations: 904.821 MiB, 2.41% gc time)
Running: legendre_quadrature
  0.076233 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000220 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000229 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.759277 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000507 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.057952 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077049 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000825 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000472 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.120360 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.123098 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.125310 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.123891 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  3.372981 seconds (372.95 k allocations: 253.064 MiB)
Running: legendre_quadrature
  0.074008 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000079 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000041 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.851642 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000174 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  2.127242 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.099936 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000024 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000405 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
