Julia Version 1.6.0-DEV.1064
Commit 4165fddaeb (2020-09-27 08:40 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_7r49X2/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_7r49X2/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.1824122808133709 0.0070100096094559555; 0.1824122808133709 0.0 -0.11503548704064903; -0.0070100096094559555 0.11503548704064903 0.0])
dAA = so3([0.0 0.08393164298535856 0.062408889579139065; -0.08393164298535856 0.0 0.016544157583678804; -0.062408889579139065 -0.016544157583678804 0.0])
dAA = so3([0.0 0.0984440466669892 -0.006550293980621418; -0.0984440466669892 0.0 0.00194579983711708; 0.006550293980621418 -0.00194579983711708 0.0])
dAA = Quaternion(0.9973191085938377, [-0.027298132997347888, 0.0654206547064719, 0.018153388285081586])
dAA = SO3([0.9824399449759033 -0.15974647830951844 0.09639925924741716; 0.15780089821497795 0.9870871405114413 0.027529140188031098; -0.09955215235388112 -0.011833837275062252 0.9949619737744037])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9660135890387922 0.20417904120400526 0.15852023506607757; -0.2105945824352953 0.9772637813792429 0.024605354158131035; -0.14989218672530924 -0.05715260919115223 0.9870490928121805]), [1.1503548704064903, 0.07010009609455956, 1.824122808133709])
xj = SE3(SO3([0.9429096011489806 -0.10193287029545137 0.31706651354944576; 0.05909682394797904 0.9881124399886776 0.14192029924885152; -0.3277637097976708 -0.11508038882864746 0.9377246155704325]), [-0.0194579983711708, -0.06550293980621417, -0.9844404666698918])
Dx = SE3(SO3([0.9475472361732585 -0.2893100134429463 0.13584532138451083; 0.2690081151566638 0.9514110882953974 0.1498384965502086; -0.17259452250948715 -0.10543555942000796 0.9793336885911318]), [-0.680516172332485, -0.21085448633255224, -2.9609654041657145])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
