Julia Version 1.6.0-DEV.1069
Commit 22b5d93b2b (2020-09-28 17:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed OrderedCollections ─ v1.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_X0h0nK/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_X0h0nK/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(47, 4.6014786f-5), Item(17, 0.017024398f0), Item(48, 0.02365601f0), Item(12, 0.06217003f0)])
Vsorted = Item[Item(47, 4.6014786f-5), Item(17, 0.017024398f0), Item(48, 0.02365601f0), Item(12, 0.06217003f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004641580581665039, 0.004702138900756836, 301.0, 49.13002938963473))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004440983136494954, 0.004406460126241048, 301.0, 71.93311548233032))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005234972635904948, 0.004455399513244629, 301.0, 39.98069107532501))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00437773863474528, 0.004212299982706706, 301.0, 8.950057728914544))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004116177558898926, 0.006348729133605957, 301.0, 44.40243120864034))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 6.494522094726562e-5, 3.893375396728516e-5, 301.0, 177.8433963805437))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.936622619628906e-5, 0.010833398501078288, 300.0, 26.935670988168567)
p = PerformanceResult(1.0, 1.0, 1.0, 6.0105323791503905e-5, 2.9301643371582033e-5, 300.0, 26.935670988168567)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004476396242777506, 0.003673370679219564, 300.0, 1.4540833598530298)
p = PerformanceResult(1.0, 1.0, 1.0, 4.897647433810764e-5, 2.392927805582682e-5, 300.0, 1.4540833598530298)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.936622619628906e-5, 0.010833398501078288, 300.0, 26.935670988168567), PerformanceResult(1.0, 1.0, 1.0, 6.0105323791503905e-5, 2.9301643371582033e-5, 300.0, 26.935670988168567), PerformanceResult(1.0, 1.0, 1.0, 0.004476396242777506, 0.003673370679219564, 300.0, 1.4540833598530298), PerformanceResult(1.0, 1.0, 1.0, 4.897647433810764e-5, 2.392927805582682e-5, 300.0, 1.4540833598530298))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 120.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.012084563573201498, 0.004791363080342611, 347.76666666666665, 28630.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006755344072977702, 0.004074668884277344, 303.1, 6952.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.406438191731771e-5, 1.0768572489420572e-5, 95.73333333333333, 49.20589973963797))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.392133076985677e-5, 1.1698404947916667e-5, 87.8, 72.03747248649597))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.541542053222656e-5, 1.6498565673828126e-5, 85.9, 40.052632331848145))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 5.0457318623860675e-5, 8.416970570882162e-5, 93.96666666666667, 44.47482405975461))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8166666666666665, 0.8166666666666665, 0.8166666666666665, 2.990563710530599e-5, 3.866354624430338e-5, 71.96666666666667, 187.1579048782587))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-28T23:42:12.316
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8994285714285715, 0.8940000000000002, 0.8963006535947714, 2.6617050170898438e-5, 2.682924270629883e-5, 151.16, 50.54131197789684))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5582313537597656e-5, 2.1719932556152342e-5, 154.55, 0.0))
*** advance 1 from 1000; 2020-09-28T23:42:12.909
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8971111111111111, 0.8890000000000002, 0.8922573099415206, 2.3238658905029297e-5, 2.4061203002929688e-5, 151.17, 74.65480530261993))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3229122161865236e-5, 1.8010139465332033e-5, 154.45, 0.0))
*** advance 1 from 1000; 2020-09-28T23:42:13.529
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9042698412698416, 0.8990000000000002, 0.9012043343653252, 2.450704574584961e-5, 3.675937652587891e-5, 152.72, 40.85929926671088))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.364635467529297e-5, 3.1290054321289065e-5, 156.4, 0.0))
*** advance 1 from 1000; 2020-09-28T23:42:14.141
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.893142857142857, 0.8879999999999998, 0.8901176470588235, 5.962848663330078e-5, 0.0002495288848876953, 152.4, 45.65731316944584))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 5.971908569335937e-5, 0.0002675008773803711, 155.82, 0.0))
*** advance 1 from 1000; 2020-09-28T23:42:14.620
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9620000000000002, 0.9620000000000002, 0.9620000000000002, 4.0199756622314456e-5, 9.881019592285156e-5, 166.0, 192.87880883645266))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 4.0452480316162106e-5, 0.00010469913482666015, 170.88, 0.0))
*** advance 1 from 1000; 2020-09-28T23:42:15.365
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8994285714285715, 0.8940000000000002, 0.8963006535947714, 3.611326217651367e-5, 7.140874862670898e-5, 151.16, 50.55340232606977))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.535270690917969e-5, 7.002830505371094e-5, 154.55, 0.015256621089065447))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:17.847
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7490000000000002, 0.7490000000000002, 0.7490000000000002, 0.0018527436256408692, 7.777929306030274e-5, 199.22, 189.3166687488556))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:18.768
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7499999999999999, 0.7499999999999999, 0.7499999999999999, 0.0017920923233032226, 7.153987884521484e-5, 202.96, 107.1873038187623))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:19.625
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.657, 0.657, 0.657, 0.0016449737548828126, 6.911039352416992e-5, 236.08, 3.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:20.456
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9590000000000001, 0.949, 0.9534444444444443, 0.001988673210144043, 1.1920928955078125e-5, 220.1, 594.600020468235))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:21.558
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5820000000000001, 0.5820000000000001, NaN, 0.002072243690490723, 0.0003880000114440918, 260.92, 2320.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:22.586
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38699999999999996, 0.38699999999999996, NaN, 0.0020259857177734376, 0.00027606964111328127, 248.81, 3654.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-28T23:42:23.592
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6119999999999998, 0.6119999999999998, NaN, 0.0019343256950378417, 2.6719570159912108e-5, 243.37, 2340.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0696378830083564, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9594322344322348,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.4140625,"distances_sum":492.55362586677074}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0696378830083564,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9594322344322348,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.4140625,"distances_sum":492.55362586677074}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0696378830083564,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9594322344322348,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.4140625,"distances_sum":492.55362586677074}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.693664795509222, conf: {"restarts":13}, perf: {"precision":0.9036458333333324,"recall":0.9036458333333324,"f1":0.9036458333333324,"seconds":2.4257227778434753e-5,"exhaustive_search_seconds":6.46151602268219e-6,"evaluations":58.453125,"distances_sum":299.2744806818664}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8836805555555548, conf: {"restarts":11}, perf: {"precision":0.8836805555555548,"recall":0.8836805555555548,"f1":0.8836805555555548,"seconds":2.32551246881485e-5,"exhaustive_search_seconds":6.46151602268219e-6,"evaluations":54.7109375,"distances_sum":300.78021651133895}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.693664795509222,"state":{"restarts":13},"perf":{"precision":0.9036458333333324,"recall":0.9036458333333324,"f1":0.9036458333333324,"seconds":2.4257227778434753e-5,"exhaustive_search_seconds":6.46151602268219e-6,"evaluations":58.453125,"distances_sum":299.2744806818664}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.693664795509222,"state":{"restarts":13},"perf":{"precision":0.9036458333333324,"recall":0.9036458333333324,"f1":0.9036458333333324,"seconds":2.4257227778434753e-5,"exhaustive_search_seconds":6.46151602268219e-6,"evaluations":58.453125,"distances_sum":299.2744806818664}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.693664795509222,"state":{"restarts":13},"perf":{"precision":0.9036458333333324,"recall":0.9036458333333324,"f1":0.9036458333333324,"seconds":2.4257227778434753e-5,"exhaustive_search_seconds":6.46151602268219e-6,"evaluations":58.453125,"distances_sum":299.2744806818664}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666653, conf: {"restarts":12}, perf: {"precision":0.8697916666666653,"recall":0.8697916666666653,"f1":0.8697916666666653,"seconds":3.395788371562958e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":141.953125,"distances_sum":123.22029240056872}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444432, conf: {"restarts":3}, perf: {"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":2.1807849407196045e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":78.953125,"distances_sum":123.71776806935668}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444436, conf: {"restarts":23}, perf: {"precision":0.8741319444444436,"recall":0.8741319444444436,"f1":0.8741319444444436,"seconds":5.7892873883247375e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":206.234375,"distances_sum":123.92371580377221}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8828124999999988, conf: {"restarts":19}, perf: {"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":7.161684334278107e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":182.59375,"distances_sum":123.37036985903978}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8828124999999988,"state":{"restarts":19},"perf":{"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":7.161684334278107e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":182.59375,"distances_sum":123.37036985903978}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8828124999999988,"state":{"restarts":19},"perf":{"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":7.161684334278107e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":182.59375,"distances_sum":123.37036985903978}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8828124999999988,"state":{"restarts":19},"perf":{"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":7.161684334278107e-5,"exhaustive_search_seconds":1.545250415802002e-5,"evaluations":182.59375,"distances_sum":123.37036985903978}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333324, conf: {"restarts":25}, perf: {"precision":0.8489583333333324,"recall":0.8489583333333324,"f1":0.8489583333333324,"seconds":0.00013615190982818604,"exhaustive_search_seconds":0.0003117881715297699,"evaluations":336.3125,"distances_sum":55.80083489161916}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8489583333333326, conf: {"restarts":26}, perf: {"precision":0.8489583333333326,"recall":0.8489583333333326,"f1":0.8489583333333326,"seconds":0.00014684349298477173,"exhaustive_search_seconds":0.0003117881715297699,"evaluations":342.8515625,"distances_sum":55.89392468822189}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222215, conf: {"restarts":11}, perf: {"precision":0.8472222222222215,"recall":0.8472222222222215,"f1":0.8472222222222215,"seconds":9.812042117118835e-5,"exhaustive_search_seconds":0.0003117881715297699,"evaluations":210.21875,"distances_sum":56.06312805530615}, best_list's length: 7, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8489583333333326,"state":{"restarts":26},"perf":{"precision":0.8489583333333326,"recall":0.8489583333333326,"f1":0.8489583333333326,"seconds":0.00014684349298477173,"exhaustive_search_seconds":0.0003117881715297699,"evaluations":342.8515625,"distances_sum":55.89392468822189}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8489583333333326,"state":{"restarts":26},"perf":{"precision":0.8489583333333326,"recall":0.8489583333333326,"f1":0.8489583333333326,"seconds":0.00014684349298477173,"exhaustive_search_seconds":0.0003117881715297699,"evaluations":342.8515625,"distances_sum":55.89392468822189}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(26), SatNeighborhood(32), 2020-09-28T23:42:30.990
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2592, 0.03328831f0), Item(5399, 0.034401692f0), Item(10, 0.045680527f0), Item(9927, 0.05206066f0), Item(8077, 0.0627528f0), Item(7993, 0.063670024f0), Item(4461, 0.06585969f0), Item(7046, 0.06655062f0), Item(5472, 0.066718474f0), Item(3595, 0.07242649f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0646950092421443, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9606055402930409,"seconds":3.606081008911133e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.453125,"distances_sum":491.60912926495075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.089877010406812, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9450835622710627,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.2578125,"distances_sum":477.5093912631273}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.089877010406812,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9450835622710627,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.2578125,"distances_sum":477.5093912631273}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0960989533777354, conf: {"bsize":9}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429086538461546,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.2109375,"distances_sum":474.34410114586353}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0960989533777354,"state":{"bsize":9},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9429086538461546,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.2109375,"distances_sum":474.34410114586353}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0960989533777354,"state":{"bsize":9},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9429086538461546,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.2109375,"distances_sum":474.34410114586353}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.330354796320631, conf: {"bsize":2}, perf: {"precision":0.9322916666666661,"recall":0.9322916666666661,"f1":0.9322916666666661,"seconds":1.5310943126678467e-5,"exhaustive_search_seconds":8.109956979751587e-6,"evaluations":29.7265625,"distances_sum":278.26500616036355}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.164044943820224, conf: {"bsize":3}, perf: {"precision":0.9687499999999994,"recall":0.9687499999999994,"f1":0.9687499999999994,"seconds":1.6596168279647827e-5,"exhaustive_search_seconds":8.109956979751587e-6,"evaluations":31.2890625,"distances_sum":274.5566503908485}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.955223880597015, conf: {"bsize":4}, perf: {"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":1.7855316400527954e-5,"exhaustive_search_seconds":8.109956979751587e-6,"evaluations":33.5,"distances_sum":273.48836030624807}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.330354796320631,"state":{"bsize":2},"perf":{"precision":0.9322916666666661,"recall":0.9322916666666661,"f1":0.9322916666666661,"seconds":1.5310943126678467e-5,"exhaustive_search_seconds":8.109956979751587e-6,"evaluations":29.7265625,"distances_sum":278.26500616036355}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.330354796320631,"state":{"bsize":2},"perf":{"precision":0.9322916666666661,"recall":0.9322916666666661,"f1":0.9322916666666661,"seconds":1.5310943126678467e-5,"exhaustive_search_seconds":8.109956979751587e-6,"evaluations":29.7265625,"distances_sum":278.26500616036355}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.330354796320631,"state":{"bsize":2},"perf":{"precision":0.9322916666666661,"recall":0.9322916666666661,"f1":0.9322916666666661,"seconds":1.5310943126678467e-5,"exhaustive_search_seconds":8.109956979751587e-6,"evaluations":29.7265625,"distances_sum":278.26500616036355}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.93220338983051, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.6913359761238098e-5,"exhaustive_search_seconds":1.5459954738616943e-5,"evaluations":59.0,"distances_sum":120.33373981714249}, best_list's length: 4, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.93220338983051,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.6913359761238098e-5,"exhaustive_search_seconds":1.5459954738616943e-5,"evaluations":59.0,"distances_sum":120.33373981714249}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.93220338983051,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.6913359761238098e-5,"exhaustive_search_seconds":1.5459954738616943e-5,"evaluations":59.0,"distances_sum":120.33373981714249}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.93220338983051,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.6913359761238098e-5,"exhaustive_search_seconds":1.5459954738616943e-5,"evaluations":59.0,"distances_sum":120.33373981714249}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.14571229374855, conf: {"bsize":4}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":4.5880675315856934e-5,"exhaustive_search_seconds":0.0003927256911993027,"evaluations":100.8515625,"distances_sum":55.89244928397238}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.14571229374855,"state":{"bsize":4},"perf":{"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":4.5880675315856934e-5,"exhaustive_search_seconds":0.0003927256911993027,"evaluations":100.8515625,"distances_sum":55.89244928397238}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.32267577215583, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.346909165382385e-5,"exhaustive_search_seconds":0.0003927256911993027,"evaluations":100.671875,"distances_sum":55.857752779498696}, best_list's length: 9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.32267577215583,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.346909165382385e-5,"exhaustive_search_seconds":0.0003927256911993027,"evaluations":100.671875,"distances_sum":55.857752779498696}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.32267577215583,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.346909165382385e-5,"exhaustive_search_seconds":0.0003927256911993027,"evaluations":100.671875,"distances_sum":55.857752779498696}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.32267577215583,"state":{"bsize":7},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":5.346909165382385e-5,"exhaustive_search_seconds":0.0003927256911993027,"evaluations":100.671875,"distances_sum":55.857752779498696}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(7), SatNeighborhood(32), 2020-09-28T23:42:34.608
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5374, 0.032053582f0), Item(6282, 0.037890404f0), Item(3785, 0.05860092f0), Item(7118, 0.060537215f0), Item(4926, 0.064019375f0), Item(8606, 0.069164746f0), Item(6968, 0.06953528f0), Item(307, 0.07155945f0), Item(7669, 0.07394706f0), Item(346, 0.074178696f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
