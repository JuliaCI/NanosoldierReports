Julia Version 1.6.0-DEV.807
Commit a3430e7ec1 (2020-09-01 17:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Compat ───────────── v3.15.0
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed DataStructures ───── v0.18.2
  Installed SimilaritySearch ─── v0.3.20
  Installed JSON ─────────────── v0.21.0
  Installed StatsBase ────────── v0.32.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_PAHAw3/Project.toml`
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_PAHAw3/Manifest.toml`
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(39, 0.0060425997f0), Item(34, 0.012250185f0), Item(11, 0.01660037f0), Item(6, 0.024961472f0)])
Vsorted = Item[Item(39, 0.0060425997f0), Item(34, 0.012250185f0), Item(11, 0.01660037f0), Item(6, 0.024961472f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004597298304239909, 0.00584716796875, 301.0, 51.951062515378))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004072960217793783, 0.004540530840555826, 301.0, 75.33597648143768))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004117361704508464, 0.004337628682454427, 301.0, 41.890756726264954))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00495607852935791, 0.0038799683252970377, 301.0, 9.880662033916451))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003621848424275716, 0.005665000279744466, 301.0, 46.939884793013334))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001516580581665039, 0.00013790130615234374, 301.0, 185.79575815796852))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 9.326934814453125e-5, 0.010381801923116048, 300.0, 29.399205045308918)
p = PerformanceResult(1.0, 1.0, 1.0, 3.441174825032552e-5, 1.7770131429036458e-5, 300.0, 29.399205045308918)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0041972001393636065, 0.0033104737599690755, 300.0, 1.7227609323963406)
p = PerformanceResult(1.0, 1.0, 1.0, 4.7514173719618056e-5, 2.0297368367513022e-5, 300.0, 1.7227609323963406)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 9.326934814453125e-5, 0.010381801923116048, 300.0, 29.399205045308918), PerformanceResult(1.0, 1.0, 1.0, 3.441174825032552e-5, 1.7770131429036458e-5, 300.0, 29.399205045308918), PerformanceResult(1.0, 1.0, 1.0, 0.0041972001393636065, 0.0033104737599690755, 300.0, 1.7227609323963406), PerformanceResult(1.0, 1.0, 1.0, 4.7514173719618056e-5, 2.0297368367513022e-5, 300.0, 1.7227609323963406))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 123.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008104952176411946, 0.003986128171284993, 349.06666666666666, 28525.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00885756015777588, 0.003903802235921224, 304.06666666666666, 6977.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.044041951497396e-5, 1.243750254313151e-5, 91.9, 51.88267260044813))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 1.5179316202799479e-5, 1.0132789611816406e-5, 82.23333333333333, 75.20847427845001))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9367535909016927e-5, 1.060167948404948e-5, 90.36666666666666, 41.860888719558716))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.793108622233073e-5, 0.00019509792327880858, 94.13333333333334, 46.90342451259494))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7833333333333331, 0.7833333333333331, 0.7833333333333331, 4.7429402669270834e-5, 0.00013123353322347004, 68.46666666666667, 196.62677782773972))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-02T11:15:37.960
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8913333333333334, 0.8830000000000002, 0.8865758513931891, 2.2530555725097656e-5, 2.474069595336914e-5, 150.51, 52.174813544610515))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1822452545166016e-5, 1.89208984375e-5, 153.94, 0.0))
*** advance 1 from 1000; 2020-09-02T11:15:38.581
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8899999999999999, 0.8899999999999999, 0.8899999999999999, 2.2118091583251952e-5, 2.3899078369140624e-5, 152.2, 79.00249525718391))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0990371704101564e-5, 2.017974853515625e-5, 155.99, 0.0))
*** advance 1 from 1000; 2020-09-02T11:15:39.193
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8817499999999998, 0.8779999999999998, 0.8796666666666666, 6.882667541503906e-5, 0.00016419172286987304, 151.1, 43.56144008412957))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6445388793945313e-5, 3.583908081054687e-5, 154.61, 0.0))
*** advance 1 from 1000; 2020-09-02T11:15:39.984
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8903333333333334, 0.882, 0.8855758513931891, 0.00014128446578979493, 0.0007490181922912598, 150.38, 47.458579746540636))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011516571044921875, 0.000649878978729248, 153.78, 0.0))
*** advance 1 from 1000; 2020-09-02T11:15:40.559
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9710000000000001, 0.9710000000000001, 0.9710000000000001, 8.882284164428711e-5, 0.0004613900184631348, 167.78, 196.04645873745903))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00011101961135864257, 0.0004733085632324219, 173.17, 0.0))
*** advance 1 from 1000; 2020-09-02T11:15:41.749
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8913333333333334, 0.8830000000000002, 0.8865758513931891, 3.9260387420654294e-5, 7.564067840576172e-5, 150.51, 52.185480705229566))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.1890869140625e-5, 7.581949234008789e-5, 153.94, 0.01284117772593163))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:43.821
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7599999999999999, 0.7599999999999999, 0.7599999999999999, 0.0014966201782226562, 8.131027221679688e-5, 196.34, 186.3000022470951))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:44.722
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.784, 0.784, 0.784, 0.0014981818199157715, 0.00011629104614257812, 203.66, 105.40079572796822))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:45.558
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6520000000000001, 0.6520000000000001, 0.6520000000000001, 0.0015343666076660157, 7.487058639526367e-5, 268.29, 1.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:46.441
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9350000000000002, 0.9350000000000002, 0.9350000000000002, 0.0017295145988464355, 1.8990039825439454e-5, 226.29, 604.0000207275152))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:47.621
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5809999999999997, 0.5809999999999997, 0.5809999999999997, 0.0017001128196716309, 0.000431370735168457, 253.76, 2352.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:48.656
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.4110000000000001, 0.4110000000000001, NaN, 0.001626431941986084, 0.00042652130126953126, 250.6, 3632.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T11:15:49.686
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6029999999999999, 0.6029999999999999, 0.6029999999999999, 0.001889345645904541, 4.5289993286132814e-5, 245.22, 2379.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0212765957446805, conf: {"restarts":10}, perf: {"precision":1.0,"recall":0.9765625,"f1":0.9871279761904763,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":2.3283064365386963e-6,"evaluations":8.8125,"distances_sum":701.9205614328384}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0212765957446805,"state":{"restarts":10},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9871279761904763,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":2.3283064365386963e-6,"evaluations":8.8125,"distances_sum":701.9205614328384}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0212765957446805,"state":{"restarts":10},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9871279761904763,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":2.3283064365386963e-6,"evaluations":8.8125,"distances_sum":701.9205614328384}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8285714285714283,"state":{"restarts":10},"perf":{"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":1.926720142364502e-5,"exhaustive_search_seconds":4.461035132408142e-6,"evaluations":54.140625,"distances_sum":302.4023724421859}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8285714285714283,"state":{"restarts":10},"perf":{"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":1.926720142364502e-5,"exhaustive_search_seconds":4.461035132408142e-6,"evaluations":54.140625,"distances_sum":302.4023724421859}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555542, conf: {"restarts":19}, perf: {"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":5.610845983028412e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":184.6484375,"distances_sum":124.47486464492977}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888882, conf: {"restarts":14}, perf: {"precision":0.8498263888888882,"recall":0.8498263888888882,"f1":0.8498263888888882,"seconds":4.548206925392151e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":154.7109375,"distances_sum":124.65658874623477}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555541, conf: {"restarts":16}, perf: {"precision":0.8602430555555541,"recall":0.8602430555555541,"f1":0.8602430555555541,"seconds":0.00012782588601112366,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":166.8125,"distances_sum":124.08470968715847}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222212, conf: {"restarts":9}, perf: {"precision":0.8628472222222212,"recall":0.8628472222222212,"f1":0.8628472222222212,"seconds":7.9374760389328e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":121.8203125,"distances_sum":124.0604196768254}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8628472222222212,"state":{"restarts":9},"perf":{"precision":0.8628472222222212,"recall":0.8628472222222212,"f1":0.8628472222222212,"seconds":7.9374760389328e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":121.8203125,"distances_sum":124.0604196768254}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8732638888888877, conf: {"restarts":17}, perf: {"precision":0.8732638888888877,"recall":0.8732638888888877,"f1":0.8732638888888877,"seconds":0.0001506749540567398,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":172.1328125,"distances_sum":123.67525016330183}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8810763888888876, conf: {"restarts":26}, perf: {"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":0.8810763888888876,"seconds":7.883831858634949e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":221.21875,"distances_sum":123.5827204938978}, best_list's length: 12, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777766, conf: {"restarts":23}, perf: {"precision":0.8715277777777766,"recall":0.8715277777777766,"f1":0.8715277777777766,"seconds":8.277036249637604e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":206.5,"distances_sum":123.57564775459468}, best_list's length: 14, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777766, conf: {"restarts":15}, perf: {"precision":0.8637152777777766,"recall":0.8637152777777766,"f1":0.8637152777777766,"seconds":6.49522989988327e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":159.859375,"distances_sum":124.81129909865558}, best_list's length: 15, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8810763888888876,"state":{"restarts":26},"perf":{"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":0.8810763888888876,"seconds":7.883831858634949e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":221.21875,"distances_sum":123.5827204938978}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8810763888888876,"state":{"restarts":26},"perf":{"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":0.8810763888888876,"seconds":7.883831858634949e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":221.21875,"distances_sum":123.5827204938978}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8810763888888876,"state":{"restarts":26},"perf":{"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":0.8810763888888876,"seconds":7.883831858634949e-5,"exhaustive_search_seconds":3.6772340536117554e-5,"evaluations":221.21875,"distances_sum":123.5827204938978}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111099, conf: {"restarts":31}, perf: {"precision":0.8611111111111099,"recall":0.8611111111111099,"f1":0.8611111111111099,"seconds":0.00020286813378334045,"exhaustive_search_seconds":0.00043485127389431,"evaluations":391.4296875,"distances_sum":56.81521564628929}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8611111111111099,"state":{"restarts":31},"perf":{"precision":0.8611111111111099,"recall":0.8611111111111099,"f1":0.8611111111111099,"seconds":0.00020286813378334045,"exhaustive_search_seconds":0.00043485127389431,"evaluations":391.4296875,"distances_sum":56.81521564628929}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8611111111111099,"state":{"restarts":31},"perf":{"precision":0.8611111111111099,"recall":0.8611111111111099,"f1":0.8611111111111099,"seconds":0.00020286813378334045,"exhaustive_search_seconds":0.00043485127389431,"evaluations":391.4296875,"distances_sum":56.81521564628929}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(31), SatNeighborhood(32), 2020-09-02T11:15:57.873
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(899, 0.017957143f0), Item(1147, 0.019917289f0), Item(7168, 0.028414829f0), Item(4166, 0.040887665f0), Item(9687, 0.0486119f0), Item(2796, 0.05179652f0), Item(7728, 0.052441932f0), Item(7454, 0.054486997f0), Item(6372, 0.055688635f0), Item(2865, 0.057032526f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0114135206321335, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9873046875,"f1":0.9926739926739928,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.8984375,"distances_sum":701.5415231138468}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0425339366515836, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9727506868131869,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.6328125,"distances_sum":673.0184056013823}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.018567639257294, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9794921875,"f1":0.988467261904762,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.8359375,"distances_sum":696.4420235604048}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0716279069767443, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9550314269064273,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.3984375,"distances_sum":654.6673725396395}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0716279069767443,"state":{"bsize":7},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9550314269064273,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.3984375,"distances_sum":654.6673725396395}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0816901408450703, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517399267399267,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.3203125,"distances_sum":644.2424972504377}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0867924528301884, conf: {"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9480196886446888,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.28125,"distances_sum":637.9863336235285}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0867924528301884,"state":{"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9480196886446888,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.28125,"distances_sum":637.9863336235285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.087818696883853, conf: {"bsize":12}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.949130036630037,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.2734375,"distances_sum":642.9031588882208}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.087818696883853,"state":{"bsize":12},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.949130036630037,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.2734375,"distances_sum":642.9031588882208}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.087818696883853,"state":{"bsize":12},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.949130036630037,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":2.428889274597168e-6,"evaluations":8.2734375,"distances_sum":642.9031588882208}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.5850673194614444, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.0915642380714417e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":38.296875,"distances_sum":280.5473329499364}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.070588235294118, conf: {"bsize":10}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.808496356010437e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":47.8125,"distances_sum":280.5548431798816}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 2.918546555639667, conf: {"bsize":19}, perf: {"precision":0.993923611111111,"recall":0.993923611111111,"f1":0.993923611111111,"seconds":2.9696151614189148e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":51.6015625,"distances_sum":280.8859189674258}, best_list's length: 4, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.4520123839009287, conf: {"bsize":7}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.261251211166382e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":40.375,"distances_sum":280.6359805688262}, best_list's length: 5, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 2.936430317848411, conf: {"bsize":14}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":2.4281442165374756e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":51.125,"distances_sum":280.8948347494006}, best_list's length: 6, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.5850673194614444,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":2.0915642380714417e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":38.296875,"distances_sum":280.5473329499364}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.731034482758621, conf: {"bsize":5}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":1.747533679008484e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":36.25,"distances_sum":280.6851543560624}, best_list's length: 8, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.043958683641605, conf: {"bsize":3}, perf: {"precision":0.9644097222222217,"recall":0.9644097222222217,"f1":0.9644097222222217,"seconds":1.4735385775566101e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":32.5234375,"distances_sum":281.9999597892165}, best_list's length: 9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.043958683641605,"state":{"bsize":3},"perf":{"precision":0.9644097222222217,"recall":0.9644097222222217,"f1":0.9644097222222217,"seconds":1.4735385775566101e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":32.5234375,"distances_sum":281.9999597892165}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.043958683641605,"state":{"bsize":3},"perf":{"precision":0.9644097222222217,"recall":0.9644097222222217,"f1":0.9644097222222217,"seconds":1.4735385775566101e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":32.5234375,"distances_sum":281.9999597892165}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.043958683641605,"state":{"bsize":3},"perf":{"precision":0.9644097222222217,"recall":0.9644097222222217,"f1":0.9644097222222217,"seconds":1.4735385775566101e-5,"exhaustive_search_seconds":8.05594027042389e-6,"evaluations":32.5234375,"distances_sum":281.9999597892165}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.316447620262856,"state":{"bsize":3},"perf":{"precision":0.9826388888888887,"recall":0.9826388888888887,"f1":0.9826388888888887,"seconds":3.078579902648926e-5,"exhaustive_search_seconds":3.167241811752319e-5,"evaluations":61.2265625,"distances_sum":118.68557102698833}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.316447620262856,"state":{"bsize":3},"perf":{"precision":0.9826388888888887,"recall":0.9826388888888887,"f1":0.9826388888888887,"seconds":3.078579902648926e-5,"exhaustive_search_seconds":3.167241811752319e-5,"evaluations":61.2265625,"distances_sum":118.68557102698833}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.6985195154778,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":5.843117833137512e-5,"exhaustive_search_seconds":0.00041564181447029114,"evaluations":104.484375,"distances_sum":54.25705997296609}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.6985195154778,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":5.843117833137512e-5,"exhaustive_search_seconds":0.00041564181447029114,"evaluations":104.484375,"distances_sum":54.25705997296609}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(3), SatNeighborhood(32), 2020-09-02T11:16:02.009
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(936, 0.02378201f0), Item(6094, 0.02413502f0), Item(5225, 0.045340303f0), Item(9759, 0.05133496f0), Item(7444, 0.05446161f0), Item(5, 0.05562979f0), Item(1225, 0.057263553f0), Item(987, 0.0582459f0), Item(1480, 0.059034567f0), Item(7610, 0.059203025f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
