Julia Version 1.6.0-DEV.807
Commit a3430e7ec1 (2020-09-01 17:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed BSON â”€ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [fbb218c0] + BSON v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fbb218c0] + BSON v0.2.6
    Testing BSON
Status `/tmp/jl_IXTPr3/Project.toml`
  [fbb218c0] BSON v0.2.6
  [9abbd945] Profile
  [8dfed614] Test
Status `/tmp/jl_IXTPr3/Manifest.toml`
  [fbb218c0] BSON v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [9abbd945] Profile
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Anonymous Functions: Error During Test at /home/pkgeval/.julia/packages/BSON/XAts7/test/runtests.jl:65
  Got exception outside of a @test
  type Method has no field ambig
  Stacktrace:
    [1] getproperty(x::Method, f::Symbol)
      @ Base ./Base.jl:33
    [2] structdata(meth::Method)
      @ BSON ~/.julia/packages/BSON/XAts7/src/anonymous.jl:15
    [3] lower(x::Method)
      @ BSON ~/.julia/packages/BSON/XAts7/src/extensions.jl:91
    [4] _lower_recursive(x::Method, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
    [5] (::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}})(x::Method)
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
    [6] applychildren!(f::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}}, x::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:28
    [7] _lower_recursive(x::Vector{Method}, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
    [8] (::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}})(x::Vector{Method})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
    [9] applychildren!(f::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}}, x::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:28
   [10] _lower_recursive(x::Vector{Any}, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [11] (::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}})(x::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [12] applychildren!(f::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}}, x::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:28
   [13] _lower_recursive(x::Vector{Any}, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [14] (::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}})(x::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [15] applychildren!(f::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}}, x::Dict{Symbol, Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:21
   [16] _lower_recursive(x::Core.TypeName, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [17] (::BSON.var"#3#7"{IdDict{Any, Any}, Vector{Any}})(x::Core.TypeName)
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:53
   [18] applychildren!(f::BSON.var"#3#7"{IdDict{Any, Any}, Vector{Any}}, x::Dict{Symbol, Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:21
   [19] (::BSON.var"#_lower#6"{IdDict{Any, Any}, Vector{Any}})(x::Type)
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:53
   [20] _lower_recursive(x::Type, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:54
   [21] (::BSON.var"#3#7"{IdDict{Any, Any}, Vector{Any}})(x::Type)
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:53
   [22] applychildren!(f::BSON.var"#3#7"{IdDict{Any, Any}, Vector{Any}}, x::Dict{Symbol, Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:21
   [23] _lower
      @ ~/.julia/packages/BSON/XAts7/src/write.jl:53 [inlined]
   [24] _lower_recursive(x::Function, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:54
   [25] (::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}})(x::Function)
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [26] applychildren!(f::BSON.var"#5#9"{IdDict{Any, Any}, Vector{Any}}, x::Dict{Symbol, Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/BSON.jl:21
   [27] _lower_recursive(x::Dict{Symbol, var"#1#3"}, cache::IdDict{Any, Any}, refs::Vector{Any})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:62
   [28] lower_recursive(y::Dict{Symbol, var"#1#3"})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:73
   [29] bson(io::IOBuffer, doc::Dict{Symbol, var"#1#3"})
      @ BSON ~/.julia/packages/BSON/XAts7/src/write.jl:81
   [30] roundtrip(x::Function)
      @ BSON ~/.julia/packages/BSON/XAts7/src/read.jl:108
   [31] top-level scope
      @ ~/.julia/packages/BSON/XAts7/test/runtests.jl:67
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/BSON/XAts7/test/runtests.jl:66
   [34] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [35] top-level scope
      @ ~/.julia/packages/BSON/XAts7/test/runtests.jl:18
   [36] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [37] top-level scope
      @ none:6
   [38] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [39] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [40] _start()
      @ Base ./client.jl:485
Test Summary:                      | Pass  Error  Total
BSON                               |   33      1     34
  Primitive Types                  |    7             7
  Complex Types                    |   16            16
  Circular References              |    5             5
  Anonymous Functions              |           1      1
  Int Literals in Type Params #41  |    4             4
  MultiDims Arrays saved on 64-bit |    1             1
ERROR: LoadError: Some tests did not pass: 33 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/BSON/XAts7/test/runtests.jl:16
ERROR: Package BSON errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
