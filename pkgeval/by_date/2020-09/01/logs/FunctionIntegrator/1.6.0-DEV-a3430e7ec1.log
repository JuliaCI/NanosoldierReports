Julia Version 1.6.0-DEV.807
Commit a3430e7ec1 (2020-09-01 17:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_fefNN0/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_fefNN0/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.337358 seconds (1.43 M allocations: 76.753 MiB)
Running: chebyshev_quadrature with k=1
  2.194617 seconds (2.21 M allocations: 126.931 MiB, 5.87% gc time)
Running: chebyshev_quadrature with k=2
  0.263192 seconds (417.86 k allocations: 24.080 MiB)
Running: chebyshev_quadrature with k=3
  0.318486 seconds (533.41 k allocations: 29.439 MiB, 4.32% gc time)
Running: chebyshev_quadrature with k=4
  0.286163 seconds (476.82 k allocations: 25.993 MiB)
Running: jacobi_quadrature with α=β=1
 43.482145 seconds (37.94 M allocations: 3.095 GiB, 8.50% gc time)
Running: laguerre_quadrature with k=1
  2.991555 seconds (3.27 M allocations: 182.700 MiB, 6.68% gc time)
Running: legendre_quadrature
  0.193249 seconds (211.46 k allocations: 12.154 MiB)
Running: lobatto_quadrature
  0.327505 seconds (339.46 k allocations: 20.394 MiB, 7.02% gc time)
Running: radau_quadrature
  0.245375 seconds (321.97 k allocations: 19.413 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.065362 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rectangle_rule_midpoint.
  0.145617 seconds (173.45 k allocations: 3.871 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.473389 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time)
Running: rombergs_method
  0.625660 seconds (740.15 k allocations: 42.755 MiB, 5.97% gc time)
Running: simpsons_rule
  0.040016 seconds (46.90 k allocations: 2.097 MiB)
Running: simpsons38_rule
  0.110371 seconds (111.97 k allocations: 5.917 MiB)
Running: trapezoidal_rule
  0.305069 seconds (1.51 M allocations: 25.767 MiB, 5.19% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081779 seconds (32.29 k allocations: 1.926 MiB)
Running: chebyshev_quadrature with k=1
  0.460452 seconds (281.07 k allocations: 14.653 MiB)
Running: chebyshev_quadrature with k=2
  0.143752 seconds (94.46 k allocations: 2.708 MiB)
Running: chebyshev_quadrature with k=3
  0.154606 seconds (82.68 k allocations: 2.508 MiB)
Running: chebyshev_quadrature with k=4
  0.184746 seconds (65.29 k allocations: 2.154 MiB)
Running: jacobi_quadrature with α=β=1
  3.087054 seconds (507.20 k allocations: 162.133 MiB, 17.32% gc time)
Running: legendre_quadrature
  0.124767 seconds (42.79 k allocations: 2.469 MiB)
Running: lobatto_quadrature
  0.016154 seconds (16.60 k allocations: 1.029 MiB)
Running: radau_quadrature
  0.020034 seconds (16.59 k allocations: 1.029 MiB)
Running: rectangle_rule_left
 27.546824 seconds (471.41 M allocations: 7.025 GiB, 2.51% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.736896 seconds (476.96 M allocations: 7.107 GiB, 2.01% gc time)
Running: rombergs_method
  0.470164 seconds (334.21 k allocations: 19.010 MiB)
Running: simpsons_rule
  0.000028 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.091584 seconds (19.69 k allocations: 1.182 MiB)
Running: trapezoidal_rule
  0.070867 seconds (18.15 k allocations: 1.088 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029593 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.105613 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.108879 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.106545 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.108973 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.443904 seconds (369.42 k allocations: 19.445 MiB)
Running: legendre_quadrature
  0.101553 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000078 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000036 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000580 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000581 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000826 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.082934 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000049 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023929 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.027752 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060651 seconds (74.85 k allocations: 4.352 MiB)
Running: chebyshev_quadrature with k=1
  0.205491 seconds (235.67 k allocations: 13.314 MiB, 12.47% gc time)
Running: chebyshev_quadrature with k=2
  0.201055 seconds (289.52 k allocations: 16.322 MiB)
Running: chebyshev_quadrature with k=3
  0.185156 seconds (268.37 k allocations: 14.718 MiB)
Running: chebyshev_quadrature with k=4
  0.209939 seconds (268.40 k allocations: 14.678 MiB, 10.36% gc time)
Running: jacobi_quadrature with α=β=1
  2.514297 seconds (455.14 k allocations: 163.779 MiB, 7.15% gc time)
Running: legendre_quadrature
  0.153467 seconds (189.96 k allocations: 10.968 MiB)
Running: lobatto_quadrature
  0.236201 seconds (201.05 k allocations: 11.666 MiB)
Running: radau_quadrature
  0.287952 seconds (201.05 k allocations: 11.669 MiB)
Running: rectangle_rule_left
  1.414262 seconds (19.52 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.046446 seconds (25.65 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  1.678146 seconds (18.05 k allocations: 1.093 MiB)
Running: rombergs_method
  0.225063 seconds (137.39 k allocations: 7.951 MiB, 12.94% gc time)
Running: simpsons_rule
  0.044400 seconds (28.65 k allocations: 1.781 MiB)
Running: simpsons38_rule
  0.065441 seconds (44.14 k allocations: 2.760 MiB)
Running: trapezoidal_rule
  0.043358 seconds (45.00 k allocations: 1.813 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051623 seconds (100.84 k allocations: 3.046 MiB)
Running: chebyshev_quadrature with k=1
  0.232783 seconds (242.41 k allocations: 13.391 MiB)
Running: chebyshev_quadrature with k=2
  0.246280 seconds (296.70 k allocations: 16.322 MiB)
Running: chebyshev_quadrature with k=3
  0.225378 seconds (275.24 k allocations: 14.718 MiB, 8.93% gc time)
Running: chebyshev_quadrature with k=4
  0.242805 seconds (275.27 k allocations: 14.743 MiB)
Running: hermite_quadrature with k=2
 16.372614 seconds (21.41 M allocations: 1.122 GiB, 9.44% gc time)
Running: jacobi_quadrature with α=β=1
  0.490252 seconds (464.52 k allocations: 50.025 MiB, 8.14% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.272440 seconds (282.75 k allocations: 15.658 MiB, 11.72% gc time)
Running: legendre_quadrature
  0.161959 seconds (196.67 k allocations: 11.314 MiB)
Running: lobatto_quadrature
  0.256795 seconds (222.02 k allocations: 37.454 MiB, 10.76% gc time)
Running: radau_quadrature
  0.241619 seconds (218.61 k allocations: 30.119 MiB)
Running: rectangle_rule_left
  0.050653 seconds (22.59 k allocations: 1.337 MiB)
Running: rectangle_rule_midpoint
  0.043491 seconds (27.56 k allocations: 1.694 MiB)
Running: rectangle_rule_right
  0.038558 seconds (19.23 k allocations: 1.152 MiB)
Running: rombergs_method
  0.159415 seconds (139.94 k allocations: 8.001 MiB)
Running: simpsons_rule
  0.069350 seconds (40.69 k allocations: 2.128 MiB, 38.29% gc time)
Running: simpsons38_rule
  0.053986 seconds (59.31 k allocations: 3.161 MiB)
Running: trapezoidal_rule
  0.047171 seconds (31.21 k allocations: 1.751 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039557 seconds (61.11 k allocations: 2.338 MiB)
Running: chebyshev_quadrature with k=1
  0.212162 seconds (237.84 k allocations: 13.153 MiB)
Running: chebyshev_quadrature with k=2
  0.312100 seconds (291.80 k allocations: 16.062 MiB)
Running: chebyshev_quadrature with k=3
  0.281976 seconds (270.56 k allocations: 14.503 MiB, 11.01% gc time)
Running: chebyshev_quadrature with k=4
  0.274006 seconds (270.58 k allocations: 14.504 MiB)
Running: hermite_quadrature with k=2
  0.143899 seconds (174.80 k allocations: 10.029 MiB)
Running: jacobi_quadrature with α=β=1
 11.319870 seconds (457.65 k allocations: 1.175 GiB, 10.92% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.179327 seconds (277.93 k allocations: 15.468 MiB)
Running: legendre_quadrature
  0.219393 seconds (192.13 k allocations: 11.082 MiB)
Running: lobatto_quadrature
  0.218504 seconds (212.68 k allocations: 23.176 MiB, 7.20% gc time)
Running: radau_quadrature
  0.193511 seconds (211.83 k allocations: 21.115 MiB)
Running: rectangle_rule_left
  0.024915 seconds (20.23 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.025702 seconds (26.39 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.022690 seconds (18.04 k allocations: 1.094 MiB)
Running: rombergs_method
  0.108572 seconds (135.65 k allocations: 7.812 MiB)
Running: simpsons_rule
  0.048388 seconds (33.09 k allocations: 1.909 MiB, 33.89% gc time)
Running: simpsons38_rule
  0.039162 seconds (50.01 k allocations: 2.911 MiB)
Running: trapezoidal_rule
  0.024687 seconds (26.01 k allocations: 1.580 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033537 seconds (32.06 k allocations: 1.931 MiB)
Running: chebyshev_quadrature with k=1
  0.229740 seconds (236.17 k allocations: 13.371 MiB)
Running: chebyshev_quadrature with k=2
  0.228533 seconds (290.04 k allocations: 16.404 MiB)
Running: chebyshev_quadrature with k=3
  0.224371 seconds (268.89 k allocations: 14.714 MiB, 8.22% gc time)
Running: chebyshev_quadrature with k=4
  0.211612 seconds (268.92 k allocations: 14.552 MiB)
Running: jacobi_quadrature with α=β=1
  2.331387 seconds (455.69 k allocations: 194.823 MiB, 4.94% gc time)
Running: legendre_quadrature
  0.158656 seconds (190.47 k allocations: 11.001 MiB)
Running: lobatto_quadrature
  0.182497 seconds (201.57 k allocations: 11.762 MiB)
Running: radau_quadrature
  0.232613 seconds (201.56 k allocations: 11.693 MiB)
Running: rectangle_rule_left
  0.307542 seconds (20.07 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.027689 seconds (26.01 k allocations: 1.619 MiB)
Running: rectangle_rule_right
  0.120233 seconds (18.41 k allocations: 1.113 MiB)
Running: rombergs_method
  0.142156 seconds (148.58 k allocations: 8.710 MiB)
Running: simpsons_rule
  0.036828 seconds (29.37 k allocations: 1.813 MiB)
Running: simpsons38_rule
  0.041330 seconds (44.89 k allocations: 2.792 MiB)
Running: trapezoidal_rule
  0.031387 seconds (45.97 k allocations: 1.848 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.038274 seconds (32.79 k allocations: 1.882 MiB)
Running: chebyshev_quadrature with k=1
  0.216228 seconds (236.77 k allocations: 13.380 MiB)
Running: chebyshev_quadrature with k=2
  0.252072 seconds (290.68 k allocations: 16.316 MiB)
Running: chebyshev_quadrature with k=3
  0.288434 seconds (269.48 k allocations: 14.641 MiB, 9.38% gc time)
Running: chebyshev_quadrature with k=4
  0.225770 seconds (269.50 k allocations: 14.728 MiB)
Running: jacobi_quadrature with α=β=1
  2.181657 seconds (456.42 k allocations: 149.513 MiB, 14.63% gc time)
Running: legendre_quadrature
  0.176299 seconds (191.07 k allocations: 11.109 MiB)
Running: lobatto_quadrature
  0.202028 seconds (202.17 k allocations: 11.712 MiB)
Running: radau_quadrature
  0.177906 seconds (202.16 k allocations: 11.716 MiB)
Running: rectangle_rule_left
  1.225530 seconds (20.32 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.024502 seconds (26.00 k allocations: 1.619 MiB)
Running: rectangle_rule_right
  1.171875 seconds (18.39 k allocations: 1.111 MiB)
Running: rombergs_method
  0.166326 seconds (138.65 k allocations: 8.025 MiB, 11.32% gc time)
Running: simpsons_rule
  0.030347 seconds (30.07 k allocations: 1.840 MiB)
Running: simpsons38_rule
  0.033450 seconds (45.59 k allocations: 2.820 MiB)
Running: trapezoidal_rule
  0.025691 seconds (58.20 k allocations: 2.048 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.174097 seconds (150.92 k allocations: 8.987 MiB)
Running: chebyshev_quadrature with k=1
  0.156718 seconds (70.55 k allocations: 2.234 MiB)
Running: chebyshev_quadrature with k=2
  0.161211 seconds (105.75 k allocations: 2.900 MiB)
Running: chebyshev_quadrature with k=3
  0.169021 seconds (93.19 k allocations: 2.686 MiB)
Running: chebyshev_quadrature with k=4
  0.172210 seconds (72.73 k allocations: 2.282 MiB)
Running: jacobi_quadrature with α=β=1
  1.189407 seconds (481.45 k allocations: 167.960 MiB, 4.98% gc time)
Running: legendre_quadrature
  0.112712 seconds (19.36 k allocations: 1.121 MiB)
Running: lobatto_quadrature
  0.000095 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000049 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.413418 seconds (590.00 M allocations: 8.792 GiB, 5.74% gc time)
Running: rectangle_rule_midpoint
  0.000066 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.528038 seconds (592.75 M allocations: 8.833 GiB, 5.82% gc time)
Running: rombergs_method
  0.124035 seconds (21.12 k allocations: 1.194 MiB)
Running: simpsons_rule
  0.000078 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028787 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022225 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.200750 seconds (629.33 M allocations: 9.388 GiB, 7.75% gc time)
Running: chebyshev_quadrature with k=1
  0.623354 seconds (430.81 k allocations: 23.902 MiB, 5.82% gc time)
Running: chebyshev_quadrature with k=2
 13.428908 seconds (486.76 k allocations: 4.041 GiB, 3.90% gc time)
Running: chebyshev_quadrature with k=3
  6.258098 seconds (283.05 k allocations: 1.643 GiB, 4.61% gc time)
Running: chebyshev_quadrature with k=4
  8.623374 seconds (283.07 k allocations: 2.262 GiB, 2.24% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 62.074869 seconds (493.96 k allocations: 13.255 GiB, 3.12% gc time)
Running: legendre_quadrature.
  6.793144 seconds (229.03 k allocations: 1.976 GiB, 2.78% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.897283 seconds (8.24 M allocations: 13.384 GiB, 3.81% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.287072 seconds (7.24 M allocations: 13.369 GiB, 3.21% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.999275 seconds (23.09 k allocations: 1.388 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.980799 seconds (31.64 k allocations: 1.941 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.002101 seconds (23.30 k allocations: 1.398 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.143530 seconds (448.71 k allocations: 153.411 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.555890 seconds (600.04 M allocations: 8.943 GiB, 8.51% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.756320 seconds (600.05 M allocations: 8.944 GiB, 7.85% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.504303 seconds (600.04 M allocations: 8.943 GiB, 8.59% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.068800 seconds (181.82 k allocations: 4.482 MiB)
Running: chebyshev_quadrature with k=1
  0.237024 seconds (252.96 k allocations: 13.850 MiB)
Running: chebyshev_quadrature with k=2
  0.242094 seconds (277.87 k allocations: 14.922 MiB)
Running: chebyshev_quadrature with k=3
  0.243261 seconds (253.23 k allocations: 13.191 MiB)
Running: chebyshev_quadrature with k=4
  0.239443 seconds (253.25 k allocations: 13.200 MiB)
Running: jacobi_quadrature with α=β=1
  0.433579 seconds (395.07 k allocations: 35.464 MiB)
Running: laguerre_quadrature with k=2
  0.199130 seconds (184.96 k allocations: 10.831 MiB)
Running: legendre_quadrature
  0.119628 seconds (149.02 k allocations: 8.334 MiB)
Running: lobatto_quadrature
  0.036453 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.031602 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.052026 seconds (19.55 k allocations: 1.156 MiB)
Running: rectangle_rule_midpoint
  0.041160 seconds (26.48 k allocations: 1.624 MiB)
Running: rectangle_rule_right
  0.049498 seconds (18.13 k allocations: 1.081 MiB)
Running: rombergs_method
  0.257901 seconds (176.46 k allocations: 10.122 MiB)
Running: simpsons_rule
  0.003713 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.073630 seconds (80.70 k allocations: 3.480 MiB)
Running: trapezoidal_rule
  0.209744 seconds (2.39 M allocations: 37.739 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.003546 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.129538 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.112773 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.111845 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.114409 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.882863 seconds (371.75 k allocations: 905.254 MiB, 4.57% gc time)
Running: legendre_quadrature
  0.067829 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000195 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000129 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.684021 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000676 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.115025 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060109 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000827 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000698 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.109107 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.110494 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.120070 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.118163 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.755699 seconds (378.42 k allocations: 253.381 MiB)
Running: legendre_quadrature
  0.062259 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000074 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000028 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.592715 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001093 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.612715 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.101995 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000076 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001776 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
