Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed MatrixFactorizations ───────── v0.5.2
  Installed RecipesBase ────────────────── v1.0.2
  Installed BlockBandedMatrices ────────── v0.8.11
  Installed BlockArrays ────────────────── v0.12.11
  Installed BandedMatrices ─────────────── v0.15.15
  Installed CompactBases ───────────────── v0.1.1
  Installed EllipsisNotation ───────────── v0.4.0
  Installed Compat ─────────────────────── v3.15.0
  Installed IntervalSets ───────────────── v0.5.1
  Installed QuasiArrays ────────────────── v0.2.3
  Installed FillArrays ─────────────────── v0.8.14
  Installed SpecialFunctions ───────────── v0.10.3
  Installed ArrayLayouts ───────────────── v0.3.8
  Installed StaticArrays ───────────────── v0.12.4
  Installed Formatting ─────────────────── v0.4.1
  Installed LazyArrays ─────────────────── v0.16.16
  Installed ContinuumArrays ────────────── v0.2.4
  Installed MacroTools ─────────────────── v0.5.5
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed OffsetArrays ───────────────── v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [2c0377a8] + CompactBases v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4c555306] + ArrayLayouts v0.3.8
  [aae01518] + BandedMatrices v0.15.15
  [8e7c35d0] + BlockArrays v0.12.11
  [ffab5731] + BlockBandedMatrices v0.8.11
  [2c0377a8] + CompactBases v0.1.1
  [34da2185] + Compat v3.15.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [7ae1f121] + ContinuumArrays v0.2.4
  [da5c29d0] + EllipsisNotation v0.4.0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [1a297f60] + FillArrays v0.8.14
  [59287772] + Formatting v0.4.1
  [8197267c] + IntervalSets v0.5.1
  [5078a376] + LazyArrays v0.16.16
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.5.2
  [6fe1bfb0] + OffsetArrays v1.1.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [c4ea9172] + QuasiArrays v0.2.3
  [3cdcf5f2] + RecipesBase v1.0.2
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing CompactBases
Status `/tmp/jl_hC2258/Project.toml`
  [ec485272] ArnoldiMethod v0.0.4
  [aae01518] BandedMatrices v0.15.15
  [ffab5731] BlockBandedMatrices v0.8.11
  [2c0377a8] CompactBases v0.1.1
  [7ae1f121] ContinuumArrays v0.2.4
  [442a2c76] FastGaussQuadrature v0.4.2
  [1a297f60] FillArrays v0.8.14
  [59287772] Formatting v0.4.1
  [8197267c] IntervalSets v0.5.1
  [5078a376] LazyArrays v0.16.16
  [6fe1bfb0] OffsetArrays v1.1.3
  [08abe8d2] PrettyTables v0.9.1
  [92933f4c] ProgressMeter v1.3.2
  [c4ea9172] QuasiArrays v0.2.3
  [3cdcf5f2] RecipesBase v1.0.2
  [b0e4dd01] RollingFunctions v0.6.2
  [b8865327] UnicodePlots v1.2.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_hC2258/Manifest.toml`
  [ec485272] ArnoldiMethod v0.0.4
  [4c555306] ArrayLayouts v0.3.8
  [aae01518] BandedMatrices v0.15.15
  [8e7c35d0] BlockArrays v0.12.11
  [ffab5731] BlockBandedMatrices v0.8.11
  [2c0377a8] CompactBases v0.1.1
  [34da2185] Compat v3.15.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [7ae1f121] ContinuumArrays v0.2.4
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [da5c29d0] EllipsisNotation v0.4.0
  [442a2c76] FastGaussQuadrature v0.4.2
  [1a297f60] FillArrays v0.8.14
  [59287772] Formatting v0.4.1
  [8197267c] IntervalSets v0.5.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [5078a376] LazyArrays v0.16.16
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.5.2
  [e1d29d7a] Missings v0.4.4
  [6fe1bfb0] OffsetArrays v1.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [08abe8d2] PrettyTables v0.9.1
  [92933f4c] ProgressMeter v1.3.2
  [c4ea9172] QuasiArrays v0.2.3
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [b0e4dd01] RollingFunctions v0.6.2
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [3a884ed6] UnPack v1.0.2
  [b8865327] UnicodePlots v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: FiniteDifferences derivative accuracy
kind = FiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:113
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#35#40"{Float64, Float64, UnionAll}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#35#40"{Float64, Float64, UnionAll}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#35#40"{Float64, Float64, UnionAll}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#35#40"{Float64, Float64, UnionAll}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:116
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:113
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:108
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[ Info: ImplicitFiniteDifferences derivative accuracy
kind = ImplicitFiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:113
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#35#40"{Float64, Float64, UnionAll}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#35#40"{Float64, Float64, UnionAll}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#35#40"{Float64, Float64, UnionAll}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#35#40"{Float64, Float64, UnionAll}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:116
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:113
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:108
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[ Info: StaggeredFiniteDifferences derivative accuracy
kind = StaggeredFiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:130
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#36#41"{Float64}, var"#37#42"{var"#7#10"{Float64}, Float64}, var"#38#43"{var"#8#11"{Float64}, Float64}, var"#39#44"{var"#9#12"{Float64}, Float64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#36#41"{Float64}, var"#37#42"{var"#7#10"{Float64}, Float64}, var"#38#43"{var"#8#11"{Float64}, Float64}, var"#39#44"{var"#9#12"{Float64}, Float64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#36#41"{Float64}, var"#37#42"{var"#7#10"{Float64}, Float64}, var"#38#43"{var"#8#11"{Float64}, Float64}, var"#39#44"{var"#9#12"{Float64}, Float64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#36#41"{Float64}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:134
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:131
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:108
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [26] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[ Info: FiniteDifferences particle-in-a-box eigenvalues convergence rate
kind = FiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:150
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#45#46"{Float64, UnionAll}, typeof(test_particle_in_a_box), Tuple{Float64, Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:197
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#45#46"{Float64, UnionAll}, typeof(test_particle_in_a_box), Tuple{Float64, Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#45#46"{Float64, UnionAll}, typeof(test_particle_in_a_box), Tuple{Float64, Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_diagonalization_errors(::var"#45#46"{Float64, UnionAll}, ::Function, ::Vector{Int64}, ::Float64, ::Vararg{Any, N} where N; verbosity::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:193
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:153
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:150
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:147
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:146
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
[ Info: ImplicitFiniteDifferences particle-in-a-box eigenvalues convergence rate
kind = ImplicitFiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:150
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#45#46"{Float64, UnionAll}, typeof(test_particle_in_a_box), Tuple{Float64, Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:197
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#45#46"{Float64, UnionAll}, typeof(test_particle_in_a_box), Tuple{Float64, Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#45#46"{Float64, UnionAll}, typeof(test_particle_in_a_box), Tuple{Float64, Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_diagonalization_errors(::var"#45#46"{Float64, UnionAll}, ::Function, ::Vector{Int64}, ::Float64, ::Vararg{Any, N} where N; verbosity::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:193
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:153
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:150
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:147
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:146
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
[ Info: StaggeredFiniteDifferences hydrogen eigenvalues convergence rate
kind = StaggeredFiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:219
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#48#50"{Float64, Float64, UnionAll}, typeof(test_singular_scheme), Tuple{Int64, Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:197
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#48#50"{Float64, Float64, UnionAll}, typeof(test_singular_scheme), Tuple{Int64, Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#48#50"{Float64, Float64, UnionAll}, typeof(test_singular_scheme), Tuple{Int64, Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_diagonalization_errors(::var"#48#50"{Float64, Float64, UnionAll}, ::Function, ::Vector{Int64}, ::Int64, ::Vararg{Int64, N} where N; verbosity::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:193
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:222
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:219
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:213
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:167
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
[ Info: ImplicitFiniteDifferences hydrogen eigenvalues convergence rate
kind = ImplicitFiniteDifferences: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:219
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#48#50"{Float64, Float64, UnionAll}, typeof(test_singular_scheme), Tuple{Int64, Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:197
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#48#50"{Float64, Float64, UnionAll}, typeof(test_singular_scheme), Tuple{Int64, Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#25#28"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, var"#48#50"{Float64, Float64, UnionAll}, typeof(test_singular_scheme), Tuple{Int64, Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_diagonalization_errors(::var"#48#50"{Float64, Float64, UnionAll}, ::Function, ::Vector{Int64}, ::Int64, ::Vararg{Int64, N} where N; verbosity::Int64, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:193
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:222
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:219
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:213
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/derivatives.jl:167
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:26
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fd/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
  2.402691 seconds (1.75 M allocations: 92.392 MiB, 2.10% gc time)
┌ Warning: Need to implement/test basis inverses for restricted bases
└ @ Main ~/.julia/packages/CompactBases/9od7H/test/fedvr/scalar_operators.jl:56
┌ Warning: Need to implement/test basis inverses for restricted bases
└ @ Main ~/.julia/packages/CompactBases/9od7H/test/fedvr/scalar_operators.jl:56
[ Info: FE-DVR derivative accuracy
order = 2
extrema(Ns) = (32, 1000)
Derivative accuracy: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/fedvr/derivatives.jl:127
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#91#92"{Float64, Float64, Int64, Int64, Int64}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#91#92"{Float64, Float64, Int64, Int64, Int64}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#91#92"{Float64, Float64, Int64, Int64, Int64}, var"#7#10"{Float64}, var"#8#11"{Float64}, var"#9#12"{Float64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#91#92"{Float64, Float64, Int64, Int64, Int64}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] compute_fedvr_derivative_errors(a::Float64, b::Float64, Ns::Vector{Int64}, order::Int64, s::Int64, e::Int64, f::Function, g::Function, h::var"#9#12"{Float64}, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/fedvr/derivatives.jl:116
   [16] macro expansion
      @ ~/.julia/packages/CompactBases/9od7H/test/fedvr/derivatives.jl:146 [inlined]
   [17] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fedvr/derivatives.jl:128
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fedvr/runtests.jl:10
   [21] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/fedvr/runtests.jl:4
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:35
   [25] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] top-level scope
      @ none:6
   [29] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [30] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [31] _start()
      @ Base ./client.jl:485
[ Info: B-splines derivative accuracy
k = 3
k = 3: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#114#117"{Float64, Float64, Int64}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:159
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:154
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:18
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:5
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:36
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
k = 4
k = 4: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#114#117"{Float64, Float64, Int64}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:159
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:154
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:18
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:5
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:36
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
k = 5
k = 5: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#114#117"{Float64, Float64, Int64}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:159
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:154
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:18
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:5
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:36
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
k = 6
k = 6: Error During Test at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
    [3] updateProgress!(p::Progress; showvalues::Tuple{}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
    [4] updateProgress!(p::Progress)
      @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:201
    [5] #13
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:336 [inlined]
    [6] lock(f::ProgressMeter.var"#13#14"{Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Progress}, l::ReentrantLock)
      @ Base ./lock.jl:168
    [7] #next!#12
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [8] next!
      @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:334 [inlined]
    [9] (::var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress})(N::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:108
   [10] iterate
      @ ./generator.jl:47 [inlined]
   [11] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [12] collect_similar(cont::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var"#13#15"{var"#114#117"{Float64, Float64, Int64}, var"#7#10"{Int64}, var"#8#11"{Int64}, var"#9#12"{Int64}, Progress}})
      @ Base ./array.jl:628
   [13] map(f::Function, A::Vector{Int64})
      @ Base ./abstractarray.jl:2233
   [14] compute_derivative_errors(fun::var"#114#117"{Float64, Float64, Int64}, Ns::Vector{Int64}, f::Function, g::Function, h::Function, verbosity::Int64)
      @ Main ~/.julia/packages/CompactBases/9od7H/test/derivative_accuracy_utils.jl:105
   [15] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:159
   [16] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [17] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:157
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:154
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/derivatives.jl:18
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:5
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/bsplines/runtests.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:36
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/CompactBases/9od7H/test/runtests.jl:34
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
┌ Warning: Need to test inner products with restricted bases as well
└ @ Main ~/.julia/packages/CompactBases/9od7H/test/inner_products.jl:66
Test Summary:                             | Pass  Error  Broken  Total
CompactBases                              | 1681     12       3   1696
  Finite-differences                      |  284      7            291
    Basis functions                       |    9                     9
    Mass matrices and inverses            |    6                     6
    Scalar operators                      |   17                    17
    Inner products                        |   32                    32
    Function interpolation                |    3                     3
    Derivatives                           |  211                   211
    Derivative accuracy                   |           3              3
      kind = FiniteDifferences            |           1              1
      kind = ImplicitFiniteDifferences    |           1              1
      kind = StaggeredFiniteDifferences   |           1              1
    Particle-in-a-box                     |           2              2
      Eigenvalues convergence rate        |           2              2
        kind = FiniteDifferences          |           1              1
        kind = ImplicitFiniteDifferences  |           1              1
    Hydrogen bound states                 |    6      2              8
      Eigenvalues and eigenvectors        |    6                     6
      Eigenvalues convergence rate        |           2              2
        kind = StaggeredFiniteDifferences |           1              1
        kind = ImplicitFiniteDifferences  |           1              1
  FE-DVR                                  |  498      1       2    501
    Simple tests                          |   26                    26
    Pretty printing                       |    2                     2
    Element access                        |    4                     4
    Complex scaling                       |    6                     6
    Real locations                        |    1                     1
    Block structure                       |   73                    73
    Set blocks                            |   14                    14
    Set blocks 2                          |   46                    46
    Scalar operators                      |    2                     2
    Mass matrices and inverses            |   18                    18
    Inner products                        |    4                     4
    Function interpolation                |    9                     9
    Lazy derivatives                      |    6              2      8
    Materialize derivatives               |   12                    12
    Derivatives in restricted bases       |  275                   275
    Derivative accuracy                   |           1              1
  B-splines                               |  662      4       1    667
    Knot sets                             |  583                   583
    Quadrature                            |    4                     4
    Splines                               |   59              1     60
    Operators                             |    2                     2
    Derivatives                           |   14      4             18
      Derivative operators                |   12                    12
      Derivative accuracy                 |           4              4
        k = 3                             |           1              1
        k = 4                             |           1              1
        k = 5                             |           1              1
        k = 6                             |           1              1
      Hooke's law                         |    2                     2
  Interpolation                           |   16                    16
  Inner products                          |  100                   100
  Densities                               |   19                    19
  Linear operators                        |   48                    48
  Diagonal operators                      |   48                    48
  ShiftAndInvert                          |    6                     6
ERROR: LoadError: Some tests did not pass: 1681 passed, 0 failed, 12 errored, 3 broken.
in expression starting at /home/pkgeval/.julia/packages/CompactBases/9od7H/test/runtests.jl:33
ERROR: Package CompactBases errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
