Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_N77igZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_N77igZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.000980 seconds (1.47 M allocations: 78.004 MiB, 5.81% gc time)
Running: chebyshev_quadrature with k=1
  1.666009 seconds (2.20 M allocations: 125.610 MiB, 2.11% gc time)
Running: chebyshev_quadrature with k=2
  0.316188 seconds (414.71 k allocations: 23.651 MiB, 4.43% gc time)
Running: chebyshev_quadrature with k=3
  0.359744 seconds (529.17 k allocations: 28.848 MiB, 4.61% gc time)
Running: chebyshev_quadrature with k=4
  0.291618 seconds (472.94 k allocations: 25.450 MiB)
Running: jacobi_quadrature with α=β=1
 40.188619 seconds (37.89 M allocations: 3.063 GiB, 8.52% gc time)
Running: laguerre_quadrature with k=1
  3.614036 seconds (3.24 M allocations: 178.626 MiB, 1.41% gc time)
Running: legendre_quadrature
  0.453403 seconds (210.34 k allocations: 11.964 MiB, 8.56% gc time)
Running: lobatto_quadrature
  0.577198 seconds (341.23 k allocations: 20.416 MiB)
Running: radau_quadrature
  0.382851 seconds (323.86 k allocations: 19.448 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.787615 seconds (100.02 M allocations: 1.491 GiB, 0.57% gc time)
Running: rectangle_rule_midpoint.
  0.148991 seconds (173.33 k allocations: 3.851 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 76.247892 seconds (100.02 M allocations: 1.491 GiB, 0.56% gc time)
Running: rombergs_method
  0.574961 seconds (737.70 k allocations: 42.164 MiB, 5.91% gc time)
Running: simpsons_rule
  0.039339 seconds (46.72 k allocations: 2.070 MiB)
Running: simpsons38_rule
  0.104346 seconds (112.20 k allocations: 5.890 MiB)
Running: trapezoidal_rule
  0.313191 seconds (1.52 M allocations: 25.779 MiB, 6.67% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.105153 seconds (32.06 k allocations: 1.894 MiB)
Running: chebyshev_quadrature with k=1
  0.534632 seconds (280.33 k allocations: 14.541 MiB)
Running: chebyshev_quadrature with k=2
  0.168033 seconds (94.34 k allocations: 2.687 MiB)
Running: chebyshev_quadrature with k=3
  0.191230 seconds (82.59 k allocations: 2.488 MiB)
Running: chebyshev_quadrature with k=4
  0.183909 seconds (65.20 k allocations: 2.134 MiB)
Running: jacobi_quadrature with α=β=1
  2.645260 seconds (511.59 k allocations: 162.070 MiB, 2.25% gc time)
Running: legendre_quadrature
  0.159754 seconds (43.17 k allocations: 2.472 MiB)
Running: lobatto_quadrature
  0.022913 seconds (17.16 k allocations: 1.060 MiB)
Running: radau_quadrature
  0.022311 seconds (17.15 k allocations: 1.059 MiB)
Running: rectangle_rule_left
 31.073561 seconds (471.41 M allocations: 7.025 GiB, 6.08% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.980840 seconds (476.96 M allocations: 7.107 GiB, 6.15% gc time)
Running: rombergs_method
  0.368297 seconds (334.07 k allocations: 18.763 MiB)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064779 seconds (19.54 k allocations: 1.164 MiB)
Running: trapezoidal_rule
  0.038591 seconds (18.00 k allocations: 1.071 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030384 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.101719 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.102627 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.120994 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.122697 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.290490 seconds (367.69 k allocations: 19.076 MiB)
Running: legendre_quadrature
  0.067005 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000083 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000038 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000509 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000358 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000516 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.070862 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000034 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024921 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021717 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.061681 seconds (74.50 k allocations: 4.276 MiB)
Running: chebyshev_quadrature with k=1
  0.232414 seconds (233.55 k allocations: 13.035 MiB, 14.73% gc time)
Running: chebyshev_quadrature with k=2
  0.218575 seconds (286.86 k allocations: 15.943 MiB)
Running: chebyshev_quadrature with k=3
  0.210984 seconds (265.80 k allocations: 14.391 MiB)
Running: chebyshev_quadrature with k=4
  0.202858 seconds (265.82 k allocations: 14.279 MiB)
Running: jacobi_quadrature with α=β=1
  2.281363 seconds (452.73 k allocations: 163.308 MiB, 16.02% gc time)
Running: legendre_quadrature
  0.184109 seconds (188.35 k allocations: 10.776 MiB, 7.23% gc time)
Running: lobatto_quadrature
  0.154150 seconds (199.98 k allocations: 11.479 MiB)
Running: radau_quadrature
  0.145819 seconds (199.97 k allocations: 11.477 MiB)
Running: rectangle_rule_left
  0.981811 seconds (19.44 k allocations: 1.165 MiB)
Running: rectangle_rule_midpoint
  0.018088 seconds (25.54 k allocations: 1.579 MiB)
Running: rectangle_rule_right
  1.090568 seconds (17.99 k allocations: 1.080 MiB)
Running: rombergs_method
  0.116056 seconds (136.10 k allocations: 7.788 MiB)
Running: simpsons_rule
  0.034796 seconds (28.48 k allocations: 1.756 MiB)
Running: simpsons38_rule
  0.036908 seconds (43.87 k allocations: 2.720 MiB)
Running: trapezoidal_rule
  0.027677 seconds (44.88 k allocations: 1.794 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.056621 seconds (100.61 k allocations: 3.010 MiB, 25.80% gc time)
Running: chebyshev_quadrature with k=1
  0.182135 seconds (240.18 k allocations: 13.093 MiB)
Running: chebyshev_quadrature with k=2
  0.213911 seconds (293.93 k allocations: 15.939 MiB)
Running: chebyshev_quadrature with k=3
  0.225851 seconds (272.56 k allocations: 14.357 MiB, 7.50% gc time)
Running: chebyshev_quadrature with k=4
  0.204459 seconds (272.59 k allocations: 14.367 MiB)
Running: hermite_quadrature with k=2
 12.077223 seconds (21.15 M allocations: 1.092 GiB, 9.65% gc time)
Running: jacobi_quadrature with α=β=1
  0.387898 seconds (461.98 k allocations: 49.539 MiB, 7.40% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.197559 seconds (280.16 k allocations: 15.312 MiB, 15.78% gc time)
Running: legendre_quadrature
  0.145865 seconds (194.96 k allocations: 11.090 MiB)
Running: lobatto_quadrature
  0.223040 seconds (220.71 k allocations: 37.246 MiB, 11.89% gc time)
Running: radau_quadrature
  0.167236 seconds (217.28 k allocations: 29.909 MiB)
Running: rectangle_rule_left
  0.021878 seconds (22.46 k allocations: 1.314 MiB)
Running: rectangle_rule_midpoint
  0.030137 seconds (27.41 k allocations: 1.670 MiB)
Running: rectangle_rule_right
  0.017087 seconds (19.15 k allocations: 1.135 MiB)
Running: rombergs_method
  0.092972 seconds (138.59 k allocations: 7.823 MiB)
Running: simpsons_rule
  0.025788 seconds (40.45 k allocations: 2.091 MiB)
Running: simpsons38_rule
  0.058489 seconds (58.98 k allocations: 3.108 MiB, 28.95% gc time)
Running: trapezoidal_rule
  0.023842 seconds (31.05 k allocations: 1.724 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028391 seconds (60.92 k allocations: 2.308 MiB)
Running: chebyshev_quadrature with k=1
  0.155606 seconds (235.68 k allocations: 12.929 MiB)
Running: chebyshev_quadrature with k=2
  0.176163 seconds (289.11 k allocations: 15.703 MiB)
Running: chebyshev_quadrature with k=3
  0.170690 seconds (267.95 k allocations: 14.153 MiB, 18.01% gc time)
Running: chebyshev_quadrature with k=4
  0.157459 seconds (267.98 k allocations: 14.159 MiB)
Running: hermite_quadrature with k=2
  0.111809 seconds (173.29 k allocations: 9.828 MiB)
Running: jacobi_quadrature with α=β=1
  6.963288 seconds (455.20 k allocations: 1.175 GiB, 16.00% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.208871 seconds (275.41 k allocations: 15.133 MiB)
Running: legendre_quadrature
  0.175659 seconds (190.49 k allocations: 10.865 MiB, 8.85% gc time)
Running: lobatto_quadrature
  0.188455 seconds (211.43 k allocations: 22.979 MiB)
Running: radau_quadrature
  0.174469 seconds (210.58 k allocations: 20.912 MiB)
Running: rectangle_rule_left
  0.018120 seconds (20.18 k allocations: 1.207 MiB)
Running: rectangle_rule_midpoint
  0.025183 seconds (26.26 k allocations: 1.616 MiB)
Running: rectangle_rule_right
  0.026387 seconds (17.96 k allocations: 1.079 MiB)
Running: rombergs_method
  0.117819 seconds (134.35 k allocations: 7.641 MiB, 13.59% gc time)
Running: simpsons_rule
  0.070254 seconds (32.90 k allocations: 1.881 MiB)
Running: simpsons38_rule
  0.033378 seconds (49.71 k allocations: 2.866 MiB)
Running: trapezoidal_rule
  0.020383 seconds (25.88 k allocations: 1.558 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031027 seconds (31.88 k allocations: 1.903 MiB)
Running: chebyshev_quadrature with k=1
  0.144032 seconds (234.04 k allocations: 13.088 MiB)
Running: chebyshev_quadrature with k=2
  0.175997 seconds (287.38 k allocations: 16.041 MiB)
Running: chebyshev_quadrature with k=3
  0.201495 seconds (266.32 k allocations: 14.369 MiB)
Running: chebyshev_quadrature with k=4
  0.229553 seconds (266.34 k allocations: 14.210 MiB, 8.86% gc time)
Running: jacobi_quadrature with α=β=1
  2.001923 seconds (453.29 k allocations: 194.356 MiB, 7.25% gc time)
Running: legendre_quadrature
  0.142244 seconds (188.86 k allocations: 10.788 MiB)
Running: lobatto_quadrature
  0.154187 seconds (200.49 k allocations: 11.506 MiB)
Running: radau_quadrature
  0.157635 seconds (200.49 k allocations: 11.500 MiB)
Running: rectangle_rule_left
  0.311542 seconds (19.99 k allocations: 1.192 MiB, 5.90% gc time)
Running: rectangle_rule_midpoint
  0.023532 seconds (25.89 k allocations: 1.598 MiB)
Running: rectangle_rule_right
  0.098747 seconds (18.34 k allocations: 1.099 MiB)
Running: rombergs_method
  0.113942 seconds (147.24 k allocations: 8.516 MiB)
Running: simpsons_rule
  0.028155 seconds (29.19 k allocations: 1.786 MiB)
Running: simpsons38_rule
  0.035096 seconds (44.61 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.022394 seconds (45.84 k allocations: 1.828 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034241 seconds (32.60 k allocations: 1.854 MiB)
Running: chebyshev_quadrature with k=1
  0.189655 seconds (234.63 k allocations: 13.034 MiB)
Running: chebyshev_quadrature with k=2
  0.215673 seconds (288.01 k allocations: 15.968 MiB)
Running: chebyshev_quadrature with k=3
  0.240240 seconds (266.89 k allocations: 14.291 MiB, 9.06% gc time)
Running: chebyshev_quadrature with k=4
  0.223948 seconds (266.92 k allocations: 14.386 MiB)
Running: jacobi_quadrature with α=β=1
  1.752106 seconds (453.99 k allocations: 149.047 MiB, 3.95% gc time)
Running: legendre_quadrature
  0.179484 seconds (189.45 k allocations: 10.832 MiB)
Running: lobatto_quadrature
  0.203735 seconds (201.09 k allocations: 11.580 MiB, 10.15% gc time)
Running: radau_quadrature
  0.170444 seconds (201.08 k allocations: 11.522 MiB)
Running: rectangle_rule_left
  0.890333 seconds (20.23 k allocations: 1.204 MiB)
Running: rectangle_rule_midpoint
  0.017903 seconds (25.89 k allocations: 1.598 MiB)
Running: rectangle_rule_right
  0.832102 seconds (18.30 k allocations: 1.096 MiB)
Running: rombergs_method
  0.088457 seconds (137.34 k allocations: 7.839 MiB)
Running: simpsons_rule
  0.024569 seconds (29.89 k allocations: 1.812 MiB)
Running: simpsons38_rule
  0.024969 seconds (45.30 k allocations: 2.776 MiB)
Running: trapezoidal_rule
  0.020125 seconds (58.07 k allocations: 2.028 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.135359 seconds (150.00 k allocations: 8.833 MiB)
Running: chebyshev_quadrature with k=1
  0.129433 seconds (70.46 k allocations: 2.216 MiB)
Running: chebyshev_quadrature with k=2
  0.117916 seconds (105.62 k allocations: 2.879 MiB)
Running: chebyshev_quadrature with k=3
  0.116887 seconds (93.11 k allocations: 2.666 MiB)
Running: chebyshev_quadrature with k=4
  0.108727 seconds (72.64 k allocations: 2.263 MiB)
Running: jacobi_quadrature with α=β=1
  2.320690 seconds (485.39 k allocations: 167.894 MiB, 1.54% gc time)
Running: legendre_quadrature
  0.102609 seconds (19.26 k allocations: 1.103 MiB)
Running: lobatto_quadrature
  0.000087 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000039 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 37.357698 seconds (590.00 M allocations: 8.792 GiB, 4.55% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 37.250381 seconds (592.75 M allocations: 8.833 GiB, 4.55% gc time)
Running: rombergs_method
  0.134014 seconds (21.04 k allocations: 1.177 MiB)
Running: simpsons_rule
  0.000031 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029674 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024173 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.579335 seconds (629.33 M allocations: 9.387 GiB, 6.78% gc time)
Running: chebyshev_quadrature with k=1
  0.323580 seconds (426.43 k allocations: 23.355 MiB)
Running: chebyshev_quadrature with k=2
 11.098761 seconds (481.84 k allocations: 4.041 GiB, 3.67% gc time)
Running: chebyshev_quadrature with k=3
  5.449898 seconds (280.33 k allocations: 1.643 GiB, 5.18% gc time)
Running: chebyshev_quadrature with k=4
  6.712108 seconds (280.36 k allocations: 2.261 GiB, 2.87% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 44.140865 seconds (492.11 k allocations: 13.254 GiB, 3.90% gc time)
Running: legendre_quadrature.
  3.863495 seconds (227.76 k allocations: 1.976 GiB, 2.15% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.228472 seconds (8.24 M allocations: 13.384 GiB, 4.42% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.021019 seconds (7.24 M allocations: 13.369 GiB, 3.53% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.970195 seconds (22.97 k allocations: 1.368 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.399758 seconds (31.47 k allocations: 1.913 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.513236 seconds (23.18 k allocations: 1.378 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.816292 seconds (446.67 k allocations: 152.909 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.103073 seconds (600.04 M allocations: 8.943 GiB, 9.12% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.685105 seconds (600.05 M allocations: 8.943 GiB, 8.43% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.465572 seconds (600.03 M allocations: 8.943 GiB, 9.32% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065299 seconds (181.57 k allocations: 4.440 MiB)
Running: chebyshev_quadrature with k=1
  0.207291 seconds (250.60 k allocations: 13.537 MiB)
Running: chebyshev_quadrature with k=2
  0.225376 seconds (275.18 k allocations: 14.563 MiB)
Running: chebyshev_quadrature with k=3
  0.196305 seconds (250.66 k allocations: 12.850 MiB)
Running: chebyshev_quadrature with k=4
  0.215483 seconds (250.68 k allocations: 12.839 MiB)
Running: jacobi_quadrature with α=β=1
  0.415739 seconds (393.05 k allocations: 35.052 MiB)
Running: laguerre_quadrature with k=2
  0.207048 seconds (183.32 k allocations: 10.555 MiB)
Running: legendre_quadrature
  0.145666 seconds (147.60 k allocations: 8.086 MiB)
Running: lobatto_quadrature
  0.035201 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.032761 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.058693 seconds (19.44 k allocations: 1.138 MiB)
Running: rectangle_rule_midpoint
  0.050899 seconds (26.33 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.053528 seconds (18.04 k allocations: 1.065 MiB)
Running: rombergs_method
  0.265141 seconds (177.43 k allocations: 10.025 MiB)
Running: simpsons_rule
  0.001859 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.062115 seconds (80.35 k allocations: 3.426 MiB)
Running: trapezoidal_rule
  0.203632 seconds (2.39 M allocations: 37.713 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002134 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.122714 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.134909 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.145833 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.136274 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  9.356494 seconds (369.97 k allocations: 904.876 MiB, 4.21% gc time)
Running: legendre_quadrature
  0.072046 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000196 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000149 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.097528 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000502 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.110175 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065517 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000798 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000812 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.159413 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.210030 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.140243 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.125296 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.946320 seconds (376.53 k allocations: 252.987 MiB)
Running: legendre_quadrature
  0.071336 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000107 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000040 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.937539 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001069 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.876865 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.183132 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001736 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
