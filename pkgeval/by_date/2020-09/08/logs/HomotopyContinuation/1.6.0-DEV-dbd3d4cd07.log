Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed ProjectiveVectors ─────────── v1.1.2
  Installed StructArrays ──────────────── v0.4.4
  Installed MixedSubdivisions ─────────── v1.0.0
  Installed Tables ────────────────────── v1.0.5
  Installed OrderedCollections ────────── v1.3.0
  Installed HomotopyContinuation ──────── v2.0.5
  Installed Adapt ─────────────────────── v2.0.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Crayons ───────────────────── v4.0.4
  Installed VectorizationBase ─────────── v0.12.33
  Installed CpuId ─────────────────────── v0.2.2
  Installed UnPack ────────────────────── v1.0.2
  Installed Requires ──────────────────── v1.0.2
  Installed ProgressMeter ─────────────── v1.3.2
  Installed DataStructures ────────────── v0.17.20
  Installed MutableArithmetics ────────── v0.2.10
  Installed MPFR_jll ──────────────────── v4.0.2+2
  Installed ArrayInterface ────────────── v2.12.0
  Installed TreeViews ─────────────────── v0.3.0
  Installed DocStringExtensions ───────── v0.8.3
  Installed SymEngine_jll ─────────────── v0.6.0+1
  Installed GMP_jll ───────────────────── v6.2.0+1
  Installed FiniteDiff ────────────────── v2.6.0
  Installed DynamicPolynomials ────────── v0.3.13
  Installed DataAPI ───────────────────── v1.3.0
  Installed Parameters ────────────────── v0.12.1
  Installed LRUCache ──────────────────── v1.1.0
  Installed SLEEFPirates ──────────────── v0.5.5
  Installed TableTraits ───────────────── v1.0.0
  Installed Formatting ────────────────── v0.4.1
  Installed ElasticArrays ─────────────── v1.2.4
  Installed MultivariatePolynomials ───── v0.3.10
  Installed StaticArrays ──────────────── v0.12.4
  Installed MPC_jll ───────────────────── v1.1.0+0
  Installed PrettyTables ──────────────── v0.9.1
  Installed OffsetArrays ──────────────── v1.1.3
  Installed SIMDPirates ───────────────── v0.8.25
  Installed LoopVectorization ─────────── v0.8.26
Updating `~/.julia/environments/v1.6/Project.toml`
  [f213a82b] + HomotopyContinuation v2.0.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [79e6a3ab] + Adapt v2.0.2
  [4fba245c] + ArrayInterface v2.12.0
  [adafc99b] + CpuId v0.2.2
  [a8cc5b0e] + Crayons v4.0.4
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [ffbed154] + DocStringExtensions v0.8.3
  [7c1d4256] + DynamicPolynomials v0.3.13
  [fdbdab4c] + ElasticArrays v1.2.4
  [6a86dc24] + FiniteDiff v2.6.0
  [59287772] + Formatting v0.4.1
  [781609d7] + GMP_jll v6.2.0+1
  [f213a82b] + HomotopyContinuation v2.0.5
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [8ac3fa9e] + LRUCache v1.1.0
  [bdcacae8] + LoopVectorization v0.8.26
  [2ce0c516] + MPC_jll v1.1.0+0
  [3a97d323] + MPFR_jll v4.0.2+2
  [291d046c] + MixedSubdivisions v1.0.0
  [102ac46a] + MultivariatePolynomials v0.3.10
  [d8a4904e] + MutableArithmetics v0.2.10
  [6fe1bfb0] + OffsetArrays v1.1.3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [08abe8d2] + PrettyTables v0.9.1
  [92933f4c] + ProgressMeter v1.3.2
  [01f381cc] + ProjectiveVectors v1.1.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.2
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [90137ffa] + StaticArrays v0.12.4
  [09ab397b] + StructArrays v0.4.4
  [3428059b] + SymEngine_jll v0.6.0+1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing HomotopyContinuation
Status `/tmp/jl_QGmheh/Project.toml`
  [fdbdab4c] ElasticArrays v1.2.4
  [f213a82b] HomotopyContinuation v2.0.5
  [291d046c] MixedSubdivisions v1.0.0
  [d96e819e] Parameters v0.12.1
  [01f381cc] ProjectiveVectors v1.1.2
  [90137ffa] StaticArrays v0.12.4
  [a2a6695c] TreeViews v0.3.0
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_QGmheh/Manifest.toml`
  [79e6a3ab] Adapt v2.0.2
  [4fba245c] ArrayInterface v2.12.0
  [adafc99b] CpuId v0.2.2
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.3
  [7c1d4256] DynamicPolynomials v0.3.13
  [fdbdab4c] ElasticArrays v1.2.4
  [6a86dc24] FiniteDiff v2.6.0
  [59287772] Formatting v0.4.1
  [781609d7] GMP_jll v6.2.0+1
  [f213a82b] HomotopyContinuation v2.0.5
  [82899510] IteratorInterfaceExtensions v1.0.0
  [8ac3fa9e] LRUCache v1.1.0
  [bdcacae8] LoopVectorization v0.8.26
  [2ce0c516] MPC_jll v1.1.0+0
  [3a97d323] MPFR_jll v4.0.2+2
  [291d046c] MixedSubdivisions v1.0.0
  [102ac46a] MultivariatePolynomials v0.3.10
  [d8a4904e] MutableArithmetics v0.2.10
  [6fe1bfb0] OffsetArrays v1.1.3
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [08abe8d2] PrettyTables v0.9.1
  [92933f4c] ProgressMeter v1.3.2
  [01f381cc] ProjectiveVectors v1.1.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [90137ffa] StaticArrays v0.12.4
  [09ab397b] StructArrays v0.4.4
  [3428059b] SymEngine_jll v0.6.0+1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Computing mixed cells... 1 	 Time: 0:00:01[K
  mixed_volume:  5[K[AComputing mixed cells... 12 	 Time: 0:00:02[K
  mixed_volume:  70
path info: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/tracker_test.jl:77
  Test threw exception
  Expression: !(isempty(sprint(show, info)))
  MethodError: no method matching parse(::String)
  Closest candidates are:
    parse(!Matched::Type{T}, !Matched::AbstractChar; base) where T<:Integer at parse.jl:40
    parse(!Matched::Type{T}, !Matched::AbstractString) where T<:Dates.TimeType at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Dates/src/parse.jl:280
    parse(!Matched::Type{T}, !Matched::AbstractString; base) where T<:Integer at parse.jl:240
    ...
  Stacktrace:
    [1] checkfmt(fmt::String)
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:6
    [2] generate_formatter(fmt::String)
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:17
    [3] sprintf1(fmt::String, x::Float64)
      @ Formatting ~/.julia/packages/Formatting/LU9hd/src/cformat.jl:3
    [4] (::PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}})(v::Float64, i::Int64, j::Int64)
      @ PrettyTables ~/.julia/packages/PrettyTables/HhRII/src/predefined_formatters.jl:53
    [5] _pt_text(io::IOBuffer, pinfo::PrettyTables.PrintInfo{Matrix{Any}, Vector{String}, Nothing, Tuple{}, Tuple{PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}}, PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}}, PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}}}}; border_crayon::Crayons.Crayon, header_crayon::Crayons.Crayon, subheader_crayon::Crayons.Crayon, rownum_header_crayon::Crayons.Crayon, text_crayon::Crayons.Crayon, autowrap::Bool, body_hlines::Vector{Int64}, body_hlines_format::Nothing, crop::Symbol, columns_width::Int64, highlighters::NTuple{4, PrettyTables.Highlighter}, hlines::Nothing, linebreaks::Bool, overwrite::Bool, noheader::Bool, nosubheader::Bool, row_name_crayon::Crayons.Crayon, row_name_header_crayon::Crayons.Crayon, same_column_size::Bool, screen_size::Nothing, show_row_number::Bool, sortkeys::Bool, tf::PrettyTables.TextFormat, vlines::Nothing, formatter::Nothing)
      @ PrettyTables ~/.julia/packages/PrettyTables/HhRII/src/backends/text/print.jl:250
    [6] _pretty_table(io::IOBuffer, data::Matrix{Any}, header::Vector{String}; alignment::Symbol, backend::Nothing, cell_alignment::Nothing, filters_row::Nothing, filters_col::Nothing, formatters::Tuple{PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}}, PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}}, PrettyTables.var"#56#58"{Vector{String}, Vector{Int64}}}, row_names::Nothing, row_name_alignment::Symbol, row_name_column_title::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:crop, :highlighters), Tuple{Symbol, NTuple{4, PrettyTables.Highlighter}}}})
      @ PrettyTables ~/.julia/packages/PrettyTables/HhRII/src/print.jl:895
    [7] #_pretty_table_VecOrMat#81
      @ ~/.julia/packages/PrettyTables/HhRII/src/print.jl:669 [inlined]
    [8] #pretty_table#76
      @ ~/.julia/packages/PrettyTables/HhRII/src/print.jl:573 [inlined]
    [9] path_table(io::IOBuffer, info::HomotopyContinuation.PathInfo)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/path_info.jl:126
   [10] show(io::IOBuffer, info::HomotopyContinuation.PathInfo)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/path_info.jl:151
   [11] sprint(f::Function, args::HomotopyContinuation.PathInfo; context::Nothing, sizehint::Int64)
      @ Base ./strings/io.jl:105
   [12] sprint(f::Function, args::HomotopyContinuation.PathInfo)
      @ Base ./strings/io.jl:101
   [13] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/tracker_test.jl:77 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/tracker_test.jl:73 [inlined]
   [16] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/tracker_test.jl:2
affine + torus solutions: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:8
  Test threw exception
  Expression: count(is_success, track.(tracker, starts)) == 6
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, CoefficientHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [20] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [21] getindex
      @ ./broadcast.jl:575 [inlined]
   [22] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [23] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [24] copyto!
      @ ./broadcast.jl:931 [inlined]
   [25] copyto!
      @ ./broadcast.jl:886 [inlined]
   [26] copy
      @ ./broadcast.jl:862 [inlined]
   [27] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, CoefficientHomotopy{CompiledSystem{(0xef03e4a47a4a41c2, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [28] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:8
   [29] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:3
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:2
affine + torus solutions: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:12
  Test threw exception
  Expression: count(is_success, track.(tracker, starts)) == 3
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, CoefficientHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [20] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [21] getindex
      @ ./broadcast.jl:575 [inlined]
   [22] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [23] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [24] copyto!
      @ ./broadcast.jl:931 [inlined]
   [25] copyto!
      @ ./broadcast.jl:886 [inlined]
   [26] copy
      @ ./broadcast.jl:862 [inlined]
   [27] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, CoefficientHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [28] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:12
   [29] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:3
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:2
affine + torus solutions: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:20
  Test threw exception
  Expression: count(is_success, track.(tracker, starts)) == 3
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate_and_jacobian!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:208 [inlined]
    [7] newton!(x̄::Vector{ComplexF64}, NC::HomotopyContinuation.NewtonCorrector, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, x₀::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}; μ::Float64, ω::Float64, extended_precision::Bool, accurate_μ::Bool, first_correction::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/newton_corrector.jl:99
    [8] step!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, HomotopyContinuation.AD{3}, Matrix{ComplexF64}}, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:806
    [9] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:906 [inlined]
   [10] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, CoefficientHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, HomotopyContinuation.AD{3}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
   [11] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [12] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [13] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [14] getindex
      @ ./broadcast.jl:575 [inlined]
   [15] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [16] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [17] copyto!
      @ ./broadcast.jl:931 [inlined]
   [18] copyto!
      @ ./broadcast.jl:886 [inlined]
   [19] copy
      @ ./broadcast.jl:862 [inlined]
   [20] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, CoefficientHomotopy{CompiledSystem{(0xd35f10e8386a64b2, 1)}}, HomotopyContinuation.AD{3}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [21] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:20
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:3
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:2
cyclic: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:23
  Got exception outside of a @test
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, CoefficientHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [20] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [21] getindex
      @ ./broadcast.jl:575 [inlined]
   [22] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [23] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [24] copyto!
      @ ./broadcast.jl:931 [inlined]
   [25] copyto!
      @ ./broadcast.jl:886 [inlined]
   [26] copy
      @ ./broadcast.jl:862 [inlined]
   [27] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, CoefficientHomotopy{CompiledSystem{(0x55182cd2d9ae1377, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [28] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:25
   [29] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:24
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/polyhedral_test.jl:2
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:35
   [35] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [36] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [37] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [38] top-level scope
      @ none:6
   [39] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [40] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [41] _start()
      @ Base ./client.jl:485
total degree (variable groups): Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:69
  Test threw exception
  Expression: nsolutions(solve(affine_sqr, start_system = :total_degree)) == 2
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x8b5d2f36a9ce7a28, 1)}, Float64}, CompiledSystem{(0x00a2b2e8b88c71b9, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x8b5d2f36a9ce7a28, 1)}, Float64}, CompiledSystem{(0x00a2b2e8b88c71b9, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:start_system,), Tuple{Symbol}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:69
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:64
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x8b5d2f36a9ce7a28, 1)}, Float64}, CompiledSystem{(0x00a2b2e8b88c71b9, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x8b5d2f36a9ce7a28, 1)}, Float64}, CompiledSystem{(0x00a2b2e8b88c71b9, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
polyhedral: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:100
  Test threw exception
  Expression: count(is_success, track.(polyhedral(affine_sqr; compile = false)...)) == 2
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [20] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [21] getindex
      @ ./broadcast.jl:575 [inlined]
   [22] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [23] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [24] copyto!
      @ ./broadcast.jl:931 [inlined]
   [25] copyto!
      @ ./broadcast.jl:886 [inlined]
   [26] copy
      @ ./broadcast.jl:862 [inlined]
   [27] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [28] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:100
   [29] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:95
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
polyhedral: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:107
  Test threw exception
  Expression: count(is_success, track.(polyhedral(proj_square; compile = false)...)) == 4
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [20] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [21] getindex
      @ ./broadcast.jl:575 [inlined]
   [22] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [23] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [24] copyto!
      @ ./broadcast.jl:931 [inlined]
   [25] copyto!
      @ ./broadcast.jl:886 [inlined]
   [26] copy
      @ ./broadcast.jl:862 [inlined]
   [27] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [28] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:107
   [29] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:95
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
polyhedral: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:115
  Test threw exception
  Expression: count(is_success, track.(polyhedral(affine_ov; compile = false)...)) == 2
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] #track#233
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/overdetermined.jl:81 [inlined]
   [20] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/overdetermined.jl:81 [inlined]
   [21] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [22] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [23] getindex
      @ ./broadcast.jl:575 [inlined]
   [24] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [25] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [26] copyto!
      @ ./broadcast.jl:931 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{OverdeterminedTracker{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, HomotopyContinuation.ExcessSolutionCheck{RandomizedSystem{InterpretedSystem{Float64}}, HomotopyContinuation.MatrixWorkspace{Matrix{ComplexF64}}}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:115
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:95
   [33] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
polyhedral: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:123
  Test threw exception
  Expression: count(is_success, track.(polyhedral(proj_ov; compile = false)...)) == 2
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] #track#233
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/overdetermined.jl:81 [inlined]
   [20] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/overdetermined.jl:81 [inlined]
   [21] _broadcast_getindex_evalf
      @ ./broadcast.jl:648 [inlined]
   [22] _broadcast_getindex
      @ ./broadcast.jl:621 [inlined]
   [23] getindex
      @ ./broadcast.jl:575 [inlined]
   [24] macro expansion
      @ ./broadcast.jl:932 [inlined]
   [25] macro expansion
      @ ./simdloop.jl:77 [inlined]
   [26] copyto!
      @ ./broadcast.jl:931 [inlined]
   [27] copyto!
      @ ./broadcast.jl:886 [inlined]
   [28] copy
      @ ./broadcast.jl:862 [inlined]
   [29] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(track), Tuple{Base.RefValue{OverdeterminedTracker{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, HomotopyContinuation.ExcessSolutionCheck{RandomizedSystem{AffineChartSystem{InterpretedSystem{Float64}, 1}}, HomotopyContinuation.MatrixWorkspace{Matrix{ComplexF64}}}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}}})
      @ Base.Broadcast ./broadcast.jl:837
   [30] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:123
   [31] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:95
   [33] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
Result: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:147
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, CoefficientHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, CoefficientHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Vector{Float64}, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:157
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:148
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, CoefficientHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, CoefficientHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, CoefficientHomotopy{CompiledSystem{(0xeefd58bbf58ff6ad, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
composition: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:197
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, CompositionSystem{CompiledSystem{(0xcc2b508e116b7243, 1)}, CompositionSystem{CompiledSystem{(0xa00bca465c150250, 1)}, CompiledSystem{(0x57fa9a06a02eda7a, 1)}}}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, CompositionSystem{CompiledSystem{(0xcc2b508e116b7243, 1)}, CompositionSystem{CompiledSystem{(0xa00bca465c150250, 1)}, CompiledSystem{(0x57fa9a06a02eda7a, 1)}}}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, CompositionSystem{CompiledSystem{(0xcc2b508e116b7243, 1)}, CompositionSystem{CompiledSystem{(0xa00bca465c150250, 1)}, CompiledSystem{(0x57fa9a06a02eda7a, 1)}}}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::HomotopyContinuation.TotalDegreeStartSolutionsIterator{Base.Iterators.ProductIterator{Tuple{UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:stop_early_cb, :show_progress, :threading, :catch_interrupt), Tuple{typeof(HomotopyContinuation.always_false), Bool, Bool, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499
    [5] solve(args::CompositionSystem{CompiledSystem{(0xcc2b508e116b7243, 1)}, CompositionSystem{CompiledSystem{(0xa00bca465c150250, 1)}, CompiledSystem{(0x57fa9a06a02eda7a, 1)}}}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:start_system, :compile), Tuple{Symbol, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:203
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:198
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, CompositionSystem{CompiledSystem{(0xcc2b508e116b7243, 1)}, CompositionSystem{CompiledSystem{(0xa00bca465c150250, 1)}, CompiledSystem{(0x57fa9a06a02eda7a, 1)}}}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, CompositionSystem{CompiledSystem{(0xcc2b508e116b7243, 1)}, CompositionSystem{CompiledSystem{(0xa00bca465c150250, 1)}, CompiledSystem{(0x57fa9a06a02eda7a, 1)}}}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
solve (parameter homotopy): Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:228
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{AffineChartHomotopy{ParameterHomotopy{CompiledSystem{(0xfe1d24ac36cde5f4, 1)}}, 2}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{AffineChartHomotopy{ParameterHomotopy{CompiledSystem{(0xfe1d24ac36cde5f4, 1)}}, 2}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] solve(::System, ::Vararg{Any, N} where N; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Vector{Int64}, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Vector{Int64}, Tuple{Symbol}, NamedTuple{(:start_parameters,), Tuple{Vector{Int64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [5] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:296
    [6] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:230
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ none:6
   [16] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [17] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [18] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{AffineChartHomotopy{ParameterHomotopy{CompiledSystem{(0xfe1d24ac36cde5f4, 1)}}, 2}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{AffineChartHomotopy{ParameterHomotopy{CompiledSystem{(0xfe1d24ac36cde5f4, 1)}}, 2}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
solve (affine sliced): Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:331
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:target_subspace, :compile), Tuple{LinearSubspace{ComplexF64}, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:341
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:332
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{InterpretedSystem{Float64}}, CoefficientHomotopy{InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
solve (DynamicPolynomials): Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:385
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::Vector{DynamicPolynomials.Polynomial{true, Float64}}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] solve(args::Vector{DynamicPolynomials.Polynomial{true, Float64}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:444
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:390
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:386
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ none:6
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [19] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [20] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
solve (threading): Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:430
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, CoefficientHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::Nothing, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, CoefficientHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:431
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:431
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, CoefficientHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, CoefficientHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, CoefficientHomotopy{CompiledSystem{(0xa2772e472e053741, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, Nothing, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Many parameters solver: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:484
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::Vector{Expression}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] solve(args::Vector{Expression})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:444
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:495
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:486
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/solve_test.jl:3
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:36
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ none:6
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [19] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [20] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Hyperbolic - 6,6: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:7
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x9d61763584e95622, 1)}, Float64}, CompiledSystem{(0x69663696a0e8744a, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x9d61763584e95622, 1)}, Float64}, CompiledSystem{(0x69663696a0e8744a, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x9d61763584e95622, 1)}, Float64}, CompiledSystem{(0x69663696a0e8744a, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::HomotopyContinuation.TotalDegreeStartSolutionsIterator{Base.Iterators.ProductIterator{Tuple{UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:stop_early_cb, :show_progress, :threading, :catch_interrupt), Tuple{typeof(HomotopyContinuation.always_false), Bool, Bool, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:start_system,), Tuple{Symbol}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:17
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:9
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:2
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:37
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x9d61763584e95622, 1)}, Float64}, CompiledSystem{(0x69663696a0e8744a, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x9d61763584e95622, 1)}, Float64}, CompiledSystem{(0x69663696a0e8744a, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Singular 1: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:24
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x2362794f2bf2f370, 1)}, Float64}, CompiledSystem{(0xcff32a49dee591b4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x2362794f2bf2f370, 1)}, Float64}, CompiledSystem{(0xcff32a49dee591b4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x2362794f2bf2f370, 1)}, Float64}, CompiledSystem{(0xcff32a49dee591b4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::HomotopyContinuation.TotalDegreeStartSolutionsIterator{Base.Iterators.ProductIterator{Tuple{UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:stop_early_cb, :show_progress, :threading, :catch_interrupt), Tuple{typeof(HomotopyContinuation.always_false), Bool, Bool, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:start_system,), Tuple{Symbol}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:33
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:26
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:2
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:37
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x2362794f2bf2f370, 1)}, Float64}, CompiledSystem{(0xcff32a49dee591b4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x2362794f2bf2f370, 1)}, Float64}, CompiledSystem{(0xcff32a49dee591b4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Bacillus Subtilis: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:72
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, CoefficientHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, CoefficientHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] solve(args::System)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:444
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:73
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:73
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:2
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:37
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ none:6
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [19] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [20] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, CoefficientHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, CoefficientHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, CoefficientHomotopy{CompiledSystem{(0xdf15399037cdeb6e, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
 12.445256 seconds (6.20 M allocations: 331.792 MiB, 2.45% gc time)
Mohab: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:77
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x90e6fd0f017891fb, 1)}, Float64}, CompiledSystem{(0x4db5902f58e0768b, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x90e6fd0f017891fb, 1)}, Float64}, CompiledSystem{(0x4db5902f58e0768b, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:γ, :start_system), Tuple{ComplexF64, Symbol}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ timing.jl:174
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:102
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:79
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:2
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:37
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ none:6
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [19] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [20] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x90e6fd0f017891fb, 1)}, Float64}, CompiledSystem{(0x4db5902f58e0768b, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0x90e6fd0f017891fb, 1)}, Float64}, CompiledSystem{(0x4db5902f58e0768b, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Computing mixed cells... 332 	 Time: 0:00:00[K
  mixed_volume:  5908[K[AComputing mixed cells... 247 	 Time: 0:00:00[K
  mixed_volume:  6725
Ill-conditioned solution - look's almost diverging: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:110
  Got exception outside of a @test
  Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [3] _avx_!
      @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
    [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
    [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, t::ComplexF64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
    [6] evaluate!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
    [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
    [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
    [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
   [10] macro expansion
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
   [11] taylor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
   [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
   [13] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
   [14] update_predictor!
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
   [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
   [16] #track!#121
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
   [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, CoefficientHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Nothing, debug::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
   [18] track
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:348 [inlined]
   [19] #track#280
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:524 [inlined]
   [20] track(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, CoefficientHomotopy{CompiledSystem{(0xe2f90975298f0725, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, s::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:524
   [21] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:119
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:111
   [24] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/endgame_test.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:37
   [28] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [29] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
Solutions found: 2 	 Time: 0:00:00[K
  tracked loops (queued):            1 (1)
  solutions in current (last) loop:  1 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions found: 21 	 Time: 0:00:00[K
  tracked loops (queued):            41 (0)
  solutions in current (last) loop:  9 (11)
  generated loops (no change):       2 (0)
Solutions found: 1 	 Time: 0:00:00[K
  tracked loops (queued):            1 (0)
  solutions in current (last) loop:  0 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions found: 1 	 Time: 0:00:00[K
  tracked loops (queued):            5 (0)
  solutions in current (last) loop:  0 (0)
  generated loops (no change):       5 (5)
Solutions found: 2 	 Time: 0:00:00[K
  tracked loops (queued):            1 (1)
  solutions in current (last) loop:  1 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions found: 21 	 Time: 0:00:00[K
  tracked loops (queued):            126 (0)
  solutions in current (last) loop:  3 (9)
  generated loops (no change):       6 (0)
Solutions (modulo group action) found: 2 	 Time: 0:00:00[K
  tracked loops (queued):            1 (1)
  solutions in current (last) loop:  1 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions (modulo group action) found: 7 	 Time: 0:00:00[K
  tracked loops (queued):            56 (0)
  solutions in current (last) loop:  1 (0)
  generated loops (no change):       8 (0)
Solutions (modulo group action) found: 2 	 Time: 0:00:00[K
  tracked loops (queued):            1 (1)
  solutions in current (last) loop:  1 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions (modulo group action) found: 7 	 Time: 0:00:00[K
  tracked loops (queued):            28 (0)
  solutions in current (last) loop:  3 (0)
  generated loops (no change):       4 (0)
Solutions found: 1 	 Time: 0:00:00[K
  tracked loops (queued):            1 (0)
  solutions in current (last) loop:  0 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions found: 2 	 Time: 0:00:00[K
  tracked loops (queued):            44 (0)
  solutions in current (last) loop:  0 (0)
  generated loops (no change):       22 (20)
permutations: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/monodromy_test.jl:219
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0xd38e386ba36c13a1, 1)}, Float64}, FixedParameterSystem{CompiledSystem{(0x6621bd51f2364170, 1)}, Int64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0xd38e386ba36c13a1, 1)}, Float64}, FixedParameterSystem{CompiledSystem{(0x6621bd51f2364170, 1)}, Int64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0xd38e386ba36c13a1, 1)}, Float64}, FixedParameterSystem{CompiledSystem{(0x6621bd51f2364170, 1)}, Int64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::HomotopyContinuation.TotalDegreeStartSolutionsIterator{Base.Iterators.ProductIterator{Tuple{UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:stop_early_cb, :show_progress, :threading, :catch_interrupt), Tuple{typeof(HomotopyContinuation.always_false), Bool, Bool, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Vector{Int64}, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:start_system,), Tuple{Symbol}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/monodromy_test.jl:242
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/monodromy_test.jl:220
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/monodromy_test.jl:2
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:38
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0xd38e386ba36c13a1, 1)}, Float64}, FixedParameterSystem{CompiledSystem{(0x6621bd51f2364170, 1)}, Int64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{CompiledSystem{(0xd38e386ba36c13a1, 1)}, Float64}, FixedParameterSystem{CompiledSystem{(0x6621bd51f2364170, 1)}, Int64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Solutions found: 2 	 Time: 0:00:00[K
  tracked loops (queued):            1 (1)
  solutions in current (last) loop:  1 (0)
  generated loops (no change):       1 (0)[K[A[K[A[K[ASolutions found: 6 	 Time: 0:00:00[K
  tracked loops (queued):            6 (0)
  solutions in current (last) loop:  0 (5)
  generated loops (no change):       1 (0)
Solutions found: 8 	 Time: 0:00:00[K
  tracked loops (queued):            10 (5)
  solutions in current (last) loop:  7 (0)
  generated loops (no change):       2 (0)[K[A[K[A[K[ASolutions found: 45 	 Time: 0:00:00[K
  tracked loops (queued):            59 (30)
  solutions in current (last) loop:  44 (0)
  generated loops (no change):       2 (0)[K[A[K[A[K[ASolutions found: 65 	 Time: 0:00:00[K
  tracked loops (queued):            113 (16)
  solutions in current (last) loop:  64 (0)
  generated loops (no change):       2 (0)[K[A[K[A[K[ASolutions found: 71 	 Time: 0:00:01[K
  tracked loops (queued):            172 (40)
  solutions in current (last) loop:  0 (70)
  generated loops (no change):       3 (0)[K[A[K[A[K[ASolutions found: 72 	 Time: 0:00:01[K
  tracked loops (queued):            216 (0)
  solutions in current (last) loop:  0 (1)
  generated loops (no change):       3 (0)
affine: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::CompiledSystem{(0x17412c68c0b7eec9, 1)}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::CompiledSystem{(0x17412c68c0b7eec9, 1)}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::CompiledSystem{(0x17412c68c0b7eec9, 1)}; target_parameters::Nothing, dim::Nothing, codim::Nothing, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(F::CompiledSystem{(0x17412c68c0b7eec9, 1)})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:122
    [9] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
   [10] witness_set(::System)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:8
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:4
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:39
   [18] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ none:6
   [22] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [23] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [24] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, CoefficientHomotopy{CompiledSystem{(0x2ca90c6733d3ffa6, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
projective: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:26
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, CoefficientHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, CoefficientHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{Float64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{Float64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{Float64}; target_parameters::Nothing, dim::Nothing, codim::Nothing, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(F::InterpretedSystem{Float64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:122
    [9] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:31
   [11] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:27
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:39
   [17] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] top-level scope
      @ none:6
   [21] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [22] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [23] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, CoefficientHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:371
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, CoefficientHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, CoefficientHomotopy{CompiledSystem{(0xce930eeb570af9f4, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
dim / codim: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:69
  Test threw exception
  Expression: degree(witness_set(f; dim = 1, compile = false)) == 16
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{ComplexF64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{ComplexF64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{ComplexF64}; target_parameters::Nothing, dim::Int64, codim::Nothing, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dim,), Tuple{Int64}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:69
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:57
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
dim / codim: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:70
  Test threw exception
  Expression: degree(witness_set(f; codim = 4, compile = false)) == 16
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{ComplexF64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{ComplexF64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{ComplexF64}; target_parameters::Nothing, dim::Nothing, codim::Int64, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:codim,), Tuple{Int64}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:70
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:57
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
dim / codim: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:71
  Test threw exception
  Expression: degree(witness_set(f; compile = false)) == 16
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{ComplexF64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{ComplexF64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{ComplexF64}; target_parameters::Nothing, dim::Nothing, codim::Nothing, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(F::InterpretedSystem{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:122
    [9] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:71
   [11] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:57
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, CoefficientHomotopy{CompiledSystem{(0x3ae3d0a8d9dd7732, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
dim / codim: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:82
  Test threw exception
  Expression: degree(witness_set(f; dim = 2, compile = false)) == 16
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{ComplexF64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{ComplexF64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{ComplexF64}; target_parameters::Nothing, dim::Int64, codim::Nothing, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dim,), Tuple{Int64}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:82
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:57
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
dim / codim: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:83
  Test threw exception
  Expression: degree(witness_set(f; codim = 4, compile = false)) == 16
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{ComplexF64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{ComplexF64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{ComplexF64}; target_parameters::Nothing, dim::Nothing, codim::Int64, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:codim,), Tuple{Int64}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:83
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:57
   [12] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
dim / codim: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:84
  Test threw exception
  Expression: degree(witness_set(f; compile = false)) == 16
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::InterpretedSystem{ComplexF64}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, LinearSubspace{ComplexF64}, Tuple{Symbol}, NamedTuple{(:target_subspace,), Tuple{LinearSubspace{ComplexF64}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] witness_set(F::InterpretedSystem{ComplexF64}, L::LinearSubspace{ComplexF64}; projective::Bool, options::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:target_parameters,), Tuple{Nothing}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:140
    [7] witness_set(F::InterpretedSystem{ComplexF64}; target_parameters::Nothing, dim::Nothing, codim::Nothing, options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:130
    [8] witness_set(F::InterpretedSystem{ComplexF64})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:122
    [9] witness_set(::System; compile::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/witness_set.jl:113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:84
   [11] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:57
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/witness_set_test.jl:3
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, CoefficientHomotopy{CompiledSystem{(0xc4d35afa565316ee, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Simple 1: Input = Vector{Expression}: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:2
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::Vector{Expression}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] solve(args::Vector{Expression})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:444
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:8
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:3
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:2
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:40
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ none:6
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [19] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [20] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Simple 2: Input = Vector{MP.Polynomial}: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:40
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::Vector{DynamicPolynomials.Polynomial{true, Float64}}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] solve(args::Vector{DynamicPolynomials.Polynomial{true, Float64}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:444
    [7] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:46
    [8] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:41
   [10] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:2
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:40
   [14] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [16] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [17] top-level scope
      @ none:6
   [18] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [19] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [20] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, CoefficientHomotopy{CompiledSystem{(0x59706c3d06ba8800, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Parameters: Input = Vector{Expression}: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:76
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::Vector{Expression}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Vector{Float64}, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Vector{Variable}, Tuple{Symbol}, NamedTuple{(:parameters,), Tuple{Vector{Variable}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:86
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:77
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:2
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:40
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Parameters: Input = Vector{MP.Polynomial}: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:108
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] #solve#277
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499 [inlined]
    [5] solve(args::Vector{DynamicPolynomials.Polynomial{true, Int64}}; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Vector{Float64}, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Vector{DynamicPolynomials.PolyVar{true}}, Tuple{Symbol}, NamedTuple{(:parameters,), Tuple{Vector{DynamicPolynomials.PolyVar{true}}}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:118
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:109
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:2
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:40
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: Module IR does not contain specified entry function
      Stacktrace:
        [1] assume
          @ ~/.julia/packages/SIMDPirates/EVSvY/src/llvm_utils.jl:308 [inlined]
        [2] macro expansion
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [3] _avx_!
          @ ~/.julia/packages/LoopVectorization/pHMnJ/src/reconstruct_loopset.jl:503 [inlined]
        [4] evaluate_weights!(u::Vector{Float64}, weights::Vector{Float64}, t::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:114
        [5] coeffs!(H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, t::ComplexF64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:164
        [6] evaluate!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/homotopies/toric_homotopy.jl:204 [inlined]
        [7] g!(u::Vector{ComplexF64}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, tx::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64, xtemp::Vector{ComplexF64})
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:167
        [8] finite_diff!(u::Vector{ComplexF64}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64, h::Float64; order::Int64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:188
        [9] finite_diff_taylor!(u::Vector{ComplexF64}, ::Val{2}, predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, x::TaylorVector{2, ComplexF64}, t::ComplexF64; prev_λ::Float64)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:244
       [10] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:267 [inlined]
       [11] taylor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:252 [inlined]
       [12] update!(predictor::HomotopyContinuation.Predictor{HomotopyContinuation.AD{1}}, H::HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, x::Vector{ComplexF64}, t::ComplexF64, J::HomotopyContinuation.Jacobian{Matrix{ComplexF64}}, norm::WeightedNorm{InfNorm}, x̂::Nothing)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/predictor.jl:349
       [13] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:610 [inlined]
       [14] update_predictor!
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:609 [inlined]
       [15] init!(tracker::Tracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, x₁::Vector{ComplexF64}, t₁::Float64, t₀::Float64; ω::Float64, μ::Float64, τ::Float64, max_initial_step_size::Float64, keep_steps::Bool, extended_precision::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:708
       [16] #track!#121
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/tracker.jl:892 [inlined]
       [17] track(PT::PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, start_solution::Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}; path_number::Int64, debug::Bool)
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/polyhedral.jl:384
       [18] macro expansion
          @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:597 [inlined]
       [19] (::HomotopyContinuation.var"#285#287"{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{PolyhedralTracker{HomotopyContinuation.ToricHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, CoefficientHomotopy{CompiledSystem{(0x4d57ea6298598b99, 1)}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Tuple{MixedSubdivisions.MixedCell, Vector{ComplexF64}}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
          @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
positive: Error During Test at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:136
  Got exception outside of a @test
  TaskFailedException
  Stacktrace:
    [1] wait
      @ ./task.jl:303 [inlined]
    [2] threaded_solve(solver::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, S::Vector{Vector{ComplexF64}}, progress::ProgressMeter.Progress, stop_early_cb::typeof(HomotopyContinuation.always_false); catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:609
    [3] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::Vector{Vector{ComplexF64}}; stop_early_cb::Function, show_progress::Bool, threading::Bool, catch_interrupt::Bool)
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:512
    [4] solve(S::Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, starts::HomotopyContinuation.TotalDegreeStartSolutionsIterator{Base.Iterators.ProductIterator{Tuple{UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:stop_early_cb, :show_progress, :threading, :catch_interrupt), Tuple{typeof(HomotopyContinuation.always_false), Bool, Bool, Bool}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:499
    [5] solve(args::System; show_progress::Bool, threading::Bool, catch_interrupt::Bool, target_parameters::Nothing, stop_early_cb::Function, transform_result::Nothing, transform_parameters::typeof(identity), flatten::Nothing, target_subspaces::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:compile, :start_system), Tuple{Bool, Symbol}}})
      @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:485
    [6] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:139
    [7] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [8] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:137
    [9] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [10] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/certification_test.jl:2
   [11] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [12] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:40
   [13] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [14] top-level scope
      @ ~/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:22
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ none:6
   [17] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [18] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [19] _start()
      @ Base ./client.jl:485
  
      nested task error: ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
      Stacktrace:
       [1] argmismatch(a::Int64, b::Int64)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
       [2] format(::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::String, ::Vararg{String, N} where N)
         @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:727
       [3] updateProgress!(p::ProgressMeter.Progress; showvalues::Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, valuecolor::Symbol, offset::Int64, keep::Bool, desc::String)
         @ ProgressMeter ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:236
       [4] #19
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:363 [inlined]
       [5] lock(f::ProgressMeter.var"#19#20"{Base.Iterators.Pairs{Symbol, Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}, Tuple{Symbol}, NamedTuple{(:showvalues,), Tuple{Tuple{Tuple{String, Int64}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}}}}, ProgressMeter.Progress, Int64, Symbol}, l::ReentrantLock)
         @ Base ./lock.jl:168
       [6] #update!#18
         @ ~/.julia/packages/ProgressMeter/OUQkp/src/ProgressMeter.jl:360 [inlined]
       [7] update_progress!
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:538 [inlined]
       [8] macro expansion
         @ ~/.julia/packages/HomotopyContinuation/7uvZX/src/solve.jl:601 [inlined]
       [9] (::HomotopyContinuation.var"#285#287"{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}, Solver{EndgameTracker{StraightLineHomotopy{FixedParameterSystem{InterpretedSystem{Float64}, Float64}, InterpretedSystem{Float64}}, HomotopyContinuation.AD{1}, Matrix{ComplexF64}}}, Vector{Vector{ComplexF64}}, ProgressMeter.Progress, typeof(HomotopyContinuation.always_false), Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Vector{PathResult}, Int64})()
         @ HomotopyContinuation ~/.julia/packages/HomotopyContinuation/7uvZX/src/utils.jl:273
Test Summary:                                          | Pass  Error  Total
HomotopyContinuation                                   |  750     36    786
  utils.jl                                             |   51            51
  DoubleF64                                            |  227           227
  Binomial System Test                                 |   10            10
  Norms                                                |   18            18
  VoronoiTree                                          |    9             9
  UniquePoints                                         |    4             4
  Multiplicities                                       |   10            10
  ModelKit                                             |  125           125
  LinearAlgebra                                        |   38            38
  Homotopies                                           |    3             3
  Tracker                                              |   77      1     78
    tracking - AD : 0                                  |   10            10
    tracking - AD : 1                                  |   10            10
    tracking - AD : 2                                  |   10            10
    tracking - AD : 3                                  |   10            10
    projective tracking- AD: 0                         |    3             3
    projective tracking- AD: 1                         |    3             3
    projective tracking- AD: 2                         |    3             3
    projective tracking- AD: 3                         |    3             3
    iterator                                           |    2             2
    path info                                          |           1      1
    Change parameters                                  |    1             1
    Straight Line Homotopy                             |    2             2
    Compiled/InterpretedHomotopy                       |    4             4
    Steiner High Precision                             |   12            12
    Iterative Refinement for predictor (FourBar)       |    4             4
  Valuation                                            |   11            11
  EndgameTracker                                       |   30            30
  Linear Spaces                                        |   33            33
  Polyhedral                                           |    3      4      7
    affine + torus solutions                           |    3      3      6
    cyclic                                             |           1      1
  solve                                                |   46     12     58
    total degree (simple)                              |   10            10
    total degree (variable groups)                     |    6      1      7
    polyhedral                                         |    2      4      6
    overdetermined                                     |    2             2
    Result                                             |           1      1
    composition                                        |           1      1
    paths to track                                     |    9             9
    solve (parameter homotopy)                         |    7      1      8
    solve (Homotopy)                                   |    1             1
    solve (start target)                               |    2             2
    solve (affine sliced)                              |    1      1      2
    solve (Vector{Expression})                         |    1             1
    solve (DynamicPolynomials)                         |           1      1
    change parameters                                  |    1             1
    solve (threading)                                  |           1      1
    stop early callback                                |    4             4
    Many parameters solver                             |           1      1
  Endgame                                              |   13      5     18
    Cyclic 7                                           |    1             1
    Hyperbolic - 6,6                                   |           1      1
    Singular 1                                         |           1      1
    Wilkinson 12                                       |    4             4
    (x-10)^2                                           |    1             1
    (x-10)^6                                           |    1             1
    Beyond Polyhedral Homotopy Example                 |    2             2
    Winding Number Family d=2                          |    1             1
    Winding Number Family d=4                          |    1             1
    Winding Number Family d=6                          |    1             1
    Bacillus Subtilis                                  |           1      1
    Mohab                                              |    1      1      2
    Ill-conditioned solution - look's almost diverging |           1      1
  Monodromy                                            |   42      1     43
    monodromy_solve                                    |   21            21
    Method of moments                                  |    3             3
    Projective + Group Actions                         |    1             1
    permutations                                       |    4      1      5
    Linear subspaces                                   |   13            13
  Witness Sets                                         |           8      8
    affine                                             |           1      1
    projective                                         |           1      1
    dim / codim                                        |           6      6
  Certification                                        |           5      5
    Simple 1: Input = Vector{Expression}               |           1      1
    Simple 2: Input = Vector{MP.Polynomial}            |           1      1
    Parameters: Input = Vector{Expression}             |           1      1
    Parameters: Input = Vector{MP.Polynomial}          |           1      1
    positive                                           |           1      1
ERROR: LoadError: Some tests did not pass: 750 passed, 0 failed, 36 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/HomotopyContinuation/7uvZX/test/runtests.jl:21
ERROR: Package HomotopyContinuation errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
