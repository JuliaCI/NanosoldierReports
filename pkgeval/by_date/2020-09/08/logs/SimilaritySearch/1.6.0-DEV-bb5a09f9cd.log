Julia Version 1.6.0-DEV.854
Commit bb5a09f9cd (2020-09-07 12:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed OrderedCollections ─ v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed JSON ─────────────── v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_X1TqQH/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_X1TqQH/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(39, 0.01444304f0), Item(2, 0.015161157f0), Item(8, 0.01998508f0), Item(33, 0.0254215f0)])
Vsorted = Item[Item(39, 0.01444304f0), Item(2, 0.015161157f0), Item(8, 0.01998508f0), Item(33, 0.0254215f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0046171983083089195, 0.004904262224833171, 301.0, 48.36144284904003))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.006175645192464193, 0.0054190635681152345, 301.0, 70.43142926692963))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004216496149698893, 0.0048376639684041345, 301.0, 39.29875886440277))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0042962789535522464, 0.004282363255818685, 301.0, 8.709521908545867))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004610594113667806, 0.005817262331644694, 301.0, 43.73387289792299))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00021492640177408855, 0.0001465002695719401, 301.0, 174.6501295864582))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.981922149658203e-5, 0.010622564951578777, 300.0, 27.863175282487646)
p = PerformanceResult(1.0, 1.0, 1.0, 7.098515828450521e-5, 3.536542256673177e-5, 300.0, 27.863175282487646)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004609020551045736, 0.004242626825968424, 300.0, 1.5513692085010007)
p = PerformanceResult(1.0, 1.0, 1.0, 4.932880401611328e-5, 2.3571650187174478e-5, 300.0, 1.5513692085010007)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.981922149658203e-5, 0.010622564951578777, 300.0, 27.863175282487646), PerformanceResult(1.0, 1.0, 1.0, 7.098515828450521e-5, 3.536542256673177e-5, 300.0, 27.863175282487646), PerformanceResult(1.0, 1.0, 1.0, 0.004609020551045736, 0.004242626825968424, 300.0, 1.5513692085010007), PerformanceResult(1.0, 1.0, 1.0, 4.932880401611328e-5, 2.3571650187174478e-5, 300.0, 1.5513692085010007))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 121.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008473006884257, 0.005919798215230306, 346.1666666666667, 28744.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00804298718770345, 0.0036039034525553386, 303.8, 6992.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4088223775227864e-5, 1.2795130411783854e-5, 95.86666666666666, 48.05867153406143))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5796890258789063e-5, 1.1761983235677084e-5, 85.56666666666666, 69.99160718917847))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.512931823730469e-5, 1.537005106608073e-5, 90.7, 39.13567137718201))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.540153503417968e-5, 0.00018276373545328777, 95.3, 43.48004416376352))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8, 0.8, 0.8, 5.6926409403483076e-5, 0.00014109611511230468, 72.96666666666667, 184.28153896331787))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-08T22:33:05.587
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9037777777777781, 0.8960000000000004, 0.8993814929480567, 2.3288726806640627e-5, 2.26593017578125e-5, 154.9, 52.51163736823946))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2013187408447265e-5, 1.806020736694336e-5, 158.6, 0.0))
*** advance 1 from 1000; 2020-09-08T22:33:06.421
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8532499999999998, 0.8499999999999999, 0.8514444444444444, 2.24614143371582e-5, 2.3980140686035156e-5, 152.68, 81.6786890164949))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6056766510009767e-5, 1.9910335540771486e-5, 156.16, 0.0))
*** advance 1 from 1000; 2020-09-08T22:33:07.168
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8706666666666665, 0.8590000000000001, 0.8627381916329284, 2.4220943450927735e-5, 3.932952880859375e-5, 153.56, 43.173826965503395))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3641586303710937e-5, 3.8800239562988283e-5, 156.97, 0.0))
*** advance 1 from 1000; 2020-09-08T22:33:07.823
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8882500000000002, 0.879, 0.8828625730994155, 0.00010175466537475586, 0.0005083680152893066, 155.0, 47.429229634581134))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.966373443603515e-5, 0.0005370712280273437, 158.6, 0.0))
*** advance 1 from 1000; 2020-09-08T22:33:08.451
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9320000000000002, 0.9320000000000002, 0.9320000000000002, 8.991956710815429e-5, 0.0003996896743774414, 167.4, 203.44508079765365))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.104728698730469e-5, 0.00043303966522216796, 172.47, 0.0))
*** advance 1 from 1000; 2020-09-08T22:33:09.580
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9037777777777781, 0.8960000000000004, 0.8993814929480567, 3.477573394775391e-5, 8.346080780029297e-5, 154.9, 52.52372354257386))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.2329559326171874e-5, 6.999015808105469e-5, 158.6, 0.012555149180116132))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:11.686
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7110000000000001, 0.7110000000000001, 0.7110000000000001, 0.0019084739685058594, 7.839918136596679e-5, 197.78, 196.21666897833347))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:12.798
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7260000000000001, 0.7260000000000001, 0.7260000000000001, 0.0016622042655944824, 8.28409194946289e-5, 201.63, 111.6730180233717))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:13.877
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6100000000000001, 0.6100000000000001, NaN, 0.0016866087913513183, 0.00010797977447509765, 232.18, 3.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:14.774
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9359999999999996, 0.9349999999999997, 0.935473684210526, 0.0016574501991271974, 1.7278194427490234e-5, 223.95, 605.0000203698874))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:15.947
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5890000000000003, 0.5890000000000003, 0.5890000000000003, 0.002157125473022461, 0.0005492305755615234, 264.48, 2374.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:17.218
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.393, 0.393, NaN, 0.0016967201232910157, 0.0005062699317932128, 253.36, 3700.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T22:33:18.219
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6020000000000001, 0.6020000000000001, NaN, 0.0015915417671203613, 3.0190944671630858e-5, 248.81, 2381.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.02491103202847,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9848042582417584,"seconds":0.0026175957173109055,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.78125,"distances_sum":558.2183448076248}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.02491103202847,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9848042582417584,"seconds":0.0026175957173109055,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.78125,"distances_sum":558.2183448076248}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7517279513408903, conf: {"restarts":12}, perf: {"precision":0.9088541666666653,"recall":0.9088541666666653,"f1":0.9088541666666653,"seconds":2.50302255153656e-5,"exhaustive_search_seconds":6.3907355070114136e-6,"evaluations":56.515625,"distances_sum":277.1921119876206}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.732804594557637, conf: {"restarts":11}, perf: {"precision":0.9166666666666654,"recall":0.9166666666666654,"f1":0.9166666666666654,"seconds":2.5153160095214844e-5,"exhaustive_search_seconds":6.3907355070114136e-6,"evaluations":57.1328125,"distances_sum":277.0507458485663}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7517279513408903,"state":{"restarts":12},"perf":{"precision":0.9088541666666653,"recall":0.9088541666666653,"f1":0.9088541666666653,"seconds":2.50302255153656e-5,"exhaustive_search_seconds":6.3907355070114136e-6,"evaluations":56.515625,"distances_sum":277.1921119876206}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7517279513408903,"state":{"restarts":12},"perf":{"precision":0.9088541666666653,"recall":0.9088541666666653,"f1":0.9088541666666653,"seconds":2.50302255153656e-5,"exhaustive_search_seconds":6.3907355070114136e-6,"evaluations":56.515625,"distances_sum":277.1921119876206}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7517279513408903,"state":{"restarts":12},"perf":{"precision":0.9088541666666653,"recall":0.9088541666666653,"f1":0.9088541666666653,"seconds":2.50302255153656e-5,"exhaustive_search_seconds":6.3907355070114136e-6,"evaluations":56.515625,"distances_sum":277.1921119876206}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444431, conf: {"restarts":22}, perf: {"precision":0.8741319444444431,"recall":0.8741319444444431,"f1":0.8741319444444431,"seconds":7.634237408638e-5,"exhaustive_search_seconds":2.7062371373176575e-5,"evaluations":204.7265625,"distances_sum":123.75390891544521}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8784722222222209, conf: {"restarts":17}, perf: {"precision":0.8784722222222209,"recall":0.8784722222222209,"f1":0.8784722222222209,"seconds":6.238184869289398e-5,"exhaustive_search_seconds":2.7062371373176575e-5,"evaluations":174.34375,"distances_sum":123.88279064558446}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8741319444444432, conf: {"restarts":11}, perf: {"precision":0.8741319444444432,"recall":0.8741319444444432,"f1":0.8741319444444432,"seconds":4.707835614681244e-5,"exhaustive_search_seconds":2.7062371373176575e-5,"evaluations":137.7734375,"distances_sum":124.07638053409755}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111098, conf: {"restarts":18}, perf: {"precision":0.8767361111111098,"recall":0.8767361111111098,"f1":0.8767361111111098,"seconds":6.464123725891113e-5,"exhaustive_search_seconds":2.7062371373176575e-5,"evaluations":182.78125,"distances_sum":124.01933119259775}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8784722222222209,"state":{"restarts":17},"perf":{"precision":0.8784722222222209,"recall":0.8784722222222209,"f1":0.8784722222222209,"seconds":6.238184869289398e-5,"exhaustive_search_seconds":2.7062371373176575e-5,"evaluations":174.34375,"distances_sum":123.88279064558446}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8784722222222209,"state":{"restarts":17},"perf":{"precision":0.8784722222222209,"recall":0.8784722222222209,"f1":0.8784722222222209,"seconds":6.238184869289398e-5,"exhaustive_search_seconds":2.7062371373176575e-5,"evaluations":174.34375,"distances_sum":123.88279064558446}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8350694444444432, conf: {"restarts":21}, perf: {"precision":0.8350694444444432,"recall":0.8350694444444432,"f1":0.8350694444444432,"seconds":0.00013551674783229828,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":304.484375,"distances_sum":56.65715810004622}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8289930555555546, conf: {"restarts":3}, perf: {"precision":0.8289930555555546,"recall":0.8289930555555546,"f1":null,"seconds":7.083825767040253e-5,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":146.4765625,"distances_sum":56.91194590833038}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8454861111111105, conf: {"restarts":19}, perf: {"precision":0.8454861111111105,"recall":0.8454861111111105,"f1":0.8454861111111105,"seconds":0.0001253373920917511,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":287.6875,"distances_sum":56.268097390420735}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.826388888888888, conf: {"restarts":26}, perf: {"precision":0.826388888888888,"recall":0.826388888888888,"f1":0.826388888888888,"seconds":0.000277174636721611,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":352.75,"distances_sum":56.92164121102542}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8237847222222211, conf: {"restarts":30}, perf: {"precision":0.8237847222222211,"recall":0.8237847222222211,"f1":0.8237847222222211,"seconds":0.0001507401466369629,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":377.578125,"distances_sum":56.71998979803175}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8229166666666657, conf: {"restarts":6}, perf: {"precision":0.8229166666666657,"recall":0.8229166666666657,"f1":0.8229166666666657,"seconds":9.2335045337677e-5,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":171.265625,"distances_sum":56.90833630878478}, best_list's length: 9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8289930555555546, conf: {"restarts":29}, perf: {"precision":0.8289930555555546,"recall":0.8289930555555546,"f1":0.8289930555555546,"seconds":0.0001750420778989792,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":365.0859375,"distances_sum":56.84362437855452}, best_list's length: 11, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8420138888888876, conf: {"restarts":15}, perf: {"precision":0.8420138888888876,"recall":0.8420138888888876,"f1":0.8420138888888876,"seconds":0.00013848021626472473,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":247.28125,"distances_sum":56.409932906739414}, best_list's length: 12, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8454861111111105,"state":{"restarts":19},"perf":{"precision":0.8454861111111105,"recall":0.8454861111111105,"f1":0.8454861111111105,"seconds":0.0001253373920917511,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":287.6875,"distances_sum":56.268097390420735}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8454861111111105,"state":{"restarts":19},"perf":{"precision":0.8454861111111105,"recall":0.8454861111111105,"f1":0.8454861111111105,"seconds":0.0001253373920917511,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":287.6875,"distances_sum":56.268097390420735}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8454861111111105,"state":{"restarts":19},"perf":{"precision":0.8454861111111105,"recall":0.8454861111111105,"f1":0.8454861111111105,"seconds":0.0001253373920917511,"exhaustive_search_seconds":0.00036200881004333496,"evaluations":287.6875,"distances_sum":56.268097390420735}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(19), SatNeighborhood(32), 2020-09-08T22:33:26.332
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1701, 0.01867116f0), Item(3060, 0.026588373f0), Item(132, 0.030574448f0), Item(5395, 0.03271629f0), Item(7466, 0.033151597f0), Item(7062, 0.039517332f0), Item(307, 0.042794384f0), Item(4647, 0.04429898f0), Item(7130, 0.04583191f0), Item(6225, 0.053165317f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0472727272727274, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9685928654678656,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.59375,"distances_sum":546.2951620817184}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0472727272727274,"state":{"bsize":4},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9685928654678656,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.59375,"distances_sum":546.2951620817184}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.070631970260223, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9565590659340664,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.40625,"distances_sum":527.1775856614113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0857681432610744, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9459852647352651,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.2890625,"distances_sum":516.6181541979313}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0857681432610744,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9459852647352651,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.2890625,"distances_sum":516.6181541979313}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0857681432610744,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9459852647352651,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.2890625,"distances_sum":516.6181541979313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0857681432610744,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9459852647352651,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":2.602115273475647e-6,"evaluations":8.2890625,"distances_sum":516.6181541979313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.066795740561472, conf: {"bsize":3}, perf: {"precision":0.9730902777777775,"recall":0.9730902777777775,"f1":0.9730902777777775,"seconds":1.4450401067733765e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":32.28125,"distances_sum":285.1559142321348}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.066795740561472,"state":{"bsize":3},"perf":{"precision":0.9730902777777775,"recall":0.9730902777777775,"f1":0.9730902777777775,"seconds":1.4450401067733765e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":32.28125,"distances_sum":285.1559142321348}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.066795740561472,"state":{"bsize":3},"perf":{"precision":0.9730902777777775,"recall":0.9730902777777775,"f1":0.9730902777777775,"seconds":1.4450401067733765e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":32.28125,"distances_sum":285.1559142321348}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.066795740561472,"state":{"bsize":3},"perf":{"precision":0.9730902777777775,"recall":0.9730902777777775,"f1":0.9730902777777775,"seconds":1.4450401067733765e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":32.28125,"distances_sum":285.1559142321348}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.248030495552733,"state":{"bsize":3},"perf":{"precision":0.9661458333333328,"recall":0.9661458333333328,"f1":0.9661458333333328,"seconds":3.5842880606651306e-5,"exhaustive_search_seconds":3.499165177345276e-5,"evaluations":61.484375,"distances_sum":123.36921747773886}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.248030495552733,"state":{"bsize":3},"perf":{"precision":0.9661458333333328,"recall":0.9661458333333328,"f1":0.9661458333333328,"seconds":3.5842880606651306e-5,"exhaustive_search_seconds":3.499165177345276e-5,"evaluations":61.484375,"distances_sum":123.36921747773886}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.91488112709128, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":8.487887680530548e-5,"exhaustive_search_seconds":0.0004599224776029587,"evaluations":106.46875,"distances_sum":54.558262331876904}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 94.76351648351648, conf: {"bsize":4}, perf: {"precision":0.9895833333333331,"recall":0.9895833333333331,"f1":0.9895833333333331,"seconds":6.483867764472961e-5,"exhaustive_search_seconds":0.0004599224776029587,"evaluations":106.640625,"distances_sum":54.595218806061894}, best_list's length: 8, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.3323799488183, conf: {"bsize":5}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.614997982978821e-5,"exhaustive_search_seconds":0.0004599224776029587,"evaluations":103.796875,"distances_sum":54.56451520929113}, best_list's length: 9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.3323799488183,"state":{"bsize":5},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.614997982978821e-5,"exhaustive_search_seconds":0.0004599224776029587,"evaluations":103.796875,"distances_sum":54.56451520929113}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.3323799488183,"state":{"bsize":5},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.614997982978821e-5,"exhaustive_search_seconds":0.0004599224776029587,"evaluations":103.796875,"distances_sum":54.56451520929113}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.3323799488183,"state":{"bsize":5},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.614997982978821e-5,"exhaustive_search_seconds":0.0004599224776029587,"evaluations":103.796875,"distances_sum":54.56451520929113}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-09-08T22:33:30.494
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6458, 0.04444914f0), Item(4039, 0.045401346f0), Item(7099, 0.046811342f0), Item(4514, 0.05209426f0), Item(7786, 0.05230506f0), Item(4181, 0.05892217f0), Item(3515, 0.059253186f0), Item(9493, 0.060674474f0), Item(7740, 0.060756408f0), Item(9463, 0.06660266f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
