Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed LeftChildRightSiblingTrees ─ v0.1.2
  Installed Parsers ──────────────────── v1.0.10
  Installed BenchmarkTools ───────────── v0.5.0
  Installed ProgressLogging ──────────── v0.1.3
  Installed AbstractTrees ────────────── v0.3.3
  Installed TerminalLoggers ──────────── v0.1.2
  Installed PkgBenchmark ─────────────── v0.2.10
  Installed JSON ─────────────────────── v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [32113eaa] + PkgBenchmark v0.2.10
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [682c06a0] + JSON v0.21.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [69de0a69] + Parsers v1.0.10
  [32113eaa] + PkgBenchmark v0.2.10
  [33c8b6b6] + ProgressLogging v0.1.3
  [5d786b92] + TerminalLoggers v0.1.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building PkgBenchmark → `~/.julia/packages/PkgBenchmark/zKgzD/deps/build.log`
    Testing PkgBenchmark
Status `/tmp/jl_a5SzFu/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [e30172f5] Documenter v0.25.2
  [682c06a0] JSON v0.21.1
  [32113eaa] PkgBenchmark v0.2.10
  [5d786b92] TerminalLoggers v0.1.2
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [56ddb016] Logging
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_a5SzFu/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [682c06a0] JSON v0.21.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [69de0a69] Parsers v1.0.10
  [32113eaa] PkgBenchmark v0.2.10
  [33c8b6b6] ProgressLogging v0.1.3
  [5d786b92] TerminalLoggers v0.1.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
PkgBenchmark: Running benchmarks...
PkgBenchmark: creating benchmark tuning file /home/pkgeval/.julia/packages/PkgBenchmark/zKgzD/benchmark/tune.json...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:2
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
(1/2) tuning "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (1/3) tuning "join"...
  done (took 7.260437373 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (2/3) tuning "plots"...
  done (took 0.541885938 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (3/3) tuning "replace"...
  done (took 5.767065393 seconds)
done (took 16.211637168 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
(2/2) tuning "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (1/2) tuning "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (1/6) tuning ("tan", π)...
    done (took 1.02667359 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (2/6) tuning ("cos", 0.0)...
    done (took 0.869830402 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (3/6) tuning ("sin", π)...
    done (took 0.866756463 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (4/6) tuning ("sin", 0.0)...
    done (took 0.701168476 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (5/6) tuning ("cos", π)...
    done (took 0.748557721 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (6/6) tuning ("tan", 0.0)...
    done (took 0.728065587 seconds)
  done (took 6.42889726 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (2/2) tuning "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (1/6) tuning ("tan", π)...
    done (took 0.760579103 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (2/6) tuning ("cos", 0.0)...
    done (took 0.74392114 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (3/6) tuning ("sin", π)...
    done (took 0.795921129 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (4/6) tuning ("sin", 0.0)...
    done (took 0.740035269 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (5/6) tuning ("cos", π)...
    done (took 0.790205726 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (6/6) tuning ("tan", 0.0)...
    done (took 0.776195378 seconds)
  done (took 5.790612885 seconds)
done (took 13.009706356 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:2
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:2
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 5.907805841 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.493837639 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.240729882 seconds)
done (took 11.68171869 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.246530979 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.787551849 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 1.069654181 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.829010368 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 1.090833159 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.885982194 seconds)
  done (took 7.21992431 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.03291758 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.795303193 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 1.113324549 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.770149257 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 1.007816217 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.700030371 seconds)
  done (took 6.658041827 seconds)
done (took 14.782110512 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:2
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
# Benchmark Report for *PkgBenchmark*

## Job Properties
* Time of benchmark: 8 Sep 2020 - 21:24
* Package commit: non gi
* Julia commit: dbd3d4
* Julia command flags: None
* Environment variables: None

## Results
Below is a table of this job's results, obtained by running the benchmarks.
The values listed in the `ID` column have the structure `[parent_group, child_group, ..., key]`, and can be used to
index into the BaseBenchmarks suite to retrieve the corresponding benchmarks.
The percentages accompanying time and memory values in the below table are noise tolerances. The "true"
time/memory value for a given benchmark is expected to fall within this percentage of the reported value.
An empty cell means that the value was zero.

| ID                                                 | time            | GC time | memory          | allocations |
|----------------------------------------------------|----------------:|--------:|----------------:|------------:|
| `["trigonometry", "circular", "(\"cos\", 0.0)"]`   |   7.704 ns (5%) |         |                 |             |
| `["trigonometry", "circular", "(\"cos\", π)"]`     |  29.734 ns (5%) |         |                 |             |
| `["trigonometry", "circular", "(\"sin\", 0.0)"]`   |   6.263 ns (5%) |         |                 |             |
| `["trigonometry", "circular", "(\"sin\", π)"]`     |  23.036 ns (5%) |         |                 |             |
| `["trigonometry", "circular", "(\"tan\", 0.0)"]`   |   8.195 ns (5%) |         |                 |             |
| `["trigonometry", "circular", "(\"tan\", π)"]`     |  36.028 ns (5%) |         |                 |             |
| `["trigonometry", "hyperbolic", "(\"cos\", 0.0)"]` |   7.445 ns (5%) |         |                 |             |
| `["trigonometry", "hyperbolic", "(\"cos\", π)"]`   |  28.962 ns (5%) |         |                 |             |
| `["trigonometry", "hyperbolic", "(\"sin\", 0.0)"]` |   7.318 ns (5%) |         |                 |             |
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   |  29.715 ns (5%) |         |                 |             |
| `["trigonometry", "hyperbolic", "(\"tan\", 0.0)"]` |   7.735 ns (5%) |         |                 |             |
| `["trigonometry", "hyperbolic", "(\"tan\", π)"]`   |  36.014 ns (5%) |         |                 |             |
| `["utf8", "join"]`                                 | 429.156 ms (5%) |         | 156.27 MiB (1%) |          20 |
| `["utf8", "replace"]`                              | 221.652 μs (5%) |         |  12.00 KiB (1%) |           4 |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2217 MHz  8658800531 s    9157434 s  1408298175 s  11703189607 s          0 s
       
  Memory: 376.59027099609375 GB (33721.09765625 MB free)
  Uptime: 5.458351e6 sec
  Load Avg:  66.4638671875  63.49658203125  61.62939453125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```Test Summary: | Pass  Total
structure     |    6      6
Test Summary:         | Pass  Total
objectpath/loadobject |    6      6
 Activating new environment at `/tmp/7EorzJ5v/Project.toml`
No Changes to `/tmp/7EorzJ5v/Project.toml`
No Changes to `/tmp/7EorzJ5v/Manifest.toml`
 Generating  project Example:
    /tmp/7EorzJ5v/Example/Project.toml
    /tmp/7EorzJ5v/Example/src/Example.jl
Path `/tmp/7EorzJ5v/Example` exists and looks like the correct package. Using existing path.
  Resolving package versions...
Updating `/tmp/7EorzJ5v/Project.toml`
  [b3720da5] + Example v0.1.0 `/tmp/7EorzJ5v/Example`
Updating `/tmp/7EorzJ5v/Manifest.toml`
  [b3720da5] + Example v0.1.0 `/tmp/7EorzJ5v/Example`
PkgBenchmark: Running benchmarks...
PkgBenchmark: creating benchmark tuning file /tmp/7EorzJ5v/Example/benchmark/tune.json...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
(1/1) tuning "foo"...
done (took 1.473802729 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "foo"...
done (took 0.717371786 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
Test Summary:   | Pass  Total
benchmarkconfig |    1      1
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:2
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "foo"...
done (took 1.180830593 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:2
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
Test Summary: | Pass  Total
postprocess   |    1      1
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "trig"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/1) benchmarking "sin"...
  done (took 1.455562158 seconds)
done (took 2.799125107 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "trig"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/1) benchmarking "sin"...
  done (took 1.236955764 seconds)
done (took 2.464352216 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
Test Summary:                         | Pass  Total
getting back original commit / branch |    2      2
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.529630225 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.532893924 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.287403276 seconds)
done (took 13.918164517 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.941680468 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.795547169 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.694645829 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.598196105 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.625485616 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.601183124 seconds)
  done (took 5.621978144 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.588561557 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.587778204 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.646604016 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.625195258 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.587309867 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.601452571 seconds)
  done (took 4.766524252 seconds)
done (took 11.0524224 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: benchmark results written to /tmp/jl_Y6Ee4y.json
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.697765534 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.554912701 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.437940615 seconds)
done (took 14.77262418 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.9949404 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.856271544 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.752342286 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.710786462 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.685836023 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.628490343 seconds)
  done (took 6.181320464 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.620473908 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.750210331 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.64151114 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.656250885 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.770825308 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.601216171 seconds)
  done (took 5.198221761 seconds)
done (took 12.111838861 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: benchmark results written to /tmp/jl_Y6Ee4y.json
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 7.156048833 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.58726473 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.200878849 seconds)
done (took 15.591175123 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.962494986 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.793429158 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.717263297 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.610716112 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.670660313 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.651395396 seconds)
  done (took 5.924121833 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.817212834 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.587451327 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.60203545 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.607333846 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.587160251 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.619584808 seconds)
  done (took 5.035382119 seconds)
done (took 11.690650615 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.470161184 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.492053138 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.140431715 seconds)
done (took 13.67716995 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.014831713 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.750951116 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.637042905 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.631446336 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.585078542 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.686533134 seconds)
  done (took 5.694572426 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.609314107 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.655624882 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.583850371 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.634198308 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.60493157 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.581579561 seconds)
  done (took 4.856746828 seconds)
done (took 11.258352079 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
# Benchmark Report for *Example*

## Job Properties
* Time of benchmarks:
    - Target: 8 Sep 2020 - 21:29
    - Baseline: 8 Sep 2020 - 21:29
* Package commits:
    - Target: 9c7ff0
    - Baseline: 09bdd1
* Julia commits:
    - Target: dbd3d4
    - Baseline: dbd3d4
* Julia command flags:
    - Target: None
    - Baseline: None
* Environment variables:
    - Target: None
    - Baseline: None

## Results
A ratio greater than `1.0` denotes a possible regression (marked with :x:), while a ratio less
than `1.0` denotes a possible improvement (marked with :white_check_mark:). Only significant results - results
that indicate possible regressions or improvements - are shown below (thus, an empty table means that all
benchmark results remained invariant between builds).

| ID                                                 | time ratio    | memory ratio |
|----------------------------------------------------|---------------|--------------|
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   | 1.07 (5%) :x: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", π)"]`   | 1.18 (5%) :x: |   1.00 (1%)  |
| `["utf8", "join"]`                                 | 1.07 (5%) :x: |   1.00 (1%)  |
| `["utf8", "replace"]`                              | 1.20 (5%) :x: |   1.00 (1%)  |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo

### Target
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2255 MHz  8659890912 s    9157506 s  1408434804 s  11703201265 s          0 s
       
  Memory: 376.59027099609375 GB (30776.18359375 MB free)
  Uptime: 5.458662e6 sec
  Load Avg:  69.041015625  65.03125  62.7421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```

### Baseline
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2215 MHz  8660074362 s    9160308 s  1408457413 s  11703202300 s          0 s
       
  Memory: 376.59027099609375 GB (29912.3046875 MB free)
  Uptime: 5.458714e6 sec
  Load Avg:  68.765625  65.7451171875  63.1259765625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```# Benchmark Report for *Example*

## Job Properties
* Time of benchmarks:
    - Target: 8 Sep 2020 - 21:29
    - Baseline: 8 Sep 2020 - 21:29
* Package commits:
    - Target: 9c7ff0
    - Baseline: 09bdd1
* Julia commits:
    - Target: dbd3d4
    - Baseline: dbd3d4
* Julia command flags:
    - Target: None
    - Baseline: None
* Environment variables:
    - Target: None
    - Baseline: None

## Results
A ratio greater than `1.0` denotes a possible regression (marked with :x:), while a ratio less
than `1.0` denotes a possible improvement (marked with :white_check_mark:). Only significant results - results
that indicate possible regressions or improvements - are shown below (thus, an empty table means that all
benchmark results remained invariant between builds).

| ID                                                 | time ratio    | memory ratio |
|----------------------------------------------------|---------------|--------------|
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   | 1.07 (5%) :x: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", π)"]`   | 1.18 (5%) :x: |   1.00 (1%)  |
| `["utf8", "join"]`                                 | 1.07 (5%) :x: |   1.00 (1%)  |
| `["utf8", "replace"]`                              | 1.20 (5%) :x: |   1.00 (1%)  |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo

### Target
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2255 MHz  8659890912 s    9157506 s  1408434804 s  11703201265 s          0 s
       
  Memory: 376.59027099609375 GB (30776.18359375 MB free)
  Uptime: 5.458662e6 sec
  Load Avg:  69.041015625  65.03125  62.7421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```

### Baseline
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2215 MHz  8660074362 s    9160308 s  1408457413 s  11703202300 s          0 s
       
  Memory: 376.59027099609375 GB (29912.3046875 MB free)
  Uptime: 5.458714e6 sec
  Load Avg:  68.765625  65.7451171875  63.1259765625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```# Benchmark Report for *Example*

## Job Properties
* Time of benchmarks:
    - Target: 8 Sep 2020 - 21:29
    - Baseline: 8 Sep 2020 - 21:29
* Package commits:
    - Target: 9c7ff0
    - Baseline: 09bdd1
* Julia commits:
    - Target: dbd3d4
    - Baseline: dbd3d4
* Julia command flags:
    - Target: None
    - Baseline: None
* Environment variables:
    - Target: None
    - Baseline: None

## Results
A ratio greater than `1.0` denotes a possible regression (marked with :x:), while a ratio less
than `1.0` denotes a possible improvement (marked with :white_check_mark:). All results are shown below.

| ID                                                 | time ratio    | memory ratio |
|----------------------------------------------------|---------------|--------------|
| `["trigonometry", "circular", "(\"cos\", 0.0)"]`   |    0.96 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"cos\", π)"]`     |    0.97 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"sin\", 0.0)"]`   |    1.00 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"sin\", π)"]`     |    1.04 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"tan\", 0.0)"]`   |    1.00 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"tan\", π)"]`     |    1.03 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"cos\", 0.0)"]` |    1.00 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"cos\", π)"]`   |    1.00 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"sin\", 0.0)"]` |    1.02 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   | 1.07 (5%) :x: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", 0.0)"]` |    0.98 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", π)"]`   | 1.18 (5%) :x: |   1.00 (1%)  |
| `["utf8", "join"]`                                 | 1.07 (5%) :x: |   1.00 (1%)  |
| `["utf8", "replace"]`                              | 1.20 (5%) :x: |   1.00 (1%)  |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo

### Target
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2255 MHz  8659890912 s    9157506 s  1408434804 s  11703201265 s          0 s
       
  Memory: 376.59027099609375 GB (30776.18359375 MB free)
  Uptime: 5.458662e6 sec
  Load Avg:  69.041015625  65.03125  62.7421875
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```

### Baseline
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2215 MHz  8660074362 s    9160308 s  1408457413 s  11703202300 s          0 s
       
  Memory: 376.59027099609375 GB (29912.3046875 MB free)
  Uptime: 5.458714e6 sec
  Load Avg:  68.765625  65.7451171875  63.1259765625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/7EorzJ5v/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.669124021 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.477979011 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 3.992125123 seconds)
done (took 13.776492417 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.939128176 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.773113069 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.657224509 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.598484222 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.640892962 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.626329194 seconds)
  done (took 5.605812073 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.594701351 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.672291343 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.588570167 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.600917808 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...

signal (15): Terminated
in expression starting at none:19

signal (15): Terminated
in expression starting at none:3
