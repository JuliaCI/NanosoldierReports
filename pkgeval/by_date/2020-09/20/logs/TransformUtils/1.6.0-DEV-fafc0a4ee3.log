Julia Version 1.6.0-DEV.988
Commit fafc0a4ee3* (2020-09-19 22:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_A4ORTL/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_A4ORTL/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11062310751235516 0.1234330314393225; 0.11062310751235516 0.0 -0.038718866903789645; -0.1234330314393225 0.038718866903789645 0.0])
dAA = so3([0.0 -0.06626244584832278 -0.0430682240619745; 0.06626244584832278 0.0 0.06461457482575282; 0.0430682240619745 -0.06461457482575282 0.0])
dAA = so3([0.0 0.07006439024492019 0.07169196287148226; -0.07006439024492019 0.0 0.056749953705714944; -0.07169196287148226 -0.056749953705714944 0.0])
dAA = Quaternion(0.9986962380748601, [0.007027934654569502, 0.04984960575381474, -0.008452750783192554])
dAA = SO3([0.9904470035934643 0.13536772566065897 0.0262737877396602; -0.13485365851052394 0.9906545157641331 -0.020448011699373513; -0.028796247308549433 0.016709555517466466 0.9994456297845089])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9805882505758533 -0.15521453094976237 -0.11981290504212327; 0.17251305689633661 0.9733769813842904 0.15091884346061032; 0.09319832634156537 -0.16865853519241814 0.9812585645353007]), [0.38718866903789645, 1.234330314393225, 1.1062310751235516])
xj = SE3(SO3([0.968187645539518 0.044337439768062474 0.24626586133578926; -0.03610604504710571 0.9986312112430095 -0.03784253483021764; -0.24760661650226784 0.027746988415561325 0.9684632507731853]), [-0.5674995370571494, 0.7169196287148226, -0.7006439024492018])
Dx = SE3(SO3([0.9200881431161281 0.21833966834214863 0.32521623287492296; -0.14366061516822473 0.9604830525765754 -0.23839868574023376; -0.36441657007688716 0.17262704000655296 0.9150958794093509]), [-1.1938138607355857, -0.050709282256052646, -1.7367146016828388])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
