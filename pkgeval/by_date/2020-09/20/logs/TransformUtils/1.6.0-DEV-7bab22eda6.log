Julia Version 1.6.0-DEV.985
Commit 7bab22eda6* (2020-09-19 17:54 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_3fc7RC/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_3fc7RC/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.11488095721370842 0.058770510588732866; 0.11488095721370842 0.0 -0.059083651327240076; -0.058770510588732866 0.059083651327240076 0.0])
dAA = so3([0.0 0.030117465602667454 0.0680944048099523; -0.030117465602667454 0.0 -0.025685550659603058; -0.0680944048099523 0.025685550659603058 0.0])
dAA = so3([0.0 0.15644436909882264 -0.047584485745764835; -0.15644436909882264 0.0 -0.0013029233983174555; 0.047584485745764835 0.0013029233983174555 0.0])
dAA = Quaternion(0.9946092825836923, [0.03167855494439271, -0.0033204043586051767, 0.0986803884765543])
dAA = SO3([0.9911792710997019 -0.015784152483883124 0.13158462323778294; -0.0008429852732177775 0.992111215067672 0.1253579926162534; -0.1325252501151871 -0.12436316764747121 0.9833467651925206])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9827311872898099 0.08025616767636387 0.16672840513201098; -0.06935992828519753 0.9951195208977455 -0.07018788696430306; -0.17154770146006876 0.05741155526673089 0.9835015503015856]), [0.5908365132724007, 0.5877051058873286, 1.1488095721370841])
xj = SE3(SO3([0.8804496855047208 -0.47408915046844297 0.006915829866928733; 0.46918562425025406 0.8690547730455317 -0.1568714487842797; 0.06836081693146775 0.14136222570011248 0.9875948156271239]), [0.013029233983174555, -0.4758448574576483, -1.5644436909882262])
Dx = SE3(SO3([0.8209755425200249 -0.5504301353475507 -0.15174262646081962; 0.541481992025831 0.8348806162668383 -0.09885144861681264; 0.18109779373501134 -0.0010112779941580385 0.9834645730381598]), [-0.028609123647085788, -1.2605040175344846, -2.6901773521859917])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
