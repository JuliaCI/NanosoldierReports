Julia Version 1.6.0-DEV.988
Commit fafc0a4ee3* (2020-09-19 22:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_m260cM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_m260cM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.698788 seconds (1.36 M allocations: 72.189 MiB, 1.80% gc time)
Running: chebyshev_quadrature with k=1
  1.512997 seconds (2.19 M allocations: 126.382 MiB, 4.30% gc time)
Running: chebyshev_quadrature with k=2
  0.277021 seconds (409.60 k allocations: 23.564 MiB, 7.57% gc time)
Running: chebyshev_quadrature with k=3
  0.309673 seconds (522.83 k allocations: 28.743 MiB)
Running: chebyshev_quadrature with k=4
  0.315386 seconds (467.63 k allocations: 25.356 MiB, 13.24% gc time)
Running: jacobi_quadrature with α=β=1
 40.466331 seconds (37.33 M allocations: 3.048 GiB, 8.55% gc time)
Running: laguerre_quadrature with k=1
  2.632029 seconds (3.18 M allocations: 177.413 MiB, 3.56% gc time)
Running: legendre_quadrature
  0.290909 seconds (206.67 k allocations: 11.883 MiB)
Running: lobatto_quadrature
  0.298036 seconds (329.14 k allocations: 19.876 MiB)
Running: radau_quadrature
  0.309468 seconds (439.28 k allocations: 26.847 MiB, 7.65% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.035602 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.163253 seconds (172.49 k allocations: 3.828 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 83.345167 seconds (100.02 M allocations: 1.491 GiB, 0.37% gc time)
Running: rombergs_method
  0.609116 seconds (723.24 k allocations: 41.749 MiB, 5.01% gc time)
Running: simpsons_rule
  0.047115 seconds (45.82 k allocations: 2.045 MiB)
Running: simpsons38_rule
  0.131820 seconds (108.58 k allocations: 5.752 MiB)
Running: trapezoidal_rule
  0.388234 seconds (1.51 M allocations: 25.670 MiB, 4.42% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.084233 seconds (31.11 k allocations: 1.871 MiB)
Running: chebyshev_quadrature with k=1
  0.433677 seconds (297.32 k allocations: 15.742 MiB)
Running: chebyshev_quadrature with k=2
  0.147211 seconds (93.82 k allocations: 2.676 MiB)
Running: chebyshev_quadrature with k=3
  0.168984 seconds (82.07 k allocations: 2.477 MiB)
Running: chebyshev_quadrature with k=4
  0.171488 seconds (64.68 k allocations: 2.123 MiB)
Running: jacobi_quadrature with α=β=1
  2.157154 seconds (498.39 k allocations: 161.550 MiB, 7.39% gc time)
Running: legendre_quadrature
  0.165028 seconds (41.60 k allocations: 2.400 MiB)
Running: lobatto_quadrature
  0.021817 seconds (16.01 k allocations: 1.001 MiB)
Running: radau_quadrature
  0.022159 seconds (16.12 k allocations: 1.007 MiB)
Running: rectangle_rule_left
 30.855094 seconds (471.41 M allocations: 7.025 GiB, 4.18% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.993222 seconds (476.96 M allocations: 7.107 GiB, 3.93% gc time)
Running: rombergs_method
  0.406981 seconds (326.76 k allocations: 18.553 MiB)
Running: simpsons_rule
  0.000021 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.074380 seconds (19.03 k allocations: 1.152 MiB)
Running: trapezoidal_rule
  0.064615 seconds (17.52 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030687 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.122274 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.125517 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.138529 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.160169 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.324448 seconds (362.72 k allocations: 18.936 MiB)
Running: legendre_quadrature
  0.073907 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000171 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000103 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000465 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000325 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000457 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.079858 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000041 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024735 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022204 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.057851 seconds (72.40 k allocations: 4.219 MiB)
Running: chebyshev_quadrature with k=1
  0.198364 seconds (230.76 k allocations: 12.975 MiB)
Running: chebyshev_quadrature with k=2
  0.359221 seconds (283.34 k allocations: 15.925 MiB, 45.47% gc time)
Running: chebyshev_quadrature with k=3
  0.190112 seconds (263.05 k allocations: 14.346 MiB)
Running: chebyshev_quadrature with k=4
  0.197821 seconds (263.07 k allocations: 14.240 MiB)
Running: jacobi_quadrature with α=β=1
  2.630704 seconds (445.97 k allocations: 163.138 MiB, 11.44% gc time)
Running: legendre_quadrature
  0.151609 seconds (185.58 k allocations: 10.715 MiB)
Running: lobatto_quadrature
  0.164788 seconds (196.40 k allocations: 11.422 MiB)
Running: radau_quadrature
  0.191864 seconds (196.39 k allocations: 11.416 MiB)
Running: rectangle_rule_left
  1.271216 seconds (18.85 k allocations: 1.148 MiB)
Running: rectangle_rule_midpoint
  0.038062 seconds (24.70 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  1.405806 seconds (17.41 k allocations: 1.066 MiB)
Running: rombergs_method
  0.172455 seconds (134.37 k allocations: 7.779 MiB, 9.91% gc time)
Running: simpsons_rule
  0.030073 seconds (27.58 k allocations: 1.731 MiB)
Running: simpsons38_rule
  0.035045 seconds (42.43 k allocations: 2.681 MiB)
Running: trapezoidal_rule
  0.026860 seconds (44.13 k allocations: 1.774 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039887 seconds (99.58 k allocations: 2.983 MiB)
Running: chebyshev_quadrature with k=1
  0.207420 seconds (237.34 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=2
  0.221313 seconds (290.37 k allocations: 15.879 MiB)
Running: chebyshev_quadrature with k=3
  0.234768 seconds (269.75 k allocations: 14.325 MiB, 7.15% gc time)
Running: chebyshev_quadrature with k=4
  0.227531 seconds (269.78 k allocations: 14.329 MiB)
Running: hermite_quadrature with k=2
 15.303169 seconds (20.91 M allocations: 1.089 GiB, 8.24% gc time)
Running: jacobi_quadrature with α=β=1
  0.532770 seconds (455.17 k allocations: 49.354 MiB, 13.06% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.294535 seconds (276.43 k allocations: 15.247 MiB, 15.69% gc time)
Running: legendre_quadrature
  0.145406 seconds (192.12 k allocations: 11.050 MiB)
Running: lobatto_quadrature
  0.267295 seconds (217.19 k allocations: 37.183 MiB, 8.89% gc time)
Running: radau_quadrature
  0.220090 seconds (213.79 k allocations: 29.840 MiB)
Running: rectangle_rule_left
  0.029428 seconds (21.77 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.022562 seconds (26.51 k allocations: 1.644 MiB)
Running: rectangle_rule_right
  0.041006 seconds (18.53 k allocations: 1.119 MiB)
Running: rombergs_method
  0.147092 seconds (136.85 k allocations: 7.813 MiB, 15.27% gc time)
Running: simpsons_rule
  0.039755 seconds (39.43 k allocations: 2.063 MiB)
Running: simpsons38_rule
  0.041879 seconds (57.41 k allocations: 3.066 MiB)
Running: trapezoidal_rule
  0.030650 seconds (30.17 k allocations: 1.699 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039655 seconds (59.96 k allocations: 2.282 MiB)
Running: chebyshev_quadrature with k=1
  0.214807 seconds (232.86 k allocations: 12.831 MiB)
Running: chebyshev_quadrature with k=2
  0.210944 seconds (285.55 k allocations: 15.651 MiB)
Running: chebyshev_quadrature with k=3
  0.217983 seconds (265.18 k allocations: 14.124 MiB, 12.08% gc time)
Running: chebyshev_quadrature with k=4
  0.193464 seconds (265.20 k allocations: 14.125 MiB)
Running: hermite_quadrature with k=2
  0.145350 seconds (170.91 k allocations: 9.795 MiB)
Running: jacobi_quadrature with α=β=1
 10.820974 seconds (448.41 k allocations: 1.175 GiB, 12.11% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.202632 seconds (271.72 k allocations: 15.078 MiB)
Running: legendre_quadrature
  0.182731 seconds (187.69 k allocations: 10.821 MiB)
Running: lobatto_quadrature
  0.211846 seconds (207.95 k allocations: 22.905 MiB)
Running: radau_quadrature
  0.272094 seconds (207.11 k allocations: 20.901 MiB, 6.02% gc time)
Running: rectangle_rule_left
  0.037490 seconds (19.55 k allocations: 1.190 MiB)
Running: rectangle_rule_midpoint
  0.046335 seconds (25.40 k allocations: 1.592 MiB)
Running: rectangle_rule_right
  0.026582 seconds (17.39 k allocations: 1.064 MiB)
Running: rombergs_method
  0.187454 seconds (132.68 k allocations: 7.626 MiB)
Running: simpsons_rule
  0.041484 seconds (31.95 k allocations: 1.857 MiB)
Running: simpsons38_rule
  0.042476 seconds (48.22 k allocations: 2.824 MiB)
Running: trapezoidal_rule
  0.035050 seconds (25.07 k allocations: 1.536 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.043456 seconds (30.91 k allocations: 1.877 MiB)
Running: chebyshev_quadrature with k=1
  0.227754 seconds (231.24 k allocations: 13.050 MiB)
Running: chebyshev_quadrature with k=2
  0.304397 seconds (283.84 k allocations: 15.993 MiB, 8.09% gc time)
Running: chebyshev_quadrature with k=3
  0.320288 seconds (263.56 k allocations: 14.340 MiB)
Running: chebyshev_quadrature with k=4
  0.222568 seconds (263.58 k allocations: 14.166 MiB)
Running: jacobi_quadrature with α=β=1
  3.062013 seconds (446.51 k allocations: 194.203 MiB, 9.20% gc time)
Running: legendre_quadrature
  0.152218 seconds (186.07 k allocations: 10.751 MiB)
Running: lobatto_quadrature
  0.195697 seconds (196.89 k allocations: 11.434 MiB, 10.04% gc time)
Running: radau_quadrature
  0.222332 seconds (196.89 k allocations: 11.428 MiB)
Running: rectangle_rule_left
  0.302897 seconds (19.36 k allocations: 1.174 MiB)
Running: rectangle_rule_midpoint
  0.022394 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.108571 seconds (17.76 k allocations: 1.082 MiB)
Running: rombergs_method
  0.156682 seconds (145.13 k allocations: 8.488 MiB)
Running: simpsons_rule
  0.045501 seconds (28.27 k allocations: 1.761 MiB)
Running: simpsons38_rule
  0.035195 seconds (43.14 k allocations: 2.710 MiB)
Running: trapezoidal_rule
  0.027746 seconds (45.06 k allocations: 1.807 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035276 seconds (31.69 k allocations: 1.829 MiB)
Running: chebyshev_quadrature with k=1
  0.190733 seconds (231.83 k allocations: 12.995 MiB)
Running: chebyshev_quadrature with k=2
  0.241132 seconds (284.47 k allocations: 15.899 MiB, 8.77% gc time)
Running: chebyshev_quadrature with k=3
  0.211659 seconds (264.13 k allocations: 14.260 MiB)
Running: chebyshev_quadrature with k=4
  0.247674 seconds (264.16 k allocations: 14.340 MiB)
Running: jacobi_quadrature with α=β=1
  2.372665 seconds (447.23 k allocations: 149.132 MiB, 7.14% gc time)
Running: legendre_quadrature
  0.167358 seconds (186.67 k allocations: 10.780 MiB)
Running: lobatto_quadrature
  0.176580 seconds (197.49 k allocations: 11.444 MiB)
Running: radau_quadrature
  0.232880 seconds (197.49 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  1.136892 seconds (19.62 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.025973 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.976502 seconds (17.72 k allocations: 1.079 MiB)
Running: rombergs_method
  0.144895 seconds (135.59 k allocations: 7.820 MiB)
Running: simpsons_rule
  0.047737 seconds (28.97 k allocations: 1.787 MiB)
Running: simpsons38_rule
  0.043462 seconds (43.84 k allocations: 2.737 MiB)
Running: trapezoidal_rule
  0.031958 seconds (57.30 k allocations: 2.007 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.179107 seconds (145.23 k allocations: 8.701 MiB, 13.94% gc time)
Running: chebyshev_quadrature with k=1
  0.166545 seconds (69.94 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.171700 seconds (105.11 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.243460 seconds (92.59 k allocations: 2.655 MiB)
Running: chebyshev_quadrature with k=4
  0.173906 seconds (72.12 k allocations: 2.249 MiB)
Running: jacobi_quadrature with α=β=1
  2.161288 seconds (474.25 k allocations: 167.468 MiB, 4.55% gc time)
Running: legendre_quadrature
  0.127428 seconds (18.74 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000193 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000087 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 49.482665 seconds (590.00 M allocations: 8.792 GiB, 4.27% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.006948 seconds (592.75 M allocations: 8.833 GiB, 4.24% gc time)
Running: rombergs_method
  0.217845 seconds (20.52 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000081 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.039488 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.030250 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.846068 seconds (629.33 M allocations: 9.387 GiB, 6.04% gc time)
Running: chebyshev_quadrature with k=1
  0.518700 seconds (419.94 k allocations: 23.191 MiB, 6.15% gc time)
Running: chebyshev_quadrature with k=2
 12.855203 seconds (474.62 k allocations: 4.041 GiB, 4.96% gc time)
Running: chebyshev_quadrature with k=3
  6.036505 seconds (277.51 k allocations: 1.643 GiB, 4.86% gc time)
Running: chebyshev_quadrature with k=4
  7.538780 seconds (277.54 k allocations: 2.261 GiB, 2.68% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.619015 seconds (483.85 k allocations: 13.254 GiB, 3.44% gc time)
Running: legendre_quadrature.
  6.418221 seconds (223.84 k allocations: 1.976 GiB, 2.26% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.131335 seconds (8.23 M allocations: 13.384 GiB, 4.52% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.718109 seconds (7.23 M allocations: 13.369 GiB, 3.69% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.132119 seconds (22.28 k allocations: 1.349 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.354290 seconds (30.48 k allocations: 1.886 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.669487 seconds (22.48 k allocations: 1.358 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.939096 seconds (438.95 k allocations: 152.719 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.691191 seconds (600.04 M allocations: 8.943 GiB, 8.70% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.903260 seconds (600.05 M allocations: 8.943 GiB, 8.12% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.157784 seconds (600.03 M allocations: 8.943 GiB, 8.69% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.078899 seconds (180.52 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.254995 seconds (247.84 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=2
  0.235212 seconds (272.49 k allocations: 14.530 MiB)
Running: chebyshev_quadrature with k=3
  0.218419 seconds (248.71 k allocations: 12.837 MiB)
Running: chebyshev_quadrature with k=4
  0.213155 seconds (248.73 k allocations: 12.833 MiB)
Running: jacobi_quadrature with α=β=1
  0.371559 seconds (388.05 k allocations: 34.932 MiB)
Running: laguerre_quadrature with k=2
  0.196209 seconds (180.67 k allocations: 10.546 MiB)
Running: legendre_quadrature
  0.130737 seconds (146.09 k allocations: 8.087 MiB)
Running: lobatto_quadrature
  0.036779 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.033181 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.057127 seconds (18.90 k allocations: 1.124 MiB)
Running: rectangle_rule_midpoint
  0.048679 seconds (25.51 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  0.052582 seconds (17.50 k allocations: 1.050 MiB)
Running: rombergs_method
  0.252758 seconds (171.57 k allocations: 9.793 MiB)
Running: simpsons_rule
  0.001901 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.051489 seconds (78.92 k allocations: 3.387 MiB)
Running: trapezoidal_rule
  0.198724 seconds (2.39 M allocations: 37.693 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001621 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.103783 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.100127 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.120289 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.130685 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  5.827725 seconds (365.11 k allocations: 904.760 MiB, 3.75% gc time)
Running: legendre_quadrature
  0.073724 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000184 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000144 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.798003 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000488 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.394515 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.063500 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000902 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000751 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.106694 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.107930 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.141555 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.147986 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  2.060129 seconds (371.68 k allocations: 252.884 MiB)
Running: legendre_quadrature
  0.075076 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000078 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000048 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.076177 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000812 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  9.404926 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.100280 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001914 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
