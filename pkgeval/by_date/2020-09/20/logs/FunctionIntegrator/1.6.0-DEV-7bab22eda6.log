Julia Version 1.6.0-DEV.985
Commit 7bab22eda6* (2020-09-19 17:54 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_4VGvQ1/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_4VGvQ1/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.713631 seconds (1.36 M allocations: 72.435 MiB, 1.86% gc time)
Running: chebyshev_quadrature with k=1
  1.277784 seconds (2.19 M allocations: 126.319 MiB, 3.35% gc time)
Running: chebyshev_quadrature with k=2
  0.252055 seconds (409.60 k allocations: 23.560 MiB, 13.84% gc time)
Running: chebyshev_quadrature with k=3
  0.231172 seconds (522.83 k allocations: 28.726 MiB)
Running: chebyshev_quadrature with k=4
  0.290985 seconds (467.63 k allocations: 25.357 MiB, 26.28% gc time)
Running: jacobi_quadrature with α=β=1
 29.507531 seconds (37.32 M allocations: 3.047 GiB, 10.44% gc time)
Running: laguerre_quadrature with k=1
  1.889994 seconds (3.18 M allocations: 177.473 MiB, 7.64% gc time)
Running: legendre_quadrature
  0.171866 seconds (206.80 k allocations: 11.874 MiB, 21.16% gc time)
Running: lobatto_quadrature
  0.201401 seconds (329.56 k allocations: 19.914 MiB)
Running: radau_quadrature
  0.241135 seconds (438.14 k allocations: 26.789 MiB, 7.12% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 52.808276 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time)
Running: rectangle_rule_midpoint.
  0.137669 seconds (172.49 k allocations: 3.828 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 74.258361 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time)
Running: rombergs_method
  0.504070 seconds (723.37 k allocations: 41.754 MiB)
Running: simpsons_rule
  0.036057 seconds (45.82 k allocations: 2.045 MiB)
Running: simpsons38_rule
  0.090923 seconds (108.76 k allocations: 5.763 MiB)
Running: trapezoidal_rule
  0.302882 seconds (1.51 M allocations: 25.681 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.085154 seconds (31.10 k allocations: 1.870 MiB)
Running: chebyshev_quadrature with k=1
  0.557901 seconds (297.73 k allocations: 15.767 MiB)
Running: chebyshev_quadrature with k=2
  0.208773 seconds (93.82 k allocations: 2.676 MiB)
Running: chebyshev_quadrature with k=3
  0.250616 seconds (82.07 k allocations: 2.477 MiB)
Running: chebyshev_quadrature with k=4
  0.189121 seconds (64.68 k allocations: 2.123 MiB)
Running: jacobi_quadrature with α=β=1
  3.326971 seconds (498.39 k allocations: 161.550 MiB, 19.93% gc time)
Running: legendre_quadrature
  0.182803 seconds (41.73 k allocations: 2.408 MiB)
Running: lobatto_quadrature
  0.024591 seconds (16.14 k allocations: 1.009 MiB)
Running: radau_quadrature
  0.023697 seconds (16.25 k allocations: 1.015 MiB)
Running: rectangle_rule_left
 27.340853 seconds (471.41 M allocations: 7.025 GiB, 3.28% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 23.781345 seconds (476.96 M allocations: 7.107 GiB, 2.65% gc time)
Running: rombergs_method
  0.303152 seconds (326.88 k allocations: 18.560 MiB)
Running: simpsons_rule
  0.000055 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.055682 seconds (19.03 k allocations: 1.151 MiB)
Running: trapezoidal_rule
  0.050229 seconds (17.52 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.018270 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.089928 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.077654 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.095904 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.100540 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.223907 seconds (362.72 k allocations: 18.936 MiB)
Running: legendre_quadrature
  0.067816 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000094 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000472 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000329 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000461 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.070595 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000031 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.018890 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020525 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.036784 seconds (72.40 k allocations: 4.219 MiB)
Running: chebyshev_quadrature with k=1
  0.173176 seconds (230.75 k allocations: 12.973 MiB, 14.08% gc time)
Running: chebyshev_quadrature with k=2
  0.162927 seconds (283.33 k allocations: 15.925 MiB)
Running: chebyshev_quadrature with k=3
  0.173012 seconds (263.05 k allocations: 14.346 MiB)
Running: chebyshev_quadrature with k=4
  0.161323 seconds (263.07 k allocations: 14.241 MiB, 13.22% gc time)
Running: jacobi_quadrature with α=β=1
  1.618232 seconds (445.97 k allocations: 163.165 MiB, 3.22% gc time)
Running: legendre_quadrature
  0.129838 seconds (185.58 k allocations: 10.715 MiB, 15.81% gc time)
Running: lobatto_quadrature
  0.117290 seconds (196.40 k allocations: 11.422 MiB)
Running: radau_quadrature
  0.130685 seconds (196.39 k allocations: 11.400 MiB)
Running: rectangle_rule_left
  0.718629 seconds (18.85 k allocations: 1.148 MiB)
Running: rectangle_rule_midpoint
  0.019603 seconds (24.70 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  0.702716 seconds (17.41 k allocations: 1.066 MiB)
Running: rombergs_method
  0.149812 seconds (134.37 k allocations: 7.763 MiB)
Running: simpsons_rule
  0.031469 seconds (27.58 k allocations: 1.731 MiB)
Running: simpsons38_rule
  0.036277 seconds (42.43 k allocations: 2.681 MiB)
Running: trapezoidal_rule
  0.026056 seconds (44.13 k allocations: 1.774 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.027338 seconds (99.58 k allocations: 2.983 MiB)
Running: chebyshev_quadrature with k=1
  0.168999 seconds (237.34 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=2
  0.156231 seconds (290.37 k allocations: 15.895 MiB)
Running: chebyshev_quadrature with k=3
  0.205656 seconds (269.75 k allocations: 14.326 MiB, 19.26% gc time)
Running: chebyshev_quadrature with k=4
  0.155889 seconds (269.78 k allocations: 14.329 MiB)
Running: hermite_quadrature with k=2
 11.796983 seconds (20.91 M allocations: 1.089 GiB, 12.36% gc time)
Running: jacobi_quadrature with α=β=1
  0.387552 seconds (455.17 k allocations: 49.358 MiB, 11.31% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.173544 seconds (276.43 k allocations: 15.252 MiB, 16.76% gc time)
Running: legendre_quadrature
  0.125737 seconds (192.12 k allocations: 11.053 MiB)
Running: lobatto_quadrature
  0.197472 seconds (217.19 k allocations: 37.243 MiB, 10.00% gc time)
Running: radau_quadrature
  0.166285 seconds (213.79 k allocations: 29.902 MiB)
Running: rectangle_rule_left
  0.019392 seconds (21.77 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.017383 seconds (26.51 k allocations: 1.644 MiB)
Running: rectangle_rule_right
  0.015364 seconds (18.53 k allocations: 1.119 MiB)
Running: rombergs_method
  0.084834 seconds (136.85 k allocations: 7.813 MiB)
Running: simpsons_rule
  0.024997 seconds (39.43 k allocations: 2.063 MiB)
Running: simpsons38_rule
  0.026731 seconds (57.41 k allocations: 3.066 MiB)
Running: trapezoidal_rule
  0.054078 seconds (30.17 k allocations: 1.699 MiB, 50.90% gc time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042031 seconds (59.96 k allocations: 2.282 MiB)
Running: chebyshev_quadrature with k=1
  0.149128 seconds (232.86 k allocations: 12.831 MiB)
Running: chebyshev_quadrature with k=2
  0.183861 seconds (285.55 k allocations: 15.651 MiB)
Running: chebyshev_quadrature with k=3
  0.165481 seconds (265.18 k allocations: 14.124 MiB)
Running: chebyshev_quadrature with k=4
  0.182682 seconds (265.20 k allocations: 14.141 MiB, 14.95% gc time)
Running: hermite_quadrature with k=2
  0.117426 seconds (170.91 k allocations: 9.795 MiB)
Running: jacobi_quadrature with α=β=1
  8.117121 seconds (448.41 k allocations: 1.175 GiB, 14.31% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.214133 seconds (271.72 k allocations: 15.074 MiB, 6.84% gc time)
Running: legendre_quadrature
  0.118153 seconds (187.69 k allocations: 10.821 MiB)
Running: lobatto_quadrature
  0.168048 seconds (207.95 k allocations: 22.904 MiB, 11.64% gc time)
Running: radau_quadrature
  0.142985 seconds (207.10 k allocations: 20.839 MiB)
Running: rectangle_rule_left
  0.020993 seconds (19.55 k allocations: 1.190 MiB)
Running: rectangle_rule_midpoint
  0.016738 seconds (25.40 k allocations: 1.592 MiB)
Running: rectangle_rule_right
  0.014720 seconds (17.39 k allocations: 1.064 MiB)
Running: rombergs_method
  0.132989 seconds (132.69 k allocations: 7.643 MiB)
Running: simpsons_rule
  0.029437 seconds (31.95 k allocations: 1.857 MiB)
Running: simpsons38_rule
  0.032848 seconds (48.22 k allocations: 2.824 MiB)
Running: trapezoidal_rule
  0.017011 seconds (25.07 k allocations: 1.536 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029484 seconds (30.91 k allocations: 1.877 MiB)
Running: chebyshev_quadrature with k=1
  0.150185 seconds (231.24 k allocations: 13.049 MiB, 8.35% gc time)
Running: chebyshev_quadrature with k=2
  0.174237 seconds (283.84 k allocations: 15.993 MiB)
Running: chebyshev_quadrature with k=3
  0.163670 seconds (263.56 k allocations: 14.340 MiB)
Running: chebyshev_quadrature with k=4
  0.164363 seconds (263.58 k allocations: 14.166 MiB, 12.70% gc time)
Running: jacobi_quadrature with α=β=1
  1.653255 seconds (446.51 k allocations: 194.199 MiB, 5.88% gc time)
Running: legendre_quadrature
  0.141032 seconds (186.07 k allocations: 10.756 MiB)
Running: lobatto_quadrature
  0.162956 seconds (196.89 k allocations: 11.434 MiB, 14.73% gc time)
Running: radau_quadrature
  0.153257 seconds (196.89 k allocations: 11.491 MiB)
Running: rectangle_rule_left
  0.293362 seconds (19.36 k allocations: 1.174 MiB)
Running: rectangle_rule_midpoint
  0.021180 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.095615 seconds (17.76 k allocations: 1.082 MiB)
Running: rombergs_method
  0.089686 seconds (145.13 k allocations: 8.488 MiB)
Running: simpsons_rule
  0.038158 seconds (28.27 k allocations: 1.761 MiB)
Running: simpsons38_rule
  0.033563 seconds (43.14 k allocations: 2.710 MiB)
Running: trapezoidal_rule
  0.019103 seconds (45.06 k allocations: 1.807 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.024105 seconds (31.69 k allocations: 1.829 MiB)
Running: chebyshev_quadrature with k=1
  0.188244 seconds (231.83 k allocations: 12.995 MiB, 10.33% gc time)
Running: chebyshev_quadrature with k=2
  0.151005 seconds (284.47 k allocations: 15.899 MiB)
Running: chebyshev_quadrature with k=3
  0.139573 seconds (264.14 k allocations: 14.385 MiB)
Running: chebyshev_quadrature with k=4
  0.168435 seconds (264.16 k allocations: 14.340 MiB, 8.68% gc time)
Running: jacobi_quadrature with α=β=1
  1.583148 seconds (447.23 k allocations: 148.948 MiB, 11.42% gc time)
Running: legendre_quadrature
  0.113621 seconds (186.67 k allocations: 10.776 MiB)
Running: lobatto_quadrature
  0.147130 seconds (197.49 k allocations: 11.444 MiB, 8.68% gc time)
Running: radau_quadrature
  0.124766 seconds (197.49 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  0.786283 seconds (19.62 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.024917 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.753254 seconds (17.72 k allocations: 1.079 MiB)
Running: rombergs_method
  0.098631 seconds (135.59 k allocations: 7.820 MiB)
Running: simpsons_rule
  0.022517 seconds (28.97 k allocations: 1.787 MiB)
Running: simpsons38_rule
  0.024091 seconds (43.84 k allocations: 2.737 MiB)
Running: trapezoidal_rule
  0.021599 seconds (57.30 k allocations: 2.007 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.114461 seconds (145.25 k allocations: 8.702 MiB)
Running: chebyshev_quadrature with k=1
  0.117970 seconds (69.94 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.119257 seconds (105.11 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.121278 seconds (92.59 k allocations: 2.655 MiB)
Running: chebyshev_quadrature with k=4
  0.167227 seconds (72.12 k allocations: 2.249 MiB, 22.75% gc time)
Running: jacobi_quadrature with α=β=1
  1.410860 seconds (474.14 k allocations: 167.461 MiB, 8.65% gc time)
Running: legendre_quadrature
  0.112559 seconds (18.74 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000108 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000063 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 34.752621 seconds (590.00 M allocations: 8.792 GiB, 3.50% gc time)
Running: rectangle_rule_midpoint
  0.000048 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 40.920973 seconds (592.75 M allocations: 8.833 GiB, 3.19% gc time)
Running: rombergs_method
  0.138223 seconds (20.52 k allocations: 1.166 MiB)
Running: simpsons_rule
  0.000079 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029419 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022477 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.222559 seconds (629.33 M allocations: 9.387 GiB, 4.62% gc time)
Running: chebyshev_quadrature with k=1
  0.685543 seconds (420.08 k allocations: 23.262 MiB, 4.08% gc time)
Running: chebyshev_quadrature with k=2
 13.605423 seconds (474.75 k allocations: 4.041 GiB, 4.04% gc time)
Running: chebyshev_quadrature with k=3
  6.234055 seconds (277.51 k allocations: 1.643 GiB, 4.96% gc time)
Running: chebyshev_quadrature with k=4
  7.743677 seconds (277.54 k allocations: 2.261 GiB, 2.63% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 54.486913 seconds (483.95 k allocations: 13.254 GiB, 3.12% gc time)
Running: legendre_quadrature.
  4.941519 seconds (223.97 k allocations: 1.976 GiB, 3.54% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.958637 seconds (8.23 M allocations: 13.383 GiB, 4.74% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.495410 seconds (7.23 M allocations: 13.369 GiB, 3.93% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.074434 seconds (22.28 k allocations: 1.349 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.858451 seconds (30.48 k allocations: 1.886 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.214991 seconds (22.48 k allocations: 1.358 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.928134 seconds (439.08 k allocations: 152.726 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.809359 seconds (600.04 M allocations: 8.943 GiB, 9.33% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.240358 seconds (600.05 M allocations: 8.943 GiB, 8.72% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 27.845412 seconds (600.03 M allocations: 8.943 GiB, 9.45% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.040580 seconds (180.52 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.129361 seconds (247.84 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=2
  0.126467 seconds (272.49 k allocations: 14.530 MiB)
Running: chebyshev_quadrature with k=3
  0.125925 seconds (248.71 k allocations: 12.837 MiB)
Running: chebyshev_quadrature with k=4
  0.129632 seconds (248.73 k allocations: 12.833 MiB)
Running: jacobi_quadrature with α=β=1
  0.254176 seconds (388.05 k allocations: 34.928 MiB)
Running: laguerre_quadrature with k=2
  0.119864 seconds (180.67 k allocations: 10.499 MiB)
Running: legendre_quadrature
  0.081990 seconds (146.09 k allocations: 8.102 MiB)
Running: lobatto_quadrature
  0.031385 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.028679 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.030164 seconds (18.90 k allocations: 1.124 MiB)
Running: rectangle_rule_midpoint
  0.025537 seconds (25.51 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  0.030797 seconds (17.50 k allocations: 1.050 MiB)
Running: rombergs_method
  0.147017 seconds (170.81 k allocations: 9.751 MiB)
Running: simpsons_rule
  0.001276 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.035481 seconds (78.92 k allocations: 3.387 MiB)
Running: trapezoidal_rule
  0.125868 seconds (2.39 M allocations: 37.693 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001317 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.077915 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.079352 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.077562 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.079126 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  6.591689 seconds (365.11 k allocations: 904.760 MiB, 5.39% gc time)
Running: legendre_quadrature
  0.048301 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000219 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000134 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.476333 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000290 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.552441 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.047674 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000876 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000703 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.091169 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.084551 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.090501 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.094362 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  3.128053 seconds (371.68 k allocations: 252.884 MiB)
Running: legendre_quadrature
  0.049773 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000160 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000062 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  7.725216 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000782 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  8.037323 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064780 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000032 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001170 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
