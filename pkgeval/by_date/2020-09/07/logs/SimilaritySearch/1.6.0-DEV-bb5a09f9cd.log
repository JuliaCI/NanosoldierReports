Julia Version 1.6.0-DEV.854
Commit bb5a09f9cd (2020-09-07 12:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Compat ───────────── v3.15.0
  Installed Parsers ──────────── v1.0.10
  Installed JSON ─────────────── v0.21.1
  Installed SortingAlgorithms ── v0.3.1
  Installed OrderedCollections ─ v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed DataStructures ───── v0.18.4
  Installed StatsBase ────────── v0.32.0
  Installed SimilaritySearch ─── v0.3.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.4
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_NeT7BN/Project.toml`
  [864edb3b] DataStructures v0.18.4
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_NeT7BN/Manifest.toml`
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(1, 0.016051054f0), Item(13, 0.038240194f0), Item(25, 0.049717307f0), Item(2, 0.055068374f0)])
Vsorted = Item[Item(1, 0.016051054f0), Item(13, 0.038240194f0), Item(25, 0.049717307f0), Item(2, 0.055068374f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005431548754374186, 0.0053208669026692705, 301.0, 52.001842860132456))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005387941996256511, 0.005144564310709635, 301.0, 75.41150093078613))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004950197537740072, 0.005159735679626465, 301.0, 42.16738569736481))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004553890228271485, 0.0047669649124145504, 301.0, 9.801487316261046))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004578701655069987, 0.005847628911336263, 301.0, 46.99962696991861))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00014007091522216797, 0.0001463015874226888, 301.0, 183.85827712714672))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.148815155029296e-5, 0.01190959612528483, 300.0, 26.0614132026094)
p = PerformanceResult(1.0, 1.0, 1.0, 4.178682963053386e-5, 1.8795331319173176e-5, 300.0, 26.0614132026094)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004484812418619792, 0.004112664858500163, 300.0, 1.342475546854331)
p = PerformanceResult(1.0, 1.0, 1.0, 5.079905192057292e-5, 2.243518829345703e-5, 300.0, 1.342475546854331)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.148815155029296e-5, 0.01190959612528483, 300.0, 26.0614132026094), PerformanceResult(1.0, 1.0, 1.0, 4.178682963053386e-5, 1.8795331319173176e-5, 300.0, 26.0614132026094), PerformanceResult(1.0, 1.0, 1.0, 0.004484812418619792, 0.004112664858500163, 300.0, 1.342475546854331), PerformanceResult(1.0, 1.0, 1.0, 5.079905192057292e-5, 2.243518829345703e-5, 300.0, 1.342475546854331))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00875393549601237, 0.004188569386800131, 349.53333333333336, 28613.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008629433314005534, 0.003347595532735189, 302.6666666666667, 6942.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.445379892985026e-5, 1.1730194091796876e-5, 95.36666666666666, 51.82993973791599))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3253758748372395e-5, 1.373291015625e-5, 85.76666666666667, 75.15506064891815))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5399525960286458e-5, 1.5131632486979167e-5, 88.3, 42.00717771053314))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.41379165649414e-5, 0.0001539309819539388, 94.83333333333333, 46.83082879148424))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8300000000000001, 0.8300000000000001, 0.8300000000000001, 5.864302317301432e-5, 0.0001503308614095052, 70.7, 191.68765585124493))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-08T10:07:20.653
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9009047619047618, 0.895, 0.8973088235294117, 2.3121833801269532e-5, 2.5339126586914063e-5, 152.12, 52.11649118780042))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2368431091308592e-5, 1.9700527191162108e-5, 155.85, 0.0))
*** advance 1 from 1000; 2020-09-08T10:07:21.352
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8777936507936512, 0.8730000000000006, 0.8751114551083597, 2.7039051055908202e-5, 2.7329921722412108e-5, 152.13, 78.92927517183125))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6290416717529296e-5, 2.181053161621094e-5, 155.91, 0.0))
*** advance 1 from 1000; 2020-09-08T10:07:22.088
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8905833333333334, 0.8860000000000001, 0.8878055555555556, 2.6617050170898438e-5, 3.462076187133789e-5, 153.21, 42.63573607522994))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6209354400634767e-5, 3.0200481414794922e-5, 157.09, 0.0))
*** advance 1 from 1000; 2020-09-08T10:07:22.771
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9027499999999999, 0.9009999999999998, 0.9017777777777777, 0.00010390281677246094, 0.000528099536895752, 152.12, 47.27330058984808))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0001038670539855957, 0.0005713200569152832, 155.88, 0.0))
*** advance 1 from 1000; 2020-09-08T10:07:23.386
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8485555555555554, 0.8479999999999999, 0.8482631578947367, 8.798122406005859e-5, 0.0004262423515319824, 151.86, 212.7150601479225))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.777379989624023e-5, 0.00046267032623291014, 155.48, 0.0))
*** advance 1 from 1000; 2020-09-08T10:07:24.446
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9009047619047618, 0.895, 0.8973088235294117, 3.3078193664550783e-5, 7.344961166381836e-5, 152.12, 52.1291338740848))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.207683563232422e-5, 6.978988647460938e-5, 155.85, 0.015434336382895708))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:26.463
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7839999999999999, 0.7839999999999999, 0.7839999999999999, 0.0018104982376098632, 7.803916931152344e-5, 199.13, 182.00000202655792))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:27.731
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7710000000000001, 0.7710000000000001, 0.7710000000000001, 0.0018371295928955077, 7.405996322631836e-5, 201.98, 104.31428765505552))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:28.747
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6399999999999999, 0.6399999999999999, 0.6399999999999999, 0.0019612360000610353, 7.713079452514648e-5, 284.79, 6.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:29.777
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9620000000000006, 0.9620000000000006, 0.9620000000000006, 0.0016942954063415528, 1.900911331176758e-5, 222.44, 604.4000205397606))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:30.950
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.566, 0.566, 0.566, 0.0016531157493591309, 0.00041215896606445313, 254.77, 2373.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:32.028
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38299999999999995, 0.38299999999999995, NaN, 0.0020077681541442872, 0.0003276205062866211, 252.97, 3632.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-08T10:07:33.157
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.596, 0.596, 0.596, 0.0017099642753601073, 3.7531852722167966e-5, 247.65, 2380.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0716279069767443, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9583161630036635,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":2.726912498474121e-6,"evaluations":8.3984375,"distances_sum":601.1573560833931}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0837253057384757, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9518257783882788,"seconds":7.074326276779175e-6,"exhaustive_search_seconds":2.726912498474121e-6,"evaluations":8.3046875,"distances_sum":593.5927600860596}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0837253057384757,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9518257783882788,"seconds":7.074326276779175e-6,"exhaustive_search_seconds":2.726912498474121e-6,"evaluations":8.3046875,"distances_sum":593.5927600860596}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0837253057384757,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9518257783882788,"seconds":7.074326276779175e-6,"exhaustive_search_seconds":2.726912498474121e-6,"evaluations":8.3046875,"distances_sum":593.5927600860596}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0837253057384757,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9518257783882788,"seconds":7.074326276779175e-6,"exhaustive_search_seconds":2.726912498474121e-6,"evaluations":8.3046875,"distances_sum":593.5927600860596}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8828124999999988, conf: {"restarts":9}, perf: {"precision":0.8828124999999988,"recall":0.8828124999999988,"f1":0.8828124999999988,"seconds":2.1435320377349854e-5,"exhaustive_search_seconds":7.45430588722229e-6,"evaluations":51.984375,"distances_sum":282.6333177834749}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7575589459084604, conf: {"restarts":11}, perf: {"precision":0.9053819444444432,"recall":0.9053819444444432,"f1":0.9053819444444432,"seconds":2.372637391090393e-5,"exhaustive_search_seconds":7.45430588722229e-6,"evaluations":56.328125,"distances_sum":279.8775040060282}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7575589459084604,"state":{"restarts":11},"perf":{"precision":0.9053819444444432,"recall":0.9053819444444432,"f1":0.9053819444444432,"seconds":2.372637391090393e-5,"exhaustive_search_seconds":7.45430588722229e-6,"evaluations":56.328125,"distances_sum":279.8775040060282}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7575589459084604,"state":{"restarts":11},"perf":{"precision":0.9053819444444432,"recall":0.9053819444444432,"f1":0.9053819444444432,"seconds":2.372637391090393e-5,"exhaustive_search_seconds":7.45430588722229e-6,"evaluations":56.328125,"distances_sum":279.8775040060282}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7575589459084604,"state":{"restarts":11},"perf":{"precision":0.9053819444444432,"recall":0.9053819444444432,"f1":0.9053819444444432,"seconds":2.372637391090393e-5,"exhaustive_search_seconds":7.45430588722229e-6,"evaluations":56.328125,"distances_sum":279.8775040060282}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8732638888888877, conf: {"restarts":3}, perf: {"precision":0.8732638888888877,"recall":0.8732638888888877,"f1":0.8732638888888877,"seconds":3.208033740520477e-5,"exhaustive_search_seconds":2.7140602469444275e-5,"evaluations":80.171875,"distances_sum":125.07132423389703}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8871527777777769, conf: {"restarts":18}, perf: {"precision":0.8871527777777769,"recall":0.8871527777777769,"f1":0.8871527777777769,"seconds":6.515718996524811e-5,"exhaustive_search_seconds":2.7140602469444275e-5,"evaluations":178.9453125,"distances_sum":123.9253738457337}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8871527777777769,"state":{"restarts":18},"perf":{"precision":0.8871527777777769,"recall":0.8871527777777769,"f1":0.8871527777777769,"seconds":6.515718996524811e-5,"exhaustive_search_seconds":2.7140602469444275e-5,"evaluations":178.9453125,"distances_sum":123.9253738457337}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8871527777777769,"state":{"restarts":18},"perf":{"precision":0.8871527777777769,"recall":0.8871527777777769,"f1":0.8871527777777769,"seconds":6.515718996524811e-5,"exhaustive_search_seconds":2.7140602469444275e-5,"evaluations":178.9453125,"distances_sum":123.9253738457337}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8871527777777769,"state":{"restarts":18},"perf":{"precision":0.8871527777777769,"recall":0.8871527777777769,"f1":0.8871527777777769,"seconds":6.515718996524811e-5,"exhaustive_search_seconds":2.7140602469444275e-5,"evaluations":178.9453125,"distances_sum":123.9253738457337}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8506944444444433, conf: {"restarts":20}, perf: {"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00014025531709194183,"exhaustive_search_seconds":0.00043489038944244385,"evaluations":286.8671875,"distances_sum":56.40026895143092}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8446180555555548, conf: {"restarts":24}, perf: {"precision":0.8446180555555548,"recall":0.8446180555555548,"f1":0.8446180555555548,"seconds":0.00015250779688358307,"exhaustive_search_seconds":0.00043489038944244385,"evaluations":323.6875,"distances_sum":56.6513478141278}, best_list's length: 7, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8506944444444433,"state":{"restarts":20},"perf":{"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00014025531709194183,"exhaustive_search_seconds":0.00043489038944244385,"evaluations":286.8671875,"distances_sum":56.40026895143092}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8506944444444433,"state":{"restarts":20},"perf":{"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00014025531709194183,"exhaustive_search_seconds":0.00043489038944244385,"evaluations":286.8671875,"distances_sum":56.40026895143092}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8506944444444433,"state":{"restarts":20},"perf":{"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00014025531709194183,"exhaustive_search_seconds":0.00043489038944244385,"evaluations":286.8671875,"distances_sum":56.40026895143092}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(20), SatNeighborhood(32), 2020-09-08T10:07:41.387
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5236, 0.030244853f0), Item(3461, 0.03707304f0), Item(9418, 0.037714954f0), Item(5119, 0.03879591f0), Item(6799, 0.06289071f0), Item(960, 0.0631858f0), Item(7996, 0.06564157f0), Item(6443, 0.07431891f0), Item(3339, 0.07480823f0), Item(7815, 0.08102699f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9318965756465761,"seconds":0.0036383718252182007,"exhaustive_search_seconds":2.0079314708709717e-6,"evaluations":8.1484375,"distances_sum":579.1476518511772}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8935546875,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9318965756465761,"seconds":0.0036383718252182007,"exhaustive_search_seconds":2.0079314708709717e-6,"evaluations":8.1484375,"distances_sum":579.1476518511772}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.970464135021097,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.5599653124809265e-5,"exhaustive_search_seconds":7.178634405136108e-6,"evaluations":33.328125,"distances_sum":276.91072814539075}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":3.970464135021097,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.5599653124809265e-5,"exhaustive_search_seconds":7.178634405136108e-6,"evaluations":33.328125,"distances_sum":276.91072814539075}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.4191063174114,"state":{"bsize":3},"perf":{"precision":0.9782986111111108,"recall":0.9782986111111108,"f1":0.9782986111111108,"seconds":2.8127804398536682e-5,"exhaustive_search_seconds":2.7468428015708923e-5,"evaluations":60.84375,"distances_sum":120.55798696912825}}, beam: 3, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.4191063174114,"state":{"bsize":3},"perf":{"precision":0.9782986111111108,"recall":0.9782986111111108,"f1":0.9782986111111108,"seconds":2.8127804398536682e-5,"exhaustive_search_seconds":2.7468428015708923e-5,"evaluations":60.84375,"distances_sum":120.55798696912825}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 101.50035335689046, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.245821714401245e-5,"exhaustive_search_seconds":0.00036845169961452484,"evaluations":99.4921875,"distances_sum":55.937709796242416}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.50035335689046,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.245821714401245e-5,"exhaustive_search_seconds":0.00036845169961452484,"evaluations":99.4921875,"distances_sum":55.937709796242416}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.50035335689046,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.245821714401245e-5,"exhaustive_search_seconds":0.00036845169961452484,"evaluations":99.4921875,"distances_sum":55.937709796242416}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":101.50035335689046,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.245821714401245e-5,"exhaustive_search_seconds":0.00036845169961452484,"evaluations":99.4921875,"distances_sum":55.937709796242416}}, n: 9999
added n=10000, neighborhood=2, BeamSearch(6), SatNeighborhood(32), 2020-09-08T10:07:45.490
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5888, 0.015589755f0), Item(7348, 0.02269702f0), Item(754, 0.028971354f0), Item(5241, 0.032920368f0), Item(9534, 0.037093733f0), Item(6094, 0.040539883f0), Item(5707, 0.046636358f0), Item(8523, 0.0544825f0), Item(8025, 0.058045488f0), Item(2650, 0.058707114f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
