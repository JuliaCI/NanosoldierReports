Julia Version 1.6.0-DEV.854
Commit bb5a09f9cd (2020-09-07 12:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed InitialValues ─ v0.2.9
Updating `~/.julia/environments/v1.6/Project.toml`
  [22cec73e] + InitialValues v0.2.9
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [22cec73e] + InitialValues v0.2.9
    Testing InitialValues
Status `/tmp/jl_vtCm6r/Project.toml`
  [4c88cf16] Aqua v0.4.8
  [198e06fe] BangBang v0.3.29
  [22cec73e] InitialValues v0.2.9
  [efcf1570] Setfield v0.7.0
  [8dfed614] Test
Status `/tmp/jl_vtCm6r/Manifest.toml`
  [4c88cf16] Aqua v0.4.8
  [198e06fe] BangBang v0.3.29
  [34da2185] Compat v3.15.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [22cec73e] InitialValues v0.2.9
  [82899510] IteratorInterfaceExtensions v1.0.0
  [1914dd2f] MacroTools v0.5.5
  [ae029012] Requires v1.0.2
  [efcf1570] Setfield v0.7.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Warning: Ignoring ambiguities from `Base` to workaround JuliaLang/julia#36962
└ @ Aqua ~/.julia/packages/Aqua/RxLEZ/src/Aqua.jl:67
Unbound type parameters: Test Failed at /home/pkgeval/.julia/packages/Aqua/RxLEZ/src/unbound_args.jl:10
  Expression: detect_unbound_args_recursively(m) == []
   Evaluated: Any[show(io::IO, ::InitialValues.TypeOfINIT) where OP in InitialValues at /home/pkgeval/.julia/packages/InitialValues/HyltR/src/InitialValues.jl:81] == Any[]
Stacktrace:
 [1] test_unbound_args(m::Module)
   @ Aqua ~/.julia/packages/Aqua/RxLEZ/src/unbound_args.jl:10
 [2] macro expansion
   @ ~/.julia/packages/Aqua/RxLEZ/src/Aqua.jl:76 [inlined]
 [3] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [4] test_all(testtarget::Module; ambiguities::Bool, unbound_args::Bool, undefined_exports::Bool, project_extras::Bool, stale_deps::Bool, deps_compat::Bool, project_toml_formatting::Bool)
   @ Aqua ~/.julia/packages/Aqua/RxLEZ/src/Aqua.jl:75
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.Filesystem.JL_O_RANDOM
Skipping Base.Filesystem.JL_O_SEQUENTIAL
Skipping Base.Filesystem.JL_O_SHORT_LIVED
Skipping Base.Filesystem.JL_O_TEMPORARY
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.Filesystem.JL_O_RANDOM
Skipping Base.Filesystem.JL_O_SEQUENTIAL
Skipping Base.Filesystem.JL_O_SHORT_LIVED
Skipping Base.Filesystem.JL_O_TEMPORARY
15 ambiguities found
Ambiguity #1
convert(::Type{T}, x::T) where T in Base at essentials.jl:205
convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70

Ambiguity #2
convert(::Type{T}, x::T) where T in Base at essentials.jl:205
convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36

Ambiguity #3
vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(A::BitMatrix...) in Base at bitarray.jl:1808

Ambiguity #4
vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(X::Number...) in Base at abstractarray.jl:1427

Ambiguity #5
convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70

Ambiguity #6
vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976

Ambiguity #7
hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122
hcat(A::Union{BitMatrix, BitVector}...) in Base at bitarray.jl:1783

Ambiguity #8
hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122
hcat(B::BitVector...) in Base at bitarray.jl:1756

Ambiguity #9
convert(::Type{T}, x) where T>:Union{Missing, Nothing} in Base at missing.jl:70
convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35

Ambiguity #10
vcat(Xin::Union{Vector{T} where T, Matrix{T} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s841", var"#s840"} where var"#s840"<:SparseArrays.SparseVector where var"#s841", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s839", var"#s838"} where var"#s838"<:SparseArrays.SparseVector where var"#s839", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Adjoint{var"#s841", var"#s840"} where var"#s840"<:(Vector{T} where T) where var"#s841", LinearAlgebra.Adjoint{var"#s841", var"#s840"} where var"#s840"<:SparseArrays.SparseVector where var"#s841", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.Hermitian{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s841", var"#s840"} where var"#s840"<:SparseArrays.SparseVector where var"#s841", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s839", var"#s838"} where var"#s838"<:SparseArrays.SparseVector where var"#s839", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.SymTridiagonal, LinearAlgebra.Symmetric{T, A} where A<:Union{LinearAlgebra.Adjoint{var"#s841", var"#s840"} where var"#s840"<:SparseArrays.SparseVector where var"#s841", LinearAlgebra.Bidiagonal, LinearAlgebra.Diagonal, LinearAlgebra.SymTridiagonal, LinearAlgebra.Transpose{var"#s839", var"#s838"} where var"#s838"<:SparseArrays.SparseVector where var"#s839", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector} where T, LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Transpose{var"#s839", var"#s838"} where var"#s838"<:(Vector{T} where T) where var"#s839", LinearAlgebra.Transpose{var"#s839", var"#s838"} where var"#s838"<:SparseArrays.SparseVector where var"#s839", LinearAlgebra.Tridiagonal, SparseArrays.AbstractSparseMatrixCSC, SparseArrays.SparseVector}...) in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1091
vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976

Ambiguity #11
hvcat(rows::Tuple{Vararg{Int64, N} where N}, xs::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1123
hvcat(rows::Tuple{Vararg{Int64, N} where N}, xs::Number...) in Base at abstractarray.jl:1875

Ambiguity #12
vcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1121
vcat(V::BitVector...) in Base at bitarray.jl:1769

Ambiguity #13
convert(::Type{T}, x::T) where T in Base at essentials.jl:205
convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69

Ambiguity #14
hcat(A::Union{Vector{T}, Matrix{T}, LinearAlgebra.Adjoint{T, Vector{T}}, LinearAlgebra.Transpose{T, Vector{T}}, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T), LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T)}...) where T in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1122
hcat(X::Number...) in Base at abstractarray.jl:1428

Ambiguity #15
vcat(A::Union{Vector{T} where T, Matrix{T} where T, LinearAlgebra.AbstractTriangular{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Adjoint{var"#s841", var"#s840"} where var"#s840"<:(Vector{T} where T) where var"#s841", LinearAlgebra.Hermitian{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Symmetric{T, A} where A<:(Matrix{T} where T) where T, LinearAlgebra.Transpose{var"#s839", var"#s838"} where var"#s838"<:(Vector{T} where T) where var"#s839"}...) in SparseArrays at /opt/julia/share/julia/stdlib/v1.6/SparseArrays/src/sparsevector.jl:1115
vcat(rs::AbstractRange{T}...) where T in Base at range.jl:976

test_aqua.jl: Test Failed at /home/pkgeval/.julia/packages/Aqua/RxLEZ/src/ambiguities.jl:117
  Expression: success(pipeline(cmd; stdout = stdout, stderr = stderr))
Stacktrace:
  [1] _test_ambiguities(packages::Vector{Base.PkgId}; color::Nothing, exclude::Vector{Function}, detect_ambiguities_options::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Aqua ~/.julia/packages/Aqua/RxLEZ/src/ambiguities.jl:117
  [2] #test_ambiguities#9
    @ ~/.julia/packages/Aqua/RxLEZ/src/ambiguities.jl:27 [inlined]
  [3] top-level scope
    @ ~/.julia/packages/InitialValues/HyltR/test/test_aqua.jl:10
  [4] include(mod::Module, _path::String)
    @ Base ./Base.jl:377
  [5] include(x::String)
    @ Main.TestInitialValues ~/.julia/packages/InitialValues/HyltR/test/runtests.jl:1
  [6] top-level scope
    @ ~/.julia/packages/InitialValues/HyltR/test/runtests.jl:6
  [7] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
  [8] include(fname::String)
    @ Base.MainInclude ./client.jl:444
  [9] top-level scope
    @ none:6
 [10] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [11] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [12] _start()
    @ Base ./client.jl:485
Test Summary:                                | Pass  Fail  Total
test_aqua.jl                                 |    2     2      4
  Method ambiguity                           |    1            1
  Unbound type parameters                    |          1      1
  Undefined exports                          |    1            1
  Compare Project.toml and test/Project.toml |             No tests
  Stale dependencies                         |             No tests
  Compat bounds                              |             No tests
  Project.toml formatting                    |             No tests
Test Summary:                                | Pass  Fail  Total
test_aqua.jl                                 |    2     2      4
  Method ambiguity                           |    1            1
  Unbound type parameters                    |          1      1
  Undefined exports                          |    1            1
  Compare Project.toml and test/Project.toml |             No tests
  Stale dependencies                         |             No tests
  Compat bounds                              |             No tests
  Project.toml formatting                    |             No tests
ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/InitialValues/HyltR/test/runtests.jl:1

caused by: Some tests did not pass: 2 passed, 2 failed, 0 errored, 0 broken.
ERROR: Package InitialValues errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
