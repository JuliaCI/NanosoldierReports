Julia Version 1.6.0-DEV.854
Commit bb5a09f9cd (2020-09-07 12:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed VersionParsing ─ v1.2.0
  Installed SGP4 ─────────── v1.0.0
  Installed Conda ────────── v1.4.1
  Installed Parsers ──────── v1.0.10
  Installed MacroTools ───── v0.5.5
  Installed PyCall ───────── v1.91.4
  Installed JSON ─────────── v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [60da9cfa] + SGP4 v1.0.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.10
  [438e738f] + PyCall v1.91.4
  [60da9cfa] + SGP4 v1.0.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [4ec0a83e] + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing SGP4
Status `/tmp/jl_uSRvJJ/Project.toml`
  [438e738f] PyCall v1.91.4
  [60da9cfa] SGP4 v1.0.0
  [ade2ca70] Dates
  [8dfed614] Test
Status `/tmp/jl_uSRvJJ/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.10
  [438e738f] PyCall v1.91.4
  [60da9cfa] SGP4 v1.0.0
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: Installing sgp4.io via the Conda sgp4 package...
[ Info: Running `conda config --add channels conda-forge --file /home/pkgeval/.julia/conda/3/condarc-julia.yml --force` in root environment
[ Info: Running `conda install -q -y sgp4` in root environment
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... done

## Package Plan ##

  environment location: /home/pkgeval/.julia/conda/3

  added / updated specs:
    - sgp4


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    ca-certificates-2020.6.20  |       hecda079_0         145 KB  conda-forge
    certifi-2020.6.20          |   py38h32f6830_0         151 KB  conda-forge
    conda-4.8.4                |   py38h32f6830_2         3.0 MB  conda-forge
    openssl-1.1.1g             |       h516909a_1         2.1 MB  conda-forge
    python_abi-3.8             |           1_cp38           4 KB  conda-forge
    sgp4-2.10                  |   py38hd103949_2         159 KB  conda-forge
    ------------------------------------------------------------
                                           Total:         5.6 MB

The following NEW packages will be INSTALLED:

  python_abi         conda-forge/linux-64::python_abi-3.8-1_cp38
  sgp4               conda-forge/linux-64::sgp4-2.10-py38hd103949_2

The following packages will be UPDATED:

  conda                       pkgs/main::conda-4.8.4-py38_0 --> conda-forge::conda-4.8.4-py38h32f6830_2
  openssl              pkgs/main::openssl-1.1.1g-h7b6447c_0 --> conda-forge::openssl-1.1.1g-h516909a_1

The following packages will be SUPERSEDED by a higher-priority channel:

  ca-certificates    pkgs/main::ca-certificates-2020.7.22-0 --> conda-forge::ca-certificates-2020.6.20-hecda079_0
  certifi               pkgs/main::certifi-2020.6.20-py38_0 --> conda-forge::certifi-2020.6.20-py38h32f6830_0


Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = GravityModel at SGP4.jl:35 [inlined]
└ @ Core ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:35
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = twoline2rv(line1::String, line2::String, grav::SGP4.GravityModel) at SGP4.jl:39
└ @ SGP4 ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:39
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = getindex at SGP4.jl:33 [inlined]
└ @ Core ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:33
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = propagate(sat::SGP4.SGP4Sat, year::Int64, month::Int64, day::Int64, hour::Int64, min::Int64, sec::Float64) at SGP4.jl:76
└ @ SGP4 ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:76
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = propagate(sat::SGP4.SGP4Sat, year::Int64, month::Int64, day::Int64, hour::Int64, min::Int64, sec::Float64) at SGP4.jl:79
└ @ SGP4 ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:79
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = sgp4(sat::SGP4.SGP4Sat, dtmin::Float64) at SGP4.jl:44
└ @ SGP4 ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:44
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = propagate(sat::SGP4.SGP4Sat, year::Int64, month::Int64, day::Int64, hour::Int64, min::Int64, sec::Int64) at SGP4.jl:76
└ @ SGP4 ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:76
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = propagate(sat::SGP4.SGP4Sat, year::Int64, month::Int64, day::Int64, hour::Int64, min::Int64, sec::Int64) at SGP4.jl:79
└ @ SGP4 ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:79
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = getindex at SGP4.jl:33 [inlined]
└ @ Core ~/.julia/packages/SGP4/un9JP/src/SGP4.jl:33
    Testing SGP4 tests passed 
