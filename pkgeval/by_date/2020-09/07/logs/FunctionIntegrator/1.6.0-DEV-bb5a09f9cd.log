Julia Version 1.6.0-DEV.854
Commit bb5a09f9cd (2020-09-07 12:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_gUcpvz/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_gUcpvz/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.936110 seconds (1.48 M allocations: 78.617 MiB, 4.07% gc time)
Running: chebyshev_quadrature with k=1
  1.658014 seconds (2.22 M allocations: 126.887 MiB, 3.12% gc time)
Running: chebyshev_quadrature with k=2
  0.336513 seconds (417.70 k allocations: 23.878 MiB)
Running: chebyshev_quadrature with k=3
  0.382745 seconds (533.37 k allocations: 29.149 MiB, 9.05% gc time)
Running: chebyshev_quadrature with k=4
  0.301564 seconds (476.88 k allocations: 25.754 MiB)
Running: jacobi_quadrature with α=β=1
 36.615098 seconds (38.21 M allocations: 3.088 GiB, 9.76% gc time)
Running: laguerre_quadrature with k=1
  2.264196 seconds (3.27 M allocations: 180.947 MiB, 2.45% gc time)
Running: legendre_quadrature
  0.247174 seconds (211.97 k allocations: 12.104 MiB, 19.32% gc time)
Running: lobatto_quadrature
  0.318666 seconds (343.39 k allocations: 20.585 MiB)
Running: radau_quadrature
  0.268866 seconds (325.92 k allocations: 19.609 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 73.633645 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time)
Running: rectangle_rule_midpoint.
  0.155443 seconds (173.49 k allocations: 3.863 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.114061 seconds (100.02 M allocations: 1.491 GiB, 0.34% gc time)
Running: rombergs_method
  0.691188 seconds (743.16 k allocations: 42.521 MiB, 4.09% gc time)
Running: simpsons_rule
  0.039336 seconds (46.90 k allocations: 2.084 MiB)
Running: simpsons38_rule
  0.099817 seconds (112.74 k allocations: 5.930 MiB)
Running: trapezoidal_rule
  0.264927 seconds (1.52 M allocations: 25.802 MiB, 5.18% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.089656 seconds (32.25 k allocations: 1.908 MiB)
Running: chebyshev_quadrature with k=1
  0.488159 seconds (284.01 k allocations: 14.771 MiB)
Running: chebyshev_quadrature with k=2
  0.127705 seconds (94.48 k allocations: 2.698 MiB)
Running: chebyshev_quadrature with k=3
  0.147601 seconds (82.75 k allocations: 2.500 MiB)
Running: chebyshev_quadrature with k=4
  0.167237 seconds (65.36 k allocations: 2.146 MiB)
Running: jacobi_quadrature with α=β=1
  1.992293 seconds (514.06 k allocations: 162.273 MiB, 10.19% gc time)
Running: legendre_quadrature
  0.154586 seconds (43.45 k allocations: 2.493 MiB)
Running: lobatto_quadrature
  0.017993 seconds (17.25 k allocations: 1.066 MiB)
Running: radau_quadrature
  0.017715 seconds (17.24 k allocations: 1.066 MiB)
Running: rectangle_rule_left
 30.771885 seconds (471.41 M allocations: 7.025 GiB, 3.91% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.096050 seconds (476.96 M allocations: 7.107 GiB, 4.11% gc time)
Running: rombergs_method
  0.379902 seconds (336.56 k allocations: 18.958 MiB)
Running: simpsons_rule
  0.000015 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.103368 seconds (19.65 k allocations: 1.173 MiB)
Running: trapezoidal_rule
  0.081123 seconds (18.10 k allocations: 1.079 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029194 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.101014 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.101245 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.119576 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.114195 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.290280 seconds (370.51 k allocations: 19.306 MiB)
Running: legendre_quadrature
  0.067233 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000081 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000032 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000513 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000357 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000519 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.069615 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000035 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023954 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020817 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.062718 seconds (75.05 k allocations: 4.318 MiB)
Running: chebyshev_quadrature with k=1
  0.194966 seconds (235.53 k allocations: 13.184 MiB)
Running: chebyshev_quadrature with k=2
  0.254497 seconds (289.33 k allocations: 16.131 MiB, 11.39% gc time)
Running: chebyshev_quadrature with k=3
  0.215260 seconds (268.23 k allocations: 14.561 MiB)
Running: chebyshev_quadrature with k=4
  0.211170 seconds (268.25 k allocations: 14.457 MiB)
Running: jacobi_quadrature with α=β=1
  2.634898 seconds (456.08 k allocations: 163.582 MiB, 14.11% gc time)
Running: legendre_quadrature
  0.188040 seconds (189.81 k allocations: 10.868 MiB)
Running: lobatto_quadrature
  0.172697 seconds (201.34 k allocations: 11.583 MiB)
Running: radau_quadrature
  0.148324 seconds (201.33 k allocations: 11.589 MiB)
Running: rectangle_rule_left
  0.981715 seconds (19.56 k allocations: 1.174 MiB)
Running: rectangle_rule_midpoint
  0.027282 seconds (25.69 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  1.082846 seconds (18.10 k allocations: 1.088 MiB)
Running: rombergs_method
  0.117784 seconds (137.25 k allocations: 7.871 MiB)
Running: simpsons_rule
  0.029960 seconds (28.64 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.160792 seconds (44.12 k allocations: 2.739 MiB, 79.21% gc time)
Running: trapezoidal_rule
  0.026026 seconds (45.00 k allocations: 1.804 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042001 seconds (100.84 k allocations: 3.027 MiB)
Running: chebyshev_quadrature with k=1
  0.207789 seconds (242.26 k allocations: 13.236 MiB)
Running: chebyshev_quadrature with k=2
  0.158607 seconds (296.51 k allocations: 16.140 MiB)
Running: chebyshev_quadrature with k=3
  0.181893 seconds (275.10 k allocations: 14.551 MiB, 6.75% gc time)
Running: chebyshev_quadrature with k=4
  0.183451 seconds (275.12 k allocations: 14.561 MiB)
Running: hermite_quadrature with k=2
 13.549212 seconds (21.34 M allocations: 1.106 GiB, 8.58% gc time)
Running: jacobi_quadrature with α=β=1
  0.445840 seconds (465.44 k allocations: 49.876 MiB, 8.96% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.220220 seconds (282.57 k allocations: 15.496 MiB)
Running: legendre_quadrature
  0.203745 seconds (196.53 k allocations: 11.206 MiB)
Running: lobatto_quadrature
  0.268997 seconds (222.17 k allocations: 37.360 MiB, 13.36% gc time)
Running: radau_quadrature
  0.243650 seconds (218.75 k allocations: 30.026 MiB, 9.03% gc time)
Running: rectangle_rule_left
  0.036347 seconds (22.62 k allocations: 1.326 MiB)
Running: rectangle_rule_midpoint
  0.025103 seconds (27.58 k allocations: 1.683 MiB)
Running: rectangle_rule_right
  0.024209 seconds (19.27 k allocations: 1.145 MiB)
Running: rombergs_method
  0.114844 seconds (139.80 k allocations: 7.914 MiB)
Running: simpsons_rule
  0.037623 seconds (40.68 k allocations: 2.109 MiB)
Running: simpsons38_rule
  0.037261 seconds (59.30 k allocations: 3.134 MiB)
Running: trapezoidal_rule
  0.027118 seconds (31.23 k allocations: 1.737 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.035959 seconds (61.10 k allocations: 2.323 MiB)
Running: chebyshev_quadrature with k=1
  0.185626 seconds (237.69 k allocations: 13.020 MiB)
Running: chebyshev_quadrature with k=2
  0.295506 seconds (291.62 k allocations: 15.953 MiB, 6.45% gc time)
Running: chebyshev_quadrature with k=3
  0.206169 seconds (270.42 k allocations: 14.341 MiB)
Running: chebyshev_quadrature with k=4
  0.142455 seconds (270.44 k allocations: 14.342 MiB)
Running: hermite_quadrature with k=2
  0.136443 seconds (174.65 k allocations: 9.932 MiB, 16.27% gc time)
Running: jacobi_quadrature with α=β=1
  8.429479 seconds (458.59 k allocations: 1.175 GiB, 14.58% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.239186 seconds (277.74 k allocations: 15.311 MiB)
Running: legendre_quadrature
  0.163096 seconds (191.99 k allocations: 10.979 MiB)
Running: lobatto_quadrature
  0.433347 seconds (212.82 k allocations: 23.089 MiB, 49.17% gc time)
Running: radau_quadrature
  0.215542 seconds (211.97 k allocations: 21.021 MiB)
Running: rectangle_rule_left
  0.027754 seconds (20.30 k allocations: 1.217 MiB)
Running: rectangle_rule_midpoint
  0.027515 seconds (26.42 k allocations: 1.628 MiB)
Running: rectangle_rule_right
  0.024087 seconds (18.08 k allocations: 1.088 MiB)
Running: rombergs_method
  0.119702 seconds (135.50 k allocations: 7.729 MiB)
Running: simpsons_rule
  0.032399 seconds (33.09 k allocations: 1.894 MiB)
Running: simpsons38_rule
  0.043744 seconds (49.99 k allocations: 2.888 MiB)
Running: trapezoidal_rule
  0.069836 seconds (26.02 k allocations: 1.569 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033260 seconds (32.05 k allocations: 1.916 MiB)
Running: chebyshev_quadrature with k=1
  0.209390 seconds (236.03 k allocations: 13.239 MiB)
Running: chebyshev_quadrature with k=2
  0.507429 seconds (289.85 k allocations: 16.246 MiB, 50.34% gc time)
Running: chebyshev_quadrature with k=3
  0.225300 seconds (268.75 k allocations: 14.557 MiB)
Running: chebyshev_quadrature with k=4
  0.208684 seconds (268.77 k allocations: 14.392 MiB)
Running: jacobi_quadrature with α=β=1
  1.652294 seconds (456.63 k allocations: 194.623 MiB, 6.01% gc time)
Running: legendre_quadrature
  0.176280 seconds (190.33 k allocations: 10.901 MiB)
Running: lobatto_quadrature
  0.208524 seconds (201.85 k allocations: 11.676 MiB)
Running: radau_quadrature
  0.244499 seconds (201.85 k allocations: 11.608 MiB, 15.99% gc time)
Running: rectangle_rule_left
  0.380214 seconds (20.11 k allocations: 1.201 MiB)
Running: rectangle_rule_midpoint
  0.028274 seconds (26.05 k allocations: 1.610 MiB)
Running: rectangle_rule_right
  0.115309 seconds (18.46 k allocations: 1.108 MiB)
Running: rombergs_method
  0.150262 seconds (148.44 k allocations: 8.607 MiB)
Running: simpsons_rule
  0.033325 seconds (29.36 k allocations: 1.799 MiB)
Running: simpsons38_rule
  0.036348 seconds (44.87 k allocations: 2.770 MiB)
Running: trapezoidal_rule
  0.027283 seconds (45.97 k allocations: 1.838 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035106 seconds (32.78 k allocations: 1.867 MiB)
Running: chebyshev_quadrature with k=1
  0.198945 seconds (236.63 k allocations: 13.194 MiB)
Running: chebyshev_quadrature with k=2
  0.270871 seconds (290.50 k allocations: 16.146 MiB, 13.96% gc time)
Running: chebyshev_quadrature with k=3
  0.209220 seconds (269.34 k allocations: 14.477 MiB)
Running: chebyshev_quadrature with k=4
  0.211093 seconds (269.36 k allocations: 14.569 MiB)
Running: jacobi_quadrature with α=β=1
  2.013211 seconds (457.36 k allocations: 149.397 MiB, 9.47% gc time)
Running: legendre_quadrature
  0.137422 seconds (190.93 k allocations: 10.945 MiB)
Running: lobatto_quadrature
  0.211958 seconds (202.46 k allocations: 11.626 MiB)
Running: radau_quadrature
  0.192235 seconds (202.45 k allocations: 11.630 MiB, 15.95% gc time)
Running: rectangle_rule_left
  1.178294 seconds (20.36 k allocations: 1.214 MiB)
Running: rectangle_rule_midpoint
  0.042468 seconds (26.04 k allocations: 1.610 MiB)
Running: rectangle_rule_right
  1.162770 seconds (18.41 k allocations: 1.105 MiB)
Running: rombergs_method
  0.172968 seconds (138.50 k allocations: 7.928 MiB)
Running: simpsons_rule
  0.036499 seconds (30.06 k allocations: 1.825 MiB)
Running: simpsons38_rule
  0.040265 seconds (45.57 k allocations: 2.797 MiB)
Running: trapezoidal_rule
  0.030463 seconds (58.20 k allocations: 2.038 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.187648 seconds (151.12 k allocations: 8.916 MiB)
Running: chebyshev_quadrature with k=1
  0.149484 seconds (70.60 k allocations: 2.227 MiB)
Running: chebyshev_quadrature with k=2
  0.148614 seconds (105.77 k allocations: 2.890 MiB)
Running: chebyshev_quadrature with k=3
  0.156742 seconds (93.27 k allocations: 2.678 MiB)
Running: chebyshev_quadrature with k=4
  0.153499 seconds (72.80 k allocations: 2.274 MiB)
Running: jacobi_quadrature with α=β=1
  2.142377 seconds (487.56 k allocations: 168.073 MiB, 9.45% gc time)
Running: legendre_quadrature
  0.112619 seconds (19.38 k allocations: 1.112 MiB)
Running: lobatto_quadrature
  0.000152 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000108 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 43.757591 seconds (590.00 M allocations: 8.792 GiB, 3.41% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.196873 seconds (592.75 M allocations: 8.833 GiB, 2.97% gc time)
Running: rombergs_method
  0.114839 seconds (21.18 k allocations: 1.189 MiB)
Running: simpsons_rule
  0.000087 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026687 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023446 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.710017 seconds (629.33 M allocations: 9.387 GiB, 4.23% gc time)
Running: chebyshev_quadrature with k=1
  0.435293 seconds (429.80 k allocations: 23.613 MiB, 3.25% gc time)
Running: chebyshev_quadrature with k=2
 13.137446 seconds (485.73 k allocations: 4.041 GiB, 3.99% gc time)
Running: chebyshev_quadrature with k=3
  6.458756 seconds (282.91 k allocations: 1.643 GiB, 4.95% gc time)
Running: chebyshev_quadrature with k=4
  8.294991 seconds (282.93 k allocations: 2.262 GiB, 2.46% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.681345 seconds (495.75 k allocations: 13.255 GiB, 4.35% gc time)
Running: legendre_quadrature.
  5.238969 seconds (229.54 k allocations: 1.976 GiB, 2.31% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.772801 seconds (8.24 M allocations: 13.384 GiB, 5.22% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.822010 seconds (7.24 M allocations: 13.369 GiB, 4.03% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.941991 seconds (23.12 k allocations: 1.379 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.950191 seconds (31.66 k allocations: 1.928 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.853148 seconds (23.33 k allocations: 1.389 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.040839 seconds (450.42 k allocations: 153.195 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.498486 seconds (600.04 M allocations: 8.943 GiB, 8.57% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.898000 seconds (600.05 M allocations: 8.943 GiB, 8.16% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.051984 seconds (600.04 M allocations: 8.943 GiB, 8.68% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063637 seconds (181.85 k allocations: 4.461 MiB)
Running: chebyshev_quadrature with k=1
  0.220491 seconds (252.81 k allocations: 13.702 MiB)
Running: chebyshev_quadrature with k=2
  0.229152 seconds (277.68 k allocations: 14.749 MiB)
Running: chebyshev_quadrature with k=3
  0.205803 seconds (253.08 k allocations: 13.030 MiB)
Running: chebyshev_quadrature with k=4
  0.219836 seconds (253.10 k allocations: 13.028 MiB)
Running: jacobi_quadrature with α=β=1
  0.398617 seconds (396.03 k allocations: 35.295 MiB)
Running: laguerre_quadrature with k=2
  0.188664 seconds (184.77 k allocations: 10.666 MiB)
Running: legendre_quadrature
  0.139409 seconds (148.86 k allocations: 8.182 MiB)
Running: lobatto_quadrature
  0.038834 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.033371 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.060807 seconds (19.57 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.047254 seconds (26.50 k allocations: 1.612 MiB)
Running: rectangle_rule_right
  0.054468 seconds (18.16 k allocations: 1.074 MiB)
Running: rombergs_method
  0.255949 seconds (178.63 k allocations: 10.182 MiB)
Running: simpsons_rule
  0.001964 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.054633 seconds (80.68 k allocations: 3.451 MiB)
Running: trapezoidal_rule
  0.210883 seconds (2.39 M allocations: 37.726 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002200 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.120536 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.117605 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.111182 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.115965 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  5.945791 seconds (372.72 k allocations: 905.097 MiB, 5.16% gc time)
Running: legendre_quadrature
  0.072474 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000181 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000140 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.622426 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000582 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.873898 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.093637 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000069 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000072 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000857 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.001005 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.117635 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.112577 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.136327 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.120259 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.462946 seconds (379.39 k allocations: 253.216 MiB)
Running: legendre_quadrature
  0.069882 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000112 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000044 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.862875 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001082 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.954699 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.119103 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002072 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
