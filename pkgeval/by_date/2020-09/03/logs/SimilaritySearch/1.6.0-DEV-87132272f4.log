Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed Compat ───────────── v3.15.0
  Installed Missings ─────────── v0.4.4
  Installed StatsBase ────────── v0.32.0
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.18.3
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed SortingAlgorithms ── v0.3.1
  Installed Parsers ──────────── v1.0.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.3
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_uhWizK/Project.toml`
  [864edb3b] DataStructures v0.18.3
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_uhWizK/Manifest.toml`
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.3
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(12, 0.016778111f0), Item(38, 0.060640693f0), Item(7, 0.07108402f0), Item(41, 0.07274151f0)])
Vsorted = Item[Item(12, 0.016778111f0), Item(38, 0.060640693f0), Item(7, 0.07108402f0), Item(41, 0.07274151f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004316886266072591, 0.004748932520548503, 301.0, 50.73204109817743))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004192725817362467, 0.0042251984278361, 301.0, 73.24772191047668))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004249350229899088, 0.00420379638671875, 301.0, 41.54453670978546))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004170449574788412, 0.00431969960530599, 301.0, 9.371001751162112))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003922867774963379, 0.0050260623296101885, 301.0, 46.17127584293485))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018479029337565105, 0.00015242894490559897, 301.0, 178.42592333257198))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.861123402913412e-5, 0.011216505368550619, 300.0, 26.40512458793819)
p = PerformanceResult(1.0, 1.0, 1.0, 5.834102630615234e-5, 2.936522165934245e-5, 300.0, 26.40512458793819)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004056819279988607, 0.003919665018717448, 300.0, 1.400239687607609)
p = PerformanceResult(1.0, 1.0, 1.0, 4.786385430230035e-5, 2.0694732666015624e-5, 300.0, 1.400239687607609)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.861123402913412e-5, 0.011216505368550619, 300.0, 26.40512458793819), PerformanceResult(1.0, 1.0, 1.0, 5.834102630615234e-5, 2.936522165934245e-5, 300.0, 26.40512458793819), PerformanceResult(1.0, 1.0, 1.0, 0.004056819279988607, 0.003919665018717448, 300.0, 1.400239687607609), PerformanceResult(1.0, 1.0, 1.0, 4.786385430230035e-5, 2.0694732666015624e-5, 300.0, 1.400239687607609))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 117.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008223358790079753, 0.003962270418802897, 347.6333333333333, 28553.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007966740926106771, 0.0036481936772664388, 302.76666666666665, 6985.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4318695068359375e-5, 1.3963381449381511e-5, 95.86666666666666, 50.70825228840113))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2419293721516927e-5, 1.1968612670898438e-5, 86.96666666666667, 73.22095584869385))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.460479736328125e-5, 1.3573964436848958e-5, 90.6, 41.5056676864624))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.004506429036459e-5, 0.0001599709192911784, 95.96666666666667, 46.14825339987874))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8033333333333332, 0.8033333333333332, 0.8033333333333332, 4.970232645670573e-5, 0.0001262029012044271, 71.66666666666667, 188.13202185928822))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-03T18:30:39.925
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9080000000000003, 0.9080000000000003, 0.9080000000000003, 2.326488494873047e-5, 2.441883087158203e-5, 152.64, 51.263233980862424))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.8706321716308592e-5, 1.506805419921875e-5, 156.13, 0.0))
*** advance 1 from 1000; 2020-09-03T18:30:40.630
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8928888888888887, 0.8919999999999999, 0.892421052631579, 2.3088455200195313e-5, 2.3419857025146485e-5, 152.11, 76.78520897962153))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.218961715698242e-5, 1.8830299377441407e-5, 155.46, 0.0))
*** advance 1 from 1000; 2020-09-03T18:30:41.284
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.978, 0.978, 0.978, 2.7117729187011718e-5, 3.7739276885986326e-5, 167.81, 40.212876407429576))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.594470977783203e-5, 3.5860538482666015e-5, 172.92, 0.0))
*** advance 1 from 1000; 2020-09-03T18:30:41.970
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9120000000000001, 0.9120000000000001, 0.9120000000000001, 0.0001163029670715332, 0.0005709099769592286, 152.05, 46.337226127739996))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00011682271957397461, 0.0006229996681213379, 155.33, 0.0))
*** advance 1 from 1000; 2020-09-03T18:30:42.620
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8719999999999999, 0.8719999999999999, 0.8719999999999999, 9.801626205444336e-5, 0.0004580092430114746, 152.74, 202.81449876260012))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.873867034912109e-5, 0.0004949402809143066, 156.32, 0.0))
*** advance 1 from 1000; 2020-09-03T18:30:43.854
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9080000000000003, 0.9080000000000003, 0.9080000000000003, 2.3734569549560546e-5, 4.9290657043457033e-5, 152.64, 51.27313797548413))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.2253265380859375e-5, 6.939172744750977e-5, 156.13, 0.015669613116187975))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:45.728
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.738, 0.738, 0.738, 0.0015842342376708985, 7.580041885375977e-5, 198.88, 196.46666872501373))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:46.689
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7219999999999999, 0.7219999999999999, 0.7219999999999999, 0.0016342520713806153, 7.565975189208984e-5, 201.79, 113.88412914425135))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:47.665
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6879999999999998, 0.6879999999999998, 0.6879999999999998, 0.0017260599136352539, 7.899999618530274e-5, 251.93, 3.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:48.584
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.972, 0.972, 0.972, 0.001720418930053711, 1.5149116516113281e-5, 216.57, 597.8000210225582))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:49.755
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6100000000000001, 0.6100000000000001, 0.6100000000000001, 0.0017621850967407227, 0.00047455072402954104, 259.71, 2329.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:50.834
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3889999999999999, 0.3889999999999999, NaN, 0.001752622127532959, 0.0003695511817932129, 246.52, 3628.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-03T18:30:51.808
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5959999999999999, 0.5959999999999999, 0.5959999999999999, 0.001595144271850586, 2.917051315307617e-5, 250.12, 2384.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.082706766917293, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9527358058608065,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.3125,"distances_sum":617.5213183760643}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0950570342205324, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9464114010989019,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.21875,"distances_sum":604.6198608279228}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0950570342205324,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9464114010989019,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.21875,"distances_sum":604.6198608279228}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0950570342205324,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9464114010989019,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.21875,"distances_sum":604.6198608279228}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0950570342205324,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9464114010989019,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.21875,"distances_sum":604.6198608279228}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8975694444444433, conf: {"restarts":10}, perf: {"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":2.160109579563141e-5,"exhaustive_search_seconds":7.078051567077637e-6,"evaluations":52.953125,"distances_sum":278.51028176024556}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8975694444444433,"state":{"restarts":10},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":2.160109579563141e-5,"exhaustive_search_seconds":7.078051567077637e-6,"evaluations":52.953125,"distances_sum":278.51028176024556}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8975694444444433,"state":{"restarts":10},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":2.160109579563141e-5,"exhaustive_search_seconds":7.078051567077637e-6,"evaluations":52.953125,"distances_sum":278.51028176024556}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":0.8975694444444433,"state":{"restarts":10},"perf":{"precision":0.8975694444444433,"recall":0.8975694444444433,"f1":0.8975694444444433,"seconds":2.160109579563141e-5,"exhaustive_search_seconds":7.078051567077637e-6,"evaluations":52.953125,"distances_sum":278.51028176024556}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111102, conf: {"restarts":8}, perf: {"precision":0.8689236111111102,"recall":0.8689236111111102,"f1":0.8689236111111102,"seconds":4.237331449985504e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":112.9375,"distances_sum":124.45936411246657}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999991, conf: {"restarts":19}, perf: {"precision":0.8749999999999991,"recall":0.8749999999999991,"f1":0.8749999999999991,"seconds":6.628595292568207e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":182.5390625,"distances_sum":125.02110723406076}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8828124999999989, conf: {"restarts":16}, perf: {"precision":0.8828124999999989,"recall":0.8828124999999989,"f1":0.8828124999999989,"seconds":6.473623216152191e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":170.453125,"distances_sum":123.84209835156798}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333323, conf: {"restarts":1}, perf: {"precision":0.8645833333333323,"recall":0.8645833333333323,"f1":0.8645833333333323,"seconds":3.10409814119339e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":64.8984375,"distances_sum":124.6604762263596}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.867187499999999, conf: {"restarts":3}, perf: {"precision":0.867187499999999,"recall":0.867187499999999,"f1":0.867187499999999,"seconds":3.883428871631622e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":80.6328125,"distances_sum":124.98183278366923}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8828124999999989,"state":{"restarts":16},"perf":{"precision":0.8828124999999989,"recall":0.8828124999999989,"f1":0.8828124999999989,"seconds":6.473623216152191e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":170.453125,"distances_sum":123.84209835156798}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8828124999999989,"state":{"restarts":16},"perf":{"precision":0.8828124999999989,"recall":0.8828124999999989,"f1":0.8828124999999989,"seconds":6.473623216152191e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":170.453125,"distances_sum":123.84209835156798}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8828124999999989,"state":{"restarts":16},"perf":{"precision":0.8828124999999989,"recall":0.8828124999999989,"f1":0.8828124999999989,"seconds":6.473623216152191e-5,"exhaustive_search_seconds":2.7235597372055054e-5,"evaluations":170.453125,"distances_sum":123.84209835156798}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8706597222222211, conf: {"restarts":21}, perf: {"precision":0.8706597222222211,"recall":0.8706597222222211,"f1":0.8706597222222211,"seconds":0.00013881735503673553,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":303.015625,"distances_sum":55.9878036105074}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666655, conf: {"restarts":17}, perf: {"precision":0.8697916666666655,"recall":0.8697916666666655,"f1":0.8697916666666655,"seconds":0.0001333821564912796,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":270.3359375,"distances_sum":55.764641324523836}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666655, conf: {"restarts":24}, perf: {"precision":0.8697916666666655,"recall":0.8697916666666655,"f1":null,"seconds":0.00016329996287822723,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":332.4921875,"distances_sum":56.505449822638184}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8793402777777763, conf: {"restarts":15}, perf: {"precision":0.8793402777777763,"recall":0.8793402777777763,"f1":0.8793402777777763,"seconds":0.00012828968465328217,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":252.15625,"distances_sum":55.988669224549085}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8793402777777763,"state":{"restarts":15},"perf":{"precision":0.8793402777777763,"recall":0.8793402777777763,"f1":0.8793402777777763,"seconds":0.00012828968465328217,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":252.15625,"distances_sum":55.988669224549085}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8810763888888876, conf: {"restarts":10}, perf: {"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":null,"seconds":0.00042894668877124786,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":218.3203125,"distances_sum":56.182511877734214}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8810763888888876,"state":{"restarts":10},"perf":{"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":null,"seconds":0.00042894668877124786,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":218.3203125,"distances_sum":56.182511877734214}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8810763888888876,"state":{"restarts":10},"perf":{"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":null,"seconds":0.00042894668877124786,"exhaustive_search_seconds":0.00036779046058654785,"evaluations":218.3203125,"distances_sum":56.182511877734214}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(10), SatNeighborhood(32), 2020-09-03T18:31:00.054
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6629, 0.007472209f0), Item(3904, 0.015029209f0), Item(6407, 0.039474636f0), Item(570, 0.04344602f0), Item(8980, 0.05223141f0), Item(9979, 0.05295572f0), Item(5772, 0.06351325f0), Item(817, 0.06851405f0), Item(4243, 0.069873735f0), Item(3218, 0.07310309f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0929791271347247, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9475274725274733,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.234375,"distances_sum":614.6649878919125}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.084745762711864, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9488782051282058,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.296875,"distances_sum":621.8841576874256}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9475274725274733,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.234375,"distances_sum":614.6649878919125}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9475274725274733,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.234375,"distances_sum":614.6649878919125}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0929791271347247,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9475274725274733,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":2.1792948246002197e-6,"evaluations":8.234375,"distances_sum":614.6649878919125}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.435077256709135,"state":{"bsize":2},"perf":{"precision":0.9331597222222214,"recall":0.9331597222222214,"f1":0.9331597222222214,"seconds":1.422874629497528e-5,"exhaustive_search_seconds":9.873881936073303e-6,"evaluations":28.8203125,"distances_sum":279.42946450039744}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.435077256709135,"state":{"bsize":2},"perf":{"precision":0.9331597222222214,"recall":0.9331597222222214,"f1":0.9331597222222214,"seconds":1.422874629497528e-5,"exhaustive_search_seconds":9.873881936073303e-6,"evaluations":28.8203125,"distances_sum":279.42946450039744}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 18.079203953519432, conf: {"bsize":3}, perf: {"precision":0.9687499999999993,"recall":0.9687499999999993,"f1":0.9687499999999993,"seconds":2.7231872081756592e-5,"exhaustive_search_seconds":2.76956707239151e-5,"evaluations":58.4921875,"distances_sum":119.68008860107511}, best_list's length: 2, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 18.30572472594397, conf: {"bsize":4}, perf: {"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":2.6036053895950317e-5,"exhaustive_search_seconds":2.76956707239151e-5,"evaluations":57.7265625,"distances_sum":119.41179709788412}, best_list's length: 6, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.30572472594397,"state":{"bsize":4},"perf":{"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":2.6036053895950317e-5,"exhaustive_search_seconds":2.76956707239151e-5,"evaluations":57.7265625,"distances_sum":119.41179709788412}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.30572472594397,"state":{"bsize":4},"perf":{"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":2.6036053895950317e-5,"exhaustive_search_seconds":2.76956707239151e-5,"evaluations":57.7265625,"distances_sum":119.41179709788412}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.30572472594397,"state":{"bsize":4},"perf":{"precision":0.9826388888888886,"recall":0.9826388888888886,"f1":0.9826388888888886,"seconds":2.6036053895950317e-5,"exhaustive_search_seconds":2.76956707239151e-5,"evaluations":57.7265625,"distances_sum":119.41179709788412}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.52525849335302, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":5.9023499488830566e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":105.78125,"distances_sum":54.278261235915124}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":95.52525849335302,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":5.9023499488830566e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":105.78125,"distances_sum":54.278261235915124}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.91782853752596, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.481818854808807e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":105.34375,"distances_sum":54.275168529711664}, best_list's length: 8, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.56609239213294, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.309524178504944e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":102.484375,"distances_sum":54.275168529711664}, best_list's length: 9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.76317617100085, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.173178553581238e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":101.2421875,"distances_sum":54.278261235915124}, best_list's length: 11, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.76317617100085,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.173178553581238e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":101.2421875,"distances_sum":54.278261235915124}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.76317617100085,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.173178553581238e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":101.2421875,"distances_sum":54.278261235915124}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.76317617100085,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.173178553581238e-5,"exhaustive_search_seconds":0.0003626961261034012,"evaluations":101.2421875,"distances_sum":54.278261235915124}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-09-03T18:31:04.288
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3882, 0.022282291f0), Item(4486, 0.028226018f0), Item(206, 0.030878603f0), Item(8280, 0.030955471f0), Item(7179, 0.03354588f0), Item(8285, 0.053780027f0), Item(8882, 0.057960335f0), Item(2204, 0.058493987f0), Item(1583, 0.06231409f0), Item(8683, 0.06323603f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
