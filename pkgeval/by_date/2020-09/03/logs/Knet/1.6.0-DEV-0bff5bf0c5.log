Julia Version 1.6.0-DEV.818
Commit 0bff5bf0c5 (2020-09-02 13:42 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Compat ─────────────────────── v3.15.0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed GPUCompiler ────────────────── v0.6.1
  Installed NNlib ──────────────────────── v0.7.4
  Installed DataStructures ─────────────── v0.18.3
  Installed Knet ───────────────────────── v1.4.1
  Installed Requires ───────────────────── v1.0.2
  Installed JLD2 ───────────────────────── v0.1.3
  Installed CEnum ──────────────────────── v0.4.1
  Installed FileIO ─────────────────────── v1.4.3
  Installed ExprTools ──────────────────── v0.1.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed TimerOutputs ───────────────── v0.5.6
  Installed LLVM ───────────────────────── v2.0.0
  Installed Reexport ───────────────────── v0.2.0
  Installed CodecZlib ──────────────────── v0.7.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Adapt ──────────────────────── v2.0.2
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed MacroTools ─────────────────── v0.5.5
  Installed TranscodingStreams ─────────── v0.9.5
  Installed AutoGrad ───────────────────── v1.2.3
  Installed CUDA ───────────────────────── v1.3.3
  Installed GPUArrays ──────────────────── v5.1.0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [1902f260] + Knet v1.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.0.2
  [6710c13c] + AutoGrad v1.2.3
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v1.3.3
  [944b1d66] + CodecZlib v0.7.0
  [34da2185] + Compat v3.15.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.18.3
  [e2ba6199] + ExprTools v0.1.1
  [5789e2e9] + FileIO v1.4.3
  [0c68f7d7] + GPUArrays v5.1.0
  [61eb1bfa] + GPUCompiler v0.6.1
  [033835bb] + JLD2 v0.1.3
  [1902f260] + Knet v1.4.1
  [929cbde3] + LLVM v2.0.0
  [1914dd2f] + MacroTools v0.5.5
  [872c559c] + NNlib v0.7.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.2
  [276daf66] + SpecialFunctions v0.10.3
  [a759f4b9] + TimerOutputs v0.5.6
  [3bb67fe8] + TranscodingStreams v0.9.5
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Knet
Status `/tmp/jl_FSk8rc/Project.toml`
  [6710c13c] AutoGrad v1.2.3
  [052768ef] CUDA v1.3.3
  [5789e2e9] FileIO v1.4.3
  [033835bb] JLD2 v0.1.3
  [1902f260] Knet v1.4.1
  [872c559c] NNlib v0.7.4
  [276daf66] SpecialFunctions v0.10.3
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_FSk8rc/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [6710c13c] AutoGrad v1.2.3
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [944b1d66] CodecZlib v0.7.0
  [34da2185] Compat v3.15.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.18.3
  [e2ba6199] ExprTools v0.1.1
  [5789e2e9] FileIO v1.4.3
  [0c68f7d7] GPUArrays v5.1.0
  [61eb1bfa] GPUCompiler v0.6.1
  [033835bb] JLD2 v0.1.3
  [1902f260] Knet v1.4.1
  [929cbde3] LLVM v2.0.0
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.7.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [276daf66] SpecialFunctions v0.10.3
  [a759f4b9] TimerOutputs v0.5.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
kptr.jl	245.865257 seconds (17.48 M allocations: 1.035 GiB, 1.01% gc time)
gpu.jl	CUDA toolkit 11.0.3, artifact installation
CUDA driver 11.0.0
NVIDIA driver 450.36.6

Libraries: 
- CUBLAS: 11.2.0
- CURAND: 10.2.1
- CUFFT: 10.2.1
- CUSOLVER: 10.6.0
- CUSPARSE: 11.1.1
- CUPTI: 13.0.0
- NVML: 11.0.0+450.36.6
- CUDNN: 8.0.2 (for CUDA 11.0.0)
- CUTENSOR: 1.2.0 (for CUDA 11.0.0)

Toolchain:
- Julia: 1.6.0-DEV.818
- LLVM: 9.0.1
- PTX ISA support: 3.2, 4.0, 4.1, 4.2, 4.3, 5.0, 6.0, 6.1, 6.3, 6.4
- Device support: sm_35, sm_37, sm_50, sm_52, sm_53, sm_60, sm_61, sm_62, sm_70, sm_72, sm_75

1 device:
  0: Tesla T4 (sm_75, 14.599 GiB / 14.756 GiB available)
CuDevice(0): Tesla T4length(CUDA.devices()) = 1
CUDA.capability(CUDA.device()) = v"7.5.0"
CUDA.warpsize(CUDA.device()) = 32
CUDA.find_toolkit() = String[]
CUDA.version() = v"11.0.0"
Mem.info() = (15675949056, 15843721216)
CUDA.synchronize() = nothing
NVML.driver_version() = v"450.36.6"
NVML.version() = v"11.0.0+450.36.6"
NVML.cuda_driver_version() = v"11.0.0"
NVML.memory_info(nvmldev) = (total = 15843721216, free = 15675949056, used = 167772160)
CUBLAS.handle() = Ptr{Nothing} @0x000000000ab0c030
CUBLAS.version() = v"11.2.0"
CUDNN.handle() = Ptr{Nothing} @0x0000000029fb21b0
CUDNN.version() = v"8.0.2"
Knet.LibKnet8.libknet8 = "/home/pkgeval/.julia/artifacts/172aab1c490da4e9f26ed08c3b8e99cd86e8d7e7/libknet8"
readdir(artifact"libknet8") = ["libknet8.so"]
  5.908469 seconds (3.33 M allocations: 190.520 MiB, 1.67% gc time)
distributions.jl	  2.218697 seconds (3.22 M allocations: 182.256 MiB, 2.88% gc time)
dropout.jl	 22.605282 seconds (9.12 M allocations: 670.490 MiB, 1.78% gc time)
gcnode.jl	  8.764631 seconds (8.72 M allocations: 518.955 MiB, 2.77% gc time)
jld.jl	┌ Warning: type Ops20.Ops20.RNN does not exist in workspace; reconstructing
└ @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:1158
JLD: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/jld.jl:29
  Test threw exception
  Expression: macro_load()
  syntax: invalid syntax (struct_type (outerref ##Ops20.Ops20.RNN#255) #<julia: svec()> #<julia: svec(:w, :h, :c, :inputSize, :hiddenSize, :numLayers, :dropout, :seed, :inputMode, :direction, :mode, :algo, :dataType, :rnnDesc, :dropoutDesc, :dx, :dhx, :dcx)> #<julia: Any> #<julia: svec(Any, Any, Any, Int32, Int32, Int32, Float64, UInt64, Int32, Int32, Int32, Int32, DataType, Any, Any, Any, Any, Any)> (false) 0)
  Stacktrace:
    [1] top-level scope
      @ none:1
    [2] eval
      @ ./boot.jl:345 [inlined]
    [3] reconstruct_compound(f::JLD2.JLDFile{JLD2.MmapIO}, T::String, dt::JLD2.CompoundDatatype, field_datatypes::Vector{JLD2.RelOffset})
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:1190
    [4] constructrr(f::JLD2.JLDFile{JLD2.MmapIO}, unk::JLD2.UnknownType{String}, dt::JLD2.CompoundDatatype, attrs::Vector{JLD2.ReadAttribute})
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:1159
    [5] jltype(f::JLD2.JLDFile{JLD2.MmapIO}, cdt::JLD2.CommittedDatatype)
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:323
    [6] read_data(f::JLD2.JLDFile{JLD2.MmapIO}, dataspace::JLD2.ReadDataspace, datatype_class::UInt8, datatype_offset::Int64, data_offset::Int64, data_length::Int64, filter_id::UInt16, header_offset::JLD2.RelOffset, attributes::Vector{JLD2.ReadAttribute})
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/datasets.jl:146
    [7] load_dataset(f::JLD2.JLDFile{JLD2.MmapIO}, offset::JLD2.RelOffset)
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/datasets.jl:92
    [8] getindex(g::JLD2.Group{JLD2.JLDFile{JLD2.MmapIO}}, name::String)
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/groups.jl:108
    [9] read(f::JLD2.JLDFile{JLD2.MmapIO}, name::String)
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/JLD2.jl:326
   [10] (::var"#15#16")(f::JLD2.JLDFile{JLD2.MmapIO})
      @ Main ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:121
   [11] jldopen(f::var"#15#16", args::String; kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/loadsave.jl:4
   [12] jldopen
      @ ~/.julia/packages/JLD2/w2vgv/src/loadsave.jl:2 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:120 [inlined]
   [14] macro_load()
      @ Main ~/.julia/packages/Knet/8aEsn/test/jld.jl:13
   [15] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/jld.jl:29
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [17] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/jld.jl:8
┌ Warning: type Ops20.Ops20.RNN does not exist in workspace; reconstructing
└ @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:1158
Error encountered while loading "/tmp/test.jld2".

Fatal error:
JLD: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/jld.jl:38
  Test threw exception
  Expression: fun_sl()
  syntax: invalid syntax (struct_type (outerref ##Ops20.Ops20.RNN#256) #<julia: svec()> #<julia: svec(:w, :h, :c, :inputSize, :hiddenSize, :numLayers, :dropout, :seed, :inputMode, :direction, :mode, :algo, :dataType, :rnnDesc, :dropoutDesc, :dx, :dhx, :dcx)> #<julia: Any> #<julia: svec(Any, Any, Any, Int32, Int32, Int32, Float64, UInt64, Int32, Int32, Int32, Int32, DataType, Any, Any, Any, Any, Any)> (false) 0)
  Stacktrace:
    [1] handle_error(e::ErrorException, q::FileIO.File{FileIO.DataFormat{:JLD2}})
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/error_handling.jl:82
    [2] handle_exceptions(exceptions::Vector{Any}, action::String)
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/error_handling.jl:77
    [3] load(q::FileIO.Formatted, args::Any; options::Any)
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:207
    [4] load
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:184 [inlined]
    [5] #load#14
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:133 [inlined]
    [6] load
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:133 [inlined]
    [7] load(fname::String, args::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Knet.FileIO_gpu ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:35
    [8] load
      @ ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:35 [inlined]
    [9] (::var"#fun_sl#13"{String})()
      @ Main ~/.julia/packages/Knet/8aEsn/test/jld.jl:34
   [10] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/jld.jl:38
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [12] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/jld.jl:8
┌ Warning: type Ops20.Ops20.RNN does not exist in workspace; interpreting Array{Ops20.Ops20.RNN} as Array{Any}
└ @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/datasets.jl:194
┌ Warning: type Ops20.Ops20.RNN does not exist in workspace; reconstructing
└ @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:1158
Error encountered while loading "/tmp/test.jld2".

Fatal error:
JLD: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/jld.jl:58
  Test threw exception
  Expression: collections_sl()
  syntax: invalid syntax (struct_type (outerref ##Ops20.Ops20.RNN#257) #<julia: svec()> #<julia: svec(:w, :h, :c, :inputSize, :hiddenSize, :numLayers, :dropout, :seed, :inputMode, :direction, :mode, :algo, :dataType, :rnnDesc, :dropoutDesc, :dx, :dhx, :dcx)> #<julia: Any> #<julia: svec(Any, Any, Any, Int32, Int32, Int32, Float64, UInt64, Int32, Int32, Int32, Int32, DataType, Any, Any, Any, Any, Any)> (false) 0)
  Stacktrace:
    [1] handle_error(e::ErrorException, q::FileIO.File{FileIO.DataFormat{:JLD2}})
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/error_handling.jl:82
    [2] handle_exceptions(exceptions::Vector{Any}, action::String)
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/error_handling.jl:77
    [3] load(q::FileIO.Formatted, args::Any; options::Any)
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:207
    [4] load
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:184 [inlined]
    [5] #load#14
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:133 [inlined]
    [6] load
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:133 [inlined]
    [7] load(fname::String, args::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Knet.FileIO_gpu ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:35
    [8] load
      @ ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:35 [inlined]
    [9] (::var"#collections_sl#14"{String})()
      @ Main ~/.julia/packages/Knet/8aEsn/test/jld.jl:44
   [10] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/jld.jl:58
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [12] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/jld.jl:8
 27.034353 seconds (25.58 M allocations: 1.383 GiB, 3.64% gc time)
statistics.jl	 36.720931 seconds (27.40 M allocations: 1.767 GiB, 2.90% gc time)
bmm.jl	Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e70328f4f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e70328413)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e703281ec)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e70328014)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e70327ac7)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f7e70326fab)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f7e70324ce4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:9
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e70328f4f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e70328413)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e703281ec)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e70328014)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e70327ac7)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f7e70326fab)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f7e70324ce4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:9
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
bmm: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:8
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/bmm.jl:41
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/bmm.jl:9
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] macro expansion
      @ ./timing.jl:174 [inlined]
   [35] macro expansion
      @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
   [36] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [37] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
   [38] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [39] top-level scope
      @ none:6
   [40] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [41] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [42] _start()
      @ Base ./client.jl:485
 55.161856 seconds (46.16 M allocations: 2.780 GiB, 4.18% gc time)
serialize.jl	┌ Warning: type Ops20.Ops20.RNN does not exist in workspace; reconstructing
└ @ JLD2 ~/.julia/packages/JLD2/w2vgv/src/data.jl:1158
Error encountered while loading "/tmp/jl_nXzg4Y.jld2".

Fatal error:
serialize: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/serialize.jl:10
  Got exception outside of a @test
  syntax: invalid syntax (struct_type (outerref ##Ops20.Ops20.RNN#262) #<julia: svec()> #<julia: svec(:w, :h, :c, :inputSize, :hiddenSize, :numLayers, :dropout, :seed, :inputMode, :direction, :mode, :algo, :dataType, :rnnDesc, :dropoutDesc, :dx, :dhx, :dcx)> #<julia: Any> #<julia: svec(Any, Any, Any, Int32, Int32, Int32, Float64, UInt64, Int32, Int32, Int32, Int32, DataType, Any, Any, Any, Any, Any)> (false) 0)
  Stacktrace:
    [1] handle_error(e::ErrorException, q::FileIO.File{FileIO.DataFormat{:JLD2}})
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/error_handling.jl:82
    [2] handle_exceptions(exceptions::Vector{Any}, action::String)
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/error_handling.jl:77
    [3] load(q::FileIO.Formatted, args::Any; options::Any)
      @ FileIO ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:207
    [4] load
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:184 [inlined]
    [5] #load#14
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:133 [inlined]
    [6] load
      @ ~/.julia/packages/FileIO/wN5rD/src/loadsave.jl:133 [inlined]
    [7] load(fname::String, args::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ Knet.FileIO_gpu ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:35
    [8] load(fname::String, args::String)
      @ Knet.FileIO_gpu ~/.julia/packages/Knet/8aEsn/src/fileio_gpu/jld.jl:35
    [9] (::var"#m1test#61")(M1::RNN, xgpu::KnetArray{Float32, 3}, xcpu::Array{Float32, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/serialize.jl:37
   [10] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/serialize.jl:50
   [11] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [12] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/serialize.jl:11
   [13] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [14] macro expansion
      @ ./timing.jl:174 [inlined]
   [15] macro expansion
      @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
   [16] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [17] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
   [18] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [19] top-level scope
      @ none:6
   [20] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [21] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [22] _start()
      @ Base ./client.jl:485
  4.859545 seconds (4.57 M allocations: 263.311 MiB, 3.14% gc time)
loss.jl	 89.874952 seconds (66.94 M allocations: 4.821 GiB, 3.50% gc time)
cuarray.jl	┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{2}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e702a966f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e702a8f85)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e702a8d2f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e702a8b71)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e702a8590)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f7e702a085c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f7e702a073c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f7e70625384)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e702a966f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e702a8f85)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e702a8d2f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e702a8b71)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e702a8590)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f7e702a085c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f7e702a073c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f7e70625384)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuVector{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{2})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] hcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
 [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 =# @gcheck hcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuVector{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] hcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
   [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{1}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e702c05ef)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e702bff25)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e702bfcdf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e702bfb31)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e702bf7f0)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
vcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
#105 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f7e702bde1c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f7e702bdcfc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f7e70625384)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e702c05ef)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e702bff25)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e702bfcdf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e702bfb31)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e702bf7f0)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
vcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
#105 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f7e702bde1c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f7e702bdcfc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f7e70625384)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{1})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] vcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
 [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 =# @gcheck vcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{1})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] vcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
   [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e702d0ecf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e702d0813)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e702d05ec)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e702d0424)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e702d0167)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f7e702cfb9b)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f7e702ce994)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:23 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e702d0ecf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e702d0813)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e702d05ec)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e702d0424)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e702d0167)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f7e702cfb9b)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f7e702ce994)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:23 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:23
  Test threw exception
  Expression: permutedims(a0, (2, 1)) == permutedims(a1, (2, 1))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:23
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:24
  Test threw exception
  Expression: permutedims(a0, (1, 2)) == permutedims(a1, (1, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:24
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:29 =# @gcheck permutedims(a3, (2, 1))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:30 =# @gcheck permutedims(a3, (1, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{2}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e700e22cf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e700e1bc5)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e700e196f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e700e17b1)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e700e1460)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f7e702df2bc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f7e702df19c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f7e70625384)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e700e22cf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e700e1bc5)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e700e196f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e700e17b1)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e700e1460)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f7e702df2bc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f7e702df19c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f7e70625384)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{2})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] hcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
 [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 =# @gcheck hcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] hcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
   [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{1}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{1})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] vcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
 [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 =# @gcheck vcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{1})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] vcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
   [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e700f072f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e700f000e)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e700efda8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e700efbdb)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e700ef8a8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
getindex at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
unknown function (ip: 0x7f7e700ef146)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:14 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e700f072f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e700f000e)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e700efda8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e700efbdb)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e700ef8a8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
getindex at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
unknown function (ip: 0x7f7e700ef146)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:14 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:14
  Test threw exception
  Expression: getindex(a0, idx...) == getindex(a1, idx...)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
   [28] _unsafe_getindex!
      @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
   [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:14
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
 [28] _unsafe_getindex!
    @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
 [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] getindex
    @ ./none:0 [inlined]
 [33] (::var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:16 =# @gcheck getindex(a3, idx...)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
   [28] _unsafe_getindex!
      @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
   [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] getindex
      @ ./none:0 [inlined]
   [33] (::var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:32
  Test threw exception
  Expression: permutedims(a0, (1, 3, 2)) == permutedims(a1, (1, 3, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:32
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#101#121"{Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#101#121"{Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:34 =# @gcheck permutedims(a3, (1, 3, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#101#121"{Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#101#121"{Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e7010221f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e70101ad5)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e7010184f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e70101661)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e701012d0)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134 [inlined]
hcat at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:130
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:36 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e7010221f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e70101ad5)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e7010184f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e70101661)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e701012d0)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134 [inlined]
hcat at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:130
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:36 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:36
  Test threw exception
  Expression: hcat(a0, b0) == hcat(a1, b1)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] hcat(::KnetArray{Float64, 3}, ::KnetArray{Float64, 3})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:130
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:36
   [34] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [35] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] hcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
 [35] (::var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 =# @gcheck hcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] hcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
   [35] (::var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{1}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{1})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] vcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
 [35] (::var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 =# @gcheck vcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{1})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] vcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
   [35] (::var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:47
  Test threw exception
  Expression: setindex!(a0, b0[idx...], idx...) == setindex!(a1, b1[idx...], idx...)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
   [28] _unsafe_getindex!
      @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
   [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:47
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
  Expression: argmax(a0, dims = i) == argmax(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(2, 1, 1) CartesianIndex(7, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 1)]

CartesianIndex{3}[CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(5, 7, 2) CartesianIndex(8, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(2, 2, 3) … CartesianIndex(6, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(4, 2, 4) … CartesianIndex(1, 7, 4) CartesianIndex(6, 8, 4)]

CartesianIndex{3}[CartesianIndex(5, 1, 5) CartesianIndex(1, 2, 5) … CartesianIndex(6, 7, 5) CartesianIndex(2, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(1, 8, 6)]

CartesianIndex{3}[CartesianIndex(1, 1, 7) CartesianIndex(1, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(5, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(1, 8, 8)] == CartesianIndex{3}[CartesianIndex(2, 1, 1) CartesianIndex(7, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 1)]

CartesianIndex{3}[CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(5, 7, 2) CartesianIndex(8, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(4, 2, 3) … CartesianIndex(6, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(2, 2, 4) … CartesianIndex(1, 7, 4) CartesianIndex(6, 8, 4)]

CartesianIndex{3}[CartesianIndex(5, 1, 5) CartesianIndex(1, 2, 5) … CartesianIndex(6, 7, 5) CartesianIndex(2, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(1, 8, 6)]

CartesianIndex{3}[CartesianIndex(1, 1, 7) CartesianIndex(1, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(5, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(1, 8, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
  Expression: argmin(a0, dims = i) == argmin(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(8, 1, 1) CartesianIndex(6, 2, 1) … CartesianIndex(7, 7, 1) CartesianIndex(6, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(2, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(6, 8, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 3) CartesianIndex(1, 8, 3)]

CartesianIndex{3}[CartesianIndex(2, 1, 4) CartesianIndex(6, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(2, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(6, 2, 5) … CartesianIndex(5, 7, 5) CartesianIndex(6, 8, 5)]

CartesianIndex{3}[CartesianIndex(7, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(2, 7, 6) CartesianIndex(3, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(6, 7, 7) CartesianIndex(8, 8, 7)]

CartesianIndex{3}[CartesianIndex(3, 1, 8) CartesianIndex(8, 2, 8) … CartesianIndex(5, 7, 8) CartesianIndex(5, 8, 8)] == CartesianIndex{3}[CartesianIndex(8, 1, 1) CartesianIndex(6, 2, 1) … CartesianIndex(7, 7, 1) CartesianIndex(6, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(5, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(6, 8, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 3) CartesianIndex(1, 8, 3)]

CartesianIndex{3}[CartesianIndex(2, 1, 4) CartesianIndex(6, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(2, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(6, 2, 5) … CartesianIndex(5, 7, 5) CartesianIndex(6, 8, 5)]

CartesianIndex{3}[CartesianIndex(7, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(2, 7, 6) CartesianIndex(3, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(6, 7, 7) CartesianIndex(8, 8, 7)]

CartesianIndex{3}[CartesianIndex(3, 1, 8) CartesianIndex(8, 2, 8) … CartesianIndex(5, 7, 8) CartesianIndex(5, 8, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
  Expression: findmax(a0, dims = i) == findmax(a1, dims = i)
   Evaluated: ([0.8472428344640544 0.5900288212361098 … 0.9673359672601214 0.9408918738153143]

[0.832850919946027 0.9934058004190072 … 0.8932828801553714 0.8997025188386254]

[0.5774460801683319 0.6536803728772587 … 0.9273079482225606 0.6540435544197158]

[0.6406528587386837 0.9797765712100814 … 0.6102467696196539 0.893318058631343]

[0.9460659584698168 0.8668852199079511 … 0.7063619177635414 0.8107347468908686]

[0.8099319806265213 0.7970117179530121 … 0.8797892046781273 0.9649221934247139]

[0.8461493613665079 0.9963401134164667 … 0.9271548512107455 0.7639977623536012]

[0.9317601080480902 0.8513964427118896 … 0.8809812243208537 0.8579643781182134], CartesianIndex{3}[CartesianIndex(2, 1, 1) CartesianIndex(7, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 1)]

CartesianIndex{3}[CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(5, 7, 2) CartesianIndex(8, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(2, 2, 3) … CartesianIndex(6, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(4, 2, 4) … CartesianIndex(1, 7, 4) CartesianIndex(6, 8, 4)]

CartesianIndex{3}[CartesianIndex(5, 1, 5) CartesianIndex(1, 2, 5) … CartesianIndex(6, 7, 5) CartesianIndex(2, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(1, 8, 6)]

CartesianIndex{3}[CartesianIndex(1, 1, 7) CartesianIndex(1, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(5, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(1, 8, 8)]) == ([0.8472428344640544 0.5900288212361098 … 0.9673359672601214 0.9408918738153143]

[0.832850919946027 0.9934058004190072 … 0.8932828801553714 0.8997025188386254]

[0.5774460801683319 0.8581011712887274 … 0.9273079482225606 0.6540435544197158]

[0.6406528587386837 0.7920117039645793 … 0.6102467696196539 0.893318058631343]

[0.9460659584698168 0.8668852199079511 … 0.7063619177635414 0.8107347468908686]

[0.8099319806265213 0.7970117179530121 … 0.8797892046781273 0.9649221934247139]

[0.8461493613665079 0.9963401134164667 … 0.9271548512107455 0.7639977623536012]

[0.9317601080480902 0.8513964427118896 … 0.8809812243208537 0.8579643781182134], CartesianIndex{3}[CartesianIndex(2, 1, 1) CartesianIndex(7, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 1)]

CartesianIndex{3}[CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(5, 7, 2) CartesianIndex(8, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(4, 2, 3) … CartesianIndex(6, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(2, 2, 4) … CartesianIndex(1, 7, 4) CartesianIndex(6, 8, 4)]

CartesianIndex{3}[CartesianIndex(5, 1, 5) CartesianIndex(1, 2, 5) … CartesianIndex(6, 7, 5) CartesianIndex(2, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(1, 8, 6)]

CartesianIndex{3}[CartesianIndex(1, 1, 7) CartesianIndex(1, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(5, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(1, 8, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
  Expression: findmin(a0, dims = i) == findmin(a1, dims = i)
   Evaluated: ([0.11537971236473132 0.1824677781105477 … 0.06701795811006583 0.17108545391927743]

[0.03675004900888457 0.050152621278409804 … 0.4243592242757601 0.058045496423992704]

[0.0379504514109581 0.1349687794272083 … 0.09611501385201371 0.03615929210933588]

[0.013069146495297668 0.038015841039223286 … 0.06308493275978111 0.10750729390169655]

[0.09128708394634466 0.10295462230911934 … 0.16600408055881277 0.089486732321572]

[0.02373163234001474 0.2729714338851974 … 0.08372652741417941 0.009160913231137213]

[0.024954241281563316 0.16649742777442422 … 0.0645091335043555 0.20257062405074144]

[0.19735573951940655 0.006043636804885066 … 0.17820754429808283 0.011935179168752086], CartesianIndex{3}[CartesianIndex(8, 1, 1) CartesianIndex(6, 2, 1) … CartesianIndex(7, 7, 1) CartesianIndex(6, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(2, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(6, 8, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 3) CartesianIndex(1, 8, 3)]

CartesianIndex{3}[CartesianIndex(2, 1, 4) CartesianIndex(6, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(2, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(6, 2, 5) … CartesianIndex(5, 7, 5) CartesianIndex(6, 8, 5)]

CartesianIndex{3}[CartesianIndex(7, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(2, 7, 6) CartesianIndex(3, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(6, 7, 7) CartesianIndex(8, 8, 7)]

CartesianIndex{3}[CartesianIndex(3, 1, 8) CartesianIndex(8, 2, 8) … CartesianIndex(5, 7, 8) CartesianIndex(5, 8, 8)]) == ([0.11537971236473132 0.1824677781105477 … 0.06701795811006583 0.17108545391927743]

[0.03675004900888457 0.18867216712140267 … 0.4243592242757601 0.058045496423992704]

[0.0379504514109581 0.1349687794272083 … 0.09611501385201371 0.03615929210933588]

[0.013069146495297668 0.038015841039223286 … 0.06308493275978111 0.10750729390169655]

[0.09128708394634466 0.10295462230911934 … 0.16600408055881277 0.089486732321572]

[0.02373163234001474 0.2729714338851974 … 0.08372652741417941 0.009160913231137213]

[0.024954241281563316 0.16649742777442422 … 0.0645091335043555 0.20257062405074144]

[0.19735573951940655 0.006043636804885066 … 0.17820754429808283 0.011935179168752086], CartesianIndex{3}[CartesianIndex(8, 1, 1) CartesianIndex(6, 2, 1) … CartesianIndex(7, 7, 1) CartesianIndex(6, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(5, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(6, 8, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 3) CartesianIndex(1, 8, 3)]

CartesianIndex{3}[CartesianIndex(2, 1, 4) CartesianIndex(6, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(2, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(6, 2, 5) … CartesianIndex(5, 7, 5) CartesianIndex(6, 8, 5)]

CartesianIndex{3}[CartesianIndex(7, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(2, 7, 6) CartesianIndex(3, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(6, 7, 7) CartesianIndex(8, 8, 7)]

CartesianIndex{3}[CartesianIndex(3, 1, 8) CartesianIndex(8, 2, 8) … CartesianIndex(5, 7, 8) CartesianIndex(5, 8, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
  Expression: argmax(a0, dims = i) == argmax(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 7, 1); CartesianIndex(2, 7, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 5, 2); CartesianIndex(2, 5, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 2, 2)]

CartesianIndex{3}[CartesianIndex(1, 6, 3); CartesianIndex(2, 5, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 3, 4); CartesianIndex(2, 2, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 3, 4)]

CartesianIndex{3}[CartesianIndex(1, 1, 5); CartesianIndex(2, 3, 5); … ; CartesianIndex(7, 8, 5); CartesianIndex(8, 8, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 3, 6)]

CartesianIndex{3}[CartesianIndex(1, 2, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 3, 7); CartesianIndex(8, 7, 7)]

CartesianIndex{3}[CartesianIndex(1, 8, 8); CartesianIndex(2, 6, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 3, 8)] == CartesianIndex{3}[CartesianIndex(1, 7, 1); CartesianIndex(2, 7, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 5, 2); CartesianIndex(2, 3, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 2, 2)]

CartesianIndex{3}[CartesianIndex(1, 6, 3); CartesianIndex(2, 3, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 3, 4); CartesianIndex(2, 4, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 3, 4)]

CartesianIndex{3}[CartesianIndex(1, 1, 5); CartesianIndex(2, 3, 5); … ; CartesianIndex(7, 8, 5); CartesianIndex(8, 8, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 3, 6)]

CartesianIndex{3}[CartesianIndex(1, 2, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 3, 7); CartesianIndex(8, 7, 7)]

CartesianIndex{3}[CartesianIndex(1, 8, 8); CartesianIndex(2, 6, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 3, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
  Expression: argmin(a0, dims = i) == argmin(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 6, 1); CartesianIndex(2, 6, 1); … ; CartesianIndex(7, 6, 1); CartesianIndex(8, 7, 1)]

CartesianIndex{3}[CartesianIndex(1, 3, 2); CartesianIndex(2, 2, 2); … ; CartesianIndex(7, 6, 2); CartesianIndex(8, 5, 2)]

CartesianIndex{3}[CartesianIndex(1, 8, 3); CartesianIndex(2, 4, 3); … ; CartesianIndex(7, 8, 3); CartesianIndex(8, 7, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 1, 4); … ; CartesianIndex(7, 1, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 3, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 4, 5); CartesianIndex(8, 5, 5)]

CartesianIndex{3}[CartesianIndex(1, 3, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 1, 6); CartesianIndex(8, 7, 6)]

CartesianIndex{3}[CartesianIndex(1, 3, 7); CartesianIndex(2, 3, 7); … ; CartesianIndex(7, 5, 7); CartesianIndex(8, 5, 7)]

CartesianIndex{3}[CartesianIndex(1, 6, 8); CartesianIndex(2, 2, 8); … ; CartesianIndex(7, 3, 8); CartesianIndex(8, 2, 8)] == CartesianIndex{3}[CartesianIndex(1, 6, 1); CartesianIndex(2, 6, 1); … ; CartesianIndex(7, 6, 1); CartesianIndex(8, 7, 1)]

CartesianIndex{3}[CartesianIndex(1, 3, 2); CartesianIndex(2, 6, 2); … ; CartesianIndex(7, 6, 2); CartesianIndex(8, 5, 2)]

CartesianIndex{3}[CartesianIndex(1, 8, 3); CartesianIndex(2, 6, 3); … ; CartesianIndex(7, 8, 3); CartesianIndex(8, 7, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 1, 4); … ; CartesianIndex(7, 1, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 3, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 4, 5); CartesianIndex(8, 5, 5)]

CartesianIndex{3}[CartesianIndex(1, 3, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 1, 6); CartesianIndex(8, 7, 6)]

CartesianIndex{3}[CartesianIndex(1, 3, 7); CartesianIndex(2, 3, 7); … ; CartesianIndex(7, 5, 7); CartesianIndex(8, 5, 7)]

CartesianIndex{3}[CartesianIndex(1, 6, 8); CartesianIndex(2, 2, 8); … ; CartesianIndex(7, 3, 8); CartesianIndex(8, 2, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
  Expression: findmax(a0, dims = i) == findmax(a1, dims = i)
   Evaluated: ([0.9673359672601214; 0.961005282266711; … ; 0.8695191122866592; 0.8693854003072243]

[0.8597692711664644; 0.7768959794060417; … ; 0.7355038582976663; 0.9934058004190072]

[0.816746729915989; 0.9202247797321392; … ; 0.691394003951961; 0.9211855292536151]

[0.9622453731915603; 0.7354787824942861; … ; 0.7271852113888209; 0.5578575373106844]

[0.9090511889833202; 0.8705251378728935; … ; 0.6465429193190722; 0.6499362681043184]

[0.9649221934247139; 0.8797780751022068; … ; 0.6731450014670333; 0.8969707422531867]

[0.9963401134164667; 0.6219184699051772; … ; 0.9617962835322396; 0.8252260322520415]

[0.8579643781182134; 0.8996430796439672; … ; 0.8809812243208537; 0.8332075735518452], CartesianIndex{3}[CartesianIndex(1, 7, 1); CartesianIndex(2, 7, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 5, 2); CartesianIndex(2, 5, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 2, 2)]

CartesianIndex{3}[CartesianIndex(1, 6, 3); CartesianIndex(2, 5, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 3, 4); CartesianIndex(2, 2, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 3, 4)]

CartesianIndex{3}[CartesianIndex(1, 1, 5); CartesianIndex(2, 3, 5); … ; CartesianIndex(7, 8, 5); CartesianIndex(8, 8, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 3, 6)]

CartesianIndex{3}[CartesianIndex(1, 2, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 3, 7); CartesianIndex(8, 7, 7)]

CartesianIndex{3}[CartesianIndex(1, 8, 8); CartesianIndex(2, 6, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 3, 8)]) == ([0.9673359672601214; 0.961005282266711; … ; 0.8695191122866592; 0.8693854003072243]

[0.8597692711664644; 0.9290157931635807; … ; 0.7355038582976663; 0.9934058004190072]

[0.816746729915989; 0.9204033028018157; … ; 0.691394003951961; 0.9211855292536151]

[0.9622453731915603; 0.9428906550805505; … ; 0.7271852113888209; 0.5578575373106844]

[0.9090511889833202; 0.8705251378728935; … ; 0.6465429193190722; 0.6499362681043184]

[0.9649221934247139; 0.8797780751022068; … ; 0.6731450014670333; 0.8969707422531867]

[0.9963401134164667; 0.6219184699051772; … ; 0.9617962835322396; 0.8252260322520415]

[0.8579643781182134; 0.8996430796439672; … ; 0.8809812243208537; 0.8332075735518452], CartesianIndex{3}[CartesianIndex(1, 7, 1); CartesianIndex(2, 7, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 5, 2); CartesianIndex(2, 3, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 2, 2)]

CartesianIndex{3}[CartesianIndex(1, 6, 3); CartesianIndex(2, 3, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 3, 4); CartesianIndex(2, 4, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 3, 4)]

CartesianIndex{3}[CartesianIndex(1, 1, 5); CartesianIndex(2, 3, 5); … ; CartesianIndex(7, 8, 5); CartesianIndex(8, 8, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 3, 6)]

CartesianIndex{3}[CartesianIndex(1, 2, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 3, 7); CartesianIndex(8, 7, 7)]

CartesianIndex{3}[CartesianIndex(1, 8, 8); CartesianIndex(2, 6, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 3, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
  Expression: findmin(a0, dims = i) == findmin(a1, dims = i)
   Evaluated: ([0.36580890441623515; 0.05294859739063584; … ; 0.010385764237746065; 0.09188442123521123]

[0.1425362928542271; 0.050152621278409804; … ; 0.05971221962077067; 0.12298438651121457]

[0.03615929210933588; 0.10471998008100325; … ; 0.13247230504838536; 0.09611501385201371]

[0.06813293466123782; 0.013069146495297668; … ; 0.025012805594669674; 0.079014575655447]

[0.32271638881687115; 0.18183749401384786; … ; 0.05135437737102588; 0.19282810469208056]

[0.23150928732929943; 0.08372652741417941; … ; 0.02373163234001474; 0.1070292120926295]

[0.19376152825439452; 0.13456629249427676; … ; 0.0669641677696382; 0.12828337452328142]

[0.18741997581874337; 0.09676853894384152; … ; 0.07667284019550458; 0.006043636804885066], CartesianIndex{3}[CartesianIndex(1, 6, 1); CartesianIndex(2, 6, 1); … ; CartesianIndex(7, 6, 1); CartesianIndex(8, 7, 1)]

CartesianIndex{3}[CartesianIndex(1, 3, 2); CartesianIndex(2, 2, 2); … ; CartesianIndex(7, 6, 2); CartesianIndex(8, 5, 2)]

CartesianIndex{3}[CartesianIndex(1, 8, 3); CartesianIndex(2, 4, 3); … ; CartesianIndex(7, 8, 3); CartesianIndex(8, 7, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 1, 4); … ; CartesianIndex(7, 1, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 3, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 4, 5); CartesianIndex(8, 5, 5)]

CartesianIndex{3}[CartesianIndex(1, 3, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 1, 6); CartesianIndex(8, 7, 6)]

CartesianIndex{3}[CartesianIndex(1, 3, 7); CartesianIndex(2, 3, 7); … ; CartesianIndex(7, 5, 7); CartesianIndex(8, 5, 7)]

CartesianIndex{3}[CartesianIndex(1, 6, 8); CartesianIndex(2, 2, 8); … ; CartesianIndex(7, 3, 8); CartesianIndex(8, 2, 8)]) == ([0.36580890441623515; 0.05294859739063584; … ; 0.010385764237746065; 0.09188442123521123]

[0.1425362928542271; 0.39656369878795905; … ; 0.05971221962077067; 0.12298438651121457]

[0.03615929210933588; 0.1881423628122032; … ; 0.13247230504838536; 0.09611501385201371]

[0.06813293466123782; 0.013069146495297668; … ; 0.025012805594669674; 0.079014575655447]

[0.32271638881687115; 0.18183749401384786; … ; 0.05135437737102588; 0.19282810469208056]

[0.23150928732929943; 0.08372652741417941; … ; 0.02373163234001474; 0.1070292120926295]

[0.19376152825439452; 0.13456629249427676; … ; 0.0669641677696382; 0.12828337452328142]

[0.18741997581874337; 0.09676853894384152; … ; 0.07667284019550458; 0.006043636804885066], CartesianIndex{3}[CartesianIndex(1, 6, 1); CartesianIndex(2, 6, 1); … ; CartesianIndex(7, 6, 1); CartesianIndex(8, 7, 1)]

CartesianIndex{3}[CartesianIndex(1, 3, 2); CartesianIndex(2, 6, 2); … ; CartesianIndex(7, 6, 2); CartesianIndex(8, 5, 2)]

CartesianIndex{3}[CartesianIndex(1, 8, 3); CartesianIndex(2, 6, 3); … ; CartesianIndex(7, 8, 3); CartesianIndex(8, 7, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 1, 4); … ; CartesianIndex(7, 1, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 3, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 4, 5); CartesianIndex(8, 5, 5)]

CartesianIndex{3}[CartesianIndex(1, 3, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 1, 6); CartesianIndex(8, 7, 6)]

CartesianIndex{3}[CartesianIndex(1, 3, 7); CartesianIndex(2, 3, 7); … ; CartesianIndex(7, 5, 7); CartesianIndex(8, 5, 7)]

CartesianIndex{3}[CartesianIndex(1, 6, 8); CartesianIndex(2, 2, 8); … ; CartesianIndex(7, 3, 8); CartesianIndex(8, 2, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
  Expression: argmax(a0, dims = i) == argmax(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 1, 5) CartesianIndex(1, 2, 7) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 1) CartesianIndex(2, 2, 4) … CartesianIndex(2, 7, 1) CartesianIndex(2, 8, 6); … ; CartesianIndex(7, 1, 1) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(7, 8, 6); CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(8, 7, 7) CartesianIndex(8, 8, 2)] == CartesianIndex{3}[CartesianIndex(1, 1, 5) CartesianIndex(1, 2, 7) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 1) CartesianIndex(2, 2, 2) … CartesianIndex(2, 7, 1) CartesianIndex(2, 8, 6); … ; CartesianIndex(7, 1, 1) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(7, 8, 6); CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(8, 7, 7) CartesianIndex(8, 8, 2)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
  Expression: argmin(a0, dims = i) == argmin(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 3); CartesianIndex(2, 1, 4) CartesianIndex(2, 2, 2) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 4); … ; CartesianIndex(7, 1, 6) CartesianIndex(7, 2, 4) … CartesianIndex(7, 7, 1) CartesianIndex(7, 8, 3); CartesianIndex(8, 1, 1) CartesianIndex(8, 2, 8) … CartesianIndex(8, 7, 1) CartesianIndex(8, 8, 4)] == CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 3); CartesianIndex(2, 1, 4) CartesianIndex(2, 2, 8) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 4); … ; CartesianIndex(7, 1, 6) CartesianIndex(7, 2, 4) … CartesianIndex(7, 7, 1) CartesianIndex(7, 8, 3); CartesianIndex(8, 1, 1) CartesianIndex(8, 2, 8) … CartesianIndex(8, 7, 1) CartesianIndex(8, 8, 4)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
  Expression: findmax(a0, dims = i) == findmax(a1, dims = i)
   Evaluated: ([0.9090511889833202 0.9963401134164667 … 0.9673359672601214 0.9649221934247139; 0.8472428344640544 0.7354787824942861 … 0.961005282266711 0.843861936823115; … ; 0.8456221466403497 0.8095027389345126 … 0.9271548512107455 0.6731450014670333; 0.832850919946027 0.9934058004190072 … 0.8252260322520415 0.8997025188386254], CartesianIndex{3}[CartesianIndex(1, 1, 5) CartesianIndex(1, 2, 7) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 1) CartesianIndex(2, 2, 4) … CartesianIndex(2, 7, 1) CartesianIndex(2, 8, 6); … ; CartesianIndex(7, 1, 1) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(7, 8, 6); CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(8, 7, 7) CartesianIndex(8, 8, 2)]) == ([0.9090511889833202 0.9963401134164667 … 0.9673359672601214 0.9649221934247139; 0.8472428344640544 0.8490179127660054 … 0.961005282266711 0.843861936823115; … ; 0.8456221466403497 0.8095027389345126 … 0.9271548512107455 0.6731450014670333; 0.832850919946027 0.9934058004190072 … 0.8252260322520415 0.8997025188386254], CartesianIndex{3}[CartesianIndex(1, 1, 5) CartesianIndex(1, 2, 7) … CartesianIndex(1, 7, 1) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 1) CartesianIndex(2, 2, 2) … CartesianIndex(2, 7, 1) CartesianIndex(2, 8, 6); … ; CartesianIndex(7, 1, 1) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 7) CartesianIndex(7, 8, 6); CartesianIndex(8, 1, 2) CartesianIndex(8, 2, 2) … CartesianIndex(8, 7, 7) CartesianIndex(8, 8, 2)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
  Expression: findmin(a0, dims = i) == findmin(a1, dims = i)
   Evaluated: ([0.0379504514109581 0.2729714338851974 … 0.23815950973182987 0.03615929210933588; 0.013069146495297668 0.050152621278409804 … 0.08372652741417941 0.10750729390169655; … ; 0.02373163234001474 0.19465318874328852 … 0.06701795811006583 0.13247230504838536; 0.11537971236473132 0.006043636804885066 … 0.09188442123521123 0.19061709524235648], CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 3); CartesianIndex(2, 1, 4) CartesianIndex(2, 2, 2) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 4); … ; CartesianIndex(7, 1, 6) CartesianIndex(7, 2, 4) … CartesianIndex(7, 7, 1) CartesianIndex(7, 8, 3); CartesianIndex(8, 1, 1) CartesianIndex(8, 2, 8) … CartesianIndex(8, 7, 1) CartesianIndex(8, 8, 4)]) == ([0.0379504514109581 0.2729714338851974 … 0.23815950973182987 0.03615929210933588; 0.013069146495297668 0.09676853894384152 … 0.08372652741417941 0.10750729390169655; … ; 0.02373163234001474 0.19465318874328852 … 0.06701795811006583 0.13247230504838536; 0.11537971236473132 0.006043636804885066 … 0.09188442123521123 0.19061709524235648], CartesianIndex{3}[CartesianIndex(1, 1, 3) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 3); CartesianIndex(2, 1, 4) CartesianIndex(2, 2, 8) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 4); … ; CartesianIndex(7, 1, 6) CartesianIndex(7, 2, 4) … CartesianIndex(7, 7, 1) CartesianIndex(7, 8, 3); CartesianIndex(8, 1, 1) CartesianIndex(8, 2, 8) … CartesianIndex(8, 7, 1) CartesianIndex(8, 8, 4)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 47.415301 seconds (24.96 M allocations: 1.444 GiB, 2.12% gc time)
update.jl	┌ Warning: optimizers is deprecated, use sgd, adam etc. instead.
└ @ Knet.Train20 ~/.julia/packages/Knet/8aEsn/src/train20/update.jl:598
 71.032590 seconds (60.41 M allocations: 4.029 GiB, 6.70% gc time)
linalg.jl	Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e701c9d6f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e701c96b3)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e701c948c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e701c92c4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e701c9007)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p2 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:85
unknown function (ip: 0x7f7e701c89af)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e701c9d6f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e701c96b3)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e701c948c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e701c92c4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e701c9007)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p2 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:85
unknown function (ip: 0x7f7e701c89af)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88
  Test threw exception
  Expression: isapprox(p2(a), Array(p2(ka)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p2#141"{Vector{Int64}})(x::Knet.KnetArrays.KnetMatrix{Float32})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:88
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
 [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:89
  Test threw exception
  Expression: gradcheck(p2, ka)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88
  Test threw exception
  Expression: isapprox(p2(a), Array(p2(ka)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p2#141"{Vector{Int64}})(x::Knet.KnetArrays.KnetMatrix{Float32})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:88
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
 [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:89
  Test threw exception
  Expression: gradcheck(p2, ka)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1923
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e701d964f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e701d8f73)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e701d8d4c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e701d8b74)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e701d88b7)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p4 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:107
unknown function (ip: 0x7f7e701d825f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4457
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3939
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4138 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6715
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7077
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7111
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1929
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2190 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2183 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f7e701d964f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f7e701d8f73)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f7e701d8d4c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f7e701d8b74)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f7e701d88b7)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p4 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:107
unknown function (ip: 0x7f7e701d825f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:993
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
_include at ./loading.jl:1047
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1687 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_34257.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2191 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2373
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1687 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:969 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
