Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_HK2WML/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_HK2WML/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.043906 seconds (1.51 M allocations: 81.037 MiB, 6.58% gc time)
Running: chebyshev_quadrature with k=1
  1.692279 seconds (2.22 M allocations: 126.505 MiB, 2.86% gc time)
Running: chebyshev_quadrature with k=2
  0.331362 seconds (417.32 k allocations: 23.860 MiB)
Running: chebyshev_quadrature with k=3
  0.369992 seconds (532.74 k allocations: 29.102 MiB, 4.40% gc time)
Running: chebyshev_quadrature with k=4
  0.271146 seconds (476.24 k allocations: 25.698 MiB)
Running: jacobi_quadrature with α=β=1
 40.697959 seconds (38.17 M allocations: 3.084 GiB, 10.75% gc time)
Running: laguerre_quadrature with k=1
  3.022817 seconds (3.26 M allocations: 180.407 MiB, 2.87% gc time)
Running: legendre_quadrature
  0.260393 seconds (211.59 k allocations: 12.058 MiB)
Running: lobatto_quadrature
  0.346157 seconds (342.85 k allocations: 20.536 MiB, 7.27% gc time)
Running: radau_quadrature
  0.305713 seconds (325.49 k allocations: 19.572 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.580577 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.162025 seconds (173.41 k allocations: 3.856 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.856447 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rombergs_method
  0.543668 seconds (741.91 k allocations: 42.429 MiB, 5.69% gc time)
Running: simpsons_rule
  0.043921 seconds (46.84 k allocations: 2.079 MiB)
Running: simpsons38_rule
  0.085232 seconds (112.51 k allocations: 5.913 MiB)
Running: trapezoidal_rule
  0.280857 seconds (1.52 M allocations: 25.788 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.090617 seconds (32.19 k allocations: 1.903 MiB)
Running: chebyshev_quadrature with k=1
  0.484307 seconds (281.41 k allocations: 14.622 MiB)
Running: chebyshev_quadrature with k=2
  0.154694 seconds (94.41 k allocations: 2.692 MiB)
Running: chebyshev_quadrature with k=3
  0.163922 seconds (82.63 k allocations: 2.490 MiB)
Running: chebyshev_quadrature with k=4
  0.159435 seconds (65.24 k allocations: 2.137 MiB)
Running: jacobi_quadrature with α=β=1
  3.011400 seconds (513.75 k allocations: 162.236 MiB, 6.62% gc time)
Running: legendre_quadrature
  0.184018 seconds (43.20 k allocations: 2.474 MiB)
Running: lobatto_quadrature
  0.023040 seconds (17.07 k allocations: 1.053 MiB)
Running: radau_quadrature
  0.022151 seconds (17.06 k allocations: 1.053 MiB)
Running: rectangle_rule_left
 28.122502 seconds (471.41 M allocations: 7.025 GiB, 3.03% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.771934 seconds (476.96 M allocations: 7.107 GiB, 2.13% gc time)
Running: rombergs_method
  0.350909 seconds (335.75 k allocations: 18.891 MiB, 1.90% gc time)
Running: simpsons_rule
  0.000024 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064945 seconds (19.60 k allocations: 1.169 MiB)
Running: trapezoidal_rule
  0.054961 seconds (18.06 k allocations: 1.075 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028021 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.116299 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.101804 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.139048 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.127529 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.299824 seconds (370.75 k allocations: 19.292 MiB)
Running: legendre_quadrature
  0.052957 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000142 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000110 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000531 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000376 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000530 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.076304 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000059 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025911 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023826 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.057477 seconds (74.72 k allocations: 4.292 MiB)
Running: chebyshev_quadrature with k=1
  0.190297 seconds (235.33 k allocations: 13.166 MiB)
Running: chebyshev_quadrature with k=2
  0.170130 seconds (289.11 k allocations: 16.131 MiB)
Running: chebyshev_quadrature with k=3
  0.216359 seconds (268.03 k allocations: 14.525 MiB, 10.31% gc time)
Running: chebyshev_quadrature with k=4
  0.207820 seconds (268.05 k allocations: 14.439 MiB)
Running: jacobi_quadrature with α=β=1
  2.161118 seconds (456.19 k allocations: 163.577 MiB, 4.03% gc time)
Running: legendre_quadrature
  0.162925 seconds (189.62 k allocations: 10.851 MiB)
Running: lobatto_quadrature
  0.160616 seconds (201.27 k allocations: 11.572 MiB)
Running: radau_quadrature
  0.180508 seconds (201.27 k allocations: 11.574 MiB)
Running: rectangle_rule_left
  1.126179 seconds (19.49 k allocations: 1.168 MiB)
Running: rectangle_rule_midpoint
  0.026868 seconds (25.61 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  1.076724 seconds (18.01 k allocations: 1.081 MiB)
Running: rombergs_method
  0.145349 seconds (137.14 k allocations: 7.861 MiB)
Running: simpsons_rule
  0.032660 seconds (28.59 k allocations: 1.765 MiB)
Running: simpsons38_rule
  0.046451 seconds (44.06 k allocations: 2.733 MiB)
Running: trapezoidal_rule
  0.030139 seconds (44.96 k allocations: 1.800 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042477 seconds (100.78 k allocations: 3.022 MiB)
Running: chebyshev_quadrature with k=1
  0.205935 seconds (242.06 k allocations: 13.219 MiB)
Running: chebyshev_quadrature with k=2
  0.265701 seconds (296.27 k allocations: 16.147 MiB, 9.80% gc time)
Running: chebyshev_quadrature with k=3
  0.206780 seconds (274.89 k allocations: 14.533 MiB)
Running: chebyshev_quadrature with k=4
  0.280236 seconds (274.92 k allocations: 14.543 MiB)
Running: hermite_quadrature with k=2
 16.307368 seconds (21.36 M allocations: 1.107 GiB, 10.29% gc time)
Running: jacobi_quadrature with α=β=1
  0.505565 seconds (465.55 k allocations: 49.808 MiB, 7.19% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.249859 seconds (282.32 k allocations: 15.474 MiB)
Running: legendre_quadrature
  0.215845 seconds (196.33 k allocations: 11.188 MiB, 18.94% gc time)
Running: lobatto_quadrature
  0.232234 seconds (222.10 k allocations: 37.353 MiB)
Running: radau_quadrature
  0.223365 seconds (218.68 k allocations: 30.013 MiB, 9.35% gc time)
Running: rectangle_rule_left
  0.028041 seconds (22.54 k allocations: 1.320 MiB)
Running: rectangle_rule_midpoint
  0.030840 seconds (27.52 k allocations: 1.677 MiB)
Running: rectangle_rule_right
  0.023852 seconds (19.19 k allocations: 1.139 MiB)
Running: rombergs_method
  0.113261 seconds (139.69 k allocations: 7.904 MiB)
Running: simpsons_rule
  0.037694 seconds (40.62 k allocations: 2.103 MiB)
Running: simpsons38_rule
  0.047320 seconds (59.22 k allocations: 3.127 MiB)
Running: trapezoidal_rule
  0.033711 seconds (31.16 k allocations: 1.732 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044055 seconds (61.05 k allocations: 2.318 MiB)
Running: chebyshev_quadrature with k=1
  0.269401 seconds (237.50 k allocations: 13.003 MiB, 10.62% gc time)
Running: chebyshev_quadrature with k=2
  0.222938 seconds (291.38 k allocations: 15.874 MiB)
Running: chebyshev_quadrature with k=3
  0.230743 seconds (270.22 k allocations: 14.324 MiB)
Running: chebyshev_quadrature with k=4
  0.235057 seconds (270.24 k allocations: 14.325 MiB, 11.35% gc time)
Running: hermite_quadrature with k=2
  0.149376 seconds (174.48 k allocations: 9.917 MiB)
Running: jacobi_quadrature with α=β=1
  8.658531 seconds (458.70 k allocations: 1.175 GiB, 11.92% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.294314 seconds (277.50 k allocations: 15.290 MiB, 5.73% gc time)
Running: legendre_quadrature
  0.344700 seconds (191.79 k allocations: 10.961 MiB)
Running: lobatto_quadrature
  0.282468 seconds (212.75 k allocations: 23.078 MiB, 5.93% gc time)
Running: radau_quadrature
  0.191095 seconds (211.90 k allocations: 21.010 MiB)
Running: rectangle_rule_left
  0.034606 seconds (20.20 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.028513 seconds (26.34 k allocations: 1.622 MiB)
Running: rectangle_rule_right
  0.024801 seconds (18.00 k allocations: 1.082 MiB)
Running: rombergs_method
  0.117375 seconds (135.40 k allocations: 7.720 MiB)
Running: simpsons_rule
  0.039984 seconds (33.03 k allocations: 1.889 MiB)
Running: simpsons38_rule
  0.039947 seconds (49.92 k allocations: 2.882 MiB)
Running: trapezoidal_rule
  0.070546 seconds (25.97 k allocations: 1.565 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.053341 seconds (32.00 k allocations: 1.914 MiB, 31.24% gc time)
Running: chebyshev_quadrature with k=1
  0.193464 seconds (235.83 k allocations: 13.222 MiB)
Running: chebyshev_quadrature with k=2
  0.226312 seconds (289.62 k allocations: 16.272 MiB)
Running: chebyshev_quadrature with k=3
  0.230626 seconds (268.55 k allocations: 14.536 MiB, 8.04% gc time)
Running: chebyshev_quadrature with k=4
  0.208959 seconds (268.58 k allocations: 14.374 MiB)
Running: jacobi_quadrature with α=β=1
  2.949824 seconds (456.75 k allocations: 194.638 MiB, 5.35% gc time)
Running: legendre_quadrature
  0.210805 seconds (190.13 k allocations: 10.883 MiB, 8.31% gc time)
Running: lobatto_quadrature
  0.210917 seconds (201.79 k allocations: 11.603 MiB)
Running: radau_quadrature
  0.199840 seconds (201.78 k allocations: 11.597 MiB)
Running: rectangle_rule_left
  0.414086 seconds (20.04 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.028089 seconds (25.97 k allocations: 1.603 MiB)
Running: rectangle_rule_right
  0.132888 seconds (18.37 k allocations: 1.101 MiB)
Running: rombergs_method
  0.140704 seconds (148.32 k allocations: 8.597 MiB)
Running: simpsons_rule
  0.044252 seconds (29.31 k allocations: 1.795 MiB)
Running: simpsons38_rule
  0.039575 seconds (44.80 k allocations: 2.764 MiB)
Running: trapezoidal_rule
  0.050922 seconds (45.92 k allocations: 1.834 MiB, 34.80% gc time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033875 seconds (32.73 k allocations: 1.863 MiB)
Running: chebyshev_quadrature with k=1
  0.207125 seconds (236.43 k allocations: 13.231 MiB)
Running: chebyshev_quadrature with k=2
  0.252710 seconds (290.26 k allocations: 16.126 MiB)
Running: chebyshev_quadrature with k=3
  0.226185 seconds (269.14 k allocations: 14.460 MiB, 7.11% gc time)
Running: chebyshev_quadrature with k=4
  0.240623 seconds (269.17 k allocations: 14.567 MiB)
Running: jacobi_quadrature with α=β=1
  1.646369 seconds (457.47 k allocations: 149.309 MiB, 12.45% gc time)
Running: legendre_quadrature
  0.169422 seconds (190.73 k allocations: 10.928 MiB, 9.28% gc time)
Running: lobatto_quadrature
  0.180792 seconds (202.40 k allocations: 11.616 MiB)
Running: radau_quadrature
  0.175139 seconds (202.39 k allocations: 11.620 MiB)
Running: rectangle_rule_left
  1.221713 seconds (20.29 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.027714 seconds (25.96 k allocations: 1.604 MiB)
Running: rectangle_rule_right
  1.244599 seconds (18.35 k allocations: 1.100 MiB)
Running: rombergs_method
  0.144482 seconds (138.40 k allocations: 7.918 MiB)
Running: simpsons_rule
  0.035888 seconds (30.02 k allocations: 1.821 MiB)
Running: simpsons38_rule
  0.038128 seconds (45.51 k allocations: 2.792 MiB)
Running: trapezoidal_rule
  0.047866 seconds (58.16 k allocations: 2.034 MiB, 38.48% gc time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.199354 seconds (150.68 k allocations: 8.880 MiB, 10.35% gc time)
Running: chebyshev_quadrature with k=1
  0.185008 seconds (70.50 k allocations: 2.219 MiB)
Running: chebyshev_quadrature with k=2
  0.171975 seconds (105.70 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=3
  0.181836 seconds (93.14 k allocations: 2.669 MiB)
Running: chebyshev_quadrature with k=4
  0.178482 seconds (72.67 k allocations: 2.265 MiB)
Running: jacobi_quadrature with α=β=1
  2.256547 seconds (487.50 k allocations: 168.057 MiB, 4.78% gc time)
Running: legendre_quadrature
  0.155588 seconds (19.30 k allocations: 1.106 MiB)
Running: lobatto_quadrature
  0.000099 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000049 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.226789 seconds (590.00 M allocations: 8.792 GiB, 2.64% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.143807 seconds (592.75 M allocations: 8.833 GiB, 2.75% gc time)
Running: rombergs_method
  0.127832 seconds (21.07 k allocations: 1.179 MiB)
Running: simpsons_rule
  0.000104 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030880 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023973 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.380351 seconds (629.33 M allocations: 9.387 GiB, 3.88% gc time)
Running: chebyshev_quadrature with k=1
  0.540136 seconds (429.26 k allocations: 23.570 MiB)
Running: chebyshev_quadrature with k=2
 12.704877 seconds (485.15 k allocations: 4.041 GiB, 4.09% gc time)
Running: chebyshev_quadrature with k=3
  5.837988 seconds (282.70 k allocations: 1.643 GiB, 5.11% gc time)
Running: chebyshev_quadrature with k=4
  8.494707 seconds (282.72 k allocations: 2.262 GiB, 2.72% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 55.100637 seconds (495.64 k allocations: 13.255 GiB, 3.43% gc time)
Running: legendre_quadrature.
  6.556623 seconds (229.14 k allocations: 1.976 GiB, 3.48% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.405804 seconds (8.24 M allocations: 13.384 GiB, 3.95% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.022385 seconds (7.24 M allocations: 13.369 GiB, 2.61% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.352440 seconds (23.05 k allocations: 1.373 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.306672 seconds (31.59 k allocations: 1.921 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.108669 seconds (23.26 k allocations: 1.383 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.123325 seconds (449.46 k allocations: 153.117 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.239264 seconds (600.04 M allocations: 8.943 GiB, 8.69% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.315782 seconds (600.05 M allocations: 8.943 GiB, 8.17% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.863163 seconds (600.03 M allocations: 8.943 GiB, 9.01% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.070078 seconds (181.75 k allocations: 4.453 MiB)
Running: chebyshev_quadrature with k=1
  0.262994 seconds (252.62 k allocations: 13.685 MiB)
Running: chebyshev_quadrature with k=2
  0.240726 seconds (277.53 k allocations: 14.739 MiB)
Running: chebyshev_quadrature with k=3
  0.213794 seconds (252.96 k allocations: 13.024 MiB)
Running: chebyshev_quadrature with k=4
  0.204569 seconds (252.99 k allocations: 13.029 MiB)
Running: jacobi_quadrature with α=β=1
  0.382407 seconds (396.27 k allocations: 35.296 MiB)
Running: laguerre_quadrature with k=2
  0.188025 seconds (184.63 k allocations: 10.715 MiB)
Running: legendre_quadrature
  0.124614 seconds (148.77 k allocations: 8.174 MiB)
Running: lobatto_quadrature
  0.037230 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.036575 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.062508 seconds (19.51 k allocations: 1.143 MiB)
Running: rectangle_rule_midpoint
  0.048534 seconds (26.44 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.054432 seconds (18.10 k allocations: 1.069 MiB)
Running: rombergs_method
  0.237378 seconds (178.48 k allocations: 10.101 MiB)
Running: simpsons_rule
  0.001925 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.051284 seconds (80.61 k allocations: 3.445 MiB)
Running: trapezoidal_rule
  0.194965 seconds (2.39 M allocations: 37.721 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002285 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.142102 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.204110 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.134513 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.154223 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.773480 seconds (372.96 k allocations: 905.102 MiB, 3.66% gc time)
Running: legendre_quadrature
  0.073251 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000195 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000137 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.937565 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000497 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.290253 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075614 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000932 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.001020 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.109163 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.113691 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.129397 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.137208 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.262668 seconds (379.63 k allocations: 253.222 MiB)
Running: legendre_quadrature
  0.069625 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000133 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000041 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.064732 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001203 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.278983 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.107133 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000064 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001936 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
