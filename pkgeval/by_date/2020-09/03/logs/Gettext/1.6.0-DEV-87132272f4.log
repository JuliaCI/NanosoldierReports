Julia Version 1.6.0-DEV.830
Commit 87132272f4 (2020-09-03 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed VersionParsing ─ v1.2.0
  Installed Gettext ──────── v0.2.0
  Installed Parsers ──────── v1.0.10
  Installed MacroTools ───── v0.5.5
  Installed Conda ────────── v1.4.1
  Installed PyCall ───────── v1.91.4
  Installed JSON ─────────── v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [a6aca261] + Gettext v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [a6aca261] + Gettext v0.2.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.10
  [438e738f] + PyCall v1.91.4
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
┌ Warning: using test/REQUIRE files is deprecated and current support is lacking in some areas
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1476
    Testing Gettext
Status `/tmp/jl_KpXZw0/Project.toml`
  [59287772] Formatting v0.4.1
  [a6aca261] Gettext v0.2.0
  [438e738f] PyCall v1.91.4
  [44cfe95a] Pkg
  [8dfed614] Test
Status `/tmp/jl_KpXZw0/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [59287772] Formatting v0.4.1
  [a6aca261] Gettext v0.2.0
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.10
  [438e738f] PyCall v1.91.4
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = bindtextdomain(domain::String, localedir::String) at Gettext.jl:11
└ @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:11
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = textdomain(domain::String) at Gettext.jl:12
└ @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:12
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = gettext(message::String) at Gettext.jl:14
└ @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:14
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = ngettext(singular::String, plural::String, n::Int64) at Gettext.jl:16
└ @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:16
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = dgettext(domain::String, message::String) at Gettext.jl:15
└ @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:15
┌ Warning: `getindex(o::PyObject, s::Symbol)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o.s` instead of `o[:s]`.
│   caller = dngettext(domain::String, singular::String, plural::String, n::Int64) at Gettext.jl:17
└ @ Gettext ~/.julia/packages/Gettext/gCpPP/src/Gettext.jl:17
    Testing Gettext tests passed 
