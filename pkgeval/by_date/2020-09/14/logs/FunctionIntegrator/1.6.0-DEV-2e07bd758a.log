Julia Version 1.6.0-DEV.910
Commit 2e07bd758a (2020-09-13 14:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_6hsRAf/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_6hsRAf/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.805894 seconds (1.37 M allocations: 72.860 MiB, 1.82% gc time)
Running: chebyshev_quadrature with k=1
  1.734865 seconds (2.16 M allocations: 123.917 MiB, 7.64% gc time)
Running: chebyshev_quadrature with k=2
  0.288840 seconds (410.94 k allocations: 23.613 MiB, 5.10% gc time)
Running: chebyshev_quadrature with k=3
  0.325336 seconds (524.65 k allocations: 28.750 MiB)
Running: chebyshev_quadrature with k=4
  0.308197 seconds (469.04 k allocations: 25.370 MiB, 3.97% gc time)
Running: jacobi_quadrature with α=β=1
 35.661779 seconds (37.25 M allocations: 3.042 GiB, 8.95% gc time)
Running: laguerre_quadrature with k=1
  2.910741 seconds (3.19 M allocations: 177.691 MiB, 6.45% gc time)
Running: legendre_quadrature
  0.213332 seconds (207.12 k allocations: 11.871 MiB, 11.04% gc time)
Running: lobatto_quadrature
  0.291181 seconds (332.13 k allocations: 19.977 MiB)
Running: radau_quadrature
  0.254883 seconds (314.88 k allocations: 19.052 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.198525 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rectangle_rule_midpoint.
  0.153046 seconds (172.85 k allocations: 3.842 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.866036 seconds (100.02 M allocations: 1.491 GiB, 0.20% gc time)
Running: rombergs_method
  0.516800 seconds (726.26 k allocations: 41.805 MiB, 5.60% gc time)
Running: simpsons_rule
  0.038531 seconds (46.21 k allocations: 2.061 MiB)
Running: simpsons38_rule
  0.095438 seconds (109.87 k allocations: 5.803 MiB)
Running: trapezoidal_rule
  0.319309 seconds (1.51 M allocations: 25.704 MiB, 5.39% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081579 seconds (31.52 k allocations: 1.885 MiB)
Running: chebyshev_quadrature with k=1
  0.404884 seconds (274.19 k allocations: 14.218 MiB)
Running: chebyshev_quadrature with k=2
  0.132589 seconds (93.97 k allocations: 2.681 MiB)
Running: chebyshev_quadrature with k=3
  0.168277 seconds (82.22 k allocations: 2.482 MiB)
Running: chebyshev_quadrature with k=4
  0.175691 seconds (64.83 k allocations: 2.128 MiB)
Running: jacobi_quadrature with α=β=1
  2.181546 seconds (500.66 k allocations: 161.653 MiB, 10.47% gc time)
Running: legendre_quadrature
  0.159543 seconds (41.79 k allocations: 2.407 MiB)
Running: lobatto_quadrature
  0.020579 seconds (16.15 k allocations: 1.001 MiB)
Running: radau_quadrature
  0.019992 seconds (16.13 k allocations: 1.001 MiB)
Running: rectangle_rule_left
 27.774544 seconds (471.41 M allocations: 7.025 GiB, 3.24% gc time)
Running: rectangle_rule_midpoint
  0.000026 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.281546 seconds (476.96 M allocations: 7.107 GiB, 1.88% gc time)
Running: rombergs_method
  0.415047 seconds (328.38 k allocations: 18.604 MiB)
Running: simpsons_rule
  0.000031 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.075698 seconds (19.27 k allocations: 1.161 MiB)
Running: trapezoidal_rule
  0.058327 seconds (17.75 k allocations: 1.067 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028598 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.095683 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.099548 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.104757 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.106881 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.276544 seconds (363.41 k allocations: 18.922 MiB)
Running: legendre_quadrature
  0.063915 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000108 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000100 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000510 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000358 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000503 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.067836 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000047 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023932 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021380 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.054493 seconds (73.32 k allocations: 4.254 MiB)
Running: chebyshev_quadrature with k=1
  0.177637 seconds (231.21 k allocations: 12.964 MiB)
Running: chebyshev_quadrature with k=2
  0.224780 seconds (284.06 k allocations: 15.954 MiB, 12.23% gc time)
Running: chebyshev_quadrature with k=3
  0.210120 seconds (263.44 k allocations: 14.323 MiB)
Running: chebyshev_quadrature with k=4
  0.193952 seconds (263.46 k allocations: 14.245 MiB)
Running: jacobi_quadrature with α=β=1
  1.950504 seconds (447.44 k allocations: 163.150 MiB, 3.35% gc time)
Running: legendre_quadrature
  0.155936 seconds (186.06 k allocations: 10.714 MiB)
Running: lobatto_quadrature
  0.178914 seconds (197.00 k allocations: 11.408 MiB, 8.49% gc time)
Running: radau_quadrature
  0.171862 seconds (196.99 k allocations: 11.408 MiB)
Running: rectangle_rule_left
  1.069721 seconds (19.09 k allocations: 1.158 MiB)
Running: rectangle_rule_midpoint
  0.025555 seconds (25.05 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  1.100564 seconds (17.64 k allocations: 1.073 MiB)
Running: rombergs_method
  0.117879 seconds (134.40 k allocations: 7.754 MiB)
Running: simpsons_rule
  0.030463 seconds (27.97 k allocations: 1.746 MiB)
Running: simpsons38_rule
  0.035473 seconds (43.06 k allocations: 2.706 MiB)
Running: trapezoidal_rule
  0.026742 seconds (44.46 k allocations: 1.786 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041133 seconds (100.03 k allocations: 2.999 MiB)
Running: chebyshev_quadrature with k=1
  0.208267 seconds (237.80 k allocations: 13.035 MiB, 8.32% gc time)
Running: chebyshev_quadrature with k=2
  0.241539 seconds (291.08 k allocations: 15.881 MiB)
Running: chebyshev_quadrature with k=3
  0.198289 seconds (270.17 k allocations: 14.322 MiB)
Running: chebyshev_quadrature with k=4
  0.227145 seconds (270.19 k allocations: 14.335 MiB)
Running: hermite_quadrature with k=2
 15.080757 seconds (20.95 M allocations: 1.089 GiB, 9.27% gc time)
Running: jacobi_quadrature with α=β=1
  0.445274 seconds (456.66 k allocations: 49.370 MiB, 7.80% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.239351 seconds (277.29 k allocations: 15.263 MiB)
Running: legendre_quadrature
  0.188148 seconds (192.63 k allocations: 11.034 MiB, 16.38% gc time)
Running: lobatto_quadrature
  0.222873 seconds (217.82 k allocations: 37.181 MiB)
Running: radau_quadrature
  0.224575 seconds (214.41 k allocations: 29.841 MiB, 8.71% gc time)
Running: rectangle_rule_left
  0.029212 seconds (22.05 k allocations: 1.306 MiB)
Running: rectangle_rule_midpoint
  0.028425 seconds (26.89 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.025960 seconds (18.79 k allocations: 1.129 MiB)
Running: rombergs_method
  0.114755 seconds (136.88 k allocations: 7.790 MiB)
Running: simpsons_rule
  0.036078 seconds (39.87 k allocations: 2.080 MiB)
Running: simpsons38_rule
  0.043124 seconds (58.09 k allocations: 3.092 MiB)
Running: trapezoidal_rule
  0.031033 seconds (30.55 k allocations: 1.714 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040631 seconds (60.38 k allocations: 2.298 MiB)
Running: chebyshev_quadrature with k=1
  0.221362 seconds (233.32 k allocations: 12.832 MiB, 11.90% gc time)
Running: chebyshev_quadrature with k=2
  0.222985 seconds (286.28 k allocations: 15.647 MiB)
Running: chebyshev_quadrature with k=3
  0.214119 seconds (265.58 k allocations: 14.127 MiB)
Running: chebyshev_quadrature with k=4
  0.243964 seconds (265.60 k allocations: 14.125 MiB, 11.76% gc time)
Running: hermite_quadrature with k=2
  0.149277 seconds (171.23 k allocations: 9.794 MiB)
Running: jacobi_quadrature with α=β=1
  9.703239 seconds (449.90 k allocations: 1.175 GiB, 12.55% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.221413 seconds (272.56 k allocations: 15.079 MiB, 5.33% gc time)
Running: legendre_quadrature
  0.159181 seconds (188.18 k allocations: 10.822 MiB)
Running: lobatto_quadrature
  0.222804 seconds (208.57 k allocations: 22.910 MiB, 6.61% gc time)
Running: radau_quadrature
  0.197933 seconds (207.72 k allocations: 20.843 MiB)
Running: rectangle_rule_left
  0.025827 seconds (19.81 k allocations: 1.200 MiB)
Running: rectangle_rule_midpoint
  0.026409 seconds (25.76 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.023782 seconds (17.63 k allocations: 1.073 MiB)
Running: rombergs_method
  0.172960 seconds (132.69 k allocations: 7.613 MiB)
Running: simpsons_rule
  0.052618 seconds (32.36 k allocations: 1.871 MiB)
Running: simpsons38_rule
  0.093015 seconds (48.87 k allocations: 2.851 MiB)
Running: trapezoidal_rule
  0.029185 seconds (25.43 k allocations: 1.550 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034694 seconds (31.33 k allocations: 1.893 MiB)
Running: chebyshev_quadrature with k=1
  0.305283 seconds (231.70 k allocations: 13.042 MiB, 4.90% gc time)
Running: chebyshev_quadrature with k=2
  0.276917 seconds (284.56 k allocations: 15.992 MiB)
Running: chebyshev_quadrature with k=3
  0.252870 seconds (263.95 k allocations: 14.322 MiB)
Running: chebyshev_quadrature with k=4
  0.323580 seconds (263.98 k allocations: 14.166 MiB, 5.22% gc time)
Running: jacobi_quadrature with α=β=1
  3.521969 seconds (447.99 k allocations: 194.235 MiB, 5.32% gc time)
Running: legendre_quadrature
  0.180582 seconds (186.56 k allocations: 10.750 MiB)
Running: lobatto_quadrature
  0.206169 seconds (197.50 k allocations: 11.434 MiB, 6.57% gc time)
Running: radau_quadrature
  0.240114 seconds (197.50 k allocations: 11.434 MiB)
Running: rectangle_rule_left
  0.304294 seconds (19.61 k allocations: 1.184 MiB)
Running: rectangle_rule_midpoint
  0.025605 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  0.106232 seconds (17.99 k allocations: 1.092 MiB)
Running: rombergs_method
  0.135906 seconds (145.33 k allocations: 8.481 MiB)
Running: simpsons_rule
  0.034875 seconds (28.67 k allocations: 1.776 MiB)
Running: simpsons38_rule
  0.039781 seconds (43.78 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.029917 seconds (45.40 k allocations: 1.820 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035481 seconds (32.09 k allocations: 1.844 MiB)
Running: chebyshev_quadrature with k=1
  0.221910 seconds (232.29 k allocations: 13.007 MiB, 8.80% gc time)
Running: chebyshev_quadrature with k=2
  0.290063 seconds (285.19 k allocations: 15.896 MiB)
Running: chebyshev_quadrature with k=3
  0.258946 seconds (264.53 k allocations: 14.247 MiB)
Running: chebyshev_quadrature with k=4
  0.231501 seconds (264.55 k allocations: 14.389 MiB, 7.57% gc time)
Running: jacobi_quadrature with α=β=1
  2.286817 seconds (448.69 k allocations: 148.905 MiB, 9.87% gc time)
Running: legendre_quadrature
  0.170557 seconds (187.15 k allocations: 10.757 MiB)
Running: lobatto_quadrature
  0.214928 seconds (198.10 k allocations: 11.451 MiB, 9.55% gc time)
Running: radau_quadrature
  0.176315 seconds (198.09 k allocations: 11.468 MiB)
Running: rectangle_rule_left
  1.247180 seconds (19.86 k allocations: 1.197 MiB)
Running: rectangle_rule_midpoint
  0.028102 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  1.245057 seconds (17.95 k allocations: 1.089 MiB)
Running: rombergs_method
  0.172905 seconds (135.63 k allocations: 7.807 MiB)
Running: simpsons_rule
  0.050622 seconds (29.37 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.039525 seconds (44.48 k allocations: 2.761 MiB)
Running: trapezoidal_rule
  0.025865 seconds (57.63 k allocations: 2.020 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.162262 seconds (147.31 k allocations: 8.780 MiB)
Running: chebyshev_quadrature with k=1
  0.138935 seconds (70.10 k allocations: 2.210 MiB)
Running: chebyshev_quadrature with k=2
  0.146892 seconds (105.25 k allocations: 2.873 MiB)
Running: chebyshev_quadrature with k=3
  0.211353 seconds (92.74 k allocations: 2.660 MiB, 26.36% gc time)
Running: chebyshev_quadrature with k=4
  0.156975 seconds (72.27 k allocations: 2.256 MiB)
Running: jacobi_quadrature with α=β=1
  2.757438 seconds (476.08 k allocations: 167.540 MiB, 7.66% gc time)
Running: legendre_quadrature
  0.180461 seconds (18.89 k allocations: 1.098 MiB)
Running: lobatto_quadrature
  0.000139 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000045 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 44.204038 seconds (590.00 M allocations: 8.792 GiB, 4.05% gc time)
Running: rectangle_rule_midpoint
  0.000076 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.648045 seconds (592.75 M allocations: 8.833 GiB, 3.69% gc time)
Running: rombergs_method
  0.137441 seconds (20.67 k allocations: 1.171 MiB)
Running: simpsons_rule
  0.000050 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032360 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.026281 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.126816 seconds (629.33 M allocations: 9.387 GiB, 5.40% gc time)
Running: chebyshev_quadrature with k=1
  0.433421 seconds (420.90 k allocations: 23.246 MiB)
Running: chebyshev_quadrature with k=2
 13.542249 seconds (475.81 k allocations: 4.041 GiB, 3.97% gc time)
Running: chebyshev_quadrature with k=3
  5.980792 seconds (277.89 k allocations: 1.643 GiB, 4.40% gc time)
Running: chebyshev_quadrature with k=4
  8.305418 seconds (277.91 k allocations: 2.261 GiB, 2.21% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.061753 seconds (485.46 k allocations: 13.254 GiB, 3.10% gc time)
Running: legendre_quadrature.
  7.414958 seconds (224.34 k allocations: 1.976 GiB, 2.27% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.434658 seconds (8.23 M allocations: 13.383 GiB, 3.94% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.778253 seconds (7.23 M allocations: 13.369 GiB, 2.34% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.171485 seconds (22.55 k allocations: 1.359 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.438171 seconds (30.88 k allocations: 1.901 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.192980 seconds (22.76 k allocations: 1.369 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.174459 seconds (440.31 k allocations: 152.744 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.633792 seconds (600.04 M allocations: 8.943 GiB, 8.33% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.709507 seconds (600.05 M allocations: 8.943 GiB, 8.70% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.987136 seconds (600.03 M allocations: 8.943 GiB, 8.58% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.068106 seconds (180.97 k allocations: 4.427 MiB)
Running: chebyshev_quadrature with k=1
  0.241716 seconds (248.26 k allocations: 13.448 MiB)
Running: chebyshev_quadrature with k=2
  0.222832 seconds (272.84 k allocations: 14.522 MiB)
Running: chebyshev_quadrature with k=3
  0.215343 seconds (248.77 k allocations: 12.808 MiB)
Running: chebyshev_quadrature with k=4
  0.214514 seconds (248.79 k allocations: 13.061 MiB)
Running: jacobi_quadrature with α=β=1
  0.392286 seconds (388.81 k allocations: 34.926 MiB)
Running: laguerre_quadrature with k=2
  0.188237 seconds (181.10 k allocations: 10.483 MiB)
Running: legendre_quadrature
  0.132817 seconds (146.05 k allocations: 8.056 MiB)
Running: lobatto_quadrature
  0.035999 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.032586 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.057703 seconds (19.12 k allocations: 1.132 MiB)
Running: rectangle_rule_midpoint
  0.047875 seconds (25.86 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.052016 seconds (17.73 k allocations: 1.059 MiB)
Running: rombergs_method
  0.245927 seconds (172.78 k allocations: 9.900 MiB)
Running: simpsons_rule
  0.001938 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.075727 seconds (79.55 k allocations: 3.411 MiB)
Running: trapezoidal_rule
  0.249595 seconds (2.39 M allocations: 37.705 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001983 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.113241 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.119131 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.120781 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.120640 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  7.014085 seconds (365.81 k allocations: 904.757 MiB, 4.70% gc time)
Running: legendre_quadrature
  0.067795 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000217 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000177 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.627515 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000509 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.935261 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064791 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000081 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000059 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000849 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000720 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.114667 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.125081 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.221021 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.139335 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.953520 seconds (372.37 k allocations: 252.899 MiB)
Running: legendre_quadrature
  0.070290 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000101 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000085 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.180369 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001244 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.092492 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.090365 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001906 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
