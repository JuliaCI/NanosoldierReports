Julia Version 1.6.0-DEV.818
Commit 0bff5bf0c5 (2020-09-02 13:42 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.18.2
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
  Installed Compat ───────────── v3.15.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.15.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_yFyA05/Project.toml`
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_yFyA05/Manifest.toml`
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(11, 0.005891919f0), Item(48, 0.0074266195f0), Item(26, 0.04064691f0), Item(47, 0.048253775f0)])
Vsorted = Item[Item(11, 0.005891919f0), Item(48, 0.0074266195f0), Item(26, 0.04064691f0), Item(47, 0.048253775f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004797236124674479, 0.0044472058614095054, 301.0, 51.11163990572095))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004279168446858724, 0.00433046023050944, 301.0, 75.10177791118622))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00448301633199056, 0.004801503817240397, 301.0, 41.18297529220581))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0046791156133015955, 0.004572606086730957, 301.0, 9.620928970281966))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004078952471415201, 0.005503034591674805, 301.0, 46.0468990765512))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.000176850954691569, 0.00015019575754801433, 301.0, 184.86117787659168))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 7.65085220336914e-5, 0.01600040594736735, 300.0, 25.0809407918714)
p = PerformanceResult(1.0, 1.0, 1.0, 5.946159362792969e-5, 3.097057342529297e-5, 300.0, 25.0809407918714)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0038065036137898763, 0.004059068361918132, 300.0, 1.2662618561180352)
p = PerformanceResult(1.0, 1.0, 1.0, 4.842281341552734e-5, 2.193450927734375e-5, 300.0, 1.2662618561180352)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 7.65085220336914e-5, 0.01600040594736735, 300.0, 25.0809407918714), PerformanceResult(1.0, 1.0, 1.0, 5.946159362792969e-5, 3.097057342529297e-5, 300.0, 25.0809407918714), PerformanceResult(1.0, 1.0, 1.0, 0.0038065036137898763, 0.004059068361918132, 300.0, 1.2662618561180352), PerformanceResult(1.0, 1.0, 1.0, 4.842281341552734e-5, 2.193450927734375e-5, 300.0, 1.2662618561180352))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008541393280029296, 0.005179595947265625, 348.06666666666666, 28672.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009656890233357748, 0.0035171031951904295, 303.23333333333335, 7001.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2562344868977866e-5, 1.1197725931803386e-5, 92.13333333333334, 51.01682360097766))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.285639444986979e-5, 1.4702479044596354e-5, 82.93333333333334, 75.02083611488342))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6019414265950522e-5, 1.6466776529947916e-5, 88.46666666666667, 41.10463559627533))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.414023081461588e-5, 0.00015826225280761718, 92.93333333333334, 45.95607080683112))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.7799999999999999, 0.7799999999999999, 0.7799999999999999, 5.440711975097656e-5, 0.00014469623565673828, 70.23333333333333, 195.0396035015583))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-02T21:37:07.957
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9040000000000004, 0.9040000000000004, 0.9040000000000004, 2.349376678466797e-5, 2.2280216217041016e-5, 153.27, 50.83530949288979))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2864341735839845e-5, 1.7609596252441406e-5, 156.77, 0.0))
*** advance 1 from 1000; 2020-09-02T21:37:08.653
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.905, 0.905, 0.905, 2.3005008697509764e-5, 2.424955368041992e-5, 153.19, 75.54251582920551))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1889209747314454e-5, 2.0248889923095705e-5, 156.68, 0.0))
*** advance 1 from 1000; 2020-09-02T21:37:09.328
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8934444444444444, 0.8929999999999998, 0.8932105263157893, 2.5093555450439453e-5, 3.449916839599609e-5, 153.48, 41.35501192882657))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4454593658447264e-5, 2.8769969940185547e-5, 156.76, 0.0))
*** advance 1 from 1000; 2020-09-02T21:37:10.061
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8985555555555554, 0.8979999999999998, 0.8982631578947367, 0.00011547327041625976, 0.0005535101890563965, 152.55, 45.66810048487969))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.551908493041992e-5, 0.0006732511520385743, 156.04, 0.0))
*** advance 1 from 1000; 2020-09-02T21:37:10.663
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.894, 0.894, 0.894, 5.802631378173828e-5, 0.0004226994514465332, 152.6, 200.72932951990515))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.384227752685547e-5, 0.0003944492340087891, 156.01, 0.0))
*** advance 1 from 1000; 2020-09-02T21:37:11.902
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9040000000000004, 0.9040000000000004, 0.9040000000000004, 3.905296325683594e-5, 8.085012435913086e-5, 153.27, 50.845919033745304))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.866434097290039e-5, 8.08405876159668e-5, 156.77, 0.018424436275381595))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:14.262
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7330000000000001, 0.7330000000000001, 0.7330000000000001, 0.00181884765625, 7.921934127807617e-5, 199.76, 195.2666688710451))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:15.297
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7380000000000002, 0.7380000000000002, 0.7380000000000002, 0.0017352342605590821, 8.404016494750977e-5, 207.7, 110.86349429190159))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:16.187
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6089999999999999, 0.6089999999999999, 0.6089999999999999, 0.0015323781967163086, 8.497953414916992e-5, 266.44, 2.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:17.044
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9620000000000001, 0.9450000000000002, 0.9507385129490392, 0.0016224169731140136, 1.9121170043945313e-5, 216.06, 593.6000204980373))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:18.074
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5970000000000001, 0.5970000000000001, 0.5970000000000001, 0.0016667366027832032, 0.0004177093505859375, 253.67, 2342.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:19.045
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.39100000000000007, 0.39100000000000007, NaN, 0.0017650723457336426, 0.0003255796432495117, 240.11, 3662.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-02T21:37:20.011
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6380000000000002, 0.6380000000000002, 0.6380000000000002, 0.0016520309448242187, 2.9718875885009767e-5, 244.62, 2344.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.080675422138837, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.951940247252748,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":2.4996697902679443e-6,"evaluations":8.328125,"distances_sum":550.5854616314173}, best_list's length: 3, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.082706766917293, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9509329212454218,"seconds":1.1298805475234985e-5,"exhaustive_search_seconds":2.4996697902679443e-6,"evaluations":8.3125,"distances_sum":550.8969291597605}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.082706766917293,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9509329212454218,"seconds":1.1298805475234985e-5,"exhaustive_search_seconds":2.4996697902679443e-6,"evaluations":8.3125,"distances_sum":550.8969291597605}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.082706766917293,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9509329212454218,"seconds":1.1298805475234985e-5,"exhaustive_search_seconds":2.4996697902679443e-6,"evaluations":8.3125,"distances_sum":550.8969291597605}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.082706766917293,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9509329212454218,"seconds":1.1298805475234985e-5,"exhaustive_search_seconds":2.4996697902679443e-6,"evaluations":8.3125,"distances_sum":550.8969291597605}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.43598615916955, conf: {"restarts":4}, perf: {"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":1.7317011952400208e-5,"exhaustive_search_seconds":6.429851055145264e-6,"evaluations":40.640625,"distances_sum":288.67231585178524}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.43598615916955,"state":{"restarts":4},"perf":{"precision":0.9036458333333321,"recall":0.9036458333333321,"f1":0.9036458333333321,"seconds":1.7317011952400208e-5,"exhaustive_search_seconds":6.429851055145264e-6,"evaluations":40.640625,"distances_sum":288.67231585178524}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.705380017079419, conf: {"restarts":3}, perf: {"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":1.5638768672943115e-5,"exhaustive_search_seconds":6.429851055145264e-6,"evaluations":36.59375,"distances_sum":289.61371511314064}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.705380017079419,"state":{"restarts":3},"perf":{"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":1.5638768672943115e-5,"exhaustive_search_seconds":6.429851055145264e-6,"evaluations":36.59375,"distances_sum":289.61371511314064}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.705380017079419,"state":{"restarts":3},"perf":{"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":1.5638768672943115e-5,"exhaustive_search_seconds":6.429851055145264e-6,"evaluations":36.59375,"distances_sum":289.61371511314064}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.705380017079419,"state":{"restarts":3},"perf":{"precision":0.9001736111111102,"recall":0.9001736111111102,"f1":0.9001736111111102,"seconds":1.5638768672943115e-5,"exhaustive_search_seconds":6.429851055145264e-6,"evaluations":36.59375,"distances_sum":289.61371511314064}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555544, conf: {"restarts":1}, perf: {"precision":0.8524305555555544,"recall":0.8524305555555544,"f1":0.8524305555555544,"seconds":3.269128501415253e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":63.4296875,"distances_sum":125.84035625634715}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.83767361111111, conf: {"restarts":9}, perf: {"precision":0.83767361111111,"recall":0.83767361111111,"f1":0.83767361111111,"seconds":5.194544792175293e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":122.6171875,"distances_sum":126.64638696564361}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.847222222222221, conf: {"restarts":7}, perf: {"precision":0.847222222222221,"recall":0.847222222222221,"f1":0.847222222222221,"seconds":4.735216498374939e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":107.3984375,"distances_sum":125.907558075618}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444432, conf: {"restarts":13}, perf: {"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":6.438419222831726e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":145.828125,"distances_sum":125.25572131527588}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8532986111111097, conf: {"restarts":11}, perf: {"precision":0.8532986111111097,"recall":0.8532986111111097,"f1":0.8532986111111097,"seconds":6.103888154029846e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":137.546875,"distances_sum":125.60090017644688}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666659, conf: {"restarts":5}, perf: {"precision":0.8463541666666659,"recall":0.8463541666666659,"f1":null,"seconds":4.460662603378296e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":94.6953125,"distances_sum":126.75763640925288}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444432,"state":{"restarts":13},"perf":{"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":6.438419222831726e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":145.828125,"distances_sum":125.25572131527588}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8663194444444432,"state":{"restarts":13},"perf":{"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":6.438419222831726e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":145.828125,"distances_sum":125.25572131527588}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8663194444444432,"state":{"restarts":13},"perf":{"precision":0.8663194444444432,"recall":0.8663194444444432,"f1":0.8663194444444432,"seconds":6.438419222831726e-5,"exhaustive_search_seconds":3.07280570268631e-5,"evaluations":145.828125,"distances_sum":125.25572131527588}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111103, conf: {"restarts":1}, perf: {"precision":0.8611111111111103,"recall":0.8611111111111103,"f1":0.8611111111111103,"seconds":8.97236168384552e-5,"exhaustive_search_seconds":0.00044776685535907745,"evaluations":131.203125,"distances_sum":57.3942753598094}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8611111111111103,"state":{"restarts":1},"perf":{"precision":0.8611111111111103,"recall":0.8611111111111103,"f1":0.8611111111111103,"seconds":8.97236168384552e-5,"exhaustive_search_seconds":0.00044776685535907745,"evaluations":131.203125,"distances_sum":57.3942753598094}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8611111111111103,"state":{"restarts":1},"perf":{"precision":0.8611111111111103,"recall":0.8611111111111103,"f1":0.8611111111111103,"seconds":8.97236168384552e-5,"exhaustive_search_seconds":0.00044776685535907745,"evaluations":131.203125,"distances_sum":57.3942753598094}}, n: 9999
added n=10000, neighborhood=2, IHCSearch(1), SatNeighborhood(32), 2020-09-02T21:37:27.744
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9274, 0.01873449f0), Item(7239, 0.032358844f0), Item(2224, 0.038603712f0), Item(3526, 0.054342795f0), Item(2562, 0.058350198f0), Item(2499, 0.06259281f0), Item(6618, 0.06890706f0), Item(712, 0.07384157f0), Item(588, 0.084124394f0), Item(1722, 0.09136129f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.087818696883853,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9397753288378291,"seconds":0.004233645275235176,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.2734375,"distances_sum":548.8149124532938}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.087818696883853,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9397753288378291,"seconds":0.004233645275235176,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.2734375,"distances_sum":548.8149124532938}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.260936695831189, conf: {"bsize":2}, perf: {"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.5340745449066162e-5,"exhaustive_search_seconds":6.295740604400635e-6,"evaluations":30.359375,"distances_sum":298.48552122339606}, best_list's length: 2, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.260936695831189,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.5340745449066162e-5,"exhaustive_search_seconds":6.295740604400635e-6,"evaluations":30.359375,"distances_sum":298.48552122339606}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.260936695831189,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.5340745449066162e-5,"exhaustive_search_seconds":6.295740604400635e-6,"evaluations":30.359375,"distances_sum":298.48552122339606}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.260936695831189,"state":{"bsize":2},"perf":{"precision":0.9322916666666657,"recall":0.9322916666666657,"f1":0.9322916666666657,"seconds":1.5340745449066162e-5,"exhaustive_search_seconds":6.295740604400635e-6,"evaluations":30.359375,"distances_sum":298.48552122339606}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.954653937947494, conf: {"bsize":3}, perf: {"precision":0.9635416666666661,"recall":0.9635416666666661,"f1":0.9635416666666661,"seconds":2.6738271117210388e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":58.921875,"distances_sum":126.00734675256535}, best_list's length: 7, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.954653937947494,"state":{"bsize":3},"perf":{"precision":0.9635416666666661,"recall":0.9635416666666661,"f1":0.9635416666666661,"seconds":2.6738271117210388e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":58.921875,"distances_sum":126.00734675256535}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.954653937947494,"state":{"bsize":3},"perf":{"precision":0.9635416666666661,"recall":0.9635416666666661,"f1":0.9635416666666661,"seconds":2.6738271117210388e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":58.921875,"distances_sum":126.00734675256535}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.954653937947494,"state":{"bsize":3},"perf":{"precision":0.9635416666666661,"recall":0.9635416666666661,"f1":0.9635416666666661,"seconds":2.6738271117210388e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":58.921875,"distances_sum":126.00734675256535}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.84954128440367, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.021745502948761e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":102.1875,"distances_sum":53.36263885605149}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.84954128440367,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.021745502948761e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":102.1875,"distances_sum":53.36263885605149}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.93939393939394, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.313994526863098e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":102.09375,"distances_sum":53.36263885605149}, best_list's length: 7, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.15722064575505, conf: {"bsize":5}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.233528256416321e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":101.8671875,"distances_sum":53.364958996651694}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.15722064575505,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.233528256416321e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":101.8671875,"distances_sum":53.364958996651694}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":99.15722064575505,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.233528256416321e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":101.8671875,"distances_sum":53.364958996651694}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":99.15722064575505,"state":{"bsize":5},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.233528256416321e-5,"exhaustive_search_seconds":0.00038496963679790497,"evaluations":101.8671875,"distances_sum":53.364958996651694}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(5), SatNeighborhood(32), 2020-09-02T21:37:31.896
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2276, 0.034314655f0), Item(2564, 0.045243103f0), Item(2627, 0.049216297f0), Item(1192, 0.051959682f0), Item(3389, 0.05266888f0), Item(5580, 0.056781743f0), Item(9979, 0.058054294f0), Item(4821, 0.058338933f0), Item(4891, 0.059396576f0), Item(7990, 0.06476413f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
