Julia Version 1.6.0-DEV.807
Commit a3430e7ec1 (2020-09-01 17:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_HwTBIy/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_HwTBIy/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.027894 seconds (1.43 M allocations: 76.753 MiB, 11.67% gc time)
Running: chebyshev_quadrature with k=1
  1.821030 seconds (2.21 M allocations: 126.935 MiB, 3.63% gc time)
Running: chebyshev_quadrature with k=2
  0.286157 seconds (417.86 k allocations: 24.080 MiB)
Running: chebyshev_quadrature with k=3
  0.373669 seconds (533.41 k allocations: 29.439 MiB, 5.54% gc time)
Running: chebyshev_quadrature with k=4
  0.390660 seconds (476.82 k allocations: 25.993 MiB)
Running: jacobi_quadrature with α=β=1
 40.139274 seconds (37.94 M allocations: 3.095 GiB, 8.95% gc time)
Running: laguerre_quadrature with k=1
  2.893827 seconds (3.27 M allocations: 182.702 MiB, 3.11% gc time)
Running: legendre_quadrature
  0.258553 seconds (211.46 k allocations: 12.154 MiB)
Running: lobatto_quadrature
  0.427960 seconds (339.46 k allocations: 20.394 MiB, 5.92% gc time)
Running: radau_quadrature
  0.276586 seconds (321.97 k allocations: 19.413 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.727874 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rectangle_rule_midpoint.
  0.167424 seconds (173.45 k allocations: 3.871 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.866063 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.705850 seconds (740.15 k allocations: 42.755 MiB, 5.10% gc time)
Running: simpsons_rule
  0.046403 seconds (46.90 k allocations: 2.097 MiB)
Running: simpsons38_rule
  0.119603 seconds (111.97 k allocations: 5.917 MiB)
Running: trapezoidal_rule
  0.338217 seconds (1.51 M allocations: 25.767 MiB, 5.60% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.093429 seconds (32.29 k allocations: 1.926 MiB)
Running: chebyshev_quadrature with k=1
  0.462939 seconds (281.07 k allocations: 14.653 MiB)
Running: chebyshev_quadrature with k=2
  0.151920 seconds (94.46 k allocations: 2.708 MiB)
Running: chebyshev_quadrature with k=3
  0.162159 seconds (82.68 k allocations: 2.508 MiB)
Running: chebyshev_quadrature with k=4
  0.155278 seconds (65.29 k allocations: 2.154 MiB)
Running: jacobi_quadrature with α=β=1
  2.102629 seconds (507.20 k allocations: 162.133 MiB, 13.22% gc time)
Running: legendre_quadrature
  0.150790 seconds (42.79 k allocations: 2.469 MiB)
Running: lobatto_quadrature
  0.020522 seconds (16.60 k allocations: 1.029 MiB)
Running: radau_quadrature
  0.020622 seconds (16.59 k allocations: 1.029 MiB)
Running: rectangle_rule_left
 27.407352 seconds (471.41 M allocations: 7.025 GiB, 2.84% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.178134 seconds (476.96 M allocations: 7.107 GiB, 2.87% gc time)
Running: rombergs_method
  0.358904 seconds (334.21 k allocations: 19.010 MiB)
Running: simpsons_rule
  0.000044 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064721 seconds (19.69 k allocations: 1.182 MiB)
Running: trapezoidal_rule
  0.055300 seconds (18.15 k allocations: 1.088 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028806 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.098184 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.100728 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.108277 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.114167 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.290336 seconds (369.42 k allocations: 19.445 MiB)
Running: legendre_quadrature
  0.063883 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000114 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000058 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000510 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000360 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000513 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075445 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000051 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024053 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021794 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066468 seconds (74.85 k allocations: 4.352 MiB)
Running: chebyshev_quadrature with k=1
  0.285771 seconds (235.67 k allocations: 13.314 MiB, 26.77% gc time)
Running: chebyshev_quadrature with k=2
  0.214889 seconds (289.52 k allocations: 16.322 MiB)
Running: chebyshev_quadrature with k=3
  0.202142 seconds (268.37 k allocations: 14.718 MiB)
Running: chebyshev_quadrature with k=4
  0.242617 seconds (268.40 k allocations: 14.678 MiB)
Running: jacobi_quadrature with α=β=1
  3.460049 seconds (455.14 k allocations: 163.779 MiB, 14.10% gc time)
Running: legendre_quadrature
  0.176755 seconds (189.96 k allocations: 10.968 MiB, 8.59% gc time)
Running: lobatto_quadrature
  0.164624 seconds (201.05 k allocations: 11.666 MiB)
Running: radau_quadrature
  0.191399 seconds (201.05 k allocations: 11.669 MiB)
Running: rectangle_rule_left
  1.115010 seconds (19.52 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.059636 seconds (25.65 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  1.098549 seconds (18.05 k allocations: 1.093 MiB)
Running: rombergs_method
  0.119601 seconds (137.39 k allocations: 7.951 MiB)
Running: simpsons_rule
  0.030901 seconds (28.65 k allocations: 1.781 MiB)
Running: simpsons38_rule
  0.058166 seconds (44.14 k allocations: 2.760 MiB, 32.90% gc time)
Running: trapezoidal_rule
  0.029829 seconds (45.00 k allocations: 1.813 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041149 seconds (100.84 k allocations: 3.046 MiB)
Running: chebyshev_quadrature with k=1
  0.190546 seconds (242.41 k allocations: 13.391 MiB)
Running: chebyshev_quadrature with k=2
  0.212351 seconds (296.70 k allocations: 16.322 MiB)
Running: chebyshev_quadrature with k=3
  0.229705 seconds (275.24 k allocations: 14.718 MiB, 7.14% gc time)
Running: chebyshev_quadrature with k=4
  0.237034 seconds (275.27 k allocations: 14.743 MiB)
Running: hermite_quadrature with k=2
 16.470792 seconds (21.41 M allocations: 1.122 GiB, 7.58% gc time)
Running: jacobi_quadrature with α=β=1
  0.502695 seconds (464.52 k allocations: 50.025 MiB, 9.84% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.258002 seconds (282.75 k allocations: 15.658 MiB, 15.94% gc time)
Running: legendre_quadrature
  0.152616 seconds (196.67 k allocations: 11.314 MiB)
Running: lobatto_quadrature
  0.232207 seconds (222.02 k allocations: 37.454 MiB, 11.94% gc time)
Running: radau_quadrature
  0.197027 seconds (218.61 k allocations: 30.119 MiB)
Running: rectangle_rule_left
  0.028004 seconds (22.59 k allocations: 1.337 MiB)
Running: rectangle_rule_midpoint
  0.027637 seconds (27.56 k allocations: 1.694 MiB)
Running: rectangle_rule_right
  0.025314 seconds (19.23 k allocations: 1.152 MiB)
Running: rombergs_method
  0.120523 seconds (139.94 k allocations: 8.001 MiB)
Running: simpsons_rule
  0.034769 seconds (40.69 k allocations: 2.128 MiB)
Running: simpsons38_rule
  0.059675 seconds (59.31 k allocations: 3.161 MiB, 35.77% gc time)
Running: trapezoidal_rule
  0.028488 seconds (31.21 k allocations: 1.751 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041058 seconds (61.11 k allocations: 2.338 MiB)
Running: chebyshev_quadrature with k=1
  0.230306 seconds (237.84 k allocations: 13.153 MiB)
Running: chebyshev_quadrature with k=2
  0.241037 seconds (291.80 k allocations: 16.062 MiB)
Running: chebyshev_quadrature with k=3
  0.197602 seconds (270.56 k allocations: 14.503 MiB)
Running: chebyshev_quadrature with k=4
  0.221351 seconds (270.58 k allocations: 14.504 MiB, 12.01% gc time)
Running: hermite_quadrature with k=2
  0.143128 seconds (174.80 k allocations: 10.028 MiB)
Running: jacobi_quadrature with α=β=1
  9.524953 seconds (457.65 k allocations: 1.175 GiB, 15.14% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.242960 seconds (277.93 k allocations: 15.468 MiB)
Running: legendre_quadrature
  0.183672 seconds (192.13 k allocations: 11.082 MiB, 12.68% gc time)
Running: lobatto_quadrature
  0.228917 seconds (212.68 k allocations: 23.176 MiB)
Running: radau_quadrature
  0.214251 seconds (211.83 k allocations: 21.115 MiB)
Running: rectangle_rule_left
  0.027914 seconds (20.23 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.028127 seconds (26.39 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.024926 seconds (18.04 k allocations: 1.094 MiB)
Running: rombergs_method
  0.158591 seconds (135.65 k allocations: 7.812 MiB, 21.56% gc time)
Running: simpsons_rule
  0.033075 seconds (33.09 k allocations: 1.909 MiB)
Running: simpsons38_rule
  0.038280 seconds (50.01 k allocations: 2.911 MiB)
Running: trapezoidal_rule
  0.028467 seconds (26.01 k allocations: 1.580 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033801 seconds (32.06 k allocations: 1.931 MiB)
Running: chebyshev_quadrature with k=1
  0.238906 seconds (236.17 k allocations: 13.371 MiB)
Running: chebyshev_quadrature with k=2
  0.275346 seconds (290.04 k allocations: 16.404 MiB)
Running: chebyshev_quadrature with k=3
  0.220774 seconds (268.89 k allocations: 14.715 MiB)
Running: chebyshev_quadrature with k=4
  0.239812 seconds (268.92 k allocations: 14.552 MiB, 10.18% gc time)
Running: jacobi_quadrature with α=β=1
  2.190852 seconds (455.69 k allocations: 194.823 MiB, 6.38% gc time)
Running: legendre_quadrature
  0.173864 seconds (190.47 k allocations: 11.001 MiB)
Running: lobatto_quadrature
  0.195956 seconds (201.57 k allocations: 11.762 MiB)
Running: radau_quadrature
  0.227247 seconds (201.56 k allocations: 11.694 MiB, 16.20% gc time)
Running: rectangle_rule_left
  0.304269 seconds (20.07 k allocations: 1.208 MiB)
Running: rectangle_rule_midpoint
  0.026951 seconds (26.01 k allocations: 1.619 MiB)
Running: rectangle_rule_right
  0.116177 seconds (18.41 k allocations: 1.113 MiB)
Running: rombergs_method
  0.146787 seconds (148.58 k allocations: 8.710 MiB)
Running: simpsons_rule
  0.033325 seconds (29.37 k allocations: 1.813 MiB)
Running: simpsons38_rule
  0.047081 seconds (44.89 k allocations: 2.792 MiB)
Running: trapezoidal_rule
  0.029138 seconds (45.97 k allocations: 1.848 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034716 seconds (32.79 k allocations: 1.882 MiB)
Running: chebyshev_quadrature with k=1
  0.226078 seconds (236.77 k allocations: 13.380 MiB)
Running: chebyshev_quadrature with k=2
  0.283758 seconds (290.68 k allocations: 16.315 MiB)
Running: chebyshev_quadrature with k=3
  0.268873 seconds (269.48 k allocations: 14.641 MiB, 18.86% gc time)
Running: chebyshev_quadrature with k=4
  0.254966 seconds (269.50 k allocations: 14.728 MiB)
Running: jacobi_quadrature with α=β=1
  0.828904 seconds (456.42 k allocations: 149.513 MiB, 6.71% gc time)
Running: legendre_quadrature
  0.181443 seconds (191.07 k allocations: 11.109 MiB, 10.83% gc time)
Running: lobatto_quadrature
  0.169764 seconds (202.17 k allocations: 11.712 MiB)
Running: radau_quadrature
  0.180470 seconds (202.17 k allocations: 11.720 MiB)
Running: rectangle_rule_left
  1.383799 seconds (20.32 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.040588 seconds (26.00 k allocations: 1.619 MiB)
Running: rectangle_rule_right
  1.216835 seconds (18.39 k allocations: 1.111 MiB)
Running: rombergs_method
  0.162096 seconds (138.65 k allocations: 8.025 MiB)
Running: simpsons_rule
  0.040423 seconds (30.08 k allocations: 1.840 MiB)
Running: simpsons38_rule
  0.044358 seconds (45.59 k allocations: 2.820 MiB)
Running: trapezoidal_rule
  0.033458 seconds (58.20 k allocations: 2.048 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.243725 seconds (150.92 k allocations: 8.987 MiB, 23.32% gc time)
Running: chebyshev_quadrature with k=1
  0.167664 seconds (70.55 k allocations: 2.234 MiB)
Running: chebyshev_quadrature with k=2
  0.179456 seconds (105.75 k allocations: 2.900 MiB)
Running: chebyshev_quadrature with k=3
  0.184664 seconds (93.19 k allocations: 2.686 MiB)
Running: chebyshev_quadrature with k=4
  0.184610 seconds (72.73 k allocations: 2.282 MiB)
Running: jacobi_quadrature with α=β=1
  1.813043 seconds (481.45 k allocations: 167.960 MiB, 5.93% gc time)
Running: legendre_quadrature
  0.145614 seconds (19.36 k allocations: 1.121 MiB)
Running: lobatto_quadrature
  0.000135 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000135 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.674507 seconds (590.00 M allocations: 8.792 GiB, 3.32% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.657281 seconds (592.75 M allocations: 8.833 GiB, 3.12% gc time)
Running: rombergs_method
  0.144705 seconds (21.12 k allocations: 1.194 MiB)
Running: simpsons_rule
  0.000077 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032383 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025675 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.121650 seconds (629.33 M allocations: 9.388 GiB, 4.63% gc time)
Running: chebyshev_quadrature with k=1
  0.526649 seconds (430.81 k allocations: 23.902 MiB)
Running: chebyshev_quadrature with k=2
 12.821258 seconds (486.76 k allocations: 4.041 GiB, 4.11% gc time)
Running: chebyshev_quadrature with k=3
  6.173692 seconds (283.05 k allocations: 1.643 GiB, 5.54% gc time)
Running: chebyshev_quadrature with k=4
  8.283323 seconds (283.07 k allocations: 2.262 GiB, 2.69% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.965804 seconds (493.96 k allocations: 13.255 GiB, 3.03% gc time)
Running: legendre_quadrature.
  6.544345 seconds (229.03 k allocations: 1.976 GiB, 2.87% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.295344 seconds (8.24 M allocations: 13.384 GiB, 3.06% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.274366 seconds (7.24 M allocations: 13.369 GiB, 2.79% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.722312 seconds (23.09 k allocations: 1.388 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.531095 seconds (31.64 k allocations: 1.941 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.263023 seconds (23.30 k allocations: 1.398 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.203983 seconds (448.71 k allocations: 153.411 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.145915 seconds (600.04 M allocations: 8.943 GiB, 8.62% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.291991 seconds (600.05 M allocations: 8.944 GiB, 8.32% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.521010 seconds (600.04 M allocations: 8.943 GiB, 8.58% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.070690 seconds (181.82 k allocations: 4.482 MiB)
Running: chebyshev_quadrature with k=1
  0.226523 seconds (252.96 k allocations: 13.850 MiB)
Running: chebyshev_quadrature with k=2
  0.208303 seconds (277.87 k allocations: 14.922 MiB)
Running: chebyshev_quadrature with k=3
  0.269243 seconds (253.23 k allocations: 13.191 MiB)
Running: chebyshev_quadrature with k=4
  0.219940 seconds (253.25 k allocations: 13.200 MiB)
Running: jacobi_quadrature with α=β=1
  0.370453 seconds (395.07 k allocations: 35.464 MiB)
Running: laguerre_quadrature with k=2
  0.180912 seconds (184.96 k allocations: 10.831 MiB)
Running: legendre_quadrature
  0.127942 seconds (149.02 k allocations: 8.334 MiB)
Running: lobatto_quadrature
  0.035164 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.032843 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.054388 seconds (19.55 k allocations: 1.156 MiB)
Running: rectangle_rule_midpoint
  0.044484 seconds (26.48 k allocations: 1.624 MiB)
Running: rectangle_rule_right
  0.053727 seconds (18.13 k allocations: 1.081 MiB)
Running: rombergs_method
  0.305303 seconds (176.46 k allocations: 10.122 MiB)
Running: simpsons_rule
  0.001919 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.050857 seconds (80.70 k allocations: 3.480 MiB)
Running: trapezoidal_rule
  0.188898 seconds (2.39 M allocations: 37.739 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002699 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.133464 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.137189 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.144187 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.139400 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
 10.385839 seconds (371.75 k allocations: 905.254 MiB, 5.16% gc time)
Running: legendre_quadrature
  0.061550 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000164 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000116 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.952507 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000508 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.259003 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.063726 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000975 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000731 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.128092 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.115803 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.185196 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.188975 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.732780 seconds (378.42 k allocations: 253.381 MiB)
Running: legendre_quadrature
  0.096181 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000084 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000035 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.495484 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001574 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.898704 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.084129 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001682 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
