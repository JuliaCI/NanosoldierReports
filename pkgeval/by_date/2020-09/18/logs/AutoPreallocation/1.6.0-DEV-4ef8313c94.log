Julia Version 1.6.0-DEV.952
Commit 4ef8313c94 (2020-09-17 11:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed AutoPreallocation ─ v0.3.1
  Installed Cassette ────────── v0.3.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [e7028de2] + AutoPreallocation v0.3.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e7028de2] + AutoPreallocation v0.3.1
  [7057c7e9] + Cassette v0.3.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing AutoPreallocation
Status `/tmp/jl_90irtO/Project.toml`
  [e7028de2] AutoPreallocation v0.3.1
  [6e4b80f9] BenchmarkTools v0.5.0
  [7057c7e9] Cassette v0.3.3
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_90irtO/Manifest.toml`
  [e7028de2] AutoPreallocation v0.3.1
  [6e4b80f9] BenchmarkTools v0.5.0
  [7057c7e9] Cassette v0.3.3
  [682c06a0] JSON v0.21.1
  [69de0a69] Parsers v1.0.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
ones example: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:11
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Type, ::Function)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Vararg{Any, N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(convert), ::Type{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] fill!
      @ ./array.jl:355 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(fill!), ::Vector{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] ones
      @ ./array.jl:526 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] ones
      @ ./array.jl:522 [inlined]
    [9] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones
      @ ./array.jl:520 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] f_ones
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:6 [inlined]
   [13] overdub(overdub_context#242::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, overdub_arguments#243::typeof(f_ones))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:13
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:12
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [21] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [23] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
matmul example: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:17
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Type, ::Function)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Vararg{Any, N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(convert), ::Type{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] fill!
      @ ./array.jl:355 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(fill!), ::Matrix{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] ones
      @ ./array.jl:526 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] ones
      @ ./array.jl:522 [inlined]
    [9] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones
      @ ./array.jl:520 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Int64, ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] f_matmul
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:7 [inlined]
   [13] overdub(overdub_context#242::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, overdub_arguments#243::typeof(f_matmul))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:19
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:18
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [21] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [23] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
noprealloc example: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:27
  Got exception outside of a @test
  MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Type, ::Function)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Vararg{Any, N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(convert), ::Type{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] fill!
      @ ./array.jl:355 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(fill!), ::Matrix{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] ones
      @ ./array.jl:526 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] ones
      @ ./array.jl:522 [inlined]
    [9] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones
      @ ./array.jl:520 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Int64, ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] f_matmul_noprealloc
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:9 [inlined]
   [13] overdub(overdub_context#242::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, overdub_arguments#243::typeof(f_matmul_noprealloc))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:29
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:28
   [19] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [20] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [21] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [22] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [23] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
check thread-safe: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:35
  Got exception outside of a @test
  MethodError: no method matching promote_type(::Matrix{Float64}, ::Matrix{Float64})
  Closest candidates are:
    promote_type(::Any, ::Any, !Matched::Any, !Matched::Any...) at promotion.jl:202
    promote_type(::Any) at promotion.jl:201
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Matrix{Float64}, ::Matrix{Float64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Vararg{Any, N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(promote_type), ::Matrix{Float64}, ::Matrix{Float64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] *
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/matmul.jl:159 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(*), ::Matrix{Float64}, ::Matrix{Float64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] f
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:36 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::var"#f#8", ::Matrix{Float64}, ::Matrix{Float64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] record_allocations(::Function, ::Matrix{Float64}, ::Vararg{Matrix{Float64}, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
    [9] record_allocations(::Function, ::Matrix{Float64}, ::Vararg{Matrix{Float64}, N} where N)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [10] preallocate(::var"#f#8", ::Matrix{Float64}, ::Vararg{Matrix{Float64}, N} where N)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/preallocate.jl:27
   [11] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:41 [inlined]
   [12] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [13] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:36
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [16] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ none:6
   [22] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [23] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [24] _start()
      @ Base ./client.jl:485
resizing operations: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:54
  Got exception outside of a @test
  MethodError: no method matching (::Colon)(::Int64, ::Tuple{Int64, Int64, Int64})
  Closest candidates are:
    (::Colon)(::T, ::Any, !Matched::T) where T<:Real at range.jl:41
    (::Colon)(::A, ::Any, !Matched::C) where {A<:Real, C<:Real} at range.jl:10
    (::Colon)(::T, ::Any, !Matched::T) where T at range.jl:40
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Int64, ::Tuple{Int64, Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Vararg{Any, N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Colon, ::Int64, ::Tuple{Int64, Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] vect
      @ ./array.jl:130 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(Base.vect), ::Int64, ::Int64, ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] push_pop_test
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:56 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx), AutoPreallocation.AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::var"#push_pop_test#12", ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] record_allocations(f::Function, args::Int64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
    [9] record_allocations(f::Function, args::Int64)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [10] preallocate(f::var"#push_pop_test#12", xs::Int64)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/preallocate.jl:27
   [11] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:65
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/integration_tests.jl:55
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [16] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ none:6
   [22] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [23] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [24] _start()
      @ Base ./client.jl:485
show: Test Failed at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/record_types.jl:28
  Expression: repr(record) == "AutoPreallocation.AllocationRecord(\n" * "    [Array{Float64,2}(undef, (3, 7)), Array{Float64,1}(undef, (40,))],\n" * "    [(3, 7), (40,)]\n" * ")"
   Evaluated: "AutoPreallocation.AllocationRecord(\n    [Matrix{Float64}(undef, (3, 7)), Vector{Float64}(undef, (40,))],\n    [(3, 7), (40,)]\n)" == "AutoPreallocation.AllocationRecord(\n    [Array{Float64,2}(undef, (3, 7)), Array{Float64,1}(undef, (40,))],\n    [(3, 7), (40,)]\n)"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/AutoPreallocation/pywkM/test/record_types.jl:28
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/AutoPreallocation/pywkM/test/record_types.jl:24
  3.859 ms (7 allocations: 16.41 MiB)
readme_examples.jl: Error During Test at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
  Got exception outside of a @test
  LoadError: MethodError: Cannot `convert` an object of type typeof(one) to an object of type Float64
  Closest candidates are:
    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6
    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7
    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250
    ...
  Stacktrace:
    [1] call(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Type, ::Function)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:456
    [2] fallback(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::Function, ::Vararg{Any, N} where N)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/context.jl:454
    [3] overdub(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(convert), ::Type{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:536
    [4] fill!
      @ ./array.jl:355 [inlined]
    [5] overdub(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(fill!), ::Matrix{Float64}, ::typeof(one))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [6] ones
      @ ./array.jl:526 [inlined]
    [7] overdub(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Type{Float64}, ::Tuple{Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
    [8] ones
      @ ./array.jl:522 [inlined]
    [9] overdub(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Tuple{Int64, Int64})
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [10] ones
      @ ./array.jl:520 [inlined]
   [11] overdub(::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, ::typeof(ones), ::Int64, ::Int64)
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [12] foo
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/readme_examples.jl:4 [inlined]
   [13] overdub(overdub_context#242::Cassette.Context{nametype(RecordingCtx), AllocationRecord, Nothing, Cassette.var"##PassType#244", Nothing, Cassette.DisableHooks}, overdub_arguments#243::typeof(foo))
      @ Cassette ~/.julia/packages/Cassette/158rp/src/overdub.jl:0
   [14] record_allocations(::Function; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:21
   [15] record_allocations(::Function)
      @ AutoPreallocation ~/.julia/packages/AutoPreallocation/pywkM/src/recording.jl:20
   [16] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/readme_examples.jl:7
   [17] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [18] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:17 [inlined]
   [19] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [20] macro expansion
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16 [inlined]
   [21] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [22] top-level scope
      @ ~/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:16
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ none:6
   [25] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [26] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [27] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/readme_examples.jl:7
Test Summary:           | Pass  Fail  Error  Total
AutoPreallocation.jl    |   18     1      6     25
  integration_tests.jl  |                 5      5
    ones example        |                 1      1
    matmul example      |                 1      1
    noprealloc example  |                 1      1
    check thread-safe   |                 1      1
    resizing operations |                 1      1
  record_types.jl       |   18     1            19
    isequal and hash    |    5                   5
    show                |    1     1             2
    reinitialize        |   12                  12
  readme_examples.jl    |                 1      1
ERROR: LoadError: Some tests did not pass: 18 passed, 1 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AutoPreallocation/pywkM/test/runtests.jl:15
ERROR: Package AutoPreallocation errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
