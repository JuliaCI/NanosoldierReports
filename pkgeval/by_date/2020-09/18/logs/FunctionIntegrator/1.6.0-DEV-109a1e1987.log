Julia Version 1.6.0-DEV.968
Commit 109a1e1987 (2020-09-18 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_oQ1Ewa/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_oQ1Ewa/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.854245 seconds (1.36 M allocations: 72.446 MiB, 1.53% gc time)
Running: chebyshev_quadrature with k=1
  1.805762 seconds (2.16 M allocations: 124.113 MiB, 3.88% gc time)
Running: chebyshev_quadrature with k=2
  0.324077 seconds (411.04 k allocations: 23.640 MiB, 9.14% gc time)
Running: chebyshev_quadrature with k=3
  0.320024 seconds (524.55 k allocations: 28.806 MiB)
Running: chebyshev_quadrature with k=4
  0.408605 seconds (469.11 k allocations: 25.433 MiB, 21.29% gc time)
Running: jacobi_quadrature with α=β=1
 40.806350 seconds (37.42 M allocations: 3.052 GiB, 9.69% gc time)
Running: laguerre_quadrature with k=1
  3.044750 seconds (3.19 M allocations: 177.937 MiB, 7.14% gc time)
Running: legendre_quadrature
  0.219440 seconds (207.66 k allocations: 11.927 MiB, 11.00% gc time)
Running: lobatto_quadrature
  0.325052 seconds (331.43 k allocations: 19.988 MiB)
Running: radau_quadrature
  0.308297 seconds (416.20 k allocations: 25.315 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 81.928666 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time)
Running: rectangle_rule_midpoint.
  0.146128 seconds (172.67 k allocations: 3.837 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.686654 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time)
Running: rombergs_method
  0.534039 seconds (726.72 k allocations: 41.969 MiB)
Running: simpsons_rule
  0.067876 seconds (46.01 k allocations: 2.055 MiB, 45.27% gc time)
Running: simpsons38_rule
  0.084440 seconds (109.16 k allocations: 5.780 MiB)
Running: trapezoidal_rule
  0.277374 seconds (1.51 M allocations: 25.688 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.086479 seconds (31.30 k allocations: 1.879 MiB)
Running: chebyshev_quadrature with k=1
  0.446149 seconds (276.26 k allocations: 14.327 MiB)
Running: chebyshev_quadrature with k=2
  0.154352 seconds (93.90 k allocations: 2.680 MiB)
Running: chebyshev_quadrature with k=3
  0.158469 seconds (82.15 k allocations: 2.481 MiB)
Running: chebyshev_quadrature with k=4
  0.170104 seconds (64.76 k allocations: 2.127 MiB)
Running: jacobi_quadrature with α=β=1
  3.316656 seconds (499.69 k allocations: 161.616 MiB, 18.16% gc time)
Running: legendre_quadrature
  0.183169 seconds (41.84 k allocations: 2.413 MiB)
Running: lobatto_quadrature
  0.020287 seconds (16.13 k allocations: 1.005 MiB)
Running: radau_quadrature
  0.020847 seconds (16.24 k allocations: 1.012 MiB)
Running: rectangle_rule_left
 28.539845 seconds (471.41 M allocations: 7.025 GiB, 2.42% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.303599 seconds (476.96 M allocations: 7.107 GiB, 1.98% gc time)
Running: rombergs_method
  0.363827 seconds (328.31 k allocations: 18.629 MiB)
Running: simpsons_rule
  0.000025 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.060809 seconds (19.14 k allocations: 1.157 MiB)
Running: trapezoidal_rule
  0.051959 seconds (17.62 k allocations: 1.064 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030771 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.130878 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.123534 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.140355 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.136613 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.366733 seconds (363.73 k allocations: 18.988 MiB)
Running: legendre_quadrature
  0.093651 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000098 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000123 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000541 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000540 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.102903 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000202 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.039242 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.025715 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.055822 seconds (72.84 k allocations: 4.239 MiB)
Running: chebyshev_quadrature with k=1
  0.205444 seconds (231.63 k allocations: 13.017 MiB, 12.65% gc time)
Running: chebyshev_quadrature with k=2
  0.198349 seconds (284.38 k allocations: 15.970 MiB)
Running: chebyshev_quadrature with k=3
  0.183736 seconds (263.93 k allocations: 14.398 MiB)
Running: chebyshev_quadrature with k=4
  0.213321 seconds (263.95 k allocations: 14.288 MiB, 10.16% gc time)
Running: jacobi_quadrature with α=β=1
  2.423937 seconds (447.42 k allocations: 163.246 MiB, 3.65% gc time)
Running: legendre_quadrature
  0.210173 seconds (186.44 k allocations: 10.763 MiB, 7.00% gc time)
Running: lobatto_quadrature
  0.206263 seconds (197.32 k allocations: 11.451 MiB)
Running: radau_quadrature
  0.213552 seconds (197.32 k allocations: 11.451 MiB)
Running: rectangle_rule_left
  1.072557 seconds (18.96 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.036463 seconds (24.88 k allocations: 1.565 MiB)
Running: rectangle_rule_right
  1.076376 seconds (17.52 k allocations: 1.071 MiB)
Running: rombergs_method
  0.124356 seconds (134.98 k allocations: 7.796 MiB)
Running: simpsons_rule
  0.029992 seconds (27.77 k allocations: 1.742 MiB)
Running: simpsons38_rule
  0.030603 seconds (42.75 k allocations: 2.696 MiB)
Running: trapezoidal_rule
  0.024471 seconds (44.30 k allocations: 1.782 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.038847 seconds (99.79 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.190507 seconds (238.23 k allocations: 13.091 MiB)
Running: chebyshev_quadrature with k=2
  0.239089 seconds (291.42 k allocations: 15.948 MiB)
Running: chebyshev_quadrature with k=3
  0.240716 seconds (270.64 k allocations: 14.380 MiB, 7.68% gc time)
Running: chebyshev_quadrature with k=4
  0.213768 seconds (270.67 k allocations: 14.374 MiB)
Running: hermite_quadrature with k=2
 15.147390 seconds (20.98 M allocations: 1.092 GiB, 10.40% gc time)
Running: jacobi_quadrature with α=β=1
  0.429285 seconds (456.62 k allocations: 49.419 MiB, 9.04% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.232326 seconds (277.51 k allocations: 15.304 MiB)
Running: legendre_quadrature
  0.190634 seconds (192.99 k allocations: 11.091 MiB)
Running: lobatto_quadrature
  0.265237 seconds (218.12 k allocations: 37.228 MiB, 14.98% gc time)
Running: radau_quadrature
  0.192735 seconds (214.72 k allocations: 29.894 MiB)
Running: rectangle_rule_left
  0.025135 seconds (21.89 k allocations: 1.300 MiB)
Running: rectangle_rule_midpoint
  0.024179 seconds (26.69 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.023186 seconds (18.65 k allocations: 1.124 MiB)
Running: rombergs_method
  0.115059 seconds (137.45 k allocations: 7.839 MiB)
Running: simpsons_rule
  0.071221 seconds (39.64 k allocations: 2.073 MiB, 43.20% gc time)
Running: simpsons38_rule
  0.035410 seconds (57.74 k allocations: 3.082 MiB)
Running: trapezoidal_rule
  0.025770 seconds (30.35 k allocations: 1.708 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.036471 seconds (60.16 k allocations: 2.292 MiB)
Running: chebyshev_quadrature with k=1
  0.187637 seconds (233.75 k allocations: 12.887 MiB)
Running: chebyshev_quadrature with k=2
  0.287095 seconds (286.60 k allocations: 15.707 MiB)
Running: chebyshev_quadrature with k=3
  0.276982 seconds (266.06 k allocations: 14.187 MiB, 10.87% gc time)
Running: chebyshev_quadrature with k=4
  0.220562 seconds (266.09 k allocations: 14.187 MiB)
Running: hermite_quadrature with k=2
  0.155157 seconds (171.66 k allocations: 9.839 MiB)
Running: jacobi_quadrature with α=β=1
 11.462549 seconds (449.86 k allocations: 1.175 GiB, 10.16% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.214380 seconds (272.79 k allocations: 15.124 MiB)
Running: legendre_quadrature
  0.172605 seconds (188.56 k allocations: 10.883 MiB)
Running: lobatto_quadrature
  0.219454 seconds (208.88 k allocations: 22.953 MiB, 6.72% gc time)
Running: radau_quadrature
  0.223289 seconds (208.03 k allocations: 20.888 MiB)
Running: rectangle_rule_left
  0.070054 seconds (19.67 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.025507 seconds (25.58 k allocations: 1.601 MiB)
Running: rectangle_rule_right
  0.023809 seconds (17.50 k allocations: 1.069 MiB)
Running: rombergs_method
  0.136225 seconds (133.28 k allocations: 7.660 MiB)
Running: simpsons_rule
  0.035999 seconds (32.15 k allocations: 1.867 MiB)
Running: simpsons38_rule
  0.055800 seconds (48.54 k allocations: 2.840 MiB, 31.47% gc time)
Running: trapezoidal_rule
  0.027194 seconds (25.25 k allocations: 1.545 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032688 seconds (31.12 k allocations: 1.887 MiB)
Running: chebyshev_quadrature with k=1
  0.227236 seconds (232.12 k allocations: 13.099 MiB)
Running: chebyshev_quadrature with k=2
  0.253515 seconds (284.88 k allocations: 16.051 MiB)
Running: chebyshev_quadrature with k=3
  0.250143 seconds (264.44 k allocations: 14.382 MiB, 7.53% gc time)
Running: chebyshev_quadrature with k=4
  0.261050 seconds (264.46 k allocations: 14.212 MiB)
Running: jacobi_quadrature with α=β=1
  2.863768 seconds (447.96 k allocations: 194.290 MiB, 6.22% gc time)
Running: legendre_quadrature
  0.174111 seconds (186.94 k allocations: 10.860 MiB, 8.79% gc time)
Running: lobatto_quadrature
  0.186215 seconds (197.82 k allocations: 11.477 MiB)
Running: radau_quadrature
  0.223482 seconds (197.82 k allocations: 11.477 MiB)
Running: rectangle_rule_left
  0.408743 seconds (19.48 k allocations: 1.179 MiB)
Running: rectangle_rule_midpoint
  0.026988 seconds (25.22 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.132468 seconds (17.86 k allocations: 1.087 MiB)
Running: rombergs_method
  0.164907 seconds (145.84 k allocations: 8.526 MiB)
Running: simpsons_rule
  0.030491 seconds (28.46 k allocations: 1.770 MiB)
Running: simpsons38_rule
  0.051125 seconds (43.46 k allocations: 2.726 MiB, 34.32% gc time)
Running: trapezoidal_rule
  0.026022 seconds (45.23 k allocations: 1.815 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033777 seconds (31.88 k allocations: 1.838 MiB)
Running: chebyshev_quadrature with k=1
  0.208225 seconds (232.72 k allocations: 13.049 MiB)
Running: chebyshev_quadrature with k=2
  0.265667 seconds (285.51 k allocations: 15.954 MiB)
Running: chebyshev_quadrature with k=3
  0.291941 seconds (265.02 k allocations: 14.307 MiB, 9.50% gc time)
Running: chebyshev_quadrature with k=4
  0.205674 seconds (265.04 k allocations: 14.449 MiB)
Running: jacobi_quadrature with α=β=1
  1.670266 seconds (448.67 k allocations: 148.958 MiB, 5.51% gc time)
Running: legendre_quadrature
  0.169073 seconds (187.53 k allocations: 10.802 MiB, 8.69% gc time)
Running: lobatto_quadrature
  0.189632 seconds (198.42 k allocations: 11.573 MiB)
Running: radau_quadrature
  0.195188 seconds (198.41 k allocations: 11.563 MiB)
Running: rectangle_rule_left
  0.992326 seconds (19.73 k allocations: 1.192 MiB)
Running: rectangle_rule_midpoint
  0.035275 seconds (25.22 k allocations: 1.584 MiB)
Running: rectangle_rule_right
  0.971700 seconds (17.82 k allocations: 1.084 MiB)
Running: rombergs_method
  0.161983 seconds (136.21 k allocations: 7.869 MiB)
Running: simpsons_rule
  0.034848 seconds (29.17 k allocations: 1.796 MiB)
Running: simpsons38_rule
  0.037986 seconds (44.16 k allocations: 2.753 MiB)
Running: trapezoidal_rule
  0.048409 seconds (57.47 k allocations: 2.016 MiB, 39.93% gc time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.157404 seconds (146.18 k allocations: 8.744 MiB, 12.11% gc time)
Running: chebyshev_quadrature with k=1
  0.142145 seconds (70.03 k allocations: 2.209 MiB)
Running: chebyshev_quadrature with k=2
  0.152265 seconds (105.19 k allocations: 2.872 MiB)
Running: chebyshev_quadrature with k=3
  0.158935 seconds (92.67 k allocations: 2.659 MiB)
Running: chebyshev_quadrature with k=4
  0.156393 seconds (72.20 k allocations: 2.253 MiB)
Running: jacobi_quadrature with α=β=1
  3.423292 seconds (475.29 k allocations: 167.536 MiB, 10.11% gc time)
Running: legendre_quadrature
  0.117818 seconds (18.82 k allocations: 1.098 MiB)
Running: lobatto_quadrature
  0.000130 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000099 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.825243 seconds (590.00 M allocations: 8.792 GiB, 2.59% gc time)
Running: rectangle_rule_midpoint
  0.000037 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.270327 seconds (592.75 M allocations: 8.833 GiB, 2.66% gc time)
Running: rombergs_method
  0.138445 seconds (20.60 k allocations: 1.170 MiB)
Running: simpsons_rule
  0.000048 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031051 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.027855 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.385948 seconds (629.33 M allocations: 9.387 GiB, 3.88% gc time)
Running: chebyshev_quadrature with k=1
  0.500671 seconds (421.71 k allocations: 23.285 MiB)
Running: chebyshev_quadrature with k=2
 12.119168 seconds (476.55 k allocations: 4.041 GiB, 5.17% gc time)
Running: chebyshev_quadrature with k=3
  6.399034 seconds (278.42 k allocations: 1.643 GiB, 4.98% gc time)
Running: chebyshev_quadrature with k=4
  7.822341 seconds (278.45 k allocations: 2.262 GiB, 2.97% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 59.889577 seconds (485.45 k allocations: 13.254 GiB, 3.73% gc time)
Running: legendre_quadrature.
  6.132260 seconds (224.89 k allocations: 1.976 GiB, 2.40% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.152096 seconds (8.23 M allocations: 13.383 GiB, 3.65% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.469059 seconds (7.23 M allocations: 13.369 GiB, 3.49% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.937078 seconds (22.41 k allocations: 1.355 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.109398 seconds (30.69 k allocations: 1.896 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.821962 seconds (22.62 k allocations: 1.365 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.226589 seconds (440.97 k allocations: 152.878 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.493544 seconds (600.04 M allocations: 8.943 GiB, 8.43% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.717976 seconds (600.05 M allocations: 8.943 GiB, 7.93% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.478360 seconds (600.03 M allocations: 8.943 GiB, 9.01% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.062652 seconds (180.73 k allocations: 4.418 MiB)
Running: chebyshev_quadrature with k=1
  0.221951 seconds (248.72 k allocations: 13.517 MiB)
Running: chebyshev_quadrature with k=2
  0.204071 seconds (273.35 k allocations: 14.575 MiB)
Running: chebyshev_quadrature with k=3
  0.205783 seconds (249.40 k allocations: 12.873 MiB)
Running: chebyshev_quadrature with k=4
  0.203213 seconds (249.43 k allocations: 12.872 MiB)
Running: jacobi_quadrature with α=β=1
  0.439823 seconds (389.10 k allocations: 34.983 MiB)
Running: laguerre_quadrature with k=2
  0.195132 seconds (181.50 k allocations: 10.528 MiB)
Running: legendre_quadrature
  0.130940 seconds (146.65 k allocations: 8.108 MiB)
Running: lobatto_quadrature
  0.037814 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.033966 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.056082 seconds (19.00 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.047005 seconds (25.68 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.048991 seconds (17.60 k allocations: 1.055 MiB)
Running: rombergs_method
  0.266328 seconds (172.24 k allocations: 9.843 MiB)
Running: simpsons_rule
  0.001916 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057528 seconds (79.23 k allocations: 3.402 MiB)
Running: trapezoidal_rule
  0.263633 seconds (2.39 M allocations: 37.701 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002173 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.136361 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.137615 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.126637 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.125185 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  9.191268 seconds (366.12 k allocations: 904.814 MiB, 4.32% gc time)
Running: legendre_quadrature
  0.075952 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000192 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000149 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.110415 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000514 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.412981 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.069563 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000069 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000948 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000764 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.129166 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.122659 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.131841 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.128774 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  2.423082 seconds (372.69 k allocations: 252.944 MiB)
Running: legendre_quadrature
  0.095650 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000097 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000057 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.702569 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001301 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.202532 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.103264 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000062 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001925 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
