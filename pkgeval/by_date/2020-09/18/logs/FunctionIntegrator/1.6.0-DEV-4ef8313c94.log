Julia Version 1.6.0-DEV.952
Commit 4ef8313c94 (2020-09-17 11:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_JQ3d1l/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_JQ3d1l/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.057733 seconds (1.36 M allocations: 72.609 MiB, 10.71% gc time)
Running: chebyshev_quadrature with k=1
  1.738585 seconds (2.15 M allocations: 123.697 MiB, 5.45% gc time)
Running: chebyshev_quadrature with k=2
  0.299273 seconds (409.21 k allocations: 23.542 MiB, 7.02% gc time)
Running: chebyshev_quadrature with k=3
  0.351514 seconds (522.61 k allocations: 28.686 MiB)
Running: chebyshev_quadrature with k=4
  0.398670 seconds (467.27 k allocations: 25.326 MiB, 21.88% gc time)
Running: jacobi_quadrature with α=β=1
 42.660064 seconds (37.16 M allocations: 3.042 GiB, 9.74% gc time)
Running: laguerre_quadrature with k=1
  3.006655 seconds (3.17 M allocations: 177.158 MiB, 7.10% gc time)
Running: legendre_quadrature
  0.216382 seconds (206.10 k allocations: 11.851 MiB)
Running: lobatto_quadrature
  0.363858 seconds (330.20 k allocations: 19.961 MiB)
Running: radau_quadrature
  0.339490 seconds (415.11 k allocations: 25.331 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.490832 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time)
Running: rectangle_rule_midpoint.
  0.141921 seconds (172.63 k allocations: 3.836 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.211495 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rombergs_method
  0.628640 seconds (722.08 k allocations: 41.701 MiB, 5.24% gc time)
Running: simpsons_rule
  0.044962 seconds (45.97 k allocations: 2.054 MiB)
Running: simpsons38_rule
  0.160227 seconds (109.25 k allocations: 5.793 MiB)
Running: trapezoidal_rule
  0.524269 seconds (1.51 M allocations: 25.702 MiB, 3.75% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.084154 seconds (31.26 k allocations: 1.878 MiB)
Running: chebyshev_quadrature with k=1
  0.483574 seconds (273.43 k allocations: 14.242 MiB, 5.95% gc time)
Running: chebyshev_quadrature with k=2
  0.148829 seconds (93.84 k allocations: 2.677 MiB)
Running: chebyshev_quadrature with k=3
  0.171566 seconds (82.09 k allocations: 2.478 MiB)
Running: chebyshev_quadrature with k=4
  0.168538 seconds (64.70 k allocations: 2.124 MiB)
Running: jacobi_quadrature with α=β=1
  2.262357 seconds (499.20 k allocations: 161.616 MiB, 8.46% gc time)
Running: legendre_quadrature
  0.228336 seconds (41.68 k allocations: 2.412 MiB, 27.84% gc time)
Running: lobatto_quadrature
  0.021268 seconds (16.17 k allocations: 1.010 MiB)
Running: radau_quadrature
  0.020819 seconds (16.28 k allocations: 1.017 MiB)
Running: rectangle_rule_left
 29.882499 seconds (471.41 M allocations: 7.025 GiB, 3.07% gc time)
Running: rectangle_rule_midpoint
  0.000027 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.223094 seconds (476.96 M allocations: 7.107 GiB, 2.17% gc time)
Running: rombergs_method
  0.350260 seconds (326.60 k allocations: 18.561 MiB, 1.48% gc time)
Running: simpsons_rule
  0.000119 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064950 seconds (19.12 k allocations: 1.156 MiB)
Running: trapezoidal_rule
  0.057823 seconds (17.61 k allocations: 1.065 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029594 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.103132 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.109990 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.114758 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.115613 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.323563 seconds (362.16 k allocations: 18.896 MiB, 8.55% gc time)
Running: legendre_quadrature
  0.070121 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000104 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000086 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000510 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000352 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000502 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075303 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000040 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025515 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022575 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059102 seconds (72.77 k allocations: 4.238 MiB)
Running: chebyshev_quadrature with k=1
  0.177766 seconds (230.11 k allocations: 12.932 MiB)
Running: chebyshev_quadrature with k=2
  0.219459 seconds (282.78 k allocations: 15.930 MiB)
Running: chebyshev_quadrature with k=3
  0.224442 seconds (262.34 k allocations: 14.300 MiB, 10.85% gc time)
Running: chebyshev_quadrature with k=4
  0.211629 seconds (262.37 k allocations: 14.214 MiB)
Running: jacobi_quadrature with α=β=1
  2.658975 seconds (445.69 k allocations: 163.101 MiB, 7.57% gc time)
Running: legendre_quadrature
  0.150352 seconds (184.98 k allocations: 10.684 MiB)
Running: lobatto_quadrature
  0.164077 seconds (195.85 k allocations: 11.375 MiB)
Running: radau_quadrature
  0.161723 seconds (195.85 k allocations: 11.375 MiB)
Running: rectangle_rule_left
  1.112149 seconds (18.94 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.041706 seconds (24.84 k allocations: 1.564 MiB, 39.43% gc time)
Running: rectangle_rule_right
  1.091037 seconds (17.51 k allocations: 1.071 MiB)
Running: rombergs_method
  0.125136 seconds (133.60 k allocations: 7.727 MiB)
Running: simpsons_rule
  0.030036 seconds (27.73 k allocations: 1.741 MiB)
Running: simpsons38_rule
  0.035405 seconds (42.67 k allocations: 2.693 MiB)
Running: trapezoidal_rule
  0.025220 seconds (44.25 k allocations: 1.780 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042116 seconds (99.77 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.184644 seconds (236.70 k allocations: 13.004 MiB)
Running: chebyshev_quadrature with k=2
  0.221367 seconds (289.78 k allocations: 15.844 MiB, 8.32% gc time)
Running: chebyshev_quadrature with k=3
  0.198065 seconds (269.06 k allocations: 14.290 MiB)
Running: chebyshev_quadrature with k=4
  0.195499 seconds (269.09 k allocations: 14.285 MiB)
Running: hermite_quadrature with k=2
 14.779540 seconds (20.86 M allocations: 1.086 GiB, 10.77% gc time)
Running: jacobi_quadrature with α=β=1
  0.410643 seconds (454.91 k allocations: 49.320 MiB, 9.73% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.196591 seconds (275.97 k allocations: 15.221 MiB)
Running: legendre_quadrature
  0.169626 seconds (191.54 k allocations: 11.006 MiB)
Running: lobatto_quadrature
  0.253373 seconds (216.66 k allocations: 37.148 MiB, 12.66% gc time)
Running: radau_quadrature
  0.210719 seconds (213.26 k allocations: 29.810 MiB)
Running: rectangle_rule_left
  0.029397 seconds (21.89 k allocations: 1.301 MiB)
Running: rectangle_rule_midpoint
  0.024096 seconds (26.66 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.021758 seconds (18.64 k allocations: 1.124 MiB)
Running: rombergs_method
  0.127841 seconds (136.09 k allocations: 7.768 MiB)
Running: simpsons_rule
  0.057517 seconds (39.61 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.053697 seconds (57.69 k allocations: 3.080 MiB)
Running: trapezoidal_rule
  0.039654 seconds (30.32 k allocations: 1.707 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041578 seconds (60.13 k allocations: 2.291 MiB)
Running: chebyshev_quadrature with k=1
  0.200874 seconds (232.22 k allocations: 12.800 MiB)
Running: chebyshev_quadrature with k=2
  0.318758 seconds (284.99 k allocations: 15.610 MiB, 10.21% gc time)
Running: chebyshev_quadrature with k=3
  0.355600 seconds (264.48 k allocations: 14.079 MiB)
Running: chebyshev_quadrature with k=4
  0.259703 seconds (264.50 k allocations: 14.082 MiB)
Running: hermite_quadrature with k=2
  0.179388 seconds (170.26 k allocations: 9.766 MiB)
Running: jacobi_quadrature with α=β=1
  9.710531 seconds (448.15 k allocations: 1.175 GiB, 10.35% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.302036 seconds (271.25 k allocations: 15.109 MiB)
Running: legendre_quadrature
  0.155217 seconds (187.10 k allocations: 10.791 MiB)
Running: lobatto_quadrature
  0.216078 seconds (207.42 k allocations: 22.879 MiB, 7.10% gc time)
Running: radau_quadrature
  0.191594 seconds (206.57 k allocations: 20.811 MiB)
Running: rectangle_rule_left
  0.028124 seconds (19.66 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.027527 seconds (25.54 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.025459 seconds (17.49 k allocations: 1.069 MiB)
Running: rombergs_method
  0.109235 seconds (131.91 k allocations: 7.594 MiB)
Running: simpsons_rule
  0.033023 seconds (32.11 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.099290 seconds (48.48 k allocations: 2.838 MiB, 16.20% gc time)
Running: trapezoidal_rule
  0.026520 seconds (25.21 k allocations: 1.544 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032118 seconds (31.08 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.189000 seconds (230.60 k allocations: 13.011 MiB)
Running: chebyshev_quadrature with k=2
  0.215516 seconds (283.28 k allocations: 15.955 MiB)
Running: chebyshev_quadrature with k=3
  0.245627 seconds (262.85 k allocations: 14.291 MiB, 8.20% gc time)
Running: chebyshev_quadrature with k=4
  0.225305 seconds (262.88 k allocations: 14.131 MiB)
Running: jacobi_quadrature with α=β=1
  3.144216 seconds (446.24 k allocations: 194.173 MiB, 4.08% gc time)
Running: legendre_quadrature
  0.261069 seconds (185.48 k allocations: 10.727 MiB, 6.69% gc time)
Running: lobatto_quadrature
  0.293945 seconds (196.35 k allocations: 11.417 MiB)
Running: radau_quadrature
  0.272830 seconds (196.35 k allocations: 11.413 MiB)
Running: rectangle_rule_left
  0.373500 seconds (19.47 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.027281 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.113200 seconds (17.85 k allocations: 1.087 MiB)
Running: rombergs_method
  0.158286 seconds (144.42 k allocations: 8.456 MiB)
Running: simpsons_rule
  0.030641 seconds (28.43 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.051185 seconds (43.39 k allocations: 2.724 MiB, 33.69% gc time)
Running: trapezoidal_rule
  0.027264 seconds (45.19 k allocations: 1.814 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.046515 seconds (31.84 k allocations: 1.837 MiB)
Running: chebyshev_quadrature with k=1
  0.212033 seconds (231.19 k allocations: 12.964 MiB)
Running: chebyshev_quadrature with k=2
  0.248306 seconds (283.90 k allocations: 15.859 MiB)
Running: chebyshev_quadrature with k=3
  0.231550 seconds (263.43 k allocations: 14.216 MiB, 8.49% gc time)
Running: chebyshev_quadrature with k=4
  0.257324 seconds (263.45 k allocations: 14.296 MiB)
Running: jacobi_quadrature with α=β=1
  2.754922 seconds (446.95 k allocations: 148.860 MiB, 9.56% gc time)
Running: legendre_quadrature
  0.195458 seconds (186.07 k allocations: 10.788 MiB, 8.94% gc time)
Running: lobatto_quadrature
  0.186917 seconds (196.95 k allocations: 11.419 MiB)
Running: radau_quadrature
  0.187167 seconds (196.94 k allocations: 11.435 MiB)
Running: rectangle_rule_left
  1.381466 seconds (19.72 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.027024 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  1.206330 seconds (17.81 k allocations: 1.085 MiB)
Running: rombergs_method
  0.118852 seconds (134.82 k allocations: 7.782 MiB)
Running: simpsons_rule
  0.029965 seconds (29.12 k allocations: 1.796 MiB)
Running: simpsons38_rule
  0.034212 seconds (44.09 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.025066 seconds (57.42 k allocations: 2.014 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.145816 seconds (146.08 k allocations: 8.743 MiB)
Running: chebyshev_quadrature with k=1
  0.160461 seconds (69.97 k allocations: 2.207 MiB, 12.16% gc time)
Running: chebyshev_quadrature with k=2
  0.154425 seconds (105.13 k allocations: 2.869 MiB)
Running: chebyshev_quadrature with k=3
  0.156728 seconds (92.61 k allocations: 2.656 MiB)
Running: chebyshev_quadrature with k=4
  0.156355 seconds (72.14 k allocations: 2.252 MiB)
Running: jacobi_quadrature with α=β=1
  2.124556 seconds (474.77 k allocations: 167.501 MiB, 7.52% gc time)
Running: legendre_quadrature
  0.099744 seconds (18.76 k allocations: 1.093 MiB)
Running: lobatto_quadrature
  0.000108 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000091 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.362213 seconds (590.00 M allocations: 8.792 GiB, 2.72% gc time)
Running: rectangle_rule_midpoint
  0.000037 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.736285 seconds (592.75 M allocations: 8.833 GiB, 2.72% gc time)
Running: rombergs_method
  0.126990 seconds (20.54 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000101 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029652 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023647 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.300512 seconds (629.33 M allocations: 9.387 GiB, 3.66% gc time)
Running: chebyshev_quadrature with k=1
  0.506618 seconds (418.94 k allocations: 23.201 MiB)
Running: chebyshev_quadrature with k=2
 13.845848 seconds (473.66 k allocations: 4.040 GiB, 5.06% gc time)
Running: chebyshev_quadrature with k=3
  6.358883 seconds (276.75 k allocations: 1.643 GiB, 4.46% gc time)
Running: chebyshev_quadrature with k=4
  7.793009 seconds (276.78 k allocations: 2.261 GiB, 2.52% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.001613 seconds (483.70 k allocations: 13.254 GiB, 3.69% gc time)
Running: legendre_quadrature.
  6.196086 seconds (223.24 k allocations: 1.976 GiB, 2.77% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.536884 seconds (8.23 M allocations: 13.383 GiB, 4.38% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.885097 seconds (7.23 M allocations: 13.369 GiB, 3.42% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.087161 seconds (22.38 k allocations: 1.354 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.357326 seconds (30.63 k allocations: 1.894 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.265578 seconds (22.59 k allocations: 1.364 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.274509 seconds (437.93 k allocations: 152.684 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.653158 seconds (600.04 M allocations: 8.943 GiB, 8.32% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.697668 seconds (600.05 M allocations: 8.943 GiB, 7.84% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 45.488625 seconds (600.03 M allocations: 8.943 GiB, 9.15% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.064606 seconds (180.71 k allocations: 4.420 MiB)
Running: chebyshev_quadrature with k=1
  0.228759 seconds (247.17 k allocations: 13.416 MiB)
Running: chebyshev_quadrature with k=2
  0.277480 seconds (271.77 k allocations: 14.550 MiB)
Running: chebyshev_quadrature with k=3
  0.312334 seconds (247.88 k allocations: 12.783 MiB)
Running: chebyshev_quadrature with k=4
  0.326499 seconds (247.91 k allocations: 12.782 MiB)
Running: jacobi_quadrature with α=β=1
  0.613011 seconds (387.52 k allocations: 34.885 MiB)
Running: laguerre_quadrature with k=2
  0.356483 seconds (180.07 k allocations: 10.516 MiB)
Running: legendre_quadrature
  0.277537 seconds (145.31 k allocations: 8.035 MiB)
Running: lobatto_quadrature
  0.041851 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.033543 seconds (9.47 k allocations: 13.174 MiB)
Running: rectangle_rule_left
  0.057567 seconds (18.99 k allocations: 1.129 MiB)
Running: rectangle_rule_midpoint
  0.049672 seconds (25.65 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.055178 seconds (17.59 k allocations: 1.055 MiB)
Running: rombergs_method
  0.380302 seconds (171.87 k allocations: 9.875 MiB)
Running: simpsons_rule
  0.004345 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.069419 seconds (79.17 k allocations: 3.400 MiB)
Running: trapezoidal_rule
  0.327210 seconds (2.39 M allocations: 37.700 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002123 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.153422 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.144051 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.153888 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.143922 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.428681 seconds (364.56 k allocations: 904.721 MiB, 4.43% gc time)
Running: legendre_quadrature
  0.068228 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000254 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000178 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.185347 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000828 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.642485 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.099204 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000887 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000755 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.122903 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.116505 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.193766 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.153627 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.892786 seconds (371.12 k allocations: 252.864 MiB)
Running: legendre_quadrature
  0.119559 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.003424 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000222 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.953804 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001092 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.768612 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.099731 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000043 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001680 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
