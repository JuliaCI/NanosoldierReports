Julia Version 1.6.0-DEV.968
Commit 109a1e1987 (2020-09-18 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_SdAJeU/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_SdAJeU/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172272291711981
curgen: 20 fitness: 0.2172272291711981
curgen: 30 fitness: 0.2172272291711981
curgen: 40 fitness: 0.21723040682851172
curgen: 50 fitness: 0.21723040682851172
CoordinateCreature{Vector{Float64}}([-0.2228181014758925], -0.21723040682851172) -0.2228181014758925 -0.21723040682851172
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2575835591742157
curgen: 100 fitness: 3.2579432421502164
curgen: 150 fitness: 3.2579745609537634
curgen: 200 fitness: 3.258280744289007
curgen: 250 fitness: 3.2583172716526407
curgen: 300 fitness: 3.2583172716526407
curgen: 350 fitness: 3.2584013401093626
curgen: 400 fitness: 3.25841676365619
curgen: 450 fitness: 3.25841676365619
curgen: 500 fitness: 3.2584177900674747
CoordinateCreature{Vector{Float64}}([-0.22250769145026297, -0.22259905568944113, 0.22262462044360384, 0.22244650630669824, 0.22181360300439176, 0.22244290584393708, -0.22257278659357138, -0.22289637379701563, 0.22300535184913559, 0.2227174707480236, 0.22259807371872956, 0.22253506686920396, -0.22164294682796606, 0.22210397522240338, 0.2225422057287944], -3.2584177900674747) [-0.22250769145026297, -0.22259905568944113, 0.22262462044360384, 0.22244650630669824, 0.22181360300439176, 0.22244290584393708, -0.22257278659357138, -0.22289637379701563, 0.22300535184913559, 0.2227174707480236, 0.22259807371872956, 0.22253506686920396, -0.22164294682796606, 0.22210397522240338, 0.2225422057287944] -3.2584177900674747
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004915183967938219
curgen: 100 fitness: -0.004915183967938219
curgen: 150 fitness: -0.0047565986645281555
curgen: 200 fitness: -0.004011638920928817
curgen: 250 fitness: -0.0010300167792820503
curgen: 300 fitness: -0.0010300167792820503
curgen: 350 fitness: -0.0006817227348960841
curgen: 400 fitness: -0.0006799517641695729
curgen: 450 fitness: -0.0006799517641695729
curgen: 500 fitness: -0.0006799517641695729
CoordinateCreature{Vector{Float64}}([-4.760743343691171e-5, 1.7524594135380736e-5, -2.4131795067611618e-5, 0.00010144361066044148, 7.331005183710735e-6, 0.0003705339714000491, 0.0008697820307931895, -2.8611203335978264e-5, 7.064678393538281e-5, 0.0002930313006624816, 0.0009568813157484948, 8.239438647327164e-5, -0.0007263897046562447, 0.0007538980059503787, 0.0006402434283118638], 0.0006799517641695729) [-4.760743343691171e-5, 1.7524594135380736e-5, -2.4131795067611618e-5, 0.00010144361066044148, 7.331005183710735e-6, 0.0003705339714000491, 0.0008697820307931895, -2.8611203335978264e-5, 7.064678393538281e-5, 0.0002930313006624816, 0.0009568813157484948, 8.239438647327164e-5, -0.0007263897046562447, 0.0007538980059503787, 0.0006402434283118638] 0.0006799517641695729
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
