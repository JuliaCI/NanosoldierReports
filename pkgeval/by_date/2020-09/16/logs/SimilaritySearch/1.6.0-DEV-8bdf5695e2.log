Julia Version 1.6.0-DEV.918
Commit 8bdf5695e2 (2020-09-15 16:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.1
  Installed Parsers ──────────── v1.0.10
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_MdFKgp/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_MdFKgp/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(24, 0.006792426f0), Item(18, 0.05522442f0), Item(45, 0.06305373f0), Item(16, 0.067329645f0)])
Vsorted = Item[Item(24, 0.006792426f0), Item(18, 0.05522442f0), Item(45, 0.06305373f0), Item(16, 0.067329645f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005208317438761393, 0.0052764654159545895, 301.0, 50.85712035372853))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0047168731689453125, 0.004908339182535807, 301.0, 73.69134414196014))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005198915799458821, 0.005003635088602702, 301.0, 41.50720703601837))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004516744613647461, 0.004674736658732096, 301.0, 9.376575269503519))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004110368092854818, 0.005237062772115071, 301.0, 46.0813017860055))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015648206075032553, 0.00013209978739420574, 301.0, 180.83456064760685))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.162325541178385e-5, 0.010785102844238281, 300.0, 25.160008732695132)
p = PerformanceResult(1.0, 1.0, 1.0, 6.136894226074218e-5, 2.9468536376953124e-5, 300.0, 25.160008732695132)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004852461814880371, 0.003967968622843424, 300.0, 1.336604837350933)
p = PerformanceResult(1.0, 1.0, 1.0, 4.8629442850748705e-5, 1.9431114196777344e-5, 300.0, 1.336604837350933)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.162325541178385e-5, 0.010785102844238281, 300.0, 25.160008732695132), PerformanceResult(1.0, 1.0, 1.0, 6.136894226074218e-5, 2.9468536376953124e-5, 300.0, 25.160008732695132), PerformanceResult(1.0, 1.0, 1.0, 0.004852461814880371, 0.003967968622843424, 300.0, 1.336604837350933), PerformanceResult(1.0, 1.0, 1.0, 4.8629442850748705e-5, 1.9431114196777344e-5, 300.0, 1.336604837350933))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 129.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008143305778503418, 0.004065497716267904, 347.26666666666665, 28596.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0079269806543986, 0.003508194287618001, 302.6333333333333, 6920.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3698806762695314e-5, 1.087188720703125e-5, 95.76666666666667, 50.76052292063832))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3452440897623696e-5, 1.426537831624349e-5, 84.5, 73.6326653957367))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5876363118489583e-5, 1.4932950337727864e-5, 91.43333333333334, 41.3886376619339))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.310476938883463e-5, 0.00016609827677408853, 97.1, 45.9614472836256))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8033333333333333, 0.8033333333333333, 0.8033333333333333, 4.807313283284505e-5, 0.00012583732604980468, 69.3, 191.09997744858265))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-17T19:18:34.543
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9130000000000003, 0.9130000000000003, 0.9130000000000003, 0.00016696691513061522, 2.3150444030761717e-5, 152.59, 47.67588480422273))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1395683288574218e-5, 1.7588138580322265e-5, 156.57, 0.0))
*** advance 1 from 1000; 2020-09-17T19:18:35.203
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9280000000000003, 0.9280000000000003, 0.9280000000000003, 2.3214817047119142e-5, 2.2101402282714844e-5, 153.51, 70.96461986191571))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2323131561279296e-5, 1.9898414611816405e-5, 157.83, 0.0))
*** advance 1 from 1000; 2020-09-17T19:18:35.935
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8940000000000002, 0.8940000000000002, 0.8940000000000002, 2.4557113647460938e-5, 3.4821033477783206e-5, 152.83, 38.21364268474281))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3887157440185546e-5, 3.441095352172852e-5, 156.87, 0.0))
*** advance 1 from 1000; 2020-09-17T19:18:36.650
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9000000000000001, 0.9000000000000001, 0.9000000000000001, 0.00022705793380737305, 0.0010336112976074218, 153.78, 42.89293721062131))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00022712469100952148, 0.0011433696746826173, 157.92, 0.0))
*** advance 1 from 1000; 2020-09-17T19:18:37.460
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.9760000000000002, 0.9760000000000002, 0.9760000000000002, 0.00011856317520141602, 0.00048725128173828127, 168.14, 179.72444872371852))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00013750791549682617, 0.0004457402229309082, 173.79, 0.0))
*** advance 1 from 1000; 2020-09-17T19:18:38.796
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9130000000000003, 0.9130000000000003, 0.9130000000000003, 3.363132476806641e-5, 7.768869400024415e-5, 152.59, 47.68447715975344))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.6706924438476564e-5, 7.635116577148438e-5, 156.57, 0.01528258397593163))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:40.709
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7380000000000001, 0.7380000000000001, 0.7380000000000001, 0.001506330966949463, 7.899999618530274e-5, 200.95, 187.08333490788937))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:41.682
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7320000000000003, 0.7320000000000003, 0.7320000000000003, 0.0016941785812377929, 8.78000259399414e-5, 202.96, 106.07857418060303))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:42.592
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6340000000000002, 0.6340000000000002, 0.6340000000000002, 0.002669038772583008, 8.787155151367188e-5, 289.92, 0.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:43.626
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9340000000000005, 0.9340000000000005, 0.9340000000000005, 0.001571207046508789, 1.8849372863769532e-5, 217.47, 605.2000207751989))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:44.664
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5770000000000001, 0.5770000000000001, 0.5770000000000001, 0.001744523048400879, 0.0004584622383117676, 251.52, 2370.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:45.632
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3679999999999999, 0.3679999999999999, 0.3679999999999999, 0.001771514415740967, 0.00032030105590820314, 236.44, 3642.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-17T19:18:46.662
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5960000000000001, 0.5960000000000001, 0.5960000000000001, 0.0015917658805847169, 2.897977828979492e-5, 246.01, 2386.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0816901408450703,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9526270604395615,"seconds":0.0025585591793060303,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.3203125,"distances_sum":513.22340965271}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0816901408450703,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9526270604395615,"seconds":0.0025585591793060303,"exhaustive_search_seconds":2.039596438407898e-6,"evaluations":8.3203125,"distances_sum":513.22340965271}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.984651527016445,"state":{"restarts":8},"perf":{"precision":0.9175347222222212,"recall":0.9175347222222212,"f1":0.9175347222222212,"seconds":2.022087574005127e-5,"exhaustive_search_seconds":6.407499313354492e-6,"evaluations":49.8828125,"distances_sum":305.1751358881593}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.984651527016445,"state":{"restarts":8},"perf":{"precision":0.9175347222222212,"recall":0.9175347222222212,"f1":0.9175347222222212,"seconds":2.022087574005127e-5,"exhaustive_search_seconds":6.407499313354492e-6,"evaluations":49.8828125,"distances_sum":305.1751358881593}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999988, conf: {"restarts":13}, perf: {"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":5.463138222694397e-5,"exhaustive_search_seconds":2.6397407054901123e-5,"evaluations":147.3515625,"distances_sum":127.16046515479684}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8663194444444436, conf: {"restarts":9}, perf: {"precision":0.8663194444444436,"recall":0.8663194444444436,"f1":0.8663194444444436,"seconds":6.57886266708374e-5,"exhaustive_search_seconds":2.6397407054901123e-5,"evaluations":122.578125,"distances_sum":126.72001396119595}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8706597222222212, conf: {"restarts":10}, perf: {"precision":0.8706597222222212,"recall":0.8706597222222212,"f1":0.8706597222222212,"seconds":4.204548895359039e-5,"exhaustive_search_seconds":2.6397407054901123e-5,"evaluations":129.484375,"distances_sum":126.78978554904461}, best_list's length: 8, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8706597222222212,"state":{"restarts":10},"perf":{"precision":0.8706597222222212,"recall":0.8706597222222212,"f1":0.8706597222222212,"seconds":4.204548895359039e-5,"exhaustive_search_seconds":2.6397407054901123e-5,"evaluations":129.484375,"distances_sum":126.78978554904461}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8706597222222212,"state":{"restarts":10},"perf":{"precision":0.8706597222222212,"recall":0.8706597222222212,"f1":0.8706597222222212,"seconds":4.204548895359039e-5,"exhaustive_search_seconds":2.6397407054901123e-5,"evaluations":129.484375,"distances_sum":126.78978554904461}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666661, conf: {"restarts":1}, perf: {"precision":0.8697916666666661,"recall":0.8697916666666661,"f1":0.8697916666666661,"seconds":6.182119250297546e-5,"exhaustive_search_seconds":0.0003527570515871048,"evaluations":126.4296875,"distances_sum":55.13246958795935}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8723958333333324, conf: {"restarts":19}, perf: {"precision":0.8723958333333324,"recall":0.8723958333333324,"f1":0.8723958333333324,"seconds":0.00013327039778232574,"exhaustive_search_seconds":0.0003527570515871048,"evaluations":286.0390625,"distances_sum":54.96967472601682}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8723958333333324,"state":{"restarts":19},"perf":{"precision":0.8723958333333324,"recall":0.8723958333333324,"f1":0.8723958333333324,"seconds":0.00013327039778232574,"exhaustive_search_seconds":0.0003527570515871048,"evaluations":286.0390625,"distances_sum":54.96967472601682}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8723958333333324,"state":{"restarts":19},"perf":{"precision":0.8723958333333324,"recall":0.8723958333333324,"f1":0.8723958333333324,"seconds":0.00013327039778232574,"exhaustive_search_seconds":0.0003527570515871048,"evaluations":286.0390625,"distances_sum":54.96967472601682}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8723958333333324,"state":{"restarts":19},"perf":{"precision":0.8723958333333324,"recall":0.8723958333333324,"f1":0.8723958333333324,"seconds":0.00013327039778232574,"exhaustive_search_seconds":0.0003527570515871048,"evaluations":286.0390625,"distances_sum":54.96967472601682}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(19), SatNeighborhood(32), 2020-09-17T19:18:54.098
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7360, 0.019942354f0), Item(9309, 0.022213047f0), Item(3612, 0.024688337f0), Item(9310, 0.024756432f0), Item(7392, 0.024908774f0), Item(7591, 0.048699334f0), Item(7508, 0.04944244f0), Item(8057, 0.05658822f0), Item(3741, 0.057066087f0), Item(7459, 0.05974767f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.062730627306273,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9596382783882789,"seconds":0.0039795078337192535,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.46875,"distances_sum":518.9210709482431}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.062730627306273,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9596382783882789,"seconds":0.0039795078337192535,"exhaustive_search_seconds":2.164393663406372e-6,"evaluations":8.46875,"distances_sum":518.9210709482431}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.319015191199581, conf: {"bsize":2}, perf: {"precision":0.9522569444444435,"recall":0.9522569444444435,"f1":0.9522569444444435,"seconds":1.3634562492370605e-5,"exhaustive_search_seconds":6.8675726652145386e-6,"evaluations":29.828125,"distances_sum":288.777146268636}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.319015191199581,"state":{"bsize":2},"perf":{"precision":0.9522569444444435,"recall":0.9522569444444435,"f1":0.9522569444444435,"seconds":1.3634562492370605e-5,"exhaustive_search_seconds":6.8675726652145386e-6,"evaluations":29.828125,"distances_sum":288.777146268636}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.319015191199581,"state":{"bsize":2},"perf":{"precision":0.9522569444444435,"recall":0.9522569444444435,"f1":0.9522569444444435,"seconds":1.3634562492370605e-5,"exhaustive_search_seconds":6.8675726652145386e-6,"evaluations":29.828125,"distances_sum":288.777146268636}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.319015191199581,"state":{"bsize":2},"perf":{"precision":0.9522569444444435,"recall":0.9522569444444435,"f1":0.9522569444444435,"seconds":1.3634562492370605e-5,"exhaustive_search_seconds":6.8675726652145386e-6,"evaluations":29.828125,"distances_sum":288.777146268636}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.741555380989787, conf: {"bsize":4}, perf: {"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":2.671964466571808e-5,"exhaustive_search_seconds":2.6522204279899597e-5,"evaluations":59.671875,"distances_sum":122.71365919150412}, best_list's length: 3, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.741555380989787,"state":{"bsize":4},"perf":{"precision":0.9921874999999999,"recall":0.9921874999999999,"f1":0.9921874999999999,"seconds":2.671964466571808e-5,"exhaustive_search_seconds":2.6522204279899597e-5,"evaluations":59.671875,"distances_sum":122.71365919150412}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.858536585365854, conf: {"bsize":3}, perf: {"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":2.6633962988853455e-5,"exhaustive_search_seconds":2.6522204279899597e-5,"evaluations":59.2578125,"distances_sum":123.01655204035342}, best_list's length: 7, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.858536585365854,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":2.6633962988853455e-5,"exhaustive_search_seconds":2.6522204279899597e-5,"evaluations":59.2578125,"distances_sum":123.01655204035342}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.858536585365854,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":2.6633962988853455e-5,"exhaustive_search_seconds":2.6522204279899597e-5,"evaluations":59.2578125,"distances_sum":123.01655204035342}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.858536585365854,"state":{"bsize":3},"perf":{"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":2.6633962988853455e-5,"exhaustive_search_seconds":2.6522204279899597e-5,"evaluations":59.2578125,"distances_sum":123.01655204035342}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 89.6215205650187, conf: {"bsize":10}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.352232933044434e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":112.828125,"distances_sum":55.64353669201955}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 90.33910372748848, conf: {"bsize":11}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":7.04452395439148e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":111.921875,"distances_sum":55.64353669201955}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 92.43902264771022, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.437115371227264e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":109.3515625,"distances_sum":55.64353669201955}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":92.43902264771022,"state":{"bsize":9},"perf":{"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.437115371227264e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":109.3515625,"distances_sum":55.64353669201955}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.23255813953489, conf: {"bsize":4}, perf: {"precision":0.9921874999999998,"recall":0.9921874999999998,"f1":0.9921874999999998,"seconds":5.92060387134552e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":101.7890625,"distances_sum":55.68989445781335}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.95990703079605, conf: {"bsize":5}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":8.51564109325409e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":107.5625,"distances_sum":55.64353669201955}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 93.24302702702703, conf: {"bsize":2}, perf: {"precision":0.9409722222222215,"recall":0.9409722222222215,"f1":0.9409722222222215,"seconds":8.749589323997498e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":108.3984375,"distances_sum":56.24365081405267}, best_list's length: 7, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.6552207428171, conf: {"bsize":6}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.365776062011719e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":100.3359375,"distances_sum":55.64719431614503}, best_list's length: 8, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.96400989727825, conf: {"bsize":7}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.7906454205513e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":104.1953125,"distances_sum":55.64353669201955}, best_list's length: 9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.08748070278615, conf: {"bsize":8}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":6.954558193683624e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":106.2734375,"distances_sum":55.64353669201955}, best_list's length: 10, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.6552207428171,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.365776062011719e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":100.3359375,"distances_sum":55.64719431614503}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.6552207428171,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.365776062011719e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":100.3359375,"distances_sum":55.64719431614503}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.6552207428171,"state":{"bsize":6},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.365776062011719e-5,"exhaustive_search_seconds":0.0004244297742843628,"evaluations":100.3359375,"distances_sum":55.64719431614503}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(6), SatNeighborhood(32), 2020-09-17T19:18:58.269
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(8648, 0.016819164f0), Item(892, 0.026442237f0), Item(7964, 0.03568182f0), Item(6957, 0.039850626f0), Item(1853, 0.051451948f0), Item(1219, 0.05297126f0), Item(3093, 0.05718559f0), Item(7717, 0.061778776f0), Item(3292, 0.06212808f0), Item(7692, 0.06590658f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
