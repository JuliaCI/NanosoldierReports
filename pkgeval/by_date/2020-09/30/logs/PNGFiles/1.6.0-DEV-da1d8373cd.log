Julia Version 1.6.0-DEV.1076
Commit da1d8373cd (2020-09-29 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed libpng_jll ──────── v1.6.37+5
  Installed CEnum ───────────── v0.4.1
  Installed IndirectArrays ──── v0.5.1
  Installed NaNMath ─────────── v0.3.4
  Installed ColorTypes ──────── v0.10.9
  Installed Graphics ────────── v1.0.2
  Installed FixedPointNumbers ─ v0.8.4
  Installed PNGFiles ────────── v0.3.1
  Installed Zlib_jll ────────── v1.2.11+16
  Installed Reexport ────────── v0.2.0
  Installed Requires ────────── v1.1.0
  Installed PaddedViews ─────── v0.5.5
  Installed OffsetArrays ────── v1.3.0
  Installed MosaicViews ─────── v0.2.3
  Installed MappedArrays ────── v0.2.2
  Installed ImageCore ───────── v0.8.16
  Installed Colors ──────────── v0.12.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [f57f5aa1] + PNGFiles v0.3.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fa961155] + CEnum v0.4.1
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [53c48c17] + FixedPointNumbers v0.8.4
  [a2bd30eb] + Graphics v1.0.2
  [a09fc81d] + ImageCore v0.8.16
  [9b13fd28] + IndirectArrays v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e94cdb99] + MosaicViews v0.2.3
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.0
  [f57f5aa1] + PNGFiles v0.3.1
  [5432bcbf] + PaddedViews v0.5.5
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [83775a58] + Zlib_jll v1.2.11+16
  [b53b4c65] + libpng_jll v1.6.37+5
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing PNGFiles
Status `/tmp/jl_SDH0VV/Project.toml`
  [fa961155] CEnum v0.4.1
  [c27321d9] Glob v1.3.0
  [a09fc81d] ImageCore v0.8.16
  [6218d12a] ImageMagick v1.1.6
  [9b13fd28] IndirectArrays v0.5.1
  [6fe1bfb0] OffsetArrays v1.3.0
  [f57f5aa1] PNGFiles v0.3.1
  [a4e569a6] Tar v1.8.0
  [5e47fb64] TestImages v1.2.2
  [b53b4c65] libpng_jll v1.6.37+5
  [56ddb016] Logging
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_SDH0VV/Manifest.toml`
  [0dad84c5] ArgTools v1.1.1
  [39de3d68] AxisArrays v0.4.3
  [fa961155] CEnum v0.4.1
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [b4f34e82] Distances v0.9.0
  [da5c29d0] EllipsisNotation v0.4.0
  [5789e2e9] FileIO v1.4.3
  [53c48c17] FixedPointNumbers v0.8.4
  [c27321d9] Glob v1.3.0
  [a2bd30eb] Graphics v1.0.2
  [a09fc81d] ImageCore v0.8.16
  [6218d12a] ImageMagick v1.1.6
  [c73af94c] ImageMagick_jll v6.9.10-12+3
  [9b13fd28] IndirectArrays v0.5.1
  [8197267c] IntervalSets v0.5.1
  [c8e1da08] IterTools v1.3.0
  [aacddb02] JpegTurbo_jll v2.0.1+2
  [89763e89] Libtiff_jll v4.1.0+1
  [dbb5928d] MappedArrays v0.2.2
  [e94cdb99] MosaicViews v0.2.3
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.0
  [f57f5aa1] PNGFiles v0.3.1
  [5432bcbf] PaddedViews v0.5.5
  [b3c3ace0] RangeArrays v0.3.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [88034a9c] StringDistances v0.8.0
  [a4e569a6] Tar v1.8.0
  [5e47fb64] TestImages v1.2.2
  [83775a58] Zlib_jll v1.2.11+16
  [3161d3a3] Zstd_jll v1.4.5+1
  [b53b4c65] libpng_jll v1.6.37+5
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Warning: Base.download is deprecated; use Downloads.download instead
│   caller = top-level scope at test_pngsuite.jl:32
└ @ Core ~/.julia/packages/PNGFiles/Sgsmw/test/test_pngsuite.jl:32
┌ Warning: `convert(Array{GrayA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `GrayA.(img)` instead.
│   caller = _standardize_grayness(x::Matrix{RGBA{N0f8}}) at utils.jl:28
└ @ Main ~/.julia/packages/PNGFiles/Sgsmw/test/utils.jl:28
┌ Warning: `convert(Array{GrayA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `GrayA.(img)` instead.
│   caller = _standardize_grayness(x::Matrix{RGBA{N0f16}}) at utils.jl:28
└ @ Main ~/.julia/packages/PNGFiles/Sgsmw/test/utils.jl:28
compare: Test Failed at /home/pkgeval/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:31
  Expression: all(expected .≈ read_in_pngf)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:31
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:31
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:20
 [6] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:18
compare: Test Failed at /home/pkgeval/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:31
  Expression: all(expected .≈ read_in_pngf)
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:31
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:31
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:20
 [6] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/PNGFiles/Sgsmw/test/test_paletted_images.jl:18
┌ Warning: `convert(Array{GrayA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `GrayA.(img)` instead.
│   caller = __prepare_buffer(x::Array{N0f8, 3}) at io.jl:463
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:463
┌ Warning: `convert(Array{RGB}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGB.(img)` instead.
│   caller = __prepare_buffer(x::Array{N0f8, 3}) at io.jl:465
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:465
┌ Warning: `convert(Array{RGBA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGBA.(img)` instead.
│   caller = __prepare_buffer(x::Array{N0f8, 3}) at io.jl:467
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:467
┌ Warning: `convert(Array{GrayA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `GrayA.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N0f8, 3, UInt8, Array{UInt8, 3}}) at io.jl:463
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:463
┌ Warning: `convert(Array{RGB}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGB.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N0f8, 3, UInt8, Array{UInt8, 3}}) at io.jl:465
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:465
┌ Warning: `convert(Array{RGBA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGBA.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N0f8, 3, UInt8, Array{UInt8, 3}}) at io.jl:467
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:467
┌ Warning: `convert(Array{GrayA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `GrayA.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N0f16, 3, UInt16, Array{UInt16, 3}}) at io.jl:463
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:463
┌ Warning: `convert(Array{RGB}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGB.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N0f16, 3, UInt16, Array{UInt16, 3}}) at io.jl:465
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:465
┌ Warning: `convert(Array{RGBA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGBA.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N0f16, 3, UInt16, Array{UInt16, 3}}) at io.jl:467
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:467
┌ Warning: `convert(Array{GrayA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `GrayA.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N4f12, 3, UInt16, Array{UInt16, 3}}) at io.jl:463
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:463
┌ Warning: `convert(Array{RGB}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGB.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N4f12, 3, UInt16, Array{UInt16, 3}}) at io.jl:465
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:465
┌ Warning: `convert(Array{RGBA}, img)` will soon switch to returning an array with non-concrete element type, which adds flexibility but
│ with great cost to performance. To maintain the current behavior, use `RGBA.(img)` instead.
│   caller = __prepare_buffer(x::Base.ReinterpretArray{N4f12, 3, UInt16, Array{UInt16, 3}}) at io.jl:467
└ @ PNGFiles ~/.julia/packages/PNGFiles/Sgsmw/src/io.jl:467
Test Summary:                                         | Pass  Fail  Total
PNGFiles                                              | 1630     2   1632
  invalid inputs                                      |   16           16
  PngSuite                                            |  897          897
  synthetic paletted images                           |   68     2     70
    RGB_paletted                                      |    7            7
    BRG_paletted                                      |    6     1      7
      write                                           |    1            1
      read                                            |    1            1
      compare                                         |          1      1
      BRG_paletted: ImageMagick read type equality    |    1            1
      BRG_paletted: ImageMagick read values equality  |    1            1
      BRG_paletted: IO is idempotent                  |    2            2
    ARGB_paletted                                     |    7            7
    ABGR_paletted                                     |    6     1      7
      write                                           |    1            1
      read                                            |    1            1
      compare                                         |          1      1
      ABGR_paletted: ImageMagick read type equality   |    1            1
      ABGR_paletted: ImageMagick read values equality |    1            1
      ABGR_paletted: IO is idempotent                 |    2            2
    RGBA_paletted                                     |    7            7
    RGB_paletted_float                                |    7            7
    BRG_paletted_float                                |    7            7
    ARGB_paletted_float                               |    7            7
    ABGR_paletted_float                               |    7            7
    RGBA_paletted_float                               |    7            7
  synthetic images                                    |  586          586
  TestImages.jl                                       |   63           63
ERROR: LoadError: Some tests did not pass: 1630 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PNGFiles/Sgsmw/test/runtests.jl:45
ERROR: Package PNGFiles errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1609
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:331
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:318
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
