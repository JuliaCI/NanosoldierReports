Julia Version 1.6.0-DEV.1076
Commit da1d8373cd (2020-09-29 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_F1n5Tz/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_F1n5Tz/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.798723 seconds (1.38 M allocations: 73.079 MiB, 1.56% gc time)
Running: chebyshev_quadrature with k=1
  1.699625 seconds (2.19 M allocations: 126.454 MiB, 3.46% gc time)
Running: chebyshev_quadrature with k=2
  0.269304 seconds (409.38 k allocations: 23.550 MiB, 5.03% gc time)
Running: chebyshev_quadrature with k=3
  0.312666 seconds (473.74 k allocations: 26.620 MiB, 4.68% gc time)
Running: chebyshev_quadrature with k=4
  0.283827 seconds (418.55 k allocations: 23.269 MiB)
Running: jacobi_quadrature with α=β=1
 38.937848 seconds (36.49 M allocations: 3.005 GiB, 8.35% gc time)
Running: laguerre_quadrature with k=1
  3.071204 seconds (3.17 M allocations: 177.079 MiB, 2.46% gc time)
Running: legendre_quadrature
  0.234646 seconds (206.21 k allocations: 11.836 MiB)
Running: lobatto_quadrature
  0.433053 seconds (329.36 k allocations: 19.894 MiB)
Running: radau_quadrature
  0.436872 seconds (446.59 k allocations: 27.223 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.580144 seconds (100.02 M allocations: 1.491 GiB, 0.85% gc time)
Running: rectangle_rule_midpoint.
  0.142975 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.850613 seconds (100.02 M allocations: 1.491 GiB, 0.60% gc time)
Running: rombergs_method
  0.590763 seconds (722.98 k allocations: 41.727 MiB, 5.60% gc time)
Running: simpsons_rule
  0.034480 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.086488 seconds (108.53 k allocations: 5.754 MiB)
Running: trapezoidal_rule
  0.285975 seconds (1.51 M allocations: 25.674 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081101 seconds (30.97 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.473729 seconds (290.24 k allocations: 15.321 MiB, 7.71% gc time)
Running: chebyshev_quadrature with k=2
  0.169212 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.171267 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.172397 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.610292 seconds (503.71 k allocations: 161.788 MiB, 14.25% gc time)
Running: legendre_quadrature
  0.195459 seconds (41.27 k allocations: 2.377 MiB)
Running: lobatto_quadrature
  0.022251 seconds (15.70 k allocations: 1001.747 KiB)
Running: radau_quadrature
  0.022961 seconds (15.81 k allocations: 1007.978 KiB)
Running: rectangle_rule_left
 28.843410 seconds (471.41 M allocations: 7.025 GiB, 2.86% gc time)
Running: rectangle_rule_midpoint
  0.000040 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.083314 seconds (476.96 M allocations: 7.107 GiB, 2.40% gc time)
Running: rombergs_method
  0.419645 seconds (326.54 k allocations: 18.533 MiB, 1.40% gc time)
Running: simpsons_rule
  0.000033 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.076833 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.073925 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032734 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.133062 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.133486 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.132849 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.142744 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.311100 seconds (363.66 k allocations: 18.977 MiB)
Running: legendre_quadrature
  0.075781 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000097 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000091 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000481 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000384 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000468 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.088551 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000046 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.029509 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.026111 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.083063 seconds (72.31 k allocations: 4.214 MiB, 31.45% gc time)
Running: chebyshev_quadrature with k=1
  0.181990 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.210806 seconds (283.17 k allocations: 15.895 MiB)
Running: chebyshev_quadrature with k=3
  0.220283 seconds (234.76 k allocations: 13.155 MiB, 10.96% gc time)
Running: chebyshev_quadrature with k=4
  0.184394 seconds (234.76 k allocations: 13.087 MiB)
Running: jacobi_quadrature with α=β=1
  2.249190 seconds (446.74 k allocations: 163.208 MiB, 6.71% gc time)
Running: legendre_quadrature
  0.182578 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.186843 seconds (196.62 k allocations: 11.416 MiB)
Running: radau_quadrature
  0.182916 seconds (196.61 k allocations: 11.413 MiB)
Running: rectangle_rule_left
  0.915291 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.027247 seconds (24.67 k allocations: 1.558 MiB)
Running: rectangle_rule_right
  0.998956 seconds (17.39 k allocations: 1.062 MiB)
Running: rombergs_method
  0.153263 seconds (134.26 k allocations: 7.758 MiB, 14.43% gc time)
Running: simpsons_rule
  0.027725 seconds (27.53 k allocations: 1.730 MiB)
Running: simpsons38_rule
  0.033879 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.026568 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039989 seconds (99.53 k allocations: 2.979 MiB)
Running: chebyshev_quadrature with k=1
  0.203466 seconds (237.19 k allocations: 13.054 MiB)
Running: chebyshev_quadrature with k=2
  0.249196 seconds (290.20 k allocations: 15.879 MiB)
Running: chebyshev_quadrature with k=3
  0.218905 seconds (241.33 k allocations: 13.117 MiB, 9.21% gc time)
Running: chebyshev_quadrature with k=4
  0.197739 seconds (241.33 k allocations: 13.121 MiB)
Running: hermite_quadrature with k=2
 14.782348 seconds (20.09 M allocations: 1.055 GiB, 8.61% gc time)
Running: jacobi_quadrature with α=β=1
  0.568629 seconds (455.91 k allocations: 49.381 MiB, 29.26% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.201655 seconds (276.26 k allocations: 15.256 MiB)
Running: legendre_quadrature
  0.147293 seconds (191.98 k allocations: 11.043 MiB)
Running: lobatto_quadrature
  0.349091 seconds (217.27 k allocations: 37.187 MiB, 40.88% gc time)
Running: radau_quadrature
  0.212979 seconds (213.85 k allocations: 29.845 MiB, 6.77% gc time)
Running: rectangle_rule_left
  0.026282 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.024633 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.022261 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.130898 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.035640 seconds (39.37 k allocations: 2.060 MiB)
Running: simpsons38_rule
  0.036534 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.026604 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.057542 seconds (59.91 k allocations: 2.280 MiB, 36.25% gc time)
Running: chebyshev_quadrature with k=1
  0.185185 seconds (232.72 k allocations: 12.824 MiB)
Running: chebyshev_quadrature with k=2
  0.218259 seconds (285.38 k allocations: 15.647 MiB)
Running: chebyshev_quadrature with k=3
  0.186829 seconds (236.87 k allocations: 12.928 MiB)
Running: chebyshev_quadrature with k=4
  0.202610 seconds (236.87 k allocations: 12.929 MiB, 8.71% gc time)
Running: hermite_quadrature with k=2
  0.142217 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
  7.813132 seconds (449.17 k allocations: 1.175 GiB, 17.00% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.224430 seconds (271.55 k allocations: 15.130 MiB)
Running: legendre_quadrature
  0.162597 seconds (187.55 k allocations: 10.814 MiB)
Running: lobatto_quadrature
  0.218709 seconds (208.03 k allocations: 22.913 MiB, 7.38% gc time)
Running: radau_quadrature
  0.199327 seconds (207.18 k allocations: 20.844 MiB)
Running: rectangle_rule_left
  0.029696 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.028949 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.022559 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.148724 seconds (132.58 k allocations: 7.684 MiB)
Running: simpsons_rule
  0.036726 seconds (31.89 k allocations: 1.853 MiB)
Running: simpsons38_rule
  0.037282 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.023954 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.049226 seconds (30.87 k allocations: 1.874 MiB, 35.88% gc time)
Running: chebyshev_quadrature with k=1
  0.233264 seconds (231.10 k allocations: 13.105 MiB)
Running: chebyshev_quadrature with k=2
  0.297655 seconds (283.67 k allocations: 15.985 MiB)
Running: chebyshev_quadrature with k=3
  0.213527 seconds (235.25 k allocations: 13.146 MiB)
Running: chebyshev_quadrature with k=4
  0.284156 seconds (235.25 k allocations: 12.971 MiB, 6.72% gc time)
Running: jacobi_quadrature with α=β=1
  1.988900 seconds (447.27 k allocations: 194.232 MiB, 5.20% gc time)
Running: legendre_quadrature
  0.166799 seconds (185.93 k allocations: 10.749 MiB)
Running: lobatto_quadrature
  0.204280 seconds (197.11 k allocations: 11.440 MiB, 9.07% gc time)
Running: radau_quadrature
  0.182568 seconds (197.11 k allocations: 11.500 MiB)
Running: rectangle_rule_left
  0.297443 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.023124 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.159020 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.134808 seconds (145.02 k allocations: 8.488 MiB)
Running: simpsons_rule
  0.029264 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.031545 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.024167 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031842 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.217257 seconds (231.69 k allocations: 12.988 MiB, 8.93% gc time)
Running: chebyshev_quadrature with k=2
  0.243218 seconds (284.30 k allocations: 15.891 MiB)
Running: chebyshev_quadrature with k=3
  0.193574 seconds (235.84 k allocations: 13.066 MiB)
Running: chebyshev_quadrature with k=4
  0.237275 seconds (235.84 k allocations: 13.144 MiB, 10.58% gc time)
Running: jacobi_quadrature with α=β=1
  1.439576 seconds (447.98 k allocations: 148.917 MiB, 3.22% gc time)
Running: legendre_quadrature
  0.165019 seconds (186.52 k allocations: 10.762 MiB)
Running: lobatto_quadrature
  0.169525 seconds (197.71 k allocations: 11.453 MiB)
Running: radau_quadrature
  0.193244 seconds (197.71 k allocations: 11.466 MiB, 9.35% gc time)
Running: rectangle_rule_left
  0.945146 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.022393 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  0.992308 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.141107 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.031419 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.032950 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.029965 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.164851 seconds (145.06 k allocations: 8.693 MiB)
Running: chebyshev_quadrature with k=1
  0.158346 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.165102 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.173938 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.171177 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.089074 seconds (479.97 k allocations: 167.734 MiB, 13.10% gc time)
Running: legendre_quadrature
  0.138507 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000184 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000129 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 46.226849 seconds (590.00 M allocations: 8.792 GiB, 3.46% gc time)
Running: rectangle_rule_midpoint
  0.000099 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.425580 seconds (592.75 M allocations: 8.833 GiB, 3.09% gc time)
Running: rombergs_method
  0.160229 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000084 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033003 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025992 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.698698 seconds (629.32 M allocations: 9.387 GiB, 3.01% gc time)
Running: chebyshev_quadrature with k=1
  0.533482 seconds (414.07 k allocations: 22.955 MiB)
Running: chebyshev_quadrature with k=2
 27.118032 seconds (468.71 k allocations: 4.040 GiB, 2.05% gc time)
Running: chebyshev_quadrature with k=3
 13.044377 seconds (249.12 k allocations: 1.642 GiB, 2.24% gc time)
Running: chebyshev_quadrature with k=4
 17.711586 seconds (249.12 k allocations: 2.260 GiB, 1.55% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 67.515214 seconds (484.22 k allocations: 13.254 GiB, 3.28% gc time)
Running: legendre_quadrature.
 14.204047 seconds (223.36 k allocations: 1.976 GiB, 0.86% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.646832 seconds (8.23 M allocations: 13.383 GiB, 4.78% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 64.330392 seconds (7.23 M allocations: 13.369 GiB, 3.99% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.004662 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.895780 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.911127 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.538124 seconds (438.26 k allocations: 152.678 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.695988 seconds (600.04 M allocations: 8.943 GiB, 6.15% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.630555 seconds (600.05 M allocations: 8.943 GiB, 6.23% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.222970 seconds (600.03 M allocations: 8.943 GiB, 5.83% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.064935 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.259808 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.276539 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.228267 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.225570 seconds (220.25 k allocations: 11.689 MiB)
Running: jacobi_quadrature with α=β=1
  0.456678 seconds (388.85 k allocations: 34.974 MiB)
Running: laguerre_quadrature with k=2
  0.224138 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.150895 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.041425 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.040671 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.069824 seconds (18.87 k allocations: 1.121 MiB)
Running: rectangle_rule_midpoint
  0.046296 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.051692 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.276884 seconds (171.73 k allocations: 9.834 MiB)
Running: simpsons_rule
  0.001726 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.070046 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.219643 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002274 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.142848 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.135995 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.125990 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.125967 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  7.374059 seconds (365.93 k allocations: 904.798 MiB, 2.59% gc time)
Running: legendre_quadrature
  0.102095 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000262 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000213 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.052967 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000595 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.457656 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077059 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000821 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000614 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.151087 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.136377 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.127317 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.135824 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  2.774700 seconds (372.50 k allocations: 252.963 MiB)
Running: legendre_quadrature
  0.093491 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000111 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000056 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.298099 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000209 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  2.085990 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.090457 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000028 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000472 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
