Julia Version 1.6.0-DEV.1093
Commit 28330a2fef (2020-09-30 14:46 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_SeZsCf/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_SeZsCf/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.912121 seconds (1.25 M allocations: 65.201 MiB, 1.80% gc time, 96.78% compilation time)
Running: chebyshev_quadrature with k=1
  1.986649 seconds (2.19 M allocations: 126.460 MiB, 7.86% gc time, 98.11% compilation time)
Running: chebyshev_quadrature with k=2
  0.309303 seconds (409.38 k allocations: 23.548 MiB, 9.67% gc time, 83.82% compilation time)
Running: chebyshev_quadrature with k=3
  0.398610 seconds (473.74 k allocations: 26.610 MiB, 15.05% gc time, 71.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.347671 seconds (418.55 k allocations: 23.251 MiB, 85.07% compilation time)
Running: jacobi_quadrature with α=β=1
 41.095520 seconds (36.40 M allocations: 2.999 GiB, 9.21% gc time, 75.78% compilation time)
Running: laguerre_quadrature with k=1
  3.120898 seconds (3.17 M allocations: 177.080 MiB, 2.35% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.296447 seconds (206.27 k allocations: 11.846 MiB, 99.27% compilation time)
Running: lobatto_quadrature
  0.382589 seconds (329.54 k allocations: 19.899 MiB, 99.44% compilation time)
Running: radau_quadrature
  0.399096 seconds (447.06 k allocations: 27.274 MiB, 4.51% gc time, 99.42% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 82.013426 seconds (100.02 M allocations: 1.491 GiB, 0.45% gc time, 0.04% compilation time)
Running: rectangle_rule_midpoint.
  0.150964 seconds (172.46 k allocations: 3.827 MiB, 26.31% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.531385 seconds (100.02 M allocations: 1.491 GiB, 0.45% gc time, 0.03% compilation time)
Running: rombergs_method
  0.646784 seconds (722.94 k allocations: 41.717 MiB, 9.40% gc time, 99.61% compilation time)
Running: simpsons_rule
  0.033091 seconds (45.77 k allocations: 2.043 MiB, 92.04% compilation time)
Running: simpsons38_rule
  0.081376 seconds (108.40 k allocations: 5.747 MiB, 95.26% compilation time)
Running: trapezoidal_rule
  0.303520 seconds (1.51 M allocations: 25.667 MiB, 4.38% gc time, 23.48% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.085517 seconds (30.98 k allocations: 1.865 MiB, 99.77% compilation time)
Running: chebyshev_quadrature with k=1
  0.495737 seconds (290.36 k allocations: 15.354 MiB, 5.57% gc time, 99.28% compilation time)
Running: chebyshev_quadrature with k=2
  0.240425 seconds (93.80 k allocations: 2.675 MiB, 97.67% compilation time)
Running: chebyshev_quadrature with k=3
  0.176286 seconds (82.06 k allocations: 2.476 MiB, 97.42% compilation time)
Running: chebyshev_quadrature with k=4
  0.226618 seconds (64.67 k allocations: 2.123 MiB, 98.29% compilation time)
Running: jacobi_quadrature with α=β=1
  3.241950 seconds (503.85 k allocations: 161.819 MiB, 4.39% gc time, 20.67% compilation time)
Running: legendre_quadrature
  0.219858 seconds (41.32 k allocations: 2.383 MiB, 7.48% gc time, 99.87% compilation time)
Running: lobatto_quadrature
  0.024816 seconds (15.71 k allocations: 1002.778 KiB, 99.20% compilation time)
Running: radau_quadrature
  0.025204 seconds (15.82 k allocations: 1009.993 KiB, 99.32% compilation time)
Running: rectangle_rule_left
 32.732021 seconds (471.41 M allocations: 7.025 GiB, 4.74% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.964768 seconds (476.96 M allocations: 7.107 GiB, 4.57% gc time)
Running: rombergs_method
  0.380496 seconds (326.49 k allocations: 18.530 MiB, 2.22% gc time, 99.89% compilation time)
Running: simpsons_rule
  0.000029 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.066889 seconds (18.91 k allocations: 1.146 MiB, 99.84% compilation time)
Running: trapezoidal_rule
  0.059188 seconds (17.40 k allocations: 1.054 MiB, 99.83% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028181 seconds (1.99 k allocations: 53.594 KiB, 99.32% compilation time)
Running: chebyshev_quadrature with k=1
  0.124421 seconds (2.46 k allocations: 116.359 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.116504 seconds (2.71 k allocations: 124.266 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=3
  0.112466 seconds (2.31 k allocations: 109.297 KiB, 99.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.114124 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: jacobi_quadrature with α=β=1
  0.291720 seconds (363.64 k allocations: 18.976 MiB, 99.25% compilation time)
Running: legendre_quadrature
  0.076272 seconds (1.28 k allocations: 65.891 KiB, 99.83% compilation time)
Running: lobatto_quadrature
  0.000137 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000091 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000479 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000340 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000474 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.083710 seconds (1.04 k allocations: 56.531 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000042 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.026466 seconds (923 allocations: 39.281 KiB, 99.68% compilation time)
Running: trapezoidal_rule
  0.024698 seconds (44.33 k allocations: 704.859 KiB, 90.74% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058274 seconds (72.31 k allocations: 4.214 MiB, 99.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.188885 seconds (230.61 k allocations: 12.965 MiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=2
  0.216767 seconds (283.17 k allocations: 15.882 MiB, 98.40% compilation time)
Running: chebyshev_quadrature with k=3
  0.224597 seconds (234.76 k allocations: 13.149 MiB, 15.71% gc time, 98.82% compilation time)
Running: chebyshev_quadrature with k=4
  0.182955 seconds (234.76 k allocations: 13.083 MiB, 98.72% compilation time)
Running: jacobi_quadrature with α=β=1
  2.359555 seconds (446.72 k allocations: 163.188 MiB, 6.89% gc time, 29.01% compilation time)
Running: legendre_quadrature
  0.173697 seconds (185.44 k allocations: 10.708 MiB, 98.85% compilation time)
Running: lobatto_quadrature
  0.199316 seconds (196.61 k allocations: 11.411 MiB, 98.88% compilation time)
Running: radau_quadrature
  0.196077 seconds (196.61 k allocations: 11.409 MiB, 98.85% compilation time)
Running: rectangle_rule_left
  1.300644 seconds (18.82 k allocations: 1.147 MiB, 2.41% compilation time)
Running: rectangle_rule_midpoint
  0.022909 seconds (24.67 k allocations: 1.555 MiB, 99.15% compilation time)
Running: rectangle_rule_right
  1.301547 seconds (17.39 k allocations: 1.065 MiB, 1.99% compilation time)
Running: rombergs_method
  0.146985 seconds (134.27 k allocations: 7.759 MiB, 12.68% gc time, 98.08% compilation time)
Running: simpsons_rule
  0.033870 seconds (27.54 k allocations: 1.729 MiB, 99.43% compilation time)
Running: simpsons38_rule
  0.036839 seconds (42.37 k allocations: 2.679 MiB, 99.51% compilation time)
Running: trapezoidal_rule
  0.037371 seconds (44.10 k allocations: 1.772 MiB, 93.41% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.086385 seconds (99.53 k allocations: 2.979 MiB, 96.13% compilation time)
Running: chebyshev_quadrature with k=1
  0.204458 seconds (237.20 k allocations: 13.055 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=2
  0.260335 seconds (290.20 k allocations: 15.887 MiB, 8.04% gc time, 98.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.199248 seconds (241.33 k allocations: 13.124 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.239750 seconds (241.34 k allocations: 13.124 MiB, 99.19% compilation time)
Running: hermite_quadrature with k=2
 16.525021 seconds (20.09 M allocations: 1.056 GiB, 7.39% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.720276 seconds (455.89 k allocations: 49.388 MiB, 8.41% gc time, 90.91% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.319521 seconds (276.26 k allocations: 15.253 MiB, 98.48% compilation time)
Running: legendre_quadrature
  0.299804 seconds (191.98 k allocations: 11.047 MiB, 16.41% gc time, 98.73% compilation time)
Running: lobatto_quadrature
  0.357463 seconds (217.27 k allocations: 37.186 MiB, 83.16% compilation time)
Running: radau_quadrature
  0.349227 seconds (213.85 k allocations: 29.846 MiB, 21.97% gc time, 63.77% compilation time)
Running: rectangle_rule_left
  0.031547 seconds (21.73 k allocations: 1.293 MiB, 99.35% compilation time)
Running: rectangle_rule_midpoint
  0.030345 seconds (26.47 k allocations: 1.642 MiB, 99.47% compilation time)
Running: rectangle_rule_right
  0.039695 seconds (18.50 k allocations: 1.117 MiB, 99.61% compilation time)
Running: rombergs_method
  0.173633 seconds (136.74 k allocations: 7.809 MiB, 97.66% compilation time)
Running: simpsons_rule
  0.038537 seconds (39.38 k allocations: 2.061 MiB, 98.65% compilation time)
Running: simpsons38_rule
  0.039138 seconds (57.34 k allocations: 3.063 MiB, 98.34% compilation time)
Running: trapezoidal_rule
  0.029205 seconds (30.13 k allocations: 1.697 MiB, 98.69% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044511 seconds (59.92 k allocations: 2.280 MiB, 95.76% compilation time)
Running: chebyshev_quadrature with k=1
  0.353633 seconds (232.72 k allocations: 12.824 MiB, 43.73% gc time, 99.30% compilation time)
Running: chebyshev_quadrature with k=2
  0.224505 seconds (285.38 k allocations: 15.643 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=3
  0.190096 seconds (236.87 k allocations: 12.928 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.195362 seconds (236.87 k allocations: 12.929 MiB, 98.77% compilation time)
Running: hermite_quadrature with k=2
  0.175306 seconds (170.78 k allocations: 9.790 MiB, 11.26% gc time, 87.44% compilation time)
Running: jacobi_quadrature with α=β=1
 13.443100 seconds (449.16 k allocations: 1.175 GiB, 15.16% gc time, 3.79% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.292556 seconds (271.55 k allocations: 15.063 MiB, 98.73% compilation time)
Running: legendre_quadrature
  0.303967 seconds (187.55 k allocations: 10.817 MiB, 7.32% gc time, 98.76% compilation time)
Running: lobatto_quadrature
  0.272892 seconds (208.03 k allocations: 22.913 MiB, 87.45% compilation time)
Running: radau_quadrature
  0.279892 seconds (207.18 k allocations: 20.844 MiB, 7.30% gc time, 89.20% compilation time)
Running: rectangle_rule_left
  0.027151 seconds (19.52 k allocations: 1.188 MiB, 99.41% compilation time)
Running: rectangle_rule_midpoint
  0.027392 seconds (25.36 k allocations: 1.591 MiB, 99.39% compilation time)
Running: rectangle_rule_right
  0.021815 seconds (17.36 k allocations: 1.062 MiB, 99.22% compilation time)
Running: rombergs_method
  0.115111 seconds (132.58 k allocations: 7.622 MiB, 97.77% compilation time)
Running: simpsons_rule
  0.039811 seconds (31.90 k allocations: 1.855 MiB, 99.17% compilation time)
Running: simpsons38_rule
  0.037691 seconds (48.16 k allocations: 2.821 MiB, 98.98% compilation time)
Running: trapezoidal_rule
  0.025276 seconds (25.05 k allocations: 1.535 MiB, 99.01% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032800 seconds (30.87 k allocations: 1.875 MiB, 99.08% compilation time)
Running: chebyshev_quadrature with k=1
  0.230712 seconds (231.10 k allocations: 13.042 MiB, 98.85% compilation time)
Running: chebyshev_quadrature with k=2
  0.331949 seconds (283.67 k allocations: 15.986 MiB, 5.58% gc time, 98.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.198405 seconds (235.25 k allocations: 13.149 MiB, 98.48% compilation time)
Running: chebyshev_quadrature with k=4
  0.223798 seconds (235.25 k allocations: 12.971 MiB, 98.79% compilation time)
Running: jacobi_quadrature with α=β=1
  2.495750 seconds (447.26 k allocations: 194.233 MiB, 4.51% gc time, 25.85% compilation time)
Running: legendre_quadrature
  0.159817 seconds (185.93 k allocations: 10.745 MiB, 98.38% compilation time)
Running: lobatto_quadrature
  0.197348 seconds (197.11 k allocations: 11.437 MiB, 98.64% compilation time)
Running: radau_quadrature
  0.175124 seconds (197.11 k allocations: 11.439 MiB, 98.60% compilation time)
Running: rectangle_rule_left
  0.311989 seconds (19.34 k allocations: 1.173 MiB, 8.83% compilation time)
Running: rectangle_rule_midpoint
  0.040335 seconds (25.01 k allocations: 1.573 MiB, 42.87% gc time, 99.60% compilation time)
Running: rectangle_rule_right
  0.145073 seconds (17.73 k allocations: 1.081 MiB, 17.52% compilation time)
Running: rombergs_method
  0.128220 seconds (145.02 k allocations: 8.483 MiB, 97.29% compilation time)
Running: simpsons_rule
  0.030117 seconds (28.23 k allocations: 1.758 MiB, 99.28% compilation time)
Running: simpsons38_rule
  0.032743 seconds (43.08 k allocations: 2.708 MiB, 99.34% compilation time)
Running: trapezoidal_rule
  0.025915 seconds (45.03 k allocations: 1.805 MiB, 94.92% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032428 seconds (31.64 k allocations: 1.826 MiB, 98.82% compilation time)
Running: chebyshev_quadrature with k=1
  0.195949 seconds (231.69 k allocations: 12.989 MiB, 98.58% compilation time)
Running: chebyshev_quadrature with k=2
  0.258172 seconds (284.30 k allocations: 15.958 MiB, 7.50% gc time, 98.26% compilation time)
Running: chebyshev_quadrature with k=3
  0.201220 seconds (235.84 k allocations: 13.067 MiB, 98.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.191599 seconds (235.84 k allocations: 13.144 MiB, 98.43% compilation time)
Running: jacobi_quadrature with α=β=1
  2.191083 seconds (447.97 k allocations: 148.916 MiB, 6.94% gc time, 27.60% compilation time)
Running: legendre_quadrature
  0.175769 seconds (186.53 k allocations: 10.750 MiB, 94.45% compilation time)
Running: lobatto_quadrature
  0.184699 seconds (197.71 k allocations: 11.460 MiB, 98.53% compilation time)
Running: radau_quadrature
  0.176511 seconds (197.70 k allocations: 11.454 MiB, 98.45% compilation time)
Running: rectangle_rule_left
  1.024582 seconds (19.59 k allocations: 1.186 MiB, 2.82% compilation time)
Running: rectangle_rule_midpoint
  0.025346 seconds (25.01 k allocations: 1.574 MiB, 99.14% compilation time)
Running: rectangle_rule_right
  1.276318 seconds (17.69 k allocations: 1.078 MiB, 2.10% compilation time)
Running: rombergs_method
  0.152596 seconds (135.49 k allocations: 7.819 MiB, 12.06% gc time, 97.38% compilation time)
Running: simpsons_rule
  0.032181 seconds (28.93 k allocations: 1.785 MiB, 99.35% compilation time)
Running: simpsons38_rule
  0.033763 seconds (43.78 k allocations: 2.734 MiB, 99.24% compilation time)
Running: trapezoidal_rule
  0.027017 seconds (57.27 k allocations: 2.006 MiB, 94.01% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.184673 seconds (145.08 k allocations: 8.695 MiB, 99.83% compilation time)
Running: chebyshev_quadrature with k=1
  0.213586 seconds (69.93 k allocations: 2.205 MiB, 98.12% compilation time)
Running: chebyshev_quadrature with k=2
  0.160587 seconds (105.09 k allocations: 2.868 MiB, 96.16% compilation time)
Running: chebyshev_quadrature with k=3
  0.171902 seconds (92.57 k allocations: 2.654 MiB, 96.64% compilation time)
Running: chebyshev_quadrature with k=4
  0.179455 seconds (72.10 k allocations: 2.248 MiB, 97.32% compilation time)
Running: jacobi_quadrature with α=β=1
  2.621267 seconds (480.13 k allocations: 167.772 MiB, 12.33% gc time, 21.25% compilation time)
Running: legendre_quadrature
  0.115225 seconds (18.73 k allocations: 1.158 MiB, 99.25% compilation time)
Running: lobatto_quadrature
  0.000103 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000050 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 47.848878 seconds (590.00 M allocations: 8.792 GiB, 3.45% gc time)
Running: rectangle_rule_midpoint
  0.000057 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.303493 seconds (592.75 M allocations: 8.833 GiB, 3.12% gc time)
Running: rombergs_method
  0.142569 seconds (20.51 k allocations: 1.165 MiB, 99.46% compilation time)
Running: simpsons_rule
  0.000051 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.032627 seconds (463 allocations: 22.578 KiB, 99.54% compilation time)
Running: trapezoidal_rule
  0.025783 seconds (179 allocations: 8.766 KiB, 99.51% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.702720 seconds (629.32 M allocations: 9.387 GiB, 2.97% gc time, 0.34% compilation time)
Running: chebyshev_quadrature with k=1
  0.526937 seconds (414.16 k allocations: 22.967 MiB, 6.10% gc time, 98.96% compilation time)
Running: chebyshev_quadrature with k=2
 28.713121 seconds (468.80 k allocations: 4.040 GiB, 1.93% gc time, 1.92% compilation time)
Running: chebyshev_quadrature with k=3
 13.725522 seconds (249.12 k allocations: 1.642 GiB, 2.17% gc time, 1.69% compilation time)
Running: chebyshev_quadrature with k=4
 18.440323 seconds (249.12 k allocations: 2.260 GiB, 1.06% gc time, 1.13% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 70.146523 seconds (484.19 k allocations: 13.254 GiB, 3.29% gc time, 0.66% compilation time)
Running: legendre_quadrature.
 15.589319 seconds (223.42 k allocations: 1.976 GiB, 1.58% gc time, 1.84% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 68.072636 seconds (8.23 M allocations: 13.383 GiB, 3.71% gc time, 0.36% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.973050 seconds (7.23 M allocations: 13.369 GiB, 3.01% gc time, 0.34% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.623262 seconds (22.25 k allocations: 1.347 MiB, 0.18% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.321258 seconds (30.45 k allocations: 1.884 MiB, 0.19% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.833915 seconds (22.45 k allocations: 1.357 MiB, 0.17% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.042239 seconds (438.27 k allocations: 152.680 MiB, 10.49% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 63.263957 seconds (600.04 M allocations: 8.943 GiB, 5.65% gc time, 0.08% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.775383 seconds (600.05 M allocations: 8.943 GiB, 6.25% gc time, 0.11% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.092753 seconds (600.03 M allocations: 8.943 GiB, 6.14% gc time, 0.18% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.096330 seconds (180.45 k allocations: 4.406 MiB, 85.47% compilation time)
Running: chebyshev_quadrature with k=1
  0.279350 seconds (247.70 k allocations: 13.449 MiB, 97.42% compilation time)
Running: chebyshev_quadrature with k=2
  0.278243 seconds (272.34 k allocations: 14.523 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.242255 seconds (220.25 k allocations: 11.646 MiB, 99.23% compilation time)
Running: chebyshev_quadrature with k=4
  0.239009 seconds (220.25 k allocations: 11.627 MiB, 99.29% compilation time)
Running: jacobi_quadrature with α=β=1
  0.450215 seconds (388.84 k allocations: 34.995 MiB, 90.80% compilation time)
Running: laguerre_quadrature with k=2
  0.211738 seconds (180.54 k allocations: 10.477 MiB, 76.32% compilation time)
Running: legendre_quadrature
  0.142567 seconds (145.99 k allocations: 8.082 MiB, 99.85% compilation time)
Running: lobatto_quadrature
  0.041450 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.034571 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.062988 seconds (18.88 k allocations: 1.122 MiB, 59.45% compilation time)
Running: rectangle_rule_midpoint
  0.050410 seconds (25.48 k allocations: 1.576 MiB, 58.43% compilation time)
Running: rectangle_rule_right
  0.053132 seconds (17.48 k allocations: 1.049 MiB, 49.05% compilation time)
Running: rombergs_method
  0.251062 seconds (171.62 k allocations: 9.827 MiB, 98.74% compilation time)
Running: simpsons_rule
  0.001753 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.048937 seconds (78.86 k allocations: 3.384 MiB, 95.52% compilation time)
Running: trapezoidal_rule
  0.182154 seconds (2.39 M allocations: 37.691 MiB, 18.70% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002211 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.151709 seconds (2.46 k allocations: 1.691 MiB, 97.94% compilation time)
Running: chebyshev_quadrature with k=2
  0.148114 seconds (2.71 k allocations: 2.355 MiB, 95.71% compilation time)
Running: chebyshev_quadrature with k=3
  0.126680 seconds (2.31 k allocations: 2.028 MiB, 94.67% compilation time)
Running: chebyshev_quadrature with k=4
  0.128577 seconds (2.31 k allocations: 1.469 MiB, 97.21% compilation time)
Running: jacobi_quadrature with α=β=1
  9.065264 seconds (365.92 k allocations: 904.813 MiB, 1.58% gc time, 3.89% compilation time)
Running: legendre_quadrature
  0.091150 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000255 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000229 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.084595 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000592 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.102891 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.084469 seconds (997 allocations: 56.672 KiB, 99.23% compilation time)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000060 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000819 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000546 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.116434 seconds (2.53 k allocations: 579.203 KiB, 99.26% compilation time)
Running: chebyshev_quadrature with k=2
  0.129505 seconds (2.79 k allocations: 780.188 KiB, 98.91% compilation time)
Running: chebyshev_quadrature with k=3
  0.119722 seconds (2.39 k allocations: 661.047 KiB, 98.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.123746 seconds (2.39 k allocations: 491.547 KiB, 99.24% compilation time)
Running: jacobi_quadrature with α=β=1
  3.909001 seconds (372.48 k allocations: 252.962 MiB, 14.37% compilation time)
Running: legendre_quadrature
  0.086102 seconds (1.32 k allocations: 67.859 KiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.000094 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000055 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.298865 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000210 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  2.121737 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.106967 seconds (1.21 k allocations: 64.938 KiB, 99.75% compilation time)
Running: simpsons_rule
  0.000024 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000029 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000518 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
