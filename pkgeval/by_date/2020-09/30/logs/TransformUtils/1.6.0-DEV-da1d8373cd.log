Julia Version 1.6.0-DEV.1076
Commit da1d8373cd (2020-09-29 17:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_qnSbiq/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_qnSbiq/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.014498997185141896 0.10056633777257971; 0.014498997185141896 0.0 0.12551469757139952; -0.10056633777257971 -0.12551469757139952 0.0])
dAA = so3([0.0 0.014147306973282009 0.06625932180255899; -0.014147306973282009 0.0 -0.03224050371287051; -0.06625932180255899 0.03224050371287051 0.0])
dAA = so3([0.0 -0.1986642157594487 0.1897775571259347; 0.1986642157594487 0.0 -0.1193452653012766; -0.1897775571259347 0.1193452653012766 0.0])
dAA = Quaternion(0.9953324554643506, [-0.04903294598295379, -0.022182209444535483, -0.08010632242025773])
dAA = SO3([0.9997738122437936 0.012225447050919575 0.01740295365496777; -0.012481580755231616 0.9998142471215585 0.014686095280963334; -0.017220176925990798 -0.014899989837448334 0.9997406942850138])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9856968764677027 0.04181739488686353 0.16325738331447862; -0.02850503670029629 0.9961376067341978 -0.08305017358548684; -0.16609976100081916 0.07720863899034133 0.9830817338658724]), [-1.255146975713995, 1.005663377725797, 0.14498997185141896])
xj = SE3(SO3([0.9150060365663922 0.39553989572567 -0.07944900211071315; -0.3654444788534465 0.896032222963456 0.2521439832450905; 0.1709218708141088 -0.20167906758137716 0.9644227640287798]), [1.193452653012766, 1.897775571259347, 1.986642157594487])
Dx = SE3(SO3([0.8839455185821871 0.3978398532590671 -0.2456903973240958; -0.3125731747850974 0.89354047583181 0.3223095227495264; 0.3477618877669506 -0.20810783072500277 0.9141951652725475]), [2.0822493270399294, 1.1332520217540099, 2.136156519578213])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
