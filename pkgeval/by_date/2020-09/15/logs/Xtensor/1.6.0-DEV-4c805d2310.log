Julia Version 1.6.0-DEV.913
Commit 4c805d2310 (2020-09-14 14:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed URIParser ──────────── v0.4.1
  Installed Xtensor ────────────── v0.8.2
  Installed MacroTools ─────────── v0.5.5
  Installed BinDeps ────────────── v1.0.1
  Installed libcxxwrap_julia_jll ─ v0.8.0+0
  Installed CxxWrap ────────────── v0.11.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [65419b8a] + Xtensor v0.8.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9e28174c] + BinDeps v1.0.1
  [1f15a43c] + CxxWrap v0.11.0
  [1914dd2f] + MacroTools v0.5.5
  [30578b45] + URIParser v0.4.1
  [65419b8a] + Xtensor v0.8.2
  [3eaa8342] + libcxxwrap_julia_jll v0.8.0+0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Xtensor → `~/.julia/packages/Xtensor/keFSH/deps/build.log`
ERROR: Error building `Xtensor`: 
Cloning into '/home/pkgeval/.julia/packages/Xtensor/keFSH/deps/xtl'...
Note: checking out '0d1f896ba90664248279baaea0059699cff5ab9b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

[ Info: Attempting to create directory /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/../builds/xtl
[ Info: Changing directory to /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/../builds/xtl
ERROR: LoadError: IOError: could not spawn `cmake -G 'Unix Makefiles' -DCMAKE_INSTALL_PREFIX=/home/pkgeval/.julia/packages/Xtensor/keFSH/deps/usr -DBUILD_TESTS=OFF -DCMAKE_INSTALL_LIBDIR=lib /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/xtl`: no such file or directory (ENOENT)
Stacktrace:
  [1] _spawn_primitive(file::String, cmd::Cmd, stdio::Vector{Any})
    @ Base ./process.jl:99
  [2] #614
    @ ./process.jl:112 [inlined]
  [3] setup_stdios(f::Base.var"#614#615"{Cmd}, stdios::Vector{Any})
    @ Base ./process.jl:196
  [4] _spawn
    @ ./process.jl:111 [inlined]
  [5] run(::Cmd; wait::Bool)
    @ Base ./process.jl:439
  [6] run(::Cmd)
    @ Base ./process.jl:438
  [7] run(s::BinDeps.SynchronousStepCollection)
    @ BinDeps ~/.julia/packages/BinDeps/QvmEl/src/BinDeps.jl:524
  [8] satisfy!(dep::BinDeps.LibraryDependency, methods::Vector{DataType})
    @ BinDeps ~/.julia/packages/BinDeps/QvmEl/src/dependencies.jl:951
  [9] satisfy!(dep::BinDeps.LibraryDependency)
    @ BinDeps ~/.julia/packages/BinDeps/QvmEl/src/dependencies.jl:929
 [10] top-level scope
    @ ~/.julia/packages/BinDeps/QvmEl/src/dependencies.jl:984
 [11] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [12] top-level scope
    @ none:5
in expression starting at /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/build.jl:112
Building xtl
Building xtensor
Building xtensor-julia
Building xtensor-julia-examples
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] (::Pkg.Operations.var"#72#76"{Bool, Pkg.Types.Context, String, String, Pkg.Types.PackageSpec})()
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:950
  [3] withenv(f::Pkg.Operations.var"#72#76"{Bool, Pkg.Types.Context, String, String, Pkg.Types.PackageSpec}, keyvals::Pair{String, String})
    @ Base ./env.jl:161
  [4] (::Pkg.Operations.var"#98#102"{String, Pkg.Operations.var"#72#76"{Bool, Pkg.Types.Context, String, String, Pkg.Types.PackageSpec}, Pkg.Types.PackageSpec})()
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1435
  [5] with_temp_env(fn::Pkg.Operations.var"#98#102"{String, Pkg.Operations.var"#72#76"{Bool, Pkg.Types.Context, String, String, Pkg.Types.PackageSpec}, Pkg.Types.PackageSpec}, temp_env::String)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1349
  [6] (::Pkg.Operations.var"#97#101"{Pkg.Operations.var"#72#76"{Bool, Pkg.Types.Context, String, String, Pkg.Types.PackageSpec}, Pkg.Types.Context, Pkg.Types.PackageSpec, String, Pkg.Types.Project, String})(tmp::String)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1420
  [7] mktempdir(fn::Pkg.Operations.var"#97#101"{Pkg.Operations.var"#72#76"{Bool, Pkg.Types.Context, String, String, Pkg.Types.PackageSpec}, Pkg.Types.Context, Pkg.Types.PackageSpec, String, Pkg.Types.Project, String}, parent::String; prefix::String)
    @ Base.Filesystem ./file.jl:709
  [8] mktempdir(fn::Function, parent::String)
    @ Base.Filesystem ./file.jl:707
  [9] sandbox(fn::Function, ctx::Pkg.Types.Context, target::Pkg.Types.PackageSpec, target_path::String, sandbox_path::String, sandbox_project_override::Pkg.Types.Project)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1387
 [10] build_versions(ctx::Pkg.Types.Context, uuids::Vector{Base.UUID}; might_need_to_resolve::Bool, verbose::Bool)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:931
 [11] build_versions
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:889 [inlined]
 [12] add(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}, new_git::Vector{Base.UUID}; preserve::Pkg.Types.PreserveLevel, platform::Pkg.BinaryPlatforms.Linux)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1146
 [13] add(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; preserve::Pkg.Types.PreserveLevel, platform::Pkg.BinaryPlatforms.Linux, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:189
 [14] add(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:140
 [15] #add#22
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [16] add
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [17] #add#21
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [18] add
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [19] add(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [20] add(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [21] top-level scope
    @ none:18
