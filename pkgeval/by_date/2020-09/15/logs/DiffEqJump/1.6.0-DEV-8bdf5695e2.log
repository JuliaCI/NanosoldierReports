Julia Version 1.6.0-DEV.918
Commit 8bdf5695e2 (2020-09-15 16:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────────────── v0.2.2
  Installed MuladdMacro ───────────────── v0.2.2
  Installed RecursiveArrayTools ───────── v2.7.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed DiffEqJump ────────────────── v6.10.1
  Installed Tables ────────────────────── v1.0.5
  Installed VectorizationBase ─────────── v0.12.33
  Installed ArrayInterface ────────────── v2.12.0
  Installed SLEEFPirates ──────────────── v0.5.5
  Installed LoopVectorization ─────────── v0.8.26
  Installed LabelledArrays ────────────── v1.3.0
  Installed FunctionWrappers ──────────── v1.1.1
  Installed MacroTools ────────────────── v0.5.5
  Installed RecipesBase ───────────────── v1.1.0
  Installed RandomNumbers ─────────────── v1.4.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed PoissonRandom ─────────────── v0.4.0
  Installed DataStructures ────────────── v0.18.5
  Installed TreeViews ─────────────────── v0.3.0
  Installed Compat ────────────────────── v3.16.0
  Installed StaticArrays ──────────────── v0.12.4
  Installed Parameters ────────────────── v0.12.1
  Installed IterativeSolvers ──────────── v0.8.4
  Installed UnPack ────────────────────── v1.0.2
  Installed OrderedCollections ────────── v1.3.1
  Installed ChainRulesCore ────────────── v0.9.10
  Installed DocStringExtensions ───────── v0.8.3
  Installed DataValueInterfaces ───────── v1.0.0
  Installed OffsetArrays ──────────────── v1.2.0
  Installed RecursiveFactorization ────── v0.1.4
  Installed SIMDPirates ───────────────── v0.8.25
  Installed TableTraits ───────────────── v1.0.0
  Installed DiffEqBase ────────────────── v6.47.1
  Installed ZygoteRules ───────────────── v0.2.0
  Installed Requires ──────────────────── v1.0.2
  Installed Roots ─────────────────────── v1.0.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [c894b116] + DiffEqJump v6.10.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4fba245c] + ArrayInterface v2.12.0
  [d360d2e6] + ChainRulesCore v0.9.10
  [34da2185] + Compat v3.16.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.5
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.47.1
  [c894b116] + DiffEqJump v6.10.1
  [ffbed154] + DocStringExtensions v0.8.3
  [069b7b12] + FunctionWrappers v1.1.1
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [2ee39098] + LabelledArrays v1.3.0
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.5
  [46d2c3a1] + MuladdMacro v0.2.2
  [6fe1bfb0] + OffsetArrays v1.2.0
  [bac558e1] + OrderedCollections v1.3.1
  [d96e819e] + Parameters v0.12.1
  [e409e4f3] + PoissonRandom v0.4.0
  [e6cf234a] + RandomNumbers v1.4.0
  [3cdcf5f2] + RecipesBase v1.1.0
  [731186ca] + RecursiveArrayTools v2.7.0
  [f2c3362d] + RecursiveFactorization v0.1.4
  [ae029012] + Requires v1.0.2
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.25
  [476501e8] + SLEEFPirates v0.5.5
  [90137ffa] + StaticArrays v0.12.4
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing DiffEqJump
Status `/tmp/jl_4g6Phb/Project.toml`
  [4fba245c] ArrayInterface v2.12.0
  [34da2185] Compat v3.16.0
  [864edb3b] DataStructures v0.18.5
  [2b5f629d] DiffEqBase v6.47.1
  [c894b116] DiffEqJump v6.10.1
  [069b7b12] FunctionWrappers v1.1.1
  [34004b35] HypergeometricFunctions v0.3.3
  [1dea7af3] OrdinaryDiffEq v5.42.8
  [e409e4f3] PoissonRandom v0.4.0
  [e6cf234a] RandomNumbers v1.4.0
  [731186ca] RecursiveArrayTools v2.7.0
  [90137ffa] StaticArrays v0.12.4
  [789caeaf] StochasticDiffEq v6.26.0
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_4g6Phb/Manifest.toml`
  [79e6a3ab] Adapt v2.0.2
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.12.0
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.9.10
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.16.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.5
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.47.1
  [c894b116] DiffEqJump v6.10.1
  [77a26b50] DiffEqNoiseProcess v5.3.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [31c24e10] Distributions v0.23.11
  [ffbed154] DocStringExtensions v0.8.3
  [fa6b7ba4] DualNumbers v0.6.2
  [d4d017d3] ExponentialUtilities v1.8.0
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.9.6
  [6a86dc24] FiniteDiff v2.6.0
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [34004b35] HypergeometricFunctions v0.3.3
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [2ee39098] LabelledArrays v1.3.0
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.1.0
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.0
  [2774e3e8] NLsolve v4.4.1
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.2.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [1dea7af3] OrdinaryDiffEq v5.42.8
  [90014a1f] PDMats v0.10.0
  [d96e819e] Parameters v0.12.1
  [e409e4f3] PoissonRandom v0.4.0
  [1fd47b50] QuadGK v2.4.1
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.1.0
  [731186ca] RecursiveArrayTools v2.7.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [ae5879a3] ResettableStacks v1.0.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.10.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [789caeaf] StochasticDiffEq v6.26.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
  0.884974 seconds (548.00 k allocations: 145.142 MiB, 5.05% gc time)
  0.202315 seconds (468.93 k allocations: 43.995 MiB, 8.16% gc time)
Test Summary:       | Pass  Total
Constant Rate Tests |    2      2
198.400787 seconds (10.34 M allocations: 765.045 MiB, 0.50% gc time)
Test Summary:       | Pass  Total
Variable Rate Tests |    7      7
315.834849 seconds (141.18 M allocations: 7.491 GiB, 2.46% gc time)
Test Summary:     | Pass  Total
Monte Carlo Tests |    2      2
 29.843843 seconds (28.27 M allocations: 1.344 GiB, 5.08% gc time)
  3.057320 seconds (3.17 M allocations: 179.637 MiB, 5.62% gc time)
  6.819730 seconds (8.06 M allocations: 573.707 MiB, 4.64% gc time)
Test Summary:       | Pass  Total
Split Coupled Tests |    5      5
 94.761488 seconds (80.48 M allocations: 3.711 GiB, 3.77% gc time)
Test Summary: | Pass  Total
SSA Tests     |    1      1
  1.246261 seconds (790.94 k allocations: 48.419 MiB, 4.79% gc time)
┌ Warning: The RegularJump interface has changed to be matrix-free. See the documentation for more details.
└ @ DiffEqJump ~/.julia/packages/DiffEqJump/M4Bjj/src/jumps.jl:48
Test Summary:     |
Tau Leaping Tests | No tests
  2.019498 seconds (1.50 M allocations: 84.984 MiB, 2.56% gc time)
Test Summary:              |
SIR Discrete Callback Test | No tests
  4.177185 seconds (3.74 M allocations: 224.593 MiB, 2.77% gc time)
Linear Reaction SSA Test: Error During Test at /home/pkgeval/.julia/packages/DiffEqJump/M4Bjj/test/runtests.jl:11
  Got exception outside of a @test
  LoadError: Module IR does not contain specified entry function
  Stacktrace:
    [1] assume
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
    [2] macro expansion
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
    [3] do_ccall
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
    [4] FunctionWrapper
      @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
    [5] get_cjump_brackets
      @ ~/.julia/packages/DiffEqJump/M4Bjj/src/aggregators/bracketing.jl:43 [inlined]
    [6] set_bracketing!(p::DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, u::Vector{Int64}, params::DiffEqBase.NullParameters, t::Float64)
      @ DiffEqJump ~/.julia/packages/DiffEqJump/M4Bjj/src/aggregators/bracketing.jl:85
    [7] initialize!(p::DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, integrator::DiffEqJump.SSAIntegrator{DiscreteFunction{true, DiffEqBase.var"#175#176", Nothing, Nothing}, Vector{Int64}, Float64, DiffEqBase.NullParameters, ODESolution{Int64, 2, Vector{Vector{Int64}}, Nothing, Nothing, Vector{Float64}, Nothing, DiscreteProblem{Vector{Int64}, Tuple{Float64, Float64}, true, DiffEqBase.NullParameters, DiscreteFunction{true, DiffEqBase.var"#175#176", Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, SSAStepper, DiffEqBase.ConstantInterpolation{Vector{Float64}, Vector{Vector{Int64}}}, DiffEqBase.DEStats}, DiscreteCallback{DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}}, Nothing, NamedTuple{(:callback,), Tuple{CallbackSet{Tuple{}, Tuple{}}}}, Tuple{}}, u::Vector{Int64}, params::DiffEqBase.NullParameters, t::Float64)
      @ DiffEqJump ~/.julia/packages/DiffEqJump/M4Bjj/src/aggregators/rssacr.jl:102
    [8] AbstractSSAJumpAggregator
      @ ~/.julia/packages/DiffEqJump/M4Bjj/src/aggregators/ssajump.jl:49 [inlined]
    [9] __init(jump_prob::JumpProblem{true, DiscreteProblem{Vector{Int64}, Tuple{Float64, Float64}, true, DiffEqBase.NullParameters, DiscreteFunction{true, DiffEqBase.var"#175#176", Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, RSSACR, CallbackSet{Tuple{}, Tuple{DiscreteCallback{DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}}}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, Tuple{}, Nothing, Nothing}, alg::SSAStepper; save_start::Bool, save_end::Bool, seed::Nothing, alias_jump::Bool, saveat::Nothing, callback::Nothing, tstops::Tuple{})
      @ DiffEqJump ~/.julia/packages/DiffEqJump/M4Bjj/src/SSA_stepper.jl:138
   [10] __init
      @ ~/.julia/packages/DiffEqJump/M4Bjj/src/SSA_stepper.jl:74 [inlined]
   [11] #init_call#454
      @ ~/.julia/packages/DiffEqBase/zXRWE/src/solve.jl:32 [inlined]
   [12] init_call
      @ ~/.julia/packages/DiffEqBase/zXRWE/src/solve.jl:19 [inlined]
   [13] #init#455
      @ ~/.julia/packages/DiffEqBase/zXRWE/src/solve.jl:44 [inlined]
   [14] init
      @ ~/.julia/packages/DiffEqBase/zXRWE/src/solve.jl:37 [inlined]
   [15] #__solve#135
      @ ~/.julia/packages/DiffEqJump/M4Bjj/src/SSA_stepper.jl:33 [inlined]
   [16] __solve
      @ ~/.julia/packages/DiffEqJump/M4Bjj/src/SSA_stepper.jl:33 [inlined]
   [17] #solve#461
      @ ~/.julia/packages/DiffEqBase/zXRWE/src/solve.jl:109 [inlined]
   [18] solve
      @ ~/.julia/packages/DiffEqBase/zXRWE/src/solve.jl:109 [inlined]
   [19] runSSAs(jump_prob::JumpProblem{true, DiscreteProblem{Vector{Int64}, Tuple{Float64, Float64}, true, DiffEqBase.NullParameters, DiscreteFunction{true, DiffEqBase.var"#175#176", Nothing, Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, RSSACR, CallbackSet{Tuple{}, Tuple{DiscreteCallback{DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}}}}, DiffEqJump.RSSACRJumpAggregation{Float64, Int64, MassActionJump{Vector{Float64}, Vector{Vector{Pair{Int64, Int64}}}, Vector{Vector{Pair{Int64, Int64}}}}, Vector{FunctionWrappers.FunctionWrapper{Float64, Tuple{Vector{Int64}, DiffEqBase.NullParameters, Float64}}}, Vector{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Any}}}, RandomNumbers.Xorshifts.Xoroshiro128Star, Vector{Vector{Any}}, Vector{Vector{Int64}}, BracketData{Float64, Int64}, SubArray{Int64, 1, Matrix{Int64}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}, true}, DiffEqJump.PriorityTable{Float64, Int64, Int64, DiffEqJump.var"#51#52"{Int64}}, DiffEqJump.var"#51#52"{Int64}}, Tuple{}, Nothing, Nothing})
      @ Main ~/.julia/packages/DiffEqJump/M4Bjj/test/linearreaction_test.jl:30
   [20] top-level scope
      @ ~/.julia/packages/DiffEqJump/M4Bjj/test/linearreaction_test.jl:291
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] macro expansion
      @ ~/.julia/packages/DiffEqJump/M4Bjj/test/runtests.jl:11 [inlined]
   [23] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [24] macro expansion
      @ ~/.julia/packages/DiffEqJump/M4Bjj/test/runtests.jl:11 [inlined]
   [25] macro expansion
      @ ./timing.jl:174 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/DiffEqJump/M4Bjj/test/runtests.jl:11 [inlined]
   [27] top-level scope
      @ ./timing.jl:174
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/DiffEqJump/M4Bjj/test/linearreaction_test.jl:288
Test Summary:            | Error  Total
Linear Reaction SSA Test |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqJump/M4Bjj/test/runtests.jl:3
ERROR: Package DiffEqJump errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
