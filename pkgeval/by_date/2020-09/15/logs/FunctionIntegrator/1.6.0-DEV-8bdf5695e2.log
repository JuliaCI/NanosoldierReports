Julia Version 1.6.0-DEV.918
Commit 8bdf5695e2 (2020-09-15 16:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_UiJ2AP/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_UiJ2AP/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.802659 seconds (1.36 M allocations: 72.647 MiB, 1.52% gc time)
Running: chebyshev_quadrature with k=1
  1.629482 seconds (2.15 M allocations: 123.777 MiB, 4.17% gc time)
Running: chebyshev_quadrature with k=2
  0.305102 seconds (409.21 k allocations: 23.544 MiB, 7.65% gc time)
Running: chebyshev_quadrature with k=3
  0.377335 seconds (522.61 k allocations: 28.689 MiB)
Running: chebyshev_quadrature with k=4
  0.365185 seconds (467.27 k allocations: 25.328 MiB, 17.40% gc time)
Running: jacobi_quadrature with α=β=1
 40.559696 seconds (37.11 M allocations: 3.039 GiB, 9.37% gc time)
Running: laguerre_quadrature with k=1
  3.047479 seconds (3.17 M allocations: 177.129 MiB, 6.14% gc time)
Running: legendre_quadrature
  0.304527 seconds (206.11 k allocations: 11.856 MiB, 20.36% gc time)
Running: lobatto_quadrature
  0.405257 seconds (330.24 k allocations: 19.958 MiB)
Running: radau_quadrature
  0.272532 seconds (313.20 k allocations: 18.985 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.383554 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rectangle_rule_midpoint.
  0.129758 seconds (172.63 k allocations: 3.836 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.459753 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rombergs_method
  0.600970 seconds (722.09 k allocations: 41.699 MiB, 5.13% gc time)
Running: simpsons_rule
  0.053929 seconds (45.97 k allocations: 2.054 MiB)
Running: simpsons38_rule
  0.090939 seconds (109.19 k allocations: 5.786 MiB)
Running: trapezoidal_rule
  0.327268 seconds (1.51 M allocations: 25.695 MiB, 5.83% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.092518 seconds (31.26 k allocations: 1.878 MiB)
Running: chebyshev_quadrature with k=1
  0.517903 seconds (273.48 k allocations: 14.240 MiB)
Running: chebyshev_quadrature with k=2
  0.174804 seconds (93.84 k allocations: 2.677 MiB)
Running: chebyshev_quadrature with k=3
  0.202082 seconds (82.09 k allocations: 2.478 MiB)
Running: chebyshev_quadrature with k=4
  0.210816 seconds (64.70 k allocations: 2.124 MiB)
Running: jacobi_quadrature with α=β=1
  2.740953 seconds (499.25 k allocations: 161.619 MiB, 19.74% gc time)
Running: legendre_quadrature
  0.227133 seconds (41.69 k allocations: 2.411 MiB)
Running: lobatto_quadrature
  0.025563 seconds (16.18 k allocations: 1.008 MiB)
Running: radau_quadrature
  0.036549 seconds (16.16 k allocations: 1.008 MiB)
Running: rectangle_rule_left
 28.907486 seconds (471.41 M allocations: 7.025 GiB, 2.81% gc time)
Running: rectangle_rule_midpoint
  0.000017 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.258171 seconds (476.96 M allocations: 7.107 GiB, 2.36% gc time)
Running: rombergs_method
  0.333125 seconds (326.60 k allocations: 18.559 MiB)
Running: simpsons_rule
  0.000024 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.063807 seconds (19.12 k allocations: 1.156 MiB)
Running: trapezoidal_rule
  0.054014 seconds (17.61 k allocations: 1.064 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030955 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.104766 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.105343 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.114272 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.110428 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.329234 seconds (362.17 k allocations: 18.896 MiB, 6.27% gc time)
Running: legendre_quadrature
  0.068822 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000111 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000064 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000524 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000381 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000520 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074911 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000039 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025042 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022737 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.057822 seconds (72.77 k allocations: 4.238 MiB)
Running: chebyshev_quadrature with k=1
  0.220469 seconds (230.11 k allocations: 12.965 MiB)
Running: chebyshev_quadrature with k=2
  0.305469 seconds (282.77 k allocations: 15.902 MiB, 7.20% gc time)
Running: chebyshev_quadrature with k=3
  0.179445 seconds (262.34 k allocations: 14.292 MiB)
Running: chebyshev_quadrature with k=4
  0.179963 seconds (262.37 k allocations: 14.214 MiB)
Running: jacobi_quadrature with α=β=1
  2.442307 seconds (445.69 k allocations: 163.101 MiB, 2.39% gc time)
Running: legendre_quadrature
  0.141375 seconds (184.98 k allocations: 10.684 MiB)
Running: lobatto_quadrature
  0.169428 seconds (195.85 k allocations: 11.376 MiB, 8.76% gc time)
Running: radau_quadrature
  0.165390 seconds (195.84 k allocations: 11.376 MiB)
Running: rectangle_rule_left
  1.121822 seconds (18.94 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.026944 seconds (24.84 k allocations: 1.564 MiB)
Running: rectangle_rule_right
  1.116805 seconds (17.51 k allocations: 1.069 MiB)
Running: rombergs_method
  0.128114 seconds (133.60 k allocations: 7.727 MiB)
Running: simpsons_rule
  0.029758 seconds (27.73 k allocations: 1.741 MiB)
Running: simpsons38_rule
  0.034836 seconds (42.67 k allocations: 2.693 MiB)
Running: trapezoidal_rule
  0.026937 seconds (44.25 k allocations: 1.780 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040677 seconds (99.77 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.213086 seconds (236.70 k allocations: 13.003 MiB, 8.07% gc time)
Running: chebyshev_quadrature with k=2
  0.199213 seconds (289.78 k allocations: 15.844 MiB)
Running: chebyshev_quadrature with k=3
  0.187430 seconds (269.06 k allocations: 14.290 MiB)
Running: chebyshev_quadrature with k=4
  0.209229 seconds (269.08 k allocations: 14.284 MiB, 8.56% gc time)
Running: hermite_quadrature with k=2
 14.248099 seconds (20.86 M allocations: 1.086 GiB, 8.68% gc time)
Running: jacobi_quadrature with α=β=1
  0.444456 seconds (454.91 k allocations: 49.320 MiB, 7.74% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.212169 seconds (275.97 k allocations: 15.225 MiB)
Running: legendre_quadrature
  0.207967 seconds (191.54 k allocations: 11.003 MiB, 24.29% gc time)
Running: lobatto_quadrature
  0.212802 seconds (216.66 k allocations: 37.144 MiB)
Running: radau_quadrature
  0.360442 seconds (213.26 k allocations: 29.871 MiB, 41.69% gc time)
Running: rectangle_rule_left
  0.027731 seconds (21.89 k allocations: 1.301 MiB)
Running: rectangle_rule_midpoint
  0.034734 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.045943 seconds (18.64 k allocations: 1.124 MiB)
Running: rombergs_method
  0.121907 seconds (136.09 k allocations: 7.768 MiB)
Running: simpsons_rule
  0.039039 seconds (39.61 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.041711 seconds (57.69 k allocations: 3.080 MiB)
Running: trapezoidal_rule
  0.028808 seconds (30.32 k allocations: 1.708 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031381 seconds (60.13 k allocations: 2.291 MiB)
Running: chebyshev_quadrature with k=1
  0.210823 seconds (232.22 k allocations: 12.800 MiB, 9.23% gc time)
Running: chebyshev_quadrature with k=2
  0.202909 seconds (284.99 k allocations: 15.610 MiB)
Running: chebyshev_quadrature with k=3
  0.190169 seconds (264.48 k allocations: 14.079 MiB)
Running: chebyshev_quadrature with k=4
  0.229062 seconds (264.50 k allocations: 14.078 MiB, 9.92% gc time)
Running: hermite_quadrature with k=2
  0.137816 seconds (170.26 k allocations: 9.767 MiB)
Running: jacobi_quadrature with α=β=1
  9.271148 seconds (448.15 k allocations: 1.175 GiB, 18.16% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.231315 seconds (271.25 k allocations: 15.041 MiB, 6.98% gc time)
Running: legendre_quadrature
  0.177157 seconds (187.10 k allocations: 10.791 MiB)
Running: lobatto_quadrature
  0.201116 seconds (207.42 k allocations: 22.877 MiB)
Running: radau_quadrature
  0.184468 seconds (206.57 k allocations: 20.826 MiB, 8.22% gc time)
Running: rectangle_rule_left
  0.023155 seconds (19.66 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.024078 seconds (25.54 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.023217 seconds (17.49 k allocations: 1.069 MiB)
Running: rombergs_method
  0.101279 seconds (131.91 k allocations: 7.594 MiB)
Running: simpsons_rule
  0.028474 seconds (32.11 k allocations: 1.864 MiB)
Running: simpsons38_rule
  0.071465 seconds (48.48 k allocations: 2.840 MiB)
Running: trapezoidal_rule
  0.026252 seconds (25.21 k allocations: 1.544 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032762 seconds (31.08 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.204680 seconds (230.60 k allocations: 13.011 MiB, 8.36% gc time)
Running: chebyshev_quadrature with k=2
  0.222852 seconds (283.28 k allocations: 15.960 MiB)
Running: chebyshev_quadrature with k=3
  0.214178 seconds (262.85 k allocations: 14.294 MiB)
Running: chebyshev_quadrature with k=4
  0.233079 seconds (262.88 k allocations: 14.131 MiB, 8.49% gc time)
Running: jacobi_quadrature with α=β=1
  1.952771 seconds (446.24 k allocations: 194.177 MiB, 6.09% gc time)
Running: legendre_quadrature
  0.146757 seconds (185.48 k allocations: 10.711 MiB)
Running: lobatto_quadrature
  0.190023 seconds (196.35 k allocations: 11.401 MiB, 9.22% gc time)
Running: radau_quadrature
  0.179310 seconds (196.35 k allocations: 11.401 MiB)
Running: rectangle_rule_left
  0.324821 seconds (19.47 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.030311 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.145596 seconds (17.85 k allocations: 1.087 MiB)
Running: rombergs_method
  0.190571 seconds (144.42 k allocations: 8.455 MiB)
Running: simpsons_rule
  0.031646 seconds (28.43 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.037417 seconds (43.39 k allocations: 2.724 MiB)
Running: trapezoidal_rule
  0.028139 seconds (45.19 k allocations: 1.814 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035457 seconds (31.84 k allocations: 1.837 MiB)
Running: chebyshev_quadrature with k=1
  0.236024 seconds (231.19 k allocations: 12.975 MiB, 9.12% gc time)
Running: chebyshev_quadrature with k=2
  0.228041 seconds (283.91 k allocations: 15.859 MiB)
Running: chebyshev_quadrature with k=3
  0.274714 seconds (263.43 k allocations: 14.216 MiB)
Running: chebyshev_quadrature with k=4
  0.337939 seconds (263.45 k allocations: 14.295 MiB, 8.95% gc time)
Running: jacobi_quadrature with α=β=1
  1.551753 seconds (446.95 k allocations: 148.860 MiB, 8.06% gc time)
Running: legendre_quadrature
  0.136152 seconds (186.07 k allocations: 10.726 MiB)
Running: lobatto_quadrature
  0.169699 seconds (196.95 k allocations: 11.423 MiB, 10.76% gc time)
Running: radau_quadrature
  0.157399 seconds (196.94 k allocations: 11.419 MiB)
Running: rectangle_rule_left
  1.294736 seconds (19.72 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.023066 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  1.377972 seconds (17.81 k allocations: 1.085 MiB)
Running: rombergs_method
  0.127203 seconds (134.82 k allocations: 7.814 MiB)
Running: simpsons_rule
  0.033733 seconds (29.12 k allocations: 1.795 MiB)
Running: simpsons38_rule
  0.036727 seconds (44.09 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.027184 seconds (57.42 k allocations: 2.014 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.148608 seconds (146.09 k allocations: 8.744 MiB)
Running: chebyshev_quadrature with k=1
  0.143781 seconds (69.97 k allocations: 2.207 MiB)
Running: chebyshev_quadrature with k=2
  0.151580 seconds (105.13 k allocations: 2.869 MiB)
Running: chebyshev_quadrature with k=3
  0.170542 seconds (92.61 k allocations: 2.719 MiB)
Running: chebyshev_quadrature with k=4
  0.163676 seconds (72.14 k allocations: 2.252 MiB)
Running: jacobi_quadrature with α=β=1
  1.823761 seconds (474.82 k allocations: 167.505 MiB, 4.66% gc time)
Running: legendre_quadrature
  0.110603 seconds (18.76 k allocations: 1.093 MiB)
Running: lobatto_quadrature
  0.000096 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000088 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 44.722208 seconds (590.00 M allocations: 8.792 GiB, 3.20% gc time)
Running: rectangle_rule_midpoint
  0.000054 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.610694 seconds (592.75 M allocations: 8.833 GiB, 2.80% gc time)
Running: rombergs_method
  0.142108 seconds (20.54 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000052 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033011 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.026952 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.295411 seconds (629.33 M allocations: 9.387 GiB, 4.10% gc time)
Running: chebyshev_quadrature with k=1
  0.475905 seconds (418.94 k allocations: 23.196 MiB)
Running: chebyshev_quadrature with k=2
 13.591221 seconds (473.67 k allocations: 4.040 GiB, 5.46% gc time)
Running: chebyshev_quadrature with k=3
  5.880286 seconds (276.76 k allocations: 1.643 GiB, 4.52% gc time)
Running: chebyshev_quadrature with k=4
  8.656476 seconds (276.78 k allocations: 2.261 GiB, 2.38% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.204935 seconds (483.70 k allocations: 13.254 GiB, 2.92% gc time)
Running: legendre_quadrature.
  5.925442 seconds (223.25 k allocations: 1.976 GiB, 1.36% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.941340 seconds (8.23 M allocations: 13.383 GiB, 3.89% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.927711 seconds (7.23 M allocations: 13.369 GiB, 3.22% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.053583 seconds (22.38 k allocations: 1.354 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.139246 seconds (30.63 k allocations: 1.894 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.086243 seconds (22.59 k allocations: 1.364 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.114768 seconds (437.94 k allocations: 152.683 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.831212 seconds (600.04 M allocations: 8.943 GiB, 8.31% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.345774 seconds (600.05 M allocations: 8.943 GiB, 8.13% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.862728 seconds (600.03 M allocations: 8.943 GiB, 8.32% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063828 seconds (180.71 k allocations: 4.420 MiB)
Running: chebyshev_quadrature with k=1
  0.225894 seconds (247.17 k allocations: 13.416 MiB)
Running: chebyshev_quadrature with k=2
  0.213377 seconds (271.77 k allocations: 14.487 MiB)
Running: chebyshev_quadrature with k=3
  0.197036 seconds (247.88 k allocations: 12.783 MiB)
Running: chebyshev_quadrature with k=4
  0.201465 seconds (247.91 k allocations: 12.782 MiB)
Running: jacobi_quadrature with α=β=1
  0.369468 seconds (387.52 k allocations: 34.889 MiB)
Running: laguerre_quadrature with k=2
  0.182732 seconds (180.07 k allocations: 10.454 MiB)
Running: legendre_quadrature
  0.124003 seconds (145.31 k allocations: 8.035 MiB)
Running: lobatto_quadrature
  0.036039 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.032008 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.056401 seconds (18.99 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.049317 seconds (25.65 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.050594 seconds (17.59 k allocations: 1.055 MiB)
Running: rombergs_method
  0.229593 seconds (171.85 k allocations: 9.873 MiB)
Running: simpsons_rule
  0.001846 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053233 seconds (79.17 k allocations: 3.400 MiB)
Running: trapezoidal_rule
  0.206779 seconds (2.39 M allocations: 37.700 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002119 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.118846 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.122302 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.122138 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.118279 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  7.664913 seconds (364.56 k allocations: 904.721 MiB, 4.84% gc time)
Running: legendre_quadrature
  0.068289 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000178 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000137 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.748435 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000509 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.077569 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060772 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000853 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000713 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.105932 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.109545 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.123737 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.129469 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.883907 seconds (371.12 k allocations: 252.864 MiB)
Running: legendre_quadrature
  0.108944 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000099 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000047 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.025933 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.005193 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.518871 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.092268 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000040 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001484 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
