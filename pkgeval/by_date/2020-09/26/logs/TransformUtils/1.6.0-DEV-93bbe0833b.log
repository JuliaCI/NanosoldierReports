Julia Version 1.6.0-DEV.1063
Commit 93bbe0833b (2020-09-26 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_EzkwR3/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_EzkwR3/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.037402152419271986 -0.12488188168309562; -0.037402152419271986 0.0 -0.03643407620021543; 0.12488188168309562 0.03643407620021543 0.0])
dAA = so3([0.0 0.004748170646197928 -0.054970990856125716; -0.004748170646197928 0.0 -0.006317468281913124; 0.054970990856125716 0.006317468281913124 0.0])
dAA = so3([0.0 0.050072015779257344 0.09230591286196334; -0.050072015779257344 0.0 -0.08330916644690861; -0.09230591286196334 0.08330916644690861 0.0])
dAA = Quaternion(0.9972302308591576, [-0.00919219948518438, -0.06092824918782342, 0.04165475459203143])
dAA = SO3([0.9884339979095794 0.11825163479267714 0.09494620922051028; -0.11544802270219481 0.9927136198969119 -0.03451699473191694; -0.0983360861059617 0.02315641898111574 0.9948838095121119])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9905016634826508 0.010748826370140853 -0.13707996706217263; -0.012915826289048209 0.9998051397918897 -0.014928626091875504; 0.1368927904214568 0.016557330019796652 0.9904474840965788]), [0.3643407620021543, -1.2488188168309562, -0.37402152419271983])
xj = SE3(SO3([0.9324677956221784 -0.19856262965631064 -0.301789151944675; 0.21619790157064492 0.9760074979819909 0.025842430988272592; 0.289417134053886 -0.08934341602437607 0.9530243840160283]), [0.8330916644690861, 0.9230591286196334, -0.5007201577925734])
Dx = SE3(SO3([0.9604376472434419 -0.2215130278061711 -0.1687942661041061; 0.23097068263535658 0.9722037093038313 0.038373055375213586; 0.1556022799332925 -0.07584145388911186 0.984904058450135]), [0.4189028208919651, 2.174395463834043, -0.2221678549228026])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
