Julia Version 1.6.0-DEV.1063
Commit 93bbe0833b (2020-09-26 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_1IagtW/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_1IagtW/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.727947 seconds (1.40 M allocations: 74.190 MiB, 12.01% gc time)
Running: chebyshev_quadrature with k=1
  1.217546 seconds (2.19 M allocations: 126.470 MiB, 3.94% gc time)
Running: chebyshev_quadrature with k=2
  0.212121 seconds (409.38 k allocations: 23.561 MiB, 8.14% gc time)
Running: chebyshev_quadrature with k=3
  0.214676 seconds (473.74 k allocations: 26.629 MiB)
Running: chebyshev_quadrature with k=4
  0.265082 seconds (418.55 k allocations: 23.252 MiB, 17.62% gc time)
Running: jacobi_quadrature with α=β=1
 35.030132 seconds (36.51 M allocations: 3.006 GiB, 9.27% gc time)
Running: laguerre_quadrature with k=1
  2.492409 seconds (3.17 M allocations: 177.077 MiB, 3.30% gc time)
Running: legendre_quadrature
  0.192871 seconds (206.05 k allocations: 11.843 MiB)
Running: lobatto_quadrature
  0.353615 seconds (329.50 k allocations: 19.884 MiB, 6.63% gc time)
Running: radau_quadrature
  0.340365 seconds (446.84 k allocations: 27.222 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 67.474715 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rectangle_rule_midpoint.
  0.154135 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 73.873122 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time)
Running: rombergs_method
  0.499518 seconds (723.12 k allocations: 41.730 MiB, 6.07% gc time)
Running: simpsons_rule
  0.034698 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.083308 seconds (108.44 k allocations: 5.751 MiB)
Running: trapezoidal_rule
  0.335106 seconds (1.51 M allocations: 25.672 MiB, 4.89% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.097581 seconds (30.98 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.658992 seconds (290.25 k allocations: 15.324 MiB, 30.41% gc time)
Running: chebyshev_quadrature with k=2
  0.165721 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.212605 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.287430 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  1.635007 seconds (504.07 k allocations: 161.805 MiB, 2.82% gc time)
Running: legendre_quadrature
  0.213477 seconds (41.10 k allocations: 2.367 MiB)
Running: lobatto_quadrature
  0.033968 seconds (15.54 k allocations: 990.622 KiB)
Running: radau_quadrature
  0.029055 seconds (15.64 k allocations: 997.837 KiB)
Running: rectangle_rule_left
 27.043225 seconds (471.41 M allocations: 7.025 GiB, 2.61% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 26.537497 seconds (476.96 M allocations: 7.107 GiB, 2.49% gc time)
Running: rombergs_method
  0.410734 seconds (326.52 k allocations: 18.531 MiB, 1.24% gc time)
Running: simpsons_rule
  0.000040 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.072308 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.070761 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031838 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.127567 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.111251 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.148892 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.128180 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.341814 seconds (364.10 k allocations: 18.999 MiB, 9.78% gc time)
Running: legendre_quadrature
  0.077778 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000107 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000103 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000489 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000326 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000467 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.090464 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000041 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.030853 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023356 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059625 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.199692 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.219713 seconds (283.16 k allocations: 15.880 MiB)
Running: chebyshev_quadrature with k=3
  0.178894 seconds (234.76 k allocations: 13.133 MiB, 11.58% gc time)
Running: chebyshev_quadrature with k=4
  0.199918 seconds (234.76 k allocations: 13.067 MiB)
Running: jacobi_quadrature with α=β=1
  2.570615 seconds (447.18 k allocations: 163.289 MiB, 4.06% gc time)
Running: legendre_quadrature
  0.140828 seconds (185.44 k allocations: 10.711 MiB)
Running: lobatto_quadrature
  0.181727 seconds (196.77 k allocations: 11.435 MiB)
Running: radau_quadrature
  0.180975 seconds (196.76 k allocations: 11.417 MiB)
Running: rectangle_rule_left
  0.987788 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.028193 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  1.055930 seconds (17.39 k allocations: 1.065 MiB, 2.43% gc time)
Running: rombergs_method
  0.147259 seconds (134.26 k allocations: 7.774 MiB)
Running: simpsons_rule
  0.033624 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.040231 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.027372 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039609 seconds (99.53 k allocations: 2.979 MiB)
Running: chebyshev_quadrature with k=1
  0.193886 seconds (237.20 k allocations: 13.058 MiB)
Running: chebyshev_quadrature with k=2
  0.206241 seconds (290.20 k allocations: 15.879 MiB, 9.73% gc time)
Running: chebyshev_quadrature with k=3
  0.208938 seconds (241.33 k allocations: 13.136 MiB)
Running: chebyshev_quadrature with k=4
  0.197074 seconds (241.33 k allocations: 13.120 MiB)
Running: hermite_quadrature with k=2
 14.959525 seconds (20.09 M allocations: 1.055 GiB, 9.38% gc time)
Running: jacobi_quadrature with α=β=1
  0.426624 seconds (456.36 k allocations: 49.412 MiB)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.229065 seconds (276.26 k allocations: 15.253 MiB)
Running: legendre_quadrature
  0.186844 seconds (191.98 k allocations: 11.047 MiB, 13.17% gc time)
Running: lobatto_quadrature
  0.229951 seconds (217.42 k allocations: 37.194 MiB)
Running: radau_quadrature
  0.236021 seconds (214.00 k allocations: 29.854 MiB, 8.18% gc time)
Running: rectangle_rule_left
  0.025845 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.030596 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.028320 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.131918 seconds (136.74 k allocations: 7.824 MiB)
Running: simpsons_rule
  0.037456 seconds (39.37 k allocations: 2.062 MiB)
Running: simpsons38_rule
  0.038470 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.038330 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.055033 seconds (59.91 k allocations: 2.280 MiB, 30.93% gc time)
Running: chebyshev_quadrature with k=1
  0.195736 seconds (232.72 k allocations: 12.841 MiB)
Running: chebyshev_quadrature with k=2
  0.225974 seconds (285.38 k allocations: 15.647 MiB)
Running: chebyshev_quadrature with k=3
  0.203688 seconds (236.87 k allocations: 12.928 MiB)
Running: chebyshev_quadrature with k=4
  0.208321 seconds (236.87 k allocations: 12.929 MiB, 8.86% gc time)
Running: hermite_quadrature with k=2
  0.148769 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
 10.302800 seconds (449.62 k allocations: 1.175 GiB, 14.53% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.266175 seconds (271.55 k allocations: 15.066 MiB)
Running: legendre_quadrature
  0.168100 seconds (187.55 k allocations: 10.815 MiB)
Running: lobatto_quadrature
  0.241402 seconds (208.18 k allocations: 22.936 MiB, 7.23% gc time)
Running: radau_quadrature
  0.192468 seconds (207.33 k allocations: 20.856 MiB)
Running: rectangle_rule_left
  0.024448 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.024974 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.022058 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.123519 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.029130 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.033222 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.024656 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.047563 seconds (30.87 k allocations: 1.874 MiB, 35.78% gc time)
Running: chebyshev_quadrature with k=1
  0.189153 seconds (231.10 k allocations: 13.042 MiB)
Running: chebyshev_quadrature with k=2
  0.220458 seconds (283.67 k allocations: 16.048 MiB)
Running: chebyshev_quadrature with k=3
  0.234642 seconds (235.25 k allocations: 13.146 MiB)
Running: chebyshev_quadrature with k=4
  0.218502 seconds (235.25 k allocations: 12.971 MiB, 7.69% gc time)
Running: jacobi_quadrature with α=β=1
  2.503753 seconds (447.72 k allocations: 194.255 MiB, 1.92% gc time)
Running: legendre_quadrature
  0.161559 seconds (185.93 k allocations: 10.749 MiB)
Running: lobatto_quadrature
  0.231145 seconds (197.26 k allocations: 11.510 MiB, 7.44% gc time)
Running: radau_quadrature
  0.196508 seconds (197.26 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  0.290123 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.022950 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.144158 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.127600 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.028516 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.030664 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.024689 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029699 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.207515 seconds (231.69 k allocations: 12.988 MiB, 9.24% gc time)
Running: chebyshev_quadrature with k=2
  0.221783 seconds (284.30 k allocations: 15.891 MiB)
Running: chebyshev_quadrature with k=3
  0.186620 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.207591 seconds (235.84 k allocations: 13.149 MiB, 9.59% gc time)
Running: jacobi_quadrature with α=β=1
  1.779734 seconds (448.43 k allocations: 148.940 MiB, 3.84% gc time)
Running: legendre_quadrature
  0.157725 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.175120 seconds (197.86 k allocations: 11.461 MiB)
Running: radau_quadrature
  0.195932 seconds (197.85 k allocations: 11.473 MiB, 9.13% gc time)
Running: rectangle_rule_left
  0.961757 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.024910 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  0.953733 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.141909 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.033046 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.035515 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.029924 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.156447 seconds (145.06 k allocations: 8.696 MiB)
Running: chebyshev_quadrature with k=1
  0.182793 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.165472 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.169034 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.167251 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.637127 seconds (480.52 k allocations: 167.762 MiB, 8.64% gc time)
Running: legendre_quadrature
  0.145869 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000130 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000060 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 43.006634 seconds (590.00 M allocations: 8.792 GiB, 3.33% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.271523 seconds (592.75 M allocations: 8.833 GiB, 3.19% gc time)
Running: rombergs_method
  0.141802 seconds (20.51 k allocations: 1.166 MiB)
Running: simpsons_rule
  0.000111 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029807 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024153 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.023735 seconds (629.32 M allocations: 9.387 GiB, 3.16% gc time)
Running: chebyshev_quadrature with k=1
  0.473635 seconds (413.91 k allocations: 22.948 MiB)
Running: chebyshev_quadrature with k=2
 24.771544 seconds (468.55 k allocations: 4.040 GiB, 2.00% gc time)
Running: chebyshev_quadrature with k=3
 12.097711 seconds (249.12 k allocations: 1.642 GiB, 2.85% gc time)
Running: chebyshev_quadrature with k=4
 16.651292 seconds (249.12 k allocations: 2.260 GiB, 1.28% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.339539 seconds (484.48 k allocations: 13.254 GiB, 3.45% gc time)
Running: legendre_quadrature.
 13.449787 seconds (223.20 k allocations: 1.976 GiB, 1.27% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.001858 seconds (8.23 M allocations: 13.383 GiB, 4.26% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.527981 seconds (7.23 M allocations: 13.369 GiB, 3.54% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.098017 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 20.080439 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.723415 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.111151 seconds (438.10 k allocations: 152.669 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.450857 seconds (600.04 M allocations: 8.943 GiB, 5.53% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.919434 seconds (600.05 M allocations: 8.943 GiB, 6.30% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.828272 seconds (600.03 M allocations: 8.943 GiB, 5.94% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.049744 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.196393 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.181357 seconds (272.34 k allocations: 14.527 MiB)
Running: chebyshev_quadrature with k=3
  0.176697 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.180419 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.359553 seconds (389.30 k allocations: 34.996 MiB)
Running: laguerre_quadrature with k=2
  0.216483 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.130907 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.036987 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.032681 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.054573 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.043731 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.048606 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.241513 seconds (171.72 k allocations: 9.834 MiB)
Running: simpsons_rule
  0.001726 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.050151 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.194508 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002022 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.132681 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.139283 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.128840 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.122912 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  5.582043 seconds (366.38 k allocations: 904.852 MiB, 3.10% gc time)
Running: legendre_quadrature
  0.093085 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000205 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000170 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.655870 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000494 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.387989 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.069289 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000896 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000392 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.116208 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.124356 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.117892 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.110844 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  2.836922 seconds (372.94 k allocations: 252.986 MiB)
Running: legendre_quadrature
  0.071504 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000104 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000072 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.812206 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000154 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.782730 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.086791 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000478 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
