Julia Version 1.6.0-DEV.1063
Commit 93bbe0833b (2020-09-26 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed IRTools ──── v0.4.1
  Installed MacroTools ─ v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [7869d1d1] + IRTools v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7869d1d1] + IRTools v0.4.1
  [1914dd2f] + MacroTools v0.5.5
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
    Testing IRTools
Status `/tmp/jl_XXMWz2/Project.toml`
  [e30172f5] Documenter v0.25.2
  [7869d1d1] IRTools v0.4.1
  [1914dd2f] MacroTools v0.5.5
  [b77e0a4c] InteractiveUtils
  [8dfed614] Test
Status `/tmp/jl_XXMWz2/Manifest.toml`
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [7869d1d1] IRTools v0.4.1
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.10
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
IR: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/ir.jl:34
  Test threw exception
  Expression: foo(mylog2, 3.3) === mylog2(3.3)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#1
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#1(241::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/ir.jl:34
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
IR: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/ir.jl:47
  Test threw exception
  Expression: f(nothing, 2, 3) == 3
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] build_codeinfo(ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
    [4] #s60#279
      @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
    [5] #s60#279(::Any, arg1::Any, arg2::Any, arg3::Any)
      @ IRTools.Inner ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/ir.jl:47
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
IR: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/ir.jl:48
  Test threw exception
  Expression: f(nothing, 3, 2) == 3
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] build_codeinfo(ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
    [4] #s60#279
      @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
    [5] #s60#279(::Any, arg1::Any, arg2::Any, arg3::Any)
      @ IRTools.Inner ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/ir.jl:48
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
IR: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
  Got exception outside of a @test
  LoadError: type GotoIfNot has no field args
  Stacktrace:
    [1] getproperty(x::Core.GotoIfNot, f::Symbol)
      @ Base ./Base.jl:33
    [2] inline(ir::IRTools.Inner.IR, loc::IRTools.Inner.Variable, source::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/inline.jl:83
    [3] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/ir.jl:69
    [4] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [5] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
    [6] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:6
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [11] top-level scope
      @ none:6
   [12] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [14] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/ir.jl:66
Analysis: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/analysis.jl:7
  Expression: dominators(CFG(ir)) == Dict(1 => Set([1]), 2 => Set([1, 2]), 3 => Set([1, 3]), 4 => Set([1, 4]))
   Evaluated: Dict{Int64, Set{Int64}}(2 => Set([2, 1]), 3 => Set([3, 1]), 1 => Set([1])) == Dict{Int64, Set{Int64}}(4 => Set([4, 1]), 2 => Set([2, 1]), 3 => Set([3, 1]), 1 => Set([1]))
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/analysis.jl:7
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Analysis: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/analysis.jl:10
  Expression: domtree(CFG(ir)) == (1 => [2 => [], 3 => [], 4 => []])
   Evaluated: Pair{Int64, Any}(1, Pair{Int64, Any}[2 => Pair{Int64, Any}[], 3 => Pair{Int64, Any}[]]) == 1 => Pair{Int64, Vector{Any}}[2 => [], 3 => [], 4 => []]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/analysis.jl:10
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Analysis: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/analysis.jl:12
  Test threw exception
  Expression: domtree((CFG(ir))', entry = 4) == (4 => [1 => [], 2 => [], 3 => []])
  KeyError: key 4 not found
  Stacktrace:
    [1] getindex(h::Dict{Int64, Vector{Int64}}, key::Int64)
      @ Base ./dict.jl:482
    [2] (::IRTools.Inner.var"#children#141")(b::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/passes.jl:77
    [3] (::IRTools.Inner.var"#tree#144"{IRTools.Inner.var"#children#141"})(b::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/passes.jl:78
    [4] domtree(cfg::IRTools.Inner.CFG; entry::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/passes.jl:79
    [5] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/analysis.jl:12
    [6] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:10
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:15
  Test threw exception
  Expression: roundtrip(add, 2, 3) == 5
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#6
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#6(243::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:15
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:16
  Test threw exception
  Expression: passthrough(add, 2, 3) == 5
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:16
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:17
  Test threw exception
  Expression: passthrough(sin, 1.0) == sin(1.0)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:17
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:24
  Test threw exception
  Expression: roundtrip(add, 2, 3) == 6
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s60#10
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s60#10(243::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:24
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:27
  Test threw exception
  Expression: roundtrip(relu, 1) == 1
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s60#10
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s60#10(243::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:27
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:28
  Test threw exception
  Expression: passthrough(relu, 1) == 1
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:28
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:31
  Test threw exception
  Expression: roundtrip(foo, 1) == 2
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s60#10
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s60#10(243::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:31
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:32
  Test threw exception
  Expression: roundtrip(foo, -1) == -2
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s60#10
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s60#10(243::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:32
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:33
  Test threw exception
  Expression: passthrough(foo, 1) == 2
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:33
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:35
  Test threw exception
  Expression: passthrough((()->begin
                [1, 2, 3]
            end)) == [1, 2, 3]
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:35
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:45
  Test threw exception
  Expression: passthrough(err, (()->begin
                2 + 2
            end)) == 4
  Error compiling @dynamo typeof(passthrough) on (typeof(err), var"#14#15"):
  MethodError: no method matching +(::Nothing, ::Int64)
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:538
    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8} at int.jl:87
    +(!Matched::T, ::Integer) where T<:AbstractChar at char.jl:223
    ...
  Stacktrace:
    [1] IRTools.Inner.IR(ci::Core.CodeInfo, nargs::Int64; meta::IRTools.Inner.Meta)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:99
    [2] #IR#15
      @ ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:115 [inlined]
    [3] IRTools.Inner.IR(::Type, ::Vararg{Type, N} where N; slots::Bool, prune::Bool)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:127
    [4] IRTools.Inner.IR(::Type, ::Vararg{Type, N} where N)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:125
    [5] macro expansion
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:8 [inlined]
    [6] transform(::Type{typeof(passthrough)}, ::Type, ::Vararg{Type, N} where N)
      @ Main ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:122
    [7] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:62
    [8] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [9] #s59#8(244::Any, args::Any)
      @ Main ./none:0
   [10] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:45
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:46
  Test threw exception
  Expression: passthrough(err, (()->begin
                0 // 0
            end)) isa ArgumentError
  Error compiling @dynamo typeof(passthrough) on (typeof(err), var"#16#17"):
  MethodError: no method matching +(::Nothing, ::Int64)
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:538
    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8} at int.jl:87
    +(!Matched::T, ::Integer) where T<:AbstractChar at char.jl:223
    ...
  Stacktrace:
    [1] IRTools.Inner.IR(ci::Core.CodeInfo, nargs::Int64; meta::IRTools.Inner.Meta)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:99
    [2] #IR#15
      @ ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:115 [inlined]
    [3] IRTools.Inner.IR(::Type, ::Vararg{Type, N} where N; slots::Bool, prune::Bool)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:127
    [4] IRTools.Inner.IR(::Type, ::Vararg{Type, N} where N)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:125
    [5] macro expansion
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:8 [inlined]
    [6] transform(::Type{typeof(passthrough)}, ::Type, ::Vararg{Type, N} where N)
      @ Main ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:122
    [7] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:62
    [8] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [9] #s59#8(244::Any, args::Any)
      @ Main ./none:0
   [10] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:46
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:59
  Test threw exception
  Expression: passthrough(err2, (()->begin
                2 + 2
            end)) == (1, 4)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:59
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:60
  Test threw exception
  Expression: passthrough(err2, (()->begin
                0 // 0
            end)) == (1, 1)
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:60
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:71
  Test threw exception
  Expression: passthrough(err3, (()->begin
                2 + 2
            end)) == 4
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#8
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#8(244::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:71
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:88
  Test threw exception
  Expression: mullify(prod, [5, 10]) == 15
  MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s57#27
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s57#27(245::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/compiler.jl:88
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Compiler: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:17
  Got exception outside of a @test
  LoadError: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
  Stacktrace:
    [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
      @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
    [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
    [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
    [4] #s59#32
      @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
    [5] #s59#32(cx::Any, args::Any)
      @ Main ./none:0
    [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
      @ Core ./boot.jl:571
    [7] (::Base.var"#15#16"{Bool, DataType})(m::Core.MethodInstance)
      @ Base ./reflection.jl:778
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Vector{Core.MethodInstance}, itr::Base.Generator{Vector{Core.MethodInstance}, Base.var"#15#16"{Bool, DataType}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [10] collect_similar(cont::Vector{Core.MethodInstance}, itr::Base.Generator{Vector{Core.MethodInstance}, Base.var"#15#16"{Bool, DataType}})
      @ Base ./array.jl:628
   [11] map(f::Function, A::Vector{Core.MethodInstance})
      @ Base ./abstractarray.jl:2233
   [12] #code_lowered#14
      @ ./reflection.jl:775 [inlined]
   [13] code_lowered(f::Any, t::Any)
      @ Base ./reflection.jl:767
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/InteractiveUtils/src/macros.jl:230
   [15] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [16] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [17] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [18] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:18
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
   [21] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [22] top-level scope
      @ none:6
   [23] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [24] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [25] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/compiler.jl:108
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:8
  Expression: relu_cfg == CFG([[3, 2], [4], [4], []])
   Evaluated: IRTools.Inner.CFG([[3], [3], Int64[]]) == IRTools.Inner.CFG([[3, 2], [4], [4], Int64[]])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:8
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:10
  Expression: reloop(relu_cfg) == Simple(1, Multiple([Simple(3), Simple(2)], Simple(4)))
   Evaluated: Structured CFG:
1
3
 == Structured CFG:
1
Multiple:
  Simple:
    3
  Simple:
    2
4

Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:10
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:12
  Expression: sort.(stackify(relu_cfg)) == ([1 => 2, 1 => 3, 1 => 4], [])
   Evaluated: (Any[1 => 3], Any[]) == ([1 => 2, 1 => 3, 1 => 4], Any[])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:12
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:25
  Expression: pow_cfg == CFG([[2], [4, 3], [2], []])
   Evaluated: IRTools.Inner.CFG([[2], [2], Int64[]]) == IRTools.Inner.CFG([[2], [4, 3], [2], Int64[]])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:25
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:27
  Expression: reloop(pow_cfg) == Simple(1, Loop(Simple(2, Simple(3)), Simple(4)))
   Evaluated: Structured CFG:
1
Loop:
  2
 == Structured CFG:
1
Loop:
  2
  3
4

Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:27
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Test Failed at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:29
  Expression: sort.(stackify(pow_cfg)) == ([1 => 2, 1 => 4, 2 => 3], [3 => 2])
   Evaluated: (Any[1 => 2], Any[]) == ([1 => 2, 1 => 4, 2 => 3], [3 => 2])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:29
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [3] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
 [6] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [7] top-level scope
   @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
Relooper: Error During Test at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:21
  Got exception outside of a @test
  LoadError: BoundsError: attempt to access 0-element Vector{IRTools.Inner.Branch} at index [1]
  Stacktrace:
    [1] getindex
      @ ./array.jl:809 [inlined]
    [2] ast(cx::IRTools.Inner.ASTCtx, cfg::IRTools.Inner.Simple)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:177
    [3] (::IRTools.Inner.var"#nextblock#241"{IRTools.Inner.ASTCtx, IRTools.Inner.Simple, Dict{Any, Any}})(br::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:165
    [4] ast(cx::IRTools.Inner.ASTCtx, cfg::IRTools.Inner.Simple)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:172
    [5] reloop(ir::IRTools.Inner.IR; inline::Any)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:225
    [6] reloop(ir::IRTools.Inner.IR)
      @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/passes/relooper.jl:222
    [7] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/relooper.jl:36
    [8] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [9] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
   [10] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [11] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:22
   [12] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [13] top-level scope
      @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
   [14] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [15] top-level scope
      @ none:6
   [16] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [17] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [18] _start()
      @ Base ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/relooper.jl:36
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:58-68
│ 
│ ```jldoctest main
│ julia> using IRTools: IR, @dynamo
│ 
│ julia> @dynamo roundtrip(a...) = IR(a...)
│ 
│ julia> mul(a, b) = a*b
│ mul (generic function with 1 method)
│ 
│ julia> roundtrip(mul, 2, 3)
│ 6
│ ```
│ 
│ Subexpression:
│ 
│ roundtrip(mul, 2, 3)
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#1
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#1(247::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 6
│ 
│   diff =
│    Warning: Diff output requires color.
│    6ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#1
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#1(247::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:74-86
│ 
│ ```jldoctest main
│ julia> using IRTools: @code_ir
│ 
│ julia> @code_ir mul(2, 3)
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   return %4
│ 
│ julia> @code_ir roundtrip mul(1, 2)
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   return %4
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir mul(2, 3)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   %5 = return %1
│ 
│ Expected output:
│ 
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   return %4
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2, %3)
│      %4 = %2 * %3
│      %5 = return %4%1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:74-86
│ 
│ ```jldoctest main
│ julia> using IRTools: @code_ir
│ 
│ julia> @code_ir mul(2, 3)
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   return %4
│ 
│ julia> @code_ir roundtrip mul(1, 2)
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   return %4
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir roundtrip mul(1, 2)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   %5 = return %1
│ 
│ Expected output:
│ 
│ 1: (%1, %2, %3)
│   %4 = %2 * %3
│   return %4
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2, %3)
│      %4 = %2 * %3
│      %5 = return %4%1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:105-115
│ 
│ ```jldoctest main
│ julia> foo() do
│          10*5
│        end
│ 15
│ 
│ julia> foo() do
│          prod([10, 5])
│        end
│ 50
│ ```
│ 
│ Subexpression:
│ 
│ foo() do
│   10*5
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#4
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#4(248::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 15
│ 
│   diff =
│    Warning: Diff output requires color.
│    15ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#4
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#4(248::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:105-115
│ 
│ ```jldoctest main
│ julia> foo() do
│          10*5
│        end
│ 15
│ 
│ julia> foo() do
│          prod([10, 5])
│        end
│ 50
│ ```
│ 
│ Subexpression:
│ 
│ foo() do
│   prod([10, 5])
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#4
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#4(248::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 50
│ 
│   diff =
│    Warning: Diff output requires color.
│    50ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#4
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#4(248::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:164-179
│ 
│ ```jldoctest main
│ julia> foo() do # Does not work (since there is no literal `*` here)
│          mul(5, 10)
│        end
│ 50
│ 
│ julia> foo2() do # Works correctly
│          mul(5, 10)
│        end
│ 15
│ 
│ julia> foo2() do
│          prod([5, 10])
│        end
│ 15
│ ```
│ 
│ Subexpression:
│ 
│ foo() do # Does not work (since there is no literal `*` here)
│   mul(5, 10)
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#4
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#4(248::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 50
│ 
│   diff =
│    Warning: Diff output requires color.
│    50ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#4
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#4(248::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:164-179
│ 
│ ```jldoctest main
│ julia> foo() do # Does not work (since there is no literal `*` here)
│          mul(5, 10)
│        end
│ 50
│ 
│ julia> foo2() do # Works correctly
│          mul(5, 10)
│        end
│ 15
│ 
│ julia> foo2() do
│          prod([5, 10])
│        end
│ 15
│ ```
│ 
│ Subexpression:
│ 
│ foo2() do # Works correctly
│   mul(5, 10)
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s57#12
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s57#12(249::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 15
│ 
│   diff =
│    Warning: Diff output requires color.
│    15ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s57#12
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s57#12(249::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:164-179
│ 
│ ```jldoctest main
│ julia> foo() do # Does not work (since there is no literal `*` here)
│          mul(5, 10)
│        end
│ 50
│ 
│ julia> foo2() do # Works correctly
│          mul(5, 10)
│        end
│ 15
│ 
│ julia> foo2() do
│          prod([5, 10])
│        end
│ 15
│ ```
│ 
│ Subexpression:
│ 
│ foo2() do
│   prod([5, 10])
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s57#12
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s57#12(249::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 15
│ 
│   diff =
│    Warning: Diff output requires color.
│    15ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s57#12
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s57#12(249::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:187-205
│ 
│ ```jldoctest main
│ julia> using IRTools: recurse!
│ 
│ julia> @dynamo function foo2(a...)
│          ir = IR(a...)
│          ir == nothing && return
│          ir = MacroTools.prewalk(ir) do x
│            x isa GlobalRef && x.name == :(*) && return GlobalRef(Base, :+)
│            return x
│          end
│          recurse!(ir)
│          return ir
│        end
│ 
│ julia> foo2() do
│          prod([5, 10])
│        end
│ 15
│ ```
│ 
│ Subexpression:
│ 
│ foo2() do
│   prod([5, 10])
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#22
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#22(250::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 15
│ 
│   diff =
│    Warning: Diff output requires color.
│    15ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#22
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#22(250::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:219-231
│ 
│ ```jldoctest main
│ julia> @dynamo function foo3(a...)
│          ir = IR(a...)
│          ir == nothing && return
│          recurse!(ir)
│          return ir
│        end
│ 
│ julia> foo3() do
│          prod([5, 10])
│        end
│ 15
│ ```
│ 
│ Subexpression:
│ 
│ foo3() do
│   prod([5, 10])
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#27
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#27(251::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 15
│ 
│   diff =
│    Warning: Diff output requires color.
│    15ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#27
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#27(251::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:265-276
│ 
│ ```jldoctest counter
│ julia> c = Counter()
│ Counter(0)
│ 
│ julia> c() do
│          1 + 2.0
│        end
│ 3.0
│ 
│ julia> c.count
│ 18
│ ```
│ 
│ Subexpression:
│ 
│ c() do
│   1 + 2.0
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│  [4] #s59#1
│    @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│  [5] #s59#1(c::Any, args::Any)
│    @ Main ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 3.0
│ 
│   diff =
│    Warning: Diff output requires color.
│    3.0ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] dynamo(::Any, ::Any, ::Any, ::Vararg{Any, N} where N)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:81
│     [4] #s59#1
│       @ ~/.julia/packages/IRTools/GVPoj/src/reflection/dynamo.jl:114 [inlined]
│     [5] #s59#1(c::Any, args::Any)
│       @ Main ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/dynamo.md:265-276
│ 
│ ```jldoctest counter
│ julia> c = Counter()
│ Counter(0)
│ 
│ julia> c() do
│          1 + 2.0
│        end
│ 3.0
│ 
│ julia> c.count
│ 18
│ ```
│ 
│ Subexpression:
│ 
│ c.count
│ 
│ Evaluated output:
│ 
│ 0
│ 
│ Expected output:
│ 
│ 18
│ 
│   diff =
│    Warning: Diff output requires color.
│    180
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:17-27
│ 
│ ```jldoctest main
│ julia> using IRTools
│ 
│ julia> f(x) = x+x
│ f (generic function with 1 method)
│ 
│ julia> @code_ir f(1)
│ 1: (%1, %2)
│   %3 = %2 + %2
│   return %3
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir f(1)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2)
│   %3 = %2 + %2
│   %4 = return %1
│ 
│ Expected output:
│ 
│ 1: (%1, %2)
│   %3 = %2 + %2
│   return %3
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2)
│      %3 = %2 + %2
│      %4 = return %3%1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:33-44
│ 
│ ```jldoctest main
│ julia> f(x) = 3x*x + 2x + 1
│ f (generic function with 1 method)
│ 
│ julia> @code_ir f(1)
│ 1: (%1, %2)
│   %3 = 3 * %2
│   %4 = %3 * %2
│   %5 = 2 * %2
│   %6 = %4 + %5 + 1
│   return %6
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir f(1)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2)
│   %3 = 3 * %2
│   %4 = %3 * %2
│   %5 = 2 * %2
│   %6 = %4 + %5 + 1
│   %7 = return %4
│ 
│ Expected output:
│ 
│ 1: (%1, %2)
│   %3 = 3 * %2
│   %4 = %3 * %2
│   %5 = 2 * %2
│   %6 = %4 + %5 + 1
│   return %6
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2)
│      %3 = 3 * %2
│      %4 = %3 * %2
│      %5 = 2 * %2
│      %6 = %4 + %5 + 1
│      %7 = return %6%4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:54-65
│ 
│ ```jldoctest main
│ julia> f(x) = x > 0 ? x : 0
│ f (generic function with 1 method)
│ 
│ julia> @code_ir f(1)
│ 1: (%1, %2)
│   %3 = %2 > 0
│   br 2 unless %3
│   return %2
│ 2:
│   return 0
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir f(1)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2)
│   %3 = %2 > 0
│   %4 = goto %4 if not %1
│   %5 = return _2
│   %6 = return 0
│ 
│ Expected output:
│ 
│ 1: (%1, %2)
│   %3 = %2 > 0
│   br 2 unless %3
│   return %2
│ 2:
│   return 0
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2)
│      %3 = %2 > 0
│      br 2 unless %3
│      %4 = goto %4 if not %1
│      %5 = return %2
│    2:
│      _2
│      %6 = return 0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:73-92
│ 
│ ```jldoctest main
│ julia> function f(x)
│          if x < 0
│            x = -x
│          end
│          return x
│        end
│ f (generic function with 1 method)
│ 
│ julia> @code_ir f(1)
│ 1: (%1, %2)
│   %3 = %2 < 0
│   br 3 (%2) unless %3
│   br 2
│ 2:
│   %4 = -%2
│   br 3 (%4)
│ 3: (%5)
│   return %5
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir f(1)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2)
│   %3 = %2 < 0
│   %4 = goto %5 if not %2
│   %5 = -%2
│   %6 = return _3
│ 
│ Expected output:
│ 
│ 1: (%1, %2)
│   %3 = %2 < 0
│   br 3 (%2) unless %3
│   br 2
│ 2:
│   %4 = -%2
│   br 3 (%4)
│ 3: (%5)
│   return %5
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2)
│      %3 = %2 < 0
│      br 3 (%2) unless %3
│      br 2
│    2:
│      %4 = goto %5 if not %2
│      %5 = -%2
│      br 3 (%4)
│    3: (%5)
│      %6 = return %5_3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:100-124
│ 
│ ```jldoctest main
│ julia> function pow(x, n)
│          r = 1
│          while n > 0
│            n -= 1
│            r *= x
│          end
│          return r
│        end
│ pow (generic function with 1 method)
│ 
│ julia> @code_ir pow(1, 1)
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ ```
│ 
│ Subexpression:
│ 
│ @code_ir pow(1, 1)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   %7 = goto %8 if not %3
│   %8 = %4 - 1
│   %9 = %5 * %2
│   br 2 (%8, %9)
│ 3:
│   %10 = return _4
│ 
│ Expected output:
│ 
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2, %3)
│      br 2 (%3, 1)
│    2: (%4, %5)
│      %6 = %4 > 0
│      br 4 unless %6
│      br 3
│    3:
│      %7 = goto %8 if not %3
│      %8 = %4 - 1
│      %8 %9 = %5 * %2
│      br 2 (%7, %8)
│    4:
│      (%8, %9)
│    3:
│      %10 = return %5_4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:170-184
│ 
│ ```jldoctest main
│ julia> ir = @code_ir pow(1, 1)
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ ```
│ 
│ Subexpression:
│ 
│ ir = @code_ir pow(1, 1)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   %7 = goto %8 if not %3
│   %8 = %4 - 1
│   %9 = %5 * %2
│   br 2 (%8, %9)
│ 3:
│   %10 = return _4
│ 
│ Expected output:
│ 
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2, %3)
│      br 2 (%3, 1)
│    2: (%4, %5)
│      %6 = %4 > 0
│      br 4 unless %6
│      br 3
│    3:
│      %7 = goto %8 if not %3
│      %8 = %4 - 1
│      %8 %9 = %5 * %2
│      br 2 (%7, %8)
│    4:
│      (%8, %9)
│    3:
│      %10 = return %5_4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:190-198
│ 
│ ```jldoctest main
│ julia> using IRTools: block
│ 
│ julia> block(ir, 2)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ ```
│ 
│ Subexpression:
│ 
│ block(ir, 2)
│ 
│ Evaluated output:
│ 
│ 2: (%4, %5)
│   %6 = %4 > 0
│   %7 = goto %8 if not %3
│   %8 = %4 - 1
│   %9 = %5 * %2
│   br 2 (%8, %9)
│ 
│ Expected output:
│ 
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 
│   diff =
│    Warning: Diff output requires color.
│    2: (%4, %5)
│      %6 = %4 > 0
│      br 4 unless %6
│      %7 = goto %8 if not %3
│      %8 = %4 - 1
│      %9 = %5 * %2
│      br 32 (%8, %9)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:204-222
│ 
│ ```jldoctest eval
│ julia> using IRTools
│ 
│ julia> using IRTools: IR, argument!, return!, xcall, func
│ 
│ julia> ir = IR();
│ 
│ julia> x = argument!(ir);
│ 
│ julia> y = push!(ir, xcall(:*, x, x));
│ 
│ julia> return!(ir, y)
│ 1: (%1)
│   %2 = %1 * %1
│   return %2
│ 
│ julia> IRTools.evalir(ir, 5)
│ 25
│ ```
│ 
│ Subexpression:
│ 
│ IRTools.evalir(ir, 5)
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│   [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│     @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│   [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│   [3] build_codeinfo(ir::IRTools.Inner.IR)
│     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
│   [4] #s60#280
│     @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
│   [5] #s60#280(::Any, arg1::Any)
│     @ IRTools.Inner ./none:0
│   [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│     @ Core ./boot.jl:571
│   [7] #invokelatest#2
│     @ ./essentials.jl:709 [inlined]
│   [8] invokelatest
│     @ ./essentials.jl:708 [inlined]
│   [9] evalir(m::Module, ir::IRTools.Inner.IR, args::Any)
│     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:25
│  [10] evalir(ir::IRTools.Inner.IR, args::Any)
│     @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:26
│  [11] top-level scope
│     @ none:1
│ 
│ Expected output:
│ 
│ 25
│ 
│   diff =
│    Warning: Diff output requires color.
│    25ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│      [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│        @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│      [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│      [3] build_codeinfo(ir::IRTools.Inner.IR)
│        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
│      [4] #s60#280
│        @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
│      [5] #s60#280(::Any, arg1::Any)
│        @ IRTools.Inner ./none:0
│      [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│        @ Core ./boot.jl:571
│      [7] #invokelatest#2
│        @ ./essentials.jl:709 [inlined]
│      [8] invokelatest
│        @ ./essentials.jl:708 [inlined]
│      [9] evalir(m::Module, ir::IRTools.Inner.IR, args::Any)
│        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:25
│     [10] evalir(ir::IRTools.Inner.IR, args::Any)
│        @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:26
│     [11] top-level scope
│        @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:251-286
│ 
│ ```jldoctest
│ julia> using IRTools: IR, @code_ir, xcall, func, var
│ 
│ julia> function pow(x, n)
│          r = 1
│          while n > 0
│            n -= 1
│            r *= x
│          end
│          return r
│        end
│ pow (generic function with 1 method)
│ 
│ julia> ir = @code_ir pow(2, 3)
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ 
│ 
│ julia> ir[var(8)] = xcall(:+, var(5), var(2))
│ :(%5 + %2)
│ 
│ julia> mul = func(ir);
│ 
│ julia> mul(nothing, 10, 3)
│ 31
│ ```
│ 
│ Subexpression:
│ 
│ ir = @code_ir pow(2, 3)
│ 
│ Evaluated output:
│ 
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   %7 = goto %8 if not %3
│   %8 = %4 - 1
│   %9 = %5 * %2
│   br 2 (%8, %9)
│ 3:
│   %10 = return _4
│ 
│ Expected output:
│ 
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ 
│   diff =
│    Warning: Diff output requires color.
│    1: (%1, %2, %3)
│      br 2 (%3, 1)
│    2: (%4, %5)
│      %6 = %4 > 0
│      br 4 unless %6
│      br 3
│    3:
│      %7 = goto %8 if not %3
│      %8 = %4 - 1
│      %8 %9 = %5 * %2
│      br 2 (%7, %8)
│    4:
│      (%8, %9)
│    3:
│      %10 = return %5_4
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/IRTools/GVPoj/docs/src/index.md:251-286
│ 
│ ```jldoctest
│ julia> using IRTools: IR, @code_ir, xcall, func, var
│ 
│ julia> function pow(x, n)
│          r = 1
│          while n > 0
│            n -= 1
│            r *= x
│          end
│          return r
│        end
│ pow (generic function with 1 method)
│ 
│ julia> ir = @code_ir pow(2, 3)
│ 1: (%1, %2, %3)
│   br 2 (%3, 1)
│ 2: (%4, %5)
│   %6 = %4 > 0
│   br 4 unless %6
│   br 3
│ 3:
│   %7 = %4 - 1
│   %8 = %5 * %2
│   br 2 (%7, %8)
│ 4:
│   return %5
│ 
│ 
│ julia> ir[var(8)] = xcall(:+, var(5), var(2))
│ :(%5 + %2)
│ 
│ julia> mul = func(ir);
│ 
│ julia> mul(nothing, 10, 3)
│ 31
│ ```
│ 
│ Subexpression:
│ 
│ mul(nothing, 10, 3)
│ 
│ Evaluated output:
│ 
│ ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│ Stacktrace:
│  [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│    @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│  [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│  [3] build_codeinfo(ir::IRTools.Inner.IR)
│    @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
│  [4] #s60#281
│    @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
│  [5] #s60#281(::Any, arg1::Any, arg2::Any, arg3::Any)
│    @ IRTools.Inner ./none:0
│  [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│    @ Core ./boot.jl:571
│  [7] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ 31
│ 
│   diff =
│    Warning: Diff output requires color.
│    31ERROR: MethodError: no method matching Core.Compiler.IRCode(::Vector{Any}, ::Vector{Any}, ::Vector{Int32}, ::Vector{UInt8}, ::Core.Compiler.CFG, ::Vector{Core.LineInfoNode}, ::Vector{Any}, ::Vector{Any}, ::Vector{Any})
│    Stacktrace:
│     [1] Core.Compiler.IRCode(ir::IRTools.Inner.IR)
│       @ IRTools.Inner.Wrap ~/.julia/packages/IRTools/GVPoj/src/ir/wrap.jl:55
│     [2] update!(ci::Core.CodeInfo, ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/reflection/utils.jl:143
│     [3] build_codeinfo(ir::IRTools.Inner.IR)
│       @ IRTools.Inner ~/.julia/packages/IRTools/GVPoj/src/eval.jl:14
│     [4] #s60#281
│       @ ~/.julia/packages/IRTools/GVPoj/src/eval.jl:19 [inlined]
│     [5] #s60#281(::Any, arg1::Any, arg2::Any, arg3::Any)
│       @ IRTools.Inner ./none:0
│     [6] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any, N} where N)
│       @ Core ./boot.jl:571
│     [7] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/pjwqp/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/pjwqp/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/pjwqp/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:241 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:240
│      [7] (::Documenter.var"#all_doctests#31"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:802
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:761
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:748
│     [13] top-level scope
│        @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:25
│     [14] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [15] top-level scope
│        @ ~/.julia/packages/IRTools/GVPoj/test/runtests.jl:5
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:811
Doctests: IRTools: Test Failed at /home/pkgeval/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/pjwqp/src/Documenter.jl:818
Test Summary:       | Pass  Fail  Error  Broken  Total
IRTools             |    7     9     23       1     40
  IR                |    2            4              6
  Analysis          |          2      1              3
  Reflection        |    3                           3
  Compiler          |    2           17       1     20
  Relooper          |          6      1              7
  Doctests: IRTools |          1                     1
ERROR: LoadError: Some tests did not pass: 7 passed, 9 failed, 23 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/IRTools/GVPoj/test/runtests.jl:3
ERROR: Package IRTools errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
