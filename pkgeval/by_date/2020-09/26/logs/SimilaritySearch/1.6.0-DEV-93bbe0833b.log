Julia Version 1.6.0-DEV.1063
Commit 93bbe0833b (2020-09-26 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed Parsers ──────────── v1.0.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_Oku8HK/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Oku8HK/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(11, 0.00859201f0), Item(14, 0.020417094f0), Item(44, 0.029794931f0), Item(17, 0.04765308f0)])
Vsorted = Item[Item(11, 0.00859201f0), Item(14, 0.020417094f0), Item(44, 0.029794931f0), Item(17, 0.04765308f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0036506414413452148, 0.004036132494608561, 301.0, 48.91542705707252))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003282626469930013, 0.0030762990315755206, 301.0, 70.86316227912903))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004357067743937174, 0.003374965985616048, 301.0, 39.83056390285492))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0034344991048177085, 0.0037485361099243164, 301.0, 8.800672056968324))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.002897906303405762, 0.005551870663960775, 301.0, 44.2948223631829))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 3.7606557210286455e-5, 2.00351079305013e-5, 301.0, 174.17895271629095))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 3.639856974283854e-5, 0.009168704350789389, 300.0, 30.45404445193708)
p = PerformanceResult(1.0, 1.0, 1.0, 3.5595893859863284e-5, 1.8564860026041665e-5, 300.0, 30.45404445193708)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0031415383021036786, 0.0029253005981445313, 300.0, 1.9257584705810586)
p = PerformanceResult(1.0, 1.0, 1.0, 2.9910935295952693e-5, 1.4201800028483074e-5, 300.0, 1.9257584705810586)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 3.639856974283854e-5, 0.009168704350789389, 300.0, 30.45404445193708), PerformanceResult(1.0, 1.0, 1.0, 3.5595893859863284e-5, 1.8564860026041665e-5, 300.0, 30.45404445193708), PerformanceResult(1.0, 1.0, 1.0, 0.0031415383021036786, 0.0029253005981445313, 300.0, 1.9257584705810586), PerformanceResult(1.0, 1.0, 1.0, 2.9910935295952693e-5, 1.4201800028483074e-5, 300.0, 1.9257584705810586))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 125.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00750882625579834, 0.0030829668045043944, 347.46666666666664, 28712.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.006657266616821289, 0.0029452959696451824, 303.03333333333336, 6929.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.9534428914388022e-5, 1.1197725931803386e-5, 100.13333333333334, 49.17585811577737))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 3.0422210693359374e-5, 7.39892323811849e-6, 86.33333333333333, 71.31572723388672))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6154518127441407e-5, 1.6729036966959637e-5, 92.33333333333333, 40.019723415374756))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 5.184809366861979e-5, 8.280277252197266e-5, 101.73333333333333, 44.51035240851343))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8433333333333333, 0.8433333333333333, 0.8433333333333333, 2.723534901936849e-5, 3.623167673746745e-5, 70.6, 182.5068887323141))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-26T18:34:33.624
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9149206349206349, 0.905, 0.90843874391862, 1.5342235565185546e-5, 1.3527870178222657e-5, 154.25, 50.545451554469764))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.4791488647460937e-5, 9.551048278808594e-6, 157.76, 0.0))
*** advance 1 from 1000; 2020-09-26T18:34:34.157
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8891111111111111, 0.8850000000000001, 0.8869473684210526, 2.602577209472656e-5, 3.139972686767578e-5, 152.78, 77.24814892979339))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6311874389648437e-5, 2.2199153900146484e-5, 156.29, 0.0))
*** advance 1 from 1000; 2020-09-26T18:34:34.648
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8887500000000002, 0.8660000000000001, 0.8725641025641027, 2.2125244140625e-5, 2.424001693725586e-5, 156.26, 40.77711143763736))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2788047790527343e-5, 2.895832061767578e-5, 160.28, 0.0))
*** advance 1 from 1000; 2020-09-26T18:34:35.123
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9132261904761906, 0.9060000000000001, 0.9089101307189543, 3.966093063354492e-5, 0.0001889801025390625, 154.37, 45.668162129528355))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 6.492853164672851e-5, 0.0002475285530090332, 157.83, 0.0))
*** advance 1 from 1000; 2020-09-26T18:34:35.493
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8645555555555557, 0.8630000000000001, 0.8637368421052634, 2.0263195037841796e-5, 5.2258968353271484e-5, 152.81, 208.3221126589924))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 2.9261112213134767e-5, 6.659030914306641e-5, 156.17, 0.0))
*** advance 1 from 1000; 2020-09-26T18:34:36.121
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9149206349206349, 0.905, 0.90843874391862, 3.8793087005615236e-5, 7.776975631713867e-5, 154.25, 50.556886930717155))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.15403938293457e-5, 6.594181060791015e-5, 157.76, 0.020569901884300634))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:37.630
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.723, 0.723, 0.723, 0.0012662029266357422, 6.016016006469727e-5, 203.82, 197.85000222921371))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:38.443
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.726, 0.726, 0.726, 0.001268141269683838, 5.856990814208984e-5, 207.61, 113.47777996957302))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:39.108
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6270000000000003, 0.6270000000000003, NaN, 0.0012134552001953126, 5.794048309326172e-5, 289.9, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:39.732
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9440000000000001, 0.9440000000000001, 0.9440000000000001, 0.0011682772636413573, 1.1088848114013671e-5, 216.53, 608.0000202059746))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:40.507
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.6119999999999999, 0.6119999999999999, 0.6119999999999999, 0.001346254348754883, 0.0003121495246887207, 252.27, 2299.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:41.230
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.37899999999999984, 0.37899999999999984, 0.37899999999999984, 0.001370241641998291, 0.0003906702995300293, 245.71, 3684.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-26T18:34:41.915
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6029999999999995, 0.6029999999999995, 0.6029999999999995, 0.00117401123046875, 1.6989707946777345e-5, 243.57, 2339.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0686456400742115, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586538461538466,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.421875,"distances_sum":618.2422045171261}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.088846880907372, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9482200091575097,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.265625,"distances_sum":599.6173357069492}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.088846880907372,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9482200091575097,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.265625,"distances_sum":599.6173357069492}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.088846880907372,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9482200091575097,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.265625,"distances_sum":599.6173357069492}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.088846880907372,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9482200091575097,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.265625,"distances_sum":599.6173357069492}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8624338624338623, conf: {"restarts":9}, perf: {"precision":0.9088541666666656,"recall":0.9088541666666656,"f1":0.9088541666666656,"seconds":1.5309080481529236e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":53.15625,"distances_sum":302.23103461414576}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.89236111111111, conf: {"restarts":6}, perf: {"precision":0.89236111111111,"recall":0.89236111111111,"f1":0.89236111111111,"seconds":1.301988959312439e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":45.25,"distances_sum":303.8137739226222}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.812097812097812, conf: {"restarts":10}, perf: {"precision":0.9114583333333321,"recall":0.9114583333333321,"f1":0.9114583333333321,"seconds":1.60951167345047e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":54.6328125,"distances_sum":301.6551377847791}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.964346612928228, conf: {"restarts":8}, perf: {"precision":0.9210069444444433,"recall":0.9210069444444433,"f1":0.9210069444444433,"seconds":1.485086977481842e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":50.3984375,"distances_sum":301.00776494294405}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.964346612928228,"state":{"restarts":8},"perf":{"precision":0.9210069444444433,"recall":0.9210069444444433,"f1":0.9210069444444433,"seconds":1.485086977481842e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":50.3984375,"distances_sum":301.00776494294405}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.0301185517462352, conf: {"restarts":7}, perf: {"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":1.4252960681915283e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":48.765625,"distances_sum":302.5697297975421}, best_list's length: 7, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0301185517462352,"state":{"restarts":7},"perf":{"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":1.4252960681915283e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":48.765625,"distances_sum":302.5697297975421}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0301185517462352,"state":{"restarts":7},"perf":{"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":1.4252960681915283e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":48.765625,"distances_sum":302.5697297975421}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.0301185517462352,"state":{"restarts":7},"perf":{"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":1.4252960681915283e-5,"exhaustive_search_seconds":4.55416738986969e-6,"evaluations":48.765625,"distances_sum":302.5697297975421}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8741319444444434,"state":{"restarts":7},"perf":{"precision":0.8741319444444434,"recall":0.8741319444444434,"f1":0.8741319444444434,"seconds":2.6298686861991882e-5,"exhaustive_search_seconds":1.5202909708023071e-5,"evaluations":108.421875,"distances_sum":124.45364342350513}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8741319444444434,"state":{"restarts":7},"perf":{"precision":0.8741319444444434,"recall":0.8741319444444434,"f1":0.8741319444444434,"seconds":2.6298686861991882e-5,"exhaustive_search_seconds":1.5202909708023071e-5,"evaluations":108.421875,"distances_sum":124.45364342350513}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8532986111111102, conf: {"restarts":3}, perf: {"precision":0.8532986111111102,"recall":0.8532986111111102,"f1":0.8532986111111102,"seconds":5.60171902179718e-5,"exhaustive_search_seconds":0.0001906082034111023,"evaluations":148.59375,"distances_sum":57.68578292103484}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777767, conf: {"restarts":5}, perf: {"precision":0.8559027777777767,"recall":0.8559027777777767,"f1":0.8559027777777767,"seconds":0.00018097460269927979,"exhaustive_search_seconds":0.0001906082034111023,"evaluations":161.40625,"distances_sum":57.77400377811864}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8559027777777767,"state":{"restarts":5},"perf":{"precision":0.8559027777777767,"recall":0.8559027777777767,"f1":0.8559027777777767,"seconds":0.00018097460269927979,"exhaustive_search_seconds":0.0001906082034111023,"evaluations":161.40625,"distances_sum":57.77400377811864}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8559027777777767,"state":{"restarts":5},"perf":{"precision":0.8559027777777767,"recall":0.8559027777777767,"f1":0.8559027777777767,"seconds":0.00018097460269927979,"exhaustive_search_seconds":0.0001906082034111023,"evaluations":161.40625,"distances_sum":57.77400377811864}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(5), SatNeighborhood(32), 2020-09-26T18:34:46.989
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1078, 0.03278024f0), Item(9598, 0.03476999f0), Item(96, 0.040529042f0), Item(2298, 0.04587661f0), Item(4688, 0.050965983f0), Item(2735, 0.05633404f0), Item(6826, 0.05635019f0), Item(7090, 0.058655098f0), Item(6185, 0.06153955f0), Item(5482, 0.063466735f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9400162337662342,"seconds":0.0026868656277656555,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.1953125,"distances_sum":579.4352873563766}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9400162337662342,"seconds":0.0026868656277656555,"exhaustive_search_seconds":1.773238182067871e-6,"evaluations":8.1953125,"distances_sum":579.4352873563766}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1483229813664595,"state":{"bsize":3},"perf":{"precision":0.9835069444444442,"recall":0.9835069444444442,"f1":0.9835069444444442,"seconds":9.683892130851746e-6,"exhaustive_search_seconds":4.429370164871216e-6,"evaluations":31.4453125,"distances_sum":292.81099006161094}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.1483229813664595,"state":{"bsize":3},"perf":{"precision":0.9835069444444442,"recall":0.9835069444444442,"f1":0.9835069444444442,"seconds":9.683892130851746e-6,"exhaustive_search_seconds":4.429370164871216e-6,"evaluations":31.4453125,"distances_sum":292.81099006161094}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.072363150867822,"state":{"bsize":3},"perf":{"precision":0.9687499999999996,"recall":0.9687499999999996,"f1":0.9687499999999996,"seconds":1.7251819372177124e-5,"exhaustive_search_seconds":1.5523284673690796e-5,"evaluations":58.515625,"distances_sum":121.69118693377823}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.072363150867822,"state":{"bsize":3},"perf":{"precision":0.9687499999999996,"recall":0.9687499999999996,"f1":0.9687499999999996,"seconds":1.7251819372177124e-5,"exhaustive_search_seconds":1.5523284673690796e-5,"evaluations":58.515625,"distances_sum":121.69118693377823}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.12978819287967, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.157610237598419e-5,"exhaustive_search_seconds":0.00018635205924510956,"evaluations":104.015625,"distances_sum":53.37461347482167}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.12978819287967,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":4.157610237598419e-5,"exhaustive_search_seconds":0.00018635205924510956,"evaluations":104.015625,"distances_sum":53.37461347482167}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.94688910997168, conf: {"bsize":8}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.039891064167023e-5,"exhaustive_search_seconds":0.00018635205924510956,"evaluations":102.0859375,"distances_sum":53.37198492488824}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.94688910997168,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.039891064167023e-5,"exhaustive_search_seconds":0.00018635205924510956,"evaluations":102.0859375,"distances_sum":53.37198492488824}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.94688910997168,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.039891064167023e-5,"exhaustive_search_seconds":0.00018635205924510956,"evaluations":102.0859375,"distances_sum":53.37198492488824}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.94688910997168,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":4.039891064167023e-5,"exhaustive_search_seconds":0.00018635205924510956,"evaluations":102.0859375,"distances_sum":53.37198492488824}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(8), SatNeighborhood(32), 2020-09-26T18:34:49.919
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4777, 0.033715226f0), Item(7409, 0.054670006f0), Item(2737, 0.057733994f0), Item(6229, 0.07054381f0), Item(5170, 0.07216408f0), Item(3569, 0.07246158f0), Item(327, 0.07367649f0), Item(7292, 0.075906396f0), Item(5813, 0.0759485f0), Item(1387, 0.08193391f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
