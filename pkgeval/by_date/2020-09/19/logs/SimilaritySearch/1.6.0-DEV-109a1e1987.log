Julia Version 1.6.0-DEV.968
Commit 109a1e1987 (2020-09-18 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.4
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed SortingAlgorithms ── v0.3.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_YPg2kw/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_YPg2kw/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(32, 0.0066714287f0), Item(45, 0.0132267475f0), Item(40, 0.027361989f0), Item(15, 0.027772903f0)])
Vsorted = Item[Item(32, 0.0066714287f0), Item(45, 0.0132267475f0), Item(40, 0.027361989f0), Item(15, 0.027772903f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004651967684427897, 0.004738704363505045, 301.0, 49.0135788526386))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005512102444966634, 0.006191102663675944, 301.0, 71.56481003761292))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005547730127970377, 0.005293599764506022, 301.0, 39.73818838596344))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039827903111775715, 0.0040463685989379885, 301.0, 8.734947904536966))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0042389710744222, 0.005597901344299316, 301.0, 44.258163349702954))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00019184748331705728, 0.00013889471689860027, 301.0, 177.7098324596882))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.41028086344401e-5, 0.010359907150268554, 300.0, 28.690847618039697)
p = PerformanceResult(1.0, 1.0, 1.0, 6.34908676147461e-5, 3.036657969156901e-5, 300.0, 28.690847618039697)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0039594093958536785, 0.004115001360575358, 300.0, 1.6080304518673074)
p = PerformanceResult(1.0, 1.0, 1.0, 4.492865668402778e-5, 2.1139780680338543e-5, 300.0, 1.6080304518673074)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.41028086344401e-5, 0.010359907150268554, 300.0, 28.690847618039697), PerformanceResult(1.0, 1.0, 1.0, 6.34908676147461e-5, 3.036657969156901e-5, 300.0, 28.690847618039697), PerformanceResult(1.0, 1.0, 1.0, 0.0039594093958536785, 0.004115001360575358, 300.0, 1.6080304518673074), PerformanceResult(1.0, 1.0, 1.0, 4.492865668402778e-5, 2.1139780680338543e-5, 300.0, 1.6080304518673074))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008677013715108236, 0.003946836789449056, 348.46666666666664, 28729.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008010323842366536, 0.003296303749084473, 303.8666666666667, 6945.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2745132446289064e-5, 1.2501080830891926e-5, 95.83333333333333, 48.99191070906818))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.208550771077474e-5, 1.0967254638671875e-5, 86.2, 71.54918146133423))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8586387634277345e-5, 1.5664100646972657e-5, 90.4, 39.74603092670441))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00013250509897867838, 0.00019263426462809246, 95.93333333333334, 44.234746837988496))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8333333333333335, 0.8333333333333335, 0.8333333333333335, 0.00010562737782796225, 0.00012923081715901692, 71.2, 185.26278859376907))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-20T06:51:32.238
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.8910833333333332, 0.8839999999999998, 0.8869751461988301, 2.149343490600586e-5, 2.2990703582763674e-5, 149.86, 55.25209993496537))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.126455307006836e-5, 1.8558502197265626e-5, 153.45, 0.0))
*** advance 1 from 1000; 2020-09-20T06:51:33.051
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.8776428571428571, 0.871, 0.8738823529411764, 2.4585723876953126e-5, 4.2369365692138674e-5, 150.56, 82.06117724999785))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4018287658691405e-5, 2.6400089263916017e-5, 154.14, 0.0))
*** advance 1 from 1000; 2020-09-20T06:51:33.815
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9690000000000001, 0.9690000000000001, 0.9690000000000001, 2.752542495727539e-5, 3.877878189086914e-5, 165.74, 43.44295465014875))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4771690368652345e-5, 3.200054168701172e-5, 170.59, 0.0))
*** advance 1 from 1000; 2020-09-20T06:51:34.488
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8800833333333332, 0.873, 0.8759751461988304, 9.92751121520996e-5, 0.0005070710182189941, 150.5, 49.72069579316303))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.777545928955079e-5, 0.0006606101989746094, 154.03, 0.0))
*** advance 1 from 1000; 2020-09-20T06:51:35.120
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8771428571428573, 0.8750000000000001, 0.8758823529411766, 9.534835815429688e-5, 0.00043057918548583985, 150.79, 212.87882497627288))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010082006454467774, 0.0005356287956237793, 154.29, 0.0))
*** advance 1 from 1000; 2020-09-20T06:51:36.352
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.8910833333333332, 0.8839999999999998, 0.8869751461988301, 3.516674041748047e-5, 7.402896881103516e-5, 149.86, 55.26700223260559))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.404617309570313e-5, 6.870031356811523e-5, 153.45, 0.015653813839890063))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:38.886
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.752, 0.752, 0.752, 0.0016805911064147949, 8.188962936401368e-5, 204.47, 187.70000222325325))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:40.016
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.768, 0.768, 0.768, 0.001663076877593994, 0.00011552095413208007, 212.05, 106.36825577169657))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:40.930
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6379999999999999, 0.6379999999999999, 0.6379999999999999, 0.0015438151359558104, 7.318973541259766e-5, 255.89, 3.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:41.741
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.943, 0.941, 0.9418888888888888, 0.0015047669410705566, 1.935005187988281e-5, 222.21, 608.2000204622746))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:42.877
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.575, 0.575, 0.575, 0.0021589517593383787, 0.0005264616012573242, 267.41, 2363.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:43.941
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.366, 0.366, NaN, 0.0018003416061401368, 0.00031722068786621093, 251.14, 3660.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-20T06:51:45.097
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5759999999999997, 0.5759999999999997, 0.5759999999999997, 0.002266721725463867, 3.260135650634766e-5, 252.9, 2391.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.062730627306273,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9636904761904768,"seconds":0.002543354406952858,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.46875,"distances_sum":602.58689057827}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.062730627306273,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9636904761904768,"seconds":0.002543354406952858,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.46875,"distances_sum":602.58689057827}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6781883194278904, conf: {"restarts":12}, perf: {"precision":0.916666666666666,"recall":0.916666666666666,"f1":0.916666666666666,"seconds":2.501159906387329e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":58.9921875,"distances_sum":296.25253765657544}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8640776699029127, conf: {"restarts":9}, perf: {"precision":0.9253472222222213,"recall":0.9253472222222213,"f1":0.9253472222222213,"seconds":2.2742897272109985e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":53.109375,"distances_sum":296.1150814034045}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.5851888916687518, conf: {"restarts":15}, perf: {"precision":0.9079861111111102,"recall":0.9079861111111102,"f1":0.9079861111111102,"seconds":2.5944784283638e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":62.453125,"distances_sum":296.85536420717835}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6038476142260474, conf: {"restarts":14}, perf: {"precision":0.9236111111111105,"recall":0.9236111111111105,"f1":0.9236111111111105,"seconds":2.6425346732139587e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":61.7265625,"distances_sum":296.8328466452658}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.806672369546621, conf: {"restarts":10}, perf: {"precision":0.9027777777777769,"recall":0.9027777777777769,"f1":0.9027777777777769,"seconds":2.3039057850837708e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":54.796875,"distances_sum":297.7673640884459}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8640776699029127,"state":{"restarts":9},"perf":{"precision":0.9253472222222213,"recall":0.9253472222222213,"f1":0.9253472222222213,"seconds":2.2742897272109985e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":53.109375,"distances_sum":296.1150814034045}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8640776699029127,"state":{"restarts":9},"perf":{"precision":0.9253472222222213,"recall":0.9253472222222213,"f1":0.9253472222222213,"seconds":2.2742897272109985e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":53.109375,"distances_sum":296.1150814034045}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8640776699029127,"state":{"restarts":9},"perf":{"precision":0.9253472222222213,"recall":0.9253472222222213,"f1":0.9253472222222213,"seconds":2.2742897272109985e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":53.109375,"distances_sum":296.1150814034045}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777767, conf: {"restarts":15}, perf: {"precision":0.8559027777777767,"recall":0.8559027777777767,"f1":0.8559027777777767,"seconds":5.394592881202698e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":160.1640625,"distances_sum":124.01598519249819}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8532986111111099, conf: {"restarts":6}, perf: {"precision":0.8532986111111099,"recall":0.8532986111111099,"f1":0.8532986111111099,"seconds":3.6016106605529785e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":103.6640625,"distances_sum":123.71635910286568}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777766, conf: {"restarts":10}, perf: {"precision":0.8559027777777766,"recall":0.8559027777777766,"f1":0.8559027777777766,"seconds":4.238635301589966e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":129.1015625,"distances_sum":123.76158016338013}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555544, conf: {"restarts":19}, perf: {"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":6.415881216526031e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":182.3671875,"distances_sum":123.70327666937374}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555544,"state":{"restarts":19},"perf":{"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":6.415881216526031e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":182.3671875,"distances_sum":123.70327666937374}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8888888888888877, conf: {"restarts":26}, perf: {"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":0.00010494887828826904,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":220.296875,"distances_sum":122.34193794592284}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.866319444444443, conf: {"restarts":29}, perf: {"precision":0.866319444444443,"recall":0.866319444444443,"f1":0.866319444444443,"seconds":7.845088839530945e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":239.3515625,"distances_sum":122.95194499357603}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8611111111111099, conf: {"restarts":20}, perf: {"precision":0.8611111111111099,"recall":0.8611111111111099,"f1":0.8611111111111099,"seconds":0.0001036226749420166,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":190.1015625,"distances_sum":123.54374201013707}, best_list's length: 7, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999991, conf: {"restarts":27}, perf: {"precision":0.8671874999999991,"recall":0.8671874999999991,"f1":0.8671874999999991,"seconds":8.044950664043427e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":228.0625,"distances_sum":123.15805969550274}, best_list's length: 8, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.86111111111111, conf: {"restarts":23}, perf: {"precision":0.86111111111111,"recall":0.86111111111111,"f1":0.86111111111111,"seconds":8.262693881988525e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":207.7265625,"distances_sum":123.36942688911222}, best_list's length: 9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777767, conf: {"restarts":18}, perf: {"precision":0.8637152777777767,"recall":0.8637152777777767,"f1":0.8637152777777767,"seconds":6.769038736820221e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":181.421875,"distances_sum":123.4191179589834}, best_list's length: 10, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555544, conf: {"restarts":24}, perf: {"precision":0.8758680555555544,"recall":0.8758680555555544,"f1":0.8758680555555544,"seconds":7.833540439605713e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":212.40625,"distances_sum":122.94549507810734}, best_list's length: 12, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333324, conf: {"restarts":13}, perf: {"precision":0.8645833333333324,"recall":0.8645833333333324,"f1":0.8645833333333324,"seconds":5.714036524295807e-5,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":150.0234375,"distances_sum":123.64607764943503}, best_list's length: 13, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8888888888888877,"state":{"restarts":26},"perf":{"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":0.00010494887828826904,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":220.296875,"distances_sum":122.34193794592284}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8888888888888877,"state":{"restarts":26},"perf":{"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":0.00010494887828826904,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":220.296875,"distances_sum":122.34193794592284}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8888888888888877,"state":{"restarts":26},"perf":{"precision":0.8888888888888877,"recall":0.8888888888888877,"f1":0.8888888888888877,"seconds":0.00010494887828826904,"exhaustive_search_seconds":2.7906149625778198e-5,"evaluations":220.296875,"distances_sum":122.34193794592284}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.865451388888888,"state":{"restarts":26},"perf":{"precision":0.865451388888888,"recall":0.865451388888888,"f1":null,"seconds":0.00026303157210350037,"exhaustive_search_seconds":0.00035631097853183746,"evaluations":344.0859375,"distances_sum":54.92559391353279}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.865451388888888,"state":{"restarts":26},"perf":{"precision":0.865451388888888,"recall":0.865451388888888,"f1":null,"seconds":0.00026303157210350037,"exhaustive_search_seconds":0.00035631097853183746,"evaluations":344.0859375,"distances_sum":54.92559391353279}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(26), SatNeighborhood(32), 2020-09-20T06:51:52.754
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6639, 0.020566732f0), Item(7548, 0.026862802f0), Item(2042, 0.027331717f0), Item(7846, 0.032221373f0), Item(6208, 0.034621567f0), Item(5114, 0.04029517f0), Item(248, 0.046504237f0), Item(7888, 0.05061617f0), Item(3331, 0.056040302f0), Item(1101, 0.05970077f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0530164533820843,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9694940476190479,"seconds":0.0036218538880348206,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.546875,"distances_sum":608.0516487658024}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0530164533820843,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9694940476190479,"seconds":0.0036218538880348206,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.546875,"distances_sum":608.0516487658024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.11887767659365, conf: {"bsize":2}, perf: {"precision":0.9600694444444438,"recall":0.9600694444444438,"f1":0.9600694444444438,"seconds":1.488998532295227e-5,"exhaustive_search_seconds":6.81169331073761e-6,"evaluations":31.7421875,"distances_sum":286.14397766813636}, best_list's length: 3, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.11887767659365,"state":{"bsize":2},"perf":{"precision":0.9600694444444438,"recall":0.9600694444444438,"f1":0.9600694444444438,"seconds":1.488998532295227e-5,"exhaustive_search_seconds":6.81169331073761e-6,"evaluations":31.7421875,"distances_sum":286.14397766813636}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.11887767659365,"state":{"bsize":2},"perf":{"precision":0.9600694444444438,"recall":0.9600694444444438,"f1":0.9600694444444438,"seconds":1.488998532295227e-5,"exhaustive_search_seconds":6.81169331073761e-6,"evaluations":31.7421875,"distances_sum":286.14397766813636}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.11887767659365,"state":{"bsize":2},"perf":{"precision":0.9600694444444438,"recall":0.9600694444444438,"f1":0.9600694444444438,"seconds":1.488998532295227e-5,"exhaustive_search_seconds":6.81169331073761e-6,"evaluations":31.7421875,"distances_sum":286.14397766813636}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.210953346855984,"state":{"bsize":2},"perf":{"precision":0.9418402777777767,"recall":0.9418402777777767,"f1":0.9418402777777767,"seconds":2.7582049369812012e-5,"exhaustive_search_seconds":2.763979136943817e-5,"evaluations":61.625,"distances_sum":122.75125597789884}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.210953346855984,"state":{"bsize":2},"perf":{"precision":0.9418402777777767,"recall":0.9418402777777767,"f1":0.9418402777777767,"seconds":2.7582049369812012e-5,"exhaustive_search_seconds":2.763979136943817e-5,"evaluations":61.625,"distances_sum":122.75125597789884}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.78427016218617, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":6.45611435174942e-5,"exhaustive_search_seconds":0.0003749467432498932,"evaluations":105.4921875,"distances_sum":53.75012092059478}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.81938064898503, conf: {"bsize":3}, perf: {"precision":0.9748263888888884,"recall":0.9748263888888884,"f1":0.9748263888888884,"seconds":5.827657878398895e-5,"exhaustive_search_seconds":0.0003749467432498932,"evaluations":105.453125,"distances_sum":53.89523184066638}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.43842747261284, conf: {"bsize":4}, perf: {"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":5.848146975040436e-5,"exhaustive_search_seconds":0.0003749467432498932,"evaluations":100.5546875,"distances_sum":53.772478175815195}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.43842747261284,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":5.848146975040436e-5,"exhaustive_search_seconds":0.0003749467432498932,"evaluations":100.5546875,"distances_sum":53.772478175815195}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.43842747261284,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":5.848146975040436e-5,"exhaustive_search_seconds":0.0003749467432498932,"evaluations":100.5546875,"distances_sum":53.772478175815195}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.43842747261284,"state":{"bsize":4},"perf":{"precision":0.9930555555555554,"recall":0.9930555555555554,"f1":0.9930555555555554,"seconds":5.848146975040436e-5,"exhaustive_search_seconds":0.0003749467432498932,"evaluations":100.5546875,"distances_sum":53.772478175815195}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(4), SatNeighborhood(32), 2020-09-20T06:51:56.775
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(8160, 0.04218704f0), Item(6311, 0.04370642f0), Item(333, 0.04734301f0), Item(3263, 0.0485994f0), Item(85, 0.056525093f0), Item(6731, 0.066854395f0), Item(4657, 0.068829045f0), Item(8665, 0.0720825f0), Item(6414, 0.07288856f0), Item(5129, 0.07354701f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
