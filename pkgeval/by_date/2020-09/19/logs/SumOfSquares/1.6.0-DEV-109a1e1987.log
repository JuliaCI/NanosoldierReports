Julia Version 1.6.0-DEV.968
Commit 109a1e1987 (2020-09-18 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed Bzip2_jll ──────────────────── v1.0.6+4
  Installed Compat ─────────────────────── v2.2.1
  Installed MultivariateMoments ────────── v0.3.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed PolyJuMP ───────────────────── v0.4.1
  Installed StaticArrays ───────────────── v0.12.4
  Installed SumOfSquares ───────────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed NaNMath ────────────────────── v0.3.4
  Installed Calculus ───────────────────── v0.5.1
  Installed OrderedCollections ─────────── v1.3.1
  Installed IniFile ────────────────────── v0.5.0
  Installed CodecZlib ──────────────────── v0.7.0
  Installed MutableArithmetics ─────────── v0.2.10
  Installed Parsers ────────────────────── v1.0.10
  Installed JuMP ───────────────────────── v0.21.4
  Installed MbedTLS_jll ────────────────── v2.16.8+0
  Installed RowEchelon ─────────────────── v0.1.1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Reexport ───────────────────── v0.2.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed ForwardDiff ────────────────── v0.10.12
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed JSON ───────────────────────── v0.21.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SemialgebraicSets ──────────── v0.2.1
  Installed MbedTLS ────────────────────── v1.0.2
  Installed CodecBzip2 ─────────────────── v0.7.2
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DiffResults ────────────────── v1.0.2
  Installed MultivariateBases ──────────── v0.1.2
  Installed MathOptInterface ───────────── v0.9.16
  Installed JSONSchema ─────────────────── v0.3.2
  Installed ZipFile ────────────────────── v0.9.2
  Installed TranscodingStreams ─────────── v0.9.5
  Installed MultivariatePolynomials ────── v0.3.10
  Installed HTTP ───────────────────────── v0.8.19
  Installed DataStructures ─────────────── v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [4b9e565b] + SumOfSquares v0.4.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.5.0
  [6e34b625] + Bzip2_jll v1.0.6+4
  [49dc2e85] + Calculus v0.5.1
  [523fee87] + CodecBzip2 v0.7.2
  [944b1d66] + CodecZlib v0.7.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v2.2.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [f6369f11] + ForwardDiff v0.10.12
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [682c06a0] + JSON v0.21.1
  [7d188eb4] + JSONSchema v0.3.2
  [4076af6c] + JuMP v0.21.4
  [1914dd2f] + MacroTools v0.5.5
  [b8f27783] + MathOptInterface v0.9.16
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [be282fd4] + MultivariateBases v0.1.2
  [f4abf1af] + MultivariateMoments v0.3.0
  [102ac46a] + MultivariatePolynomials v0.3.10
  [d8a4904e] + MutableArithmetics v0.2.10
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [ddf597a6] + PolyJuMP v0.4.1
  [189a3867] + Reexport v0.2.0
  [af85af4c] + RowEchelon v0.1.1
  [8e049039] + SemialgebraicSets v0.2.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [4b9e565b] + SumOfSquares v0.4.2
  [3bb67fe8] + TranscodingStreams v0.9.5
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SumOfSquares
Status `/tmp/jl_hOHaJr/Project.toml`
  [0a46da34] CSDP v0.6.1
  [7c1d4256] DynamicPolynomials v0.3.13
  [4076af6c] JuMP v0.21.4
  [b8f27783] MathOptInterface v0.9.16
  [be282fd4] MultivariateBases v0.1.2
  [f4abf1af] MultivariateMoments v0.3.0
  [102ac46a] MultivariatePolynomials v0.3.10
  [d8a4904e] MutableArithmetics v0.2.10
  [ddf597a6] PolyJuMP v0.4.1
  [189a3867] Reexport v0.2.0
  [c946c3f1] SCS v0.7.0
  [8e049039] SemialgebraicSets v0.2.1
  [4b9e565b] SumOfSquares v0.4.2
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_hOHaJr/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [6e34b625] Bzip2_jll v1.0.6+4
  [0a46da34] CSDP v0.6.1
  [9ce75daa] CSDP_jll v6.2.0+9
  [49dc2e85] Calculus v0.5.1
  [523fee87] CodecBzip2 v0.7.2
  [944b1d66] CodecZlib v0.7.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v2.2.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [7c1d4256] DynamicPolynomials v0.3.13
  [f6369f11] ForwardDiff v0.10.12
  [92fee26a] GZip v0.5.1
  [c27321d9] Glob v1.3.0
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.1
  [7d188eb4] JSONSchema v0.3.2
  [4076af6c] JuMP v0.21.4
  [1914dd2f] MacroTools v0.5.5
  [b8f27783] MathOptInterface v0.9.16
  [fdba3010] MathProgBase v0.7.8
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [be282fd4] MultivariateBases v0.1.2
  [f4abf1af] MultivariateMoments v0.3.0
  [102ac46a] MultivariatePolynomials v0.3.10
  [d8a4904e] MutableArithmetics v0.2.10
  [77ba4419] NaNMath v0.3.4
  [656ef2d0] OpenBLAS32_jll v0.3.9+4
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [ddf597a6] PolyJuMP v0.4.1
  [189a3867] Reexport v0.2.0
  [af85af4c] RowEchelon v0.1.1
  [c946c3f1] SCS v0.7.0
  [f4f2fc5b] SCS_jll v2.1.2+0
  [8e049039] SemialgebraicSets v0.2.1
  [169818f4] SemidefiniteModels v0.1.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [4b9e565b] SumOfSquares v0.4.2
  [3bb67fe8] TranscodingStreams v0.9.5
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary:                      | Pass  Total
Monomial selection for certificate |   27     27
Test Summary:            | Pass  Total
Random SOS should be SOS |   41     41
SumOfSquares.Certificate.MaxDegree{SOSCone, MonomialBasis}: Error During Test at /home/pkgeval/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:145
  Got exception outside of a @test
  MethodError: convert(::Type{BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}}, ::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T, PT, AT}}, set::BasicSemialgebraicSet{T, PT, AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T, PT, AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
    [1] SumOfSquares.Certificate.DomainWithVariables{BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, Vector{DynamicPolynomials.PolyVar{true}}}(domain::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, variables::Vector{DynamicPolynomials.PolyVar{true}})
      @ SumOfSquares.Certificate ~/.julia/packages/SumOfSquares/45IuO/src/Certificate/Certificate.jl:69
    [2] get(#unused#::SumOfSquares.Certificate.Putinar{SumOfSquares.Certificate.MaxDegree{SOSCone, MonomialBasis}, SOSCone, MonomialBasis}, #unused#::SumOfSquares.Certificate.PreprocessedDomain, domain::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, p::DynamicPolynomials.Polynomial{true, Int64})
      @ SumOfSquares.Certificate ~/.julia/packages/SumOfSquares/45IuO/src/Certificate/Certificate.jl:73
    [3] certificate_api(certificate::SumOfSquares.Certificate.Putinar{SumOfSquares.Certificate.MaxDegree{SOSCone, MonomialBasis}, SOSCone, MonomialBasis})
      @ Main ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:115
    [4] (::var"#_test#2"{Int64, UnionAll, SOSCone})(certificate::SumOfSquares.Certificate.MaxDegree{SOSCone, MonomialBasis})
      @ Main ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:135
    [5] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:150
    [6] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
    [7] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:145
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:128
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [11] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/runtests.jl:27
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ none:6
   [14] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [15] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [16] _start()
      @ Base ./client.jl:485
SumOfSquares.Certificate.FixedBasis{SOSCone, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}: Error During Test at /home/pkgeval/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:145
  Got exception outside of a @test
  MethodError: convert(::Type{BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}}, ::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T, PT, AT}}, set::BasicSemialgebraicSet{T, PT, AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T, PT, AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
    [1] SumOfSquares.Certificate.DomainWithVariables{BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, Vector{DynamicPolynomials.PolyVar{true}}}(domain::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, variables::Vector{DynamicPolynomials.PolyVar{true}})
      @ SumOfSquares.Certificate ~/.julia/packages/SumOfSquares/45IuO/src/Certificate/Certificate.jl:69
    [2] get(#unused#::SumOfSquares.Certificate.Putinar{SumOfSquares.Certificate.FixedBasis{SOSCone, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, SOSCone, MonomialBasis}, #unused#::SumOfSquares.Certificate.PreprocessedDomain, domain::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, p::DynamicPolynomials.Polynomial{true, Int64})
      @ SumOfSquares.Certificate ~/.julia/packages/SumOfSquares/45IuO/src/Certificate/Certificate.jl:73
    [3] certificate_api(certificate::SumOfSquares.Certificate.Putinar{SumOfSquares.Certificate.FixedBasis{SOSCone, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, SOSCone, MonomialBasis})
      @ Main ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:115
    [4] (::var"#_test#2"{Int64, UnionAll, SOSCone})(certificate::SumOfSquares.Certificate.FixedBasis{SOSCone, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}})
      @ Main ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:135
    [5] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:150
    [6] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
    [7] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:145
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:128
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [11] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/runtests.jl:27
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ none:6
   [14] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [15] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [16] _start()
      @ Base ./client.jl:485
SumOfSquares.Certificate.Newton{SOSCone, MonomialBasis, Tuple{}}: Error During Test at /home/pkgeval/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:145
  Got exception outside of a @test
  MethodError: convert(::Type{BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}}, ::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}) is ambiguous. Candidates:
    convert(::Type{BasicSemialgebraicSet{T, PT, AT}}, set::BasicSemialgebraicSet{T, PT, AT}) where {T, PT<:AbstractPolynomialLike, AT<:AbstractAlgebraicSet} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:24
    convert(::Type{BasicSemialgebraicSet{T, PT, AT}}, set::BasicSemialgebraicSet) where {T, PT, AT} in SemialgebraicSets at /home/pkgeval/.julia/packages/SemialgebraicSets/wN4gl/src/basic.jl:27
  Stacktrace:
    [1] SumOfSquares.Certificate.DomainWithVariables{BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, Vector{DynamicPolynomials.PolyVar{true}}}(domain::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, variables::Vector{DynamicPolynomials.PolyVar{true}})
      @ SumOfSquares.Certificate ~/.julia/packages/SumOfSquares/45IuO/src/Certificate/Certificate.jl:69
    [2] get(#unused#::SumOfSquares.Certificate.Putinar{SumOfSquares.Certificate.Newton{SOSCone, MonomialBasis, Tuple{}}, SOSCone, MonomialBasis}, #unused#::SumOfSquares.Certificate.PreprocessedDomain, domain::BasicSemialgebraicSet{Int64, DynamicPolynomials.Polynomial{true, Int64}, FullSpace}, p::DynamicPolynomials.Polynomial{true, Int64})
      @ SumOfSquares.Certificate ~/.julia/packages/SumOfSquares/45IuO/src/Certificate/Certificate.jl:73
    [3] certificate_api(certificate::SumOfSquares.Certificate.Putinar{SumOfSquares.Certificate.Newton{SOSCone, MonomialBasis, Tuple{}}, SOSCone, MonomialBasis})
      @ Main ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:115
    [4] (::var"#_test#2"{Int64, UnionAll, SOSCone})(certificate::SumOfSquares.Certificate.Newton{SOSCone, MonomialBasis, Tuple{}})
      @ Main ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:135
    [5] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:150
    [6] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
    [7] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:145
    [8] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [9] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:128
   [10] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [11] top-level scope
      @ ~/.julia/packages/SumOfSquares/45IuO/test/runtests.jl:27
   [12] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [13] top-level scope
      @ none:6
   [14] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [15] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [16] _start()
      @ Base ./client.jl:485
Test Summary:                                                                                                                             | Pass  Error  Total
API                                                                                                                                       |   33      3     36
  SumOfSquares.Certificate.MaxDegree{SOSCone, MonomialBasis}                                                                              |   11      1     12
  SumOfSquares.Certificate.FixedBasis{SOSCone, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}} |   11      1     12
  SumOfSquares.Certificate.Newton{SOSCone, MonomialBasis, Tuple{}}                                                                        |   11      1     12
ERROR: LoadError: LoadError: Some tests did not pass: 33 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SumOfSquares/45IuO/test/certificate.jl:127
in expression starting at /home/pkgeval/.julia/packages/SumOfSquares/45IuO/test/runtests.jl:27
ERROR: Package SumOfSquares errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
