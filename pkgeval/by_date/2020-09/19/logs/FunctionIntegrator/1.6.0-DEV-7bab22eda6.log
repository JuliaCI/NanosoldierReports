Julia Version 1.6.0-DEV.985
Commit 7bab22eda6* (2020-09-19 17:54 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_ZVGqvO/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ZVGqvO/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.623567 seconds (1.36 M allocations: 72.435 MiB, 2.98% gc time)
Running: chebyshev_quadrature with k=1
  1.238480 seconds (2.19 M allocations: 126.303 MiB, 4.28% gc time)
Running: chebyshev_quadrature with k=2
  0.239138 seconds (409.60 k allocations: 23.560 MiB, 14.72% gc time)
Running: chebyshev_quadrature with k=3
  0.246271 seconds (522.83 k allocations: 28.726 MiB)
Running: chebyshev_quadrature with k=4
  0.226221 seconds (467.63 k allocations: 25.357 MiB)
Running: jacobi_quadrature with α=β=1
 37.630548 seconds (37.32 M allocations: 3.047 GiB, 9.76% gc time)
Running: laguerre_quadrature with k=1
  3.056038 seconds (3.18 M allocations: 177.478 MiB, 6.43% gc time)
Running: legendre_quadrature
  0.259025 seconds (206.80 k allocations: 11.874 MiB, 19.15% gc time)
Running: lobatto_quadrature
  0.326326 seconds (329.56 k allocations: 19.914 MiB)
Running: radau_quadrature
  0.333135 seconds (438.14 k allocations: 26.789 MiB, 7.07% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.980606 seconds (100.02 M allocations: 1.491 GiB, 0.44% gc time)
Running: rectangle_rule_midpoint.
  0.190659 seconds (172.49 k allocations: 3.828 MiB, 18.09% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 77.910205 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rombergs_method
  0.540299 seconds (723.37 k allocations: 41.754 MiB, 5.27% gc time)
Running: simpsons_rule
  0.040668 seconds (45.82 k allocations: 2.045 MiB)
Running: simpsons38_rule
  0.116010 seconds (108.76 k allocations: 5.763 MiB, 17.18% gc time)
Running: trapezoidal_rule
  0.280013 seconds (1.51 M allocations: 25.681 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.076918 seconds (31.10 k allocations: 1.870 MiB)
Running: chebyshev_quadrature with k=1
  0.515314 seconds (297.73 k allocations: 15.767 MiB)
Running: chebyshev_quadrature with k=2
  0.217429 seconds (93.82 k allocations: 2.676 MiB)
Running: chebyshev_quadrature with k=3
  0.174172 seconds (82.07 k allocations: 2.477 MiB)
Running: chebyshev_quadrature with k=4
  0.163240 seconds (64.68 k allocations: 2.123 MiB)
Running: jacobi_quadrature with α=β=1
  2.170131 seconds (498.39 k allocations: 161.550 MiB, 4.64% gc time)
Running: legendre_quadrature
  0.152979 seconds (41.73 k allocations: 2.408 MiB)
Running: lobatto_quadrature
  0.021153 seconds (16.14 k allocations: 1.009 MiB)
Running: radau_quadrature
  0.019869 seconds (16.25 k allocations: 1.015 MiB)
Running: rectangle_rule_left
 27.054800 seconds (471.41 M allocations: 7.025 GiB, 3.36% gc time)
Running: rectangle_rule_midpoint
  0.000050 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.897862 seconds (476.96 M allocations: 7.107 GiB, 3.22% gc time)
Running: rombergs_method
  0.434007 seconds (326.88 k allocations: 18.560 MiB)
Running: simpsons_rule
  0.000036 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.073539 seconds (19.03 k allocations: 1.151 MiB)
Running: trapezoidal_rule
  0.057923 seconds (17.52 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026556 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.100175 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.101706 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.111727 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.113159 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.295255 seconds (362.72 k allocations: 18.936 MiB)
Running: legendre_quadrature
  0.086515 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000085 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000471 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000341 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000467 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.071233 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000036 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024536 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021310 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.056456 seconds (72.40 k allocations: 4.219 MiB)
Running: chebyshev_quadrature with k=1
  0.252710 seconds (230.75 k allocations: 12.973 MiB, 30.12% gc time)
Running: chebyshev_quadrature with k=2
  0.213149 seconds (283.33 k allocations: 15.925 MiB)
Running: chebyshev_quadrature with k=3
  0.198498 seconds (263.05 k allocations: 14.346 MiB)
Running: chebyshev_quadrature with k=4
  0.201044 seconds (263.07 k allocations: 14.241 MiB)
Running: jacobi_quadrature with α=β=1
  2.361294 seconds (445.97 k allocations: 163.165 MiB, 19.52% gc time)
Running: legendre_quadrature
  0.184259 seconds (185.58 k allocations: 10.715 MiB)
Running: lobatto_quadrature
  0.209276 seconds (196.40 k allocations: 11.422 MiB)
Running: radau_quadrature
  0.211898 seconds (196.39 k allocations: 11.400 MiB)
Running: rectangle_rule_left
  1.200515 seconds (18.85 k allocations: 1.148 MiB)
Running: rectangle_rule_midpoint
  0.025939 seconds (24.70 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  1.123644 seconds (17.41 k allocations: 1.066 MiB)
Running: rombergs_method
  0.132862 seconds (134.37 k allocations: 7.763 MiB)
Running: simpsons_rule
  0.028878 seconds (27.58 k allocations: 1.731 MiB)
Running: simpsons38_rule
  0.036732 seconds (42.43 k allocations: 2.681 MiB)
Running: trapezoidal_rule
  0.029386 seconds (44.13 k allocations: 1.774 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.084075 seconds (99.58 k allocations: 2.983 MiB, 49.49% gc time)
Running: chebyshev_quadrature with k=1
  0.196569 seconds (237.34 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=2
  0.206019 seconds (290.37 k allocations: 15.895 MiB)
Running: chebyshev_quadrature with k=3
  0.203228 seconds (269.75 k allocations: 14.326 MiB)
Running: chebyshev_quadrature with k=4
  0.203356 seconds (269.78 k allocations: 14.329 MiB)
Running: hermite_quadrature with k=2
 15.284618 seconds (20.91 M allocations: 1.089 GiB, 9.13% gc time)
Running: jacobi_quadrature with α=β=1
  0.434825 seconds (455.17 k allocations: 49.358 MiB, 8.34% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.255245 seconds (276.43 k allocations: 15.252 MiB, 13.33% gc time)
Running: legendre_quadrature
  0.170321 seconds (192.12 k allocations: 11.053 MiB)
Running: lobatto_quadrature
  0.283841 seconds (217.19 k allocations: 37.180 MiB)
Running: radau_quadrature
  0.263897 seconds (213.79 k allocations: 29.903 MiB, 10.65% gc time)
Running: rectangle_rule_left
  0.026993 seconds (21.77 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.026935 seconds (26.51 k allocations: 1.644 MiB)
Running: rectangle_rule_right
  0.026247 seconds (18.53 k allocations: 1.119 MiB)
Running: rombergs_method
  0.148369 seconds (136.85 k allocations: 7.813 MiB)
Running: simpsons_rule
  0.042287 seconds (39.43 k allocations: 2.063 MiB)
Running: simpsons38_rule
  0.040957 seconds (57.41 k allocations: 3.066 MiB)
Running: trapezoidal_rule
  0.028474 seconds (30.17 k allocations: 1.699 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.064064 seconds (59.96 k allocations: 2.282 MiB, 35.27% gc time)
Running: chebyshev_quadrature with k=1
  0.226781 seconds (232.86 k allocations: 12.831 MiB)
Running: chebyshev_quadrature with k=2
  0.241202 seconds (285.55 k allocations: 15.651 MiB)
Running: chebyshev_quadrature with k=3
  0.268154 seconds (265.18 k allocations: 14.124 MiB)
Running: chebyshev_quadrature with k=4
  0.274987 seconds (265.20 k allocations: 14.141 MiB, 10.82% gc time)
Running: hermite_quadrature with k=2
  0.166857 seconds (170.91 k allocations: 9.811 MiB)
Running: jacobi_quadrature with α=β=1
 10.628928 seconds (448.41 k allocations: 1.175 GiB, 16.45% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.235178 seconds (271.72 k allocations: 15.074 MiB, 5.62% gc time)
Running: legendre_quadrature
  0.157163 seconds (187.69 k allocations: 10.821 MiB)
Running: lobatto_quadrature
  0.301314 seconds (207.95 k allocations: 22.904 MiB, 7.01% gc time)
Running: radau_quadrature
  0.308905 seconds (207.10 k allocations: 20.839 MiB)
Running: rectangle_rule_left
  0.036898 seconds (19.55 k allocations: 1.190 MiB)
Running: rectangle_rule_midpoint
  0.027849 seconds (25.40 k allocations: 1.592 MiB)
Running: rectangle_rule_right
  0.024525 seconds (17.39 k allocations: 1.064 MiB)
Running: rombergs_method
  0.174873 seconds (132.69 k allocations: 7.627 MiB)
Running: simpsons_rule
  0.035169 seconds (31.95 k allocations: 1.857 MiB)
Running: simpsons38_rule
  0.042748 seconds (48.22 k allocations: 2.824 MiB)
Running: trapezoidal_rule
  0.030878 seconds (25.07 k allocations: 1.536 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029533 seconds (30.91 k allocations: 1.877 MiB)
Running: chebyshev_quadrature with k=1
  0.206735 seconds (231.24 k allocations: 13.049 MiB, 9.10% gc time)
Running: chebyshev_quadrature with k=2
  0.215726 seconds (283.84 k allocations: 15.993 MiB)
Running: chebyshev_quadrature with k=3
  0.195252 seconds (263.56 k allocations: 14.340 MiB)
Running: chebyshev_quadrature with k=4
  0.208860 seconds (263.58 k allocations: 14.166 MiB, 8.42% gc time)
Running: jacobi_quadrature with α=β=1
  1.972028 seconds (446.51 k allocations: 194.199 MiB, 13.81% gc time)
Running: legendre_quadrature
  0.161771 seconds (186.07 k allocations: 10.756 MiB)
Running: lobatto_quadrature
  0.215475 seconds (196.89 k allocations: 11.434 MiB, 15.48% gc time)
Running: radau_quadrature
  0.180553 seconds (196.89 k allocations: 11.491 MiB)
Running: rectangle_rule_left
  0.312641 seconds (19.36 k allocations: 1.174 MiB)
Running: rectangle_rule_midpoint
  0.026023 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.104567 seconds (17.76 k allocations: 1.082 MiB)
Running: rombergs_method
  0.126315 seconds (145.13 k allocations: 8.488 MiB)
Running: simpsons_rule
  0.027664 seconds (28.27 k allocations: 1.761 MiB)
Running: simpsons38_rule
  0.035293 seconds (43.14 k allocations: 2.710 MiB)
Running: trapezoidal_rule
  0.026646 seconds (45.06 k allocations: 1.807 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029787 seconds (31.69 k allocations: 1.829 MiB)
Running: chebyshev_quadrature with k=1
  0.193010 seconds (231.83 k allocations: 12.995 MiB, 10.20% gc time)
Running: chebyshev_quadrature with k=2
  0.206838 seconds (284.47 k allocations: 15.899 MiB)
Running: chebyshev_quadrature with k=3
  0.218487 seconds (264.14 k allocations: 14.385 MiB)
Running: chebyshev_quadrature with k=4
  0.240023 seconds (264.16 k allocations: 14.340 MiB, 8.35% gc time)
Running: jacobi_quadrature with α=β=1
  1.684476 seconds (447.23 k allocations: 148.948 MiB, 14.70% gc time)
Running: legendre_quadrature
  0.166576 seconds (186.67 k allocations: 10.776 MiB)
Running: lobatto_quadrature
  0.212387 seconds (197.49 k allocations: 11.444 MiB, 9.00% gc time)
Running: radau_quadrature
  0.210219 seconds (197.49 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  1.175703 seconds (19.62 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.034451 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  1.022554 seconds (17.72 k allocations: 1.079 MiB)
Running: rombergs_method
  0.149889 seconds (135.59 k allocations: 7.820 MiB)
Running: simpsons_rule
  0.033984 seconds (28.97 k allocations: 1.787 MiB)
Running: simpsons38_rule
  0.038131 seconds (43.84 k allocations: 2.737 MiB)
Running: trapezoidal_rule
  0.028972 seconds (57.30 k allocations: 2.007 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.204588 seconds (145.25 k allocations: 8.702 MiB)
Running: chebyshev_quadrature with k=1
  0.141910 seconds (69.94 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.168939 seconds (105.11 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.165514 seconds (92.59 k allocations: 2.655 MiB)
Running: chebyshev_quadrature with k=4
  0.203383 seconds (72.12 k allocations: 2.249 MiB, 16.19% gc time)
Running: jacobi_quadrature with α=β=1
  1.970500 seconds (474.14 k allocations: 167.461 MiB, 6.23% gc time)
Running: legendre_quadrature
  0.142444 seconds (18.74 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000146 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000077 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 43.325498 seconds (590.00 M allocations: 8.792 GiB, 3.22% gc time)
Running: rectangle_rule_midpoint
  0.000071 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.583018 seconds (592.75 M allocations: 8.833 GiB, 2.90% gc time)
Running: rombergs_method
  0.144106 seconds (20.52 k allocations: 1.166 MiB)
Running: simpsons_rule
  0.000047 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031724 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.033330 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.236205 seconds (629.33 M allocations: 9.387 GiB, 4.36% gc time)
Running: chebyshev_quadrature with k=1
  0.597925 seconds (420.08 k allocations: 23.266 MiB, 2.85% gc time)
Running: chebyshev_quadrature with k=2
 12.640909 seconds (474.75 k allocations: 4.041 GiB, 6.33% gc time)
Running: chebyshev_quadrature with k=3
  5.922128 seconds (277.51 k allocations: 1.643 GiB, 5.03% gc time)
Running: chebyshev_quadrature with k=4
  7.787183 seconds (277.54 k allocations: 2.261 GiB, 2.79% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.016423 seconds (483.95 k allocations: 13.254 GiB, 2.73% gc time)
Running: legendre_quadrature.
  5.534411 seconds (223.97 k allocations: 1.976 GiB, 1.66% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.438141 seconds (8.23 M allocations: 13.383 GiB, 3.86% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.722297 seconds (7.23 M allocations: 13.369 GiB, 2.92% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.675475 seconds (22.28 k allocations: 1.349 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.622705 seconds (30.48 k allocations: 1.886 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.658251 seconds (22.48 k allocations: 1.358 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.058192 seconds (439.08 k allocations: 152.726 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.835078 seconds (600.04 M allocations: 8.943 GiB, 8.65% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.261946 seconds (600.05 M allocations: 8.943 GiB, 7.66% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.867869 seconds (600.03 M allocations: 8.943 GiB, 8.47% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.120505 seconds (180.52 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.247094 seconds (247.84 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=2
  0.228067 seconds (272.49 k allocations: 14.530 MiB)
Running: chebyshev_quadrature with k=3
  0.212365 seconds (248.71 k allocations: 12.837 MiB)
Running: chebyshev_quadrature with k=4
  0.202226 seconds (248.73 k allocations: 12.833 MiB)
Running: jacobi_quadrature with α=β=1
  0.410456 seconds (388.05 k allocations: 34.928 MiB)
Running: laguerre_quadrature with k=2
  0.206152 seconds (180.67 k allocations: 10.499 MiB)
Running: legendre_quadrature
  0.140538 seconds (146.09 k allocations: 8.102 MiB)
Running: lobatto_quadrature
  0.038480 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.033928 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.060146 seconds (18.90 k allocations: 1.124 MiB)
Running: rectangle_rule_midpoint
  0.048591 seconds (25.51 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  0.054322 seconds (17.50 k allocations: 1.050 MiB)
Running: rombergs_method
  0.243535 seconds (170.81 k allocations: 9.751 MiB)
Running: simpsons_rule
  0.002164 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.049039 seconds (78.92 k allocations: 3.387 MiB)
Running: trapezoidal_rule
  0.198257 seconds (2.39 M allocations: 37.693 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002016 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.118581 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.124252 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.123833 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.123351 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  6.057202 seconds (365.11 k allocations: 904.760 MiB, 3.84% gc time)
Running: legendre_quadrature
  0.089052 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000172 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000127 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.901614 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000488 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.332870 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.095517 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000037 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000040 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000619 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000592 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.117860 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.200375 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.153236 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.135488 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  3.004947 seconds (371.68 k allocations: 252.884 MiB)
Running: legendre_quadrature
  0.085760 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000090 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000046 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.213994 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001077 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.733834 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.085629 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001887 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
