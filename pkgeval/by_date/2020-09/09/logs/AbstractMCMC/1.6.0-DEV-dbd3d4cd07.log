Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataValueInterfaces ───────── v1.0.0
  Installed ZygoteRules ───────────────── v0.2.0
  Installed ArgCheck ──────────────────── v2.1.0
  Installed ConstructionBase ──────────── v1.0.0
  Installed AbstractMCMC ──────────────── v2.1.0
  Installed Tables ────────────────────── v1.0.5
  Installed OrderedCollections ────────── v1.3.0
  Installed AbstractTrees ─────────────── v0.3.3
  Installed InitialValues ─────────────── v0.2.10
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Requires ──────────────────── v1.0.2
  Installed LeftChildRightSiblingTrees ── v0.1.2
  Installed DefineSingletons ──────────── v0.1.0
  Installed DataStructures ────────────── v0.18.4
  Installed StatsBase ─────────────────── v0.33.1
  Installed BangBang ──────────────────── v0.3.29
  Installed Missings ──────────────────── v0.4.4
  Installed ProgressMeter ─────────────── v1.3.2
  Installed ConsoleProgressMonitor ────── v0.1.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed SplittablesBase ───────────── v0.1.10
  Installed CompositionsBase ──────────── v0.1.0
  Installed MacroTools ────────────────── v0.5.5
  Installed Compat ────────────────────── v3.15.0
  Installed Setfield ──────────────────── v0.7.0
  Installed Transducers ───────────────── v0.4.51
  Installed TableTraits ───────────────── v1.0.0
  Installed TerminalLoggers ───────────── v0.1.2
  Installed LoggingExtras ─────────────── v0.4.2
  Installed ProgressLogging ───────────── v0.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [80f14c24] + AbstractMCMC v2.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [80f14c24] + AbstractMCMC v2.1.0
  [1520ce14] + AbstractTrees v0.3.3
  [dce04be8] + ArgCheck v2.1.0
  [198e06fe] + BangBang v0.3.29
  [34da2185] + Compat v3.15.0
  [a33af91c] + CompositionsBase v0.1.0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.4
  [e2d170a0] + DataValueInterfaces v1.0.0
  [244e2a9f] + DefineSingletons v0.1.0
  [22cec73e] + InitialValues v0.2.10
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [e6f89c97] + LoggingExtras v0.4.2
  [1914dd2f] + MacroTools v0.5.5
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [33c8b6b6] + ProgressLogging v0.1.3
  [92933f4c] + ProgressMeter v1.3.2
  [ae029012] + Requires v1.0.2
  [efcf1570] + Setfield v0.7.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [171d559e] + SplittablesBase v0.1.10
  [2913bbd2] + StatsBase v0.33.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [5d786b92] + TerminalLoggers v0.1.2
  [28d57a85] + Transducers v0.4.51
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AbstractMCMC
Status `/tmp/jl_hBrxvs/Project.toml`
  [80f14c24] AbstractMCMC v2.1.0
  [c52e3926] Atom v0.12.21
  [198e06fe] BangBang v0.3.29
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [7073ff75] IJulia v1.21.3
  [e6f89c97] LoggingExtras v0.4.2
  [33c8b6b6] ProgressLogging v0.1.3
  [2913bbd2] StatsBase v0.33.1
  [5d786b92] TerminalLoggers v0.1.2
  [28d57a85] Transducers v0.4.51
  [8ba89e20] Distributed
  [56ddb016] Logging
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_hBrxvs/Manifest.toml`
  [80f14c24] AbstractMCMC v2.1.0
  [1520ce14] AbstractTrees v0.3.3
  [dce04be8] ArgCheck v2.1.0
  [bf4720bc] AssetRegistry v0.1.0
  [c52e3926] Atom v0.12.21
  [198e06fe] BangBang v0.3.29
  [00ebfdb7] CSTParser v2.5.0
  [53a63b46] CodeTools v0.7.1
  [da1fd8a2] CodeTracking v1.0.1
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [a80b9123] CommonMark v0.6.4
  [34da2185] Compat v3.15.0
  [a33af91c] CompositionsBase v0.1.0
  [8f4d0f93] Conda v1.4.1
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [b4f34e82] Distances v0.9.0
  [33d173f1] DocSeeker v0.4.1
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [5789e2e9] FileIO v1.4.3
  [53c48c17] FixedPointNumbers v0.8.4
  [08572546] FlameGraphs v0.2.4
  [de31a74c] FunctionalCollections v0.5.0
  [fb4132e2] FuzzyCompletions v0.2.3
  [cd3eb016] HTTP v0.8.17
  [9fb69e20] Hiccup v0.2.2
  [7073ff75] IJulia v1.21.3
  [9b13fd28] IndirectArrays v0.5.1
  [83e8ac13] IniFile v0.5.0
  [22cec73e] InitialValues v0.2.10
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [98e50ef6] JuliaFormatter v0.7.5
  [aa1ae85d] JuliaInterpreter v0.7.26
  [e5e0dc1b] Juno v0.8.3
  [7c4cb9fa] LNR v0.2.1
  [50d2b5c4] Lazy v0.15.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [e6f89c97] LoggingExtras v0.4.2
  [1914dd2f] MacroTools v0.5.5
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [e89f7d12] Media v0.5.0
  [e1d29d7a] Missings v0.4.4
  [510215fc] Observables v0.3.1
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [fa939f87] Pidfile v1.2.0
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.3.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [efcf1570] Setfield v0.7.0
  [b85f4697] SoftGlobalScope v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [171d559e] SplittablesBase v0.1.10
  [2913bbd2] StatsBase v0.33.1
  [88034a9c] StringDistances v0.6.5
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [5d786b92] TerminalLoggers v0.1.2
  [0796e94c] Tokenize v0.5.8
  [28d57a85] Transducers v0.4.51
  [a2a6695c] TreeViews v0.3.0
  [30578b45] URIParser v0.4.1
  [81def892] VersionParsing v1.2.0
  [0f1e0344] WebIO v0.8.14
  [104b5d7c] WebSockets v1.5.2
  [cc8bc4a8] Widgets v0.6.2
  [c2297ded] ZMQ v1.2.1
  [8f1865be] ZeroMQ_jll v4.3.2+4
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [7b1f6079] FileWatching
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Nothing}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Nothing}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [17] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [18] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [19] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [20] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [21] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [22] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [23] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [24] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [25] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [31] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [33] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [36] top-level scope
│        @ none:6
│     [37] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [38] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [39] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:96 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
┌ Error: Exception while generating log record in module AbstractMCMC at /home/pkgeval/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] #handle_message#8
│        @ ~/.julia/packages/LoggingExtras/Qf118/src/earlyfiltered.jl:26 [inlined]
│     [13] handle_message(::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}}, ::Base.CoreLogging.LogLevel, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ LoggingExtras ~/.julia/packages/LoggingExtras/Qf118/src/tee.jl:24
│     [14] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [15] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385 [inlined]
│     [16] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:110 [inlined]
│     [17] macro expansion
│        @ ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:328 [inlined]
│     [18] (::AbstractMCMC.var"#20#21"{Bool, String, Nothing, Int64, Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}}, Random._GLOBAL_RNG, MyModel, MySampler, Int64, Int64})()
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:11
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{TerminalLogger, AbstractMCMC.var"#1#3"{Module}}, EarlyFilteredLogger{Logging.ConsoleLogger, AbstractMCMC.var"#2#4"{Module}}}})
│        @ Base.CoreLogging ./logging.jl:542
│     [21] with_progresslogger(f::Function, _module::Module, logger::Logging.ConsoleLogger)
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:34
│     [22] macro expansion
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/logging.jl:10 [inlined]
│     [23] mcmcsample(rng::Random._GLOBAL_RNG, model::MyModel, sampler::MySampler, N::Int64; progress::Bool, progressname::String, callback::Nothing, discard_initial::Int64, chain_type::Type, kwargs::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol, Symbol}, NamedTuple{(:sleepy, :loggers), Tuple{Bool, Bool}}})
│        @ AbstractMCMC ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:75
│     [24] #sample#16
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:19 [inlined]
│     [25] #sample#15
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/src/sample.jl:9 [inlined]
│     [26] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:8
│     [27] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [28] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:4
│     [29] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [30] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:3
│     [31] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [32] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/sample.jl:2
│     [33] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [34] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [35] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [36] top-level scope
│        @ ~/.julia/packages/AbstractMCMC/lGdBK/test/runtests.jl:22
│     [37] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [38] top-level scope
│        @ none:6
│     [39] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [40] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [41] _start()
│        @ Base ./client.jl:485
└ @ AbstractMCMC ~/.julia/packages/ProgressLogging/BBN0b/src/ProgressLogging.jl:385
