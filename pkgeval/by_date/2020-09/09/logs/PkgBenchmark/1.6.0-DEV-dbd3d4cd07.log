Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed LeftChildRightSiblingTrees ─ v0.1.2
  Installed TerminalLoggers ──────────── v0.1.2
  Installed Parsers ──────────────────── v1.0.10
  Installed BenchmarkTools ───────────── v0.5.0
  Installed ProgressLogging ──────────── v0.1.3
  Installed AbstractTrees ────────────── v0.3.3
  Installed PkgBenchmark ─────────────── v0.2.10
  Installed JSON ─────────────────────── v0.21.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [32113eaa] + PkgBenchmark v0.2.10
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [682c06a0] + JSON v0.21.1
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [69de0a69] + Parsers v1.0.10
  [32113eaa] + PkgBenchmark v0.2.10
  [33c8b6b6] + ProgressLogging v0.1.3
  [5d786b92] + TerminalLoggers v0.1.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building PkgBenchmark → `~/.julia/packages/PkgBenchmark/zKgzD/deps/build.log`
    Testing PkgBenchmark
Status `/tmp/jl_hvV7C0/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [e30172f5] Documenter v0.25.2
  [682c06a0] JSON v0.21.1
  [32113eaa] PkgBenchmark v0.2.10
  [5d786b92] TerminalLoggers v0.1.2
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [56ddb016] Logging
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_hvV7C0/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.2
  [682c06a0] JSON v0.21.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [69de0a69] Parsers v1.0.10
  [32113eaa] PkgBenchmark v0.2.10
  [33c8b6b6] ProgressLogging v0.1.3
  [5d786b92] TerminalLoggers v0.1.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
PkgBenchmark: Running benchmarks...
PkgBenchmark: creating benchmark tuning file /home/pkgeval/.julia/packages/PkgBenchmark/zKgzD/benchmark/tune.json...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:2
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
(1/2) tuning "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (1/3) tuning "join"...
  done (took 7.201821399 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (2/3) tuning "plots"...
  done (took 0.512902846 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (3/3) tuning "replace"...
  done (took 5.763435817 seconds)
done (took 16.171505847 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
(2/2) tuning "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (1/2) tuning "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (1/6) tuning ("tan", π)...
    done (took 1.003537229 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (2/6) tuning ("cos", 0.0)...
    done (took 0.861970676 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (3/6) tuning ("sin", π)...
    done (took 0.830256606 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (4/6) tuning ("sin", 0.0)...
    done (took 0.687942626 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (5/6) tuning ("cos", π)...
    done (took 0.767147042 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (6/6) tuning ("tan", 0.0)...
    done (took 0.705562296 seconds)
  done (took 6.171749646 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [19] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [20] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [21] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [22] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [23] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [24] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [25] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [26] top-level scope
│        @ none:2
│     [27] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [28] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [29] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
  (2/2) tuning "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (1/6) tuning ("tan", π)...
    done (took 0.715321579 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (2/6) tuning ("cos", 0.0)...
    done (took 0.70564842 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (3/6) tuning ("sin", π)...
    done (took 0.699915582 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (4/6) tuning ("sin", 0.0)...
    done (took 0.664561689 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (5/6) tuning ("cos", π)...
    done (took 0.721127242 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [17] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [18] #_withprogress#39
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71 [inlined]
│     [19] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [20] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [21] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:190
│     [22] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [23] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [24] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [25] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [26] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [27] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [28] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [29] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [30] top-level scope
│        @ none:2
│     [31] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [32] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [33] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
    (6/6) tuning ("tan", 0.0)...
    done (took 0.731194602 seconds)
  done (took 5.282792388 seconds)
done (took 12.070259014 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:2
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:2
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.025831103 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.505015112 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 3.925761878 seconds)
done (took 11.370114613 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.043236553 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.718268879 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.86402045 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.658786454 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.888087034 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.693041996 seconds)
  done (took 6.00160145 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:2
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.989625124 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.687648357 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.878722007 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.66899635 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.889318807 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:2
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.680024169 seconds)
  done (took 5.89579628 seconds)
done (took 12.58196056 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:2
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
# Benchmark Report for *PkgBenchmark*

## Job Properties
* Time of benchmark: 10 Sep 2020 - 8:29
* Package commit: non gi
* Julia commit: dbd3d4
* Julia command flags: None
* Environment variables: None

## Results
Below is a table of this job's results, obtained by running the benchmarks.
The values listed in the `ID` column have the structure `[parent_group, child_group, ..., key]`, and can be used to
index into the BaseBenchmarks suite to retrieve the corresponding benchmarks.
The percentages accompanying time and memory values in the below table are noise tolerances. The "true"
time/memory value for a given benchmark is expected to fall within this percentage of the reported value.
An empty cell means that the value was zero.

| ID                                                 | time            | GC time   | memory          | allocations |
|----------------------------------------------------|----------------:|----------:|----------------:|------------:|
| `["trigonometry", "circular", "(\"cos\", 0.0)"]`   |   7.526 ns (5%) |           |                 |             |
| `["trigonometry", "circular", "(\"cos\", π)"]`     |  18.472 ns (5%) |           |                 |             |
| `["trigonometry", "circular", "(\"sin\", 0.0)"]`   |   6.935 ns (5%) |           |                 |             |
| `["trigonometry", "circular", "(\"sin\", π)"]`     |  28.783 ns (5%) |           |                 |             |
| `["trigonometry", "circular", "(\"tan\", 0.0)"]`   |   6.734 ns (5%) |           |                 |             |
| `["trigonometry", "circular", "(\"tan\", π)"]`     |  35.894 ns (5%) |           |                 |             |
| `["trigonometry", "hyperbolic", "(\"cos\", 0.0)"]` |   7.695 ns (5%) |           |                 |             |
| `["trigonometry", "hyperbolic", "(\"cos\", π)"]`   |  27.480 ns (5%) |           |                 |             |
| `["trigonometry", "hyperbolic", "(\"sin\", 0.0)"]` |   6.705 ns (5%) |           |                 |             |
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   |  28.476 ns (5%) |           |                 |             |
| `["trigonometry", "hyperbolic", "(\"tan\", 0.0)"]` |   7.342 ns (5%) |           |                 |             |
| `["trigonometry", "hyperbolic", "(\"tan\", π)"]`   |  35.953 ns (5%) |           |                 |             |
| `["utf8", "join"]`                                 | 401.142 ms (5%) | 16.100 ms | 156.27 MiB (1%) |          20 |
| `["utf8", "replace"]`                              | 256.076 μs (5%) |           |  12.00 KiB (1%) |           4 |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2199 MHz  9069194736 s    9355969 s  1462934531 s  11741193605 s          0 s
       
  Memory: 376.59027099609375 GB (10553.26171875 MB free)
  Uptime: 5.584688e6 sec
  Load Avg:  52.27490234375  48.95849609375  48.203125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```Test Summary: | Pass  Total
structure     |    6      6
Test Summary:         | Pass  Total
objectpath/loadobject |    6      6
 Activating new environment at `/tmp/2HtB0NgF/Project.toml`
No Changes to `/tmp/2HtB0NgF/Project.toml`
No Changes to `/tmp/2HtB0NgF/Manifest.toml`
 Generating  project Example:
    /tmp/2HtB0NgF/Example/Project.toml
    /tmp/2HtB0NgF/Example/src/Example.jl
Path `/tmp/2HtB0NgF/Example` exists and looks like the correct package. Using existing path.
  Resolving package versions...
Updating `/tmp/2HtB0NgF/Project.toml`
  [6feaee9a] + Example v0.1.0 `/tmp/2HtB0NgF/Example`
Updating `/tmp/2HtB0NgF/Manifest.toml`
  [6feaee9a] + Example v0.1.0 `/tmp/2HtB0NgF/Example`
PkgBenchmark: Running benchmarks...
PkgBenchmark: creating benchmark tuning file /tmp/2HtB0NgF/Example/benchmark/tune.json...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
│     [14] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:188
(1/1) tuning "foo"...
done (took 1.467315917 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#47#48"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #tune!#46
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:183 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:281
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "foo"...
done (took 0.635249674 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
Test Summary:   | Pass  Total
benchmarkconfig |    1      1
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:2
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:2
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "foo"...
done (took 1.226702135 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:2
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
Test Summary: | Pass  Total
postprocess   |    1      1
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "trig"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/1) benchmarking "sin"...
  done (took 1.451753661 seconds)
done (took 2.782944251 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/1) benchmarking "trig"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/1) benchmarking "sin"...
  done (took 1.390871797 seconds)
done (took 2.743521463 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
Test Summary:                         | Pass  Total
getting back original commit / branch |    2      2
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.292293953 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.501657124 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.189657647 seconds)
done (took 13.654371512 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.008381011 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.815006937 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.716933342 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.638657045 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.715238129 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.650067823 seconds)
  done (took 6.018145137 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.596287466 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.589255383 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.600782009 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.611550533 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.593120958 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.645528815 seconds)
  done (took 4.742719685 seconds)
done (took 11.428330014 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: benchmark results written to /tmp/jl_v4HBVj.json
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.715541551 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.610564255 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 4.670038242 seconds)
done (took 14.826325597 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.932102394 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.784664712 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.720912561 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.609785264 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.641688694 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.702554647 seconds)
  done (took 5.77842836 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.641981182 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.728546151 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.64130182 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.604124015 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.592020507 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.638216136 seconds)
  done (took 5.016974649 seconds)
done (took 11.546172288 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: benchmark results written to /tmp/jl_v4HBVj.json
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.863918491 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.553792532 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 3.684086858 seconds)
done (took 13.980331857 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.04980478 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.80442175 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.669644918 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.536520624 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.601876102 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.705394962 seconds)
  done (took 5.827572258 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.56160289 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.586035948 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.578533718 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.675044156 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.630144834 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.580469797 seconds)
  done (took 4.830107271 seconds)
done (took 11.409916649 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.637181533 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.549998259 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 3.170365344 seconds)
done (took 12.981810838 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.849374692 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.861155769 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.710684598 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.637307347 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.554584413 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.590241488 seconds)
  done (took 5.42953366 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.509172279 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.600555705 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.551853166 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.57836286 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.587584512 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.625092805 seconds)
  done (took 4.42579693 seconds)
done (took 10.461048618 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:54
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#24#29")(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:250
│      [6] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│      [7] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:249
│      [8] handle_message(logger::TerminalLoggers.TerminalLogger, level::Base.CoreLogging.LogLevel, message::String, _module::Module, group::Symbol, id::Base.UUID, filepath::String, line::Int64; maxlog::Nothing, sticky::Nothing, kwargs::Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{String}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268
│      [9] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [10] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
│     [11] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [12] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [13] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [14] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [15] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [16] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [17] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [18] top-level scope
│        @ none:3
│     [19] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [20] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [21] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:79
# Benchmark Report for *Example*

## Job Properties
* Time of benchmarks:
    - Target: 10 Sep 2020 - 08:34
    - Baseline: 10 Sep 2020 - 08:35
* Package commits:
    - Target: 459505
    - Baseline: 22a2fb
* Julia commits:
    - Target: dbd3d4
    - Baseline: dbd3d4
* Julia command flags:
    - Target: None
    - Baseline: None
* Environment variables:
    - Target: None
    - Baseline: None

## Results
A ratio greater than `1.0` denotes a possible regression (marked with :x:), while a ratio less
than `1.0` denotes a possible improvement (marked with :white_check_mark:). Only significant results - results
that indicate possible regressions or improvements - are shown below (thus, an empty table means that all
benchmark results remained invariant between builds).

| ID                                                 | time ratio                   | memory ratio |
|----------------------------------------------------|------------------------------|--------------|
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   | 0.94 (5%) :white_check_mark: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", 0.0)"]` |                1.07 (5%) :x: |   1.00 (1%)  |
| `["utf8", "replace"]`                              |                1.09 (5%) :x: |   1.00 (1%)  |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo

### Target
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2336 MHz  9070251547 s    9356004 s  1463035313 s  11741228331 s          0 s
       
  Memory: 376.59027099609375 GB (12617.765625 MB free)
  Uptime: 5.584988e6 sec
  Load Avg:  49.47119140625  49.66259765625  48.74267578125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```

### Baseline
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2499 MHz  9070410602 s    9356020 s  1463054286 s  11741249483 s          0 s
       
  Memory: 376.59027099609375 GB (13921.23046875 MB free)
  Uptime: 5.585039e6 sec
  Load Avg:  43.890625  48.18310546875  48.291015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```# Benchmark Report for *Example*

## Job Properties
* Time of benchmarks:
    - Target: 10 Sep 2020 - 08:34
    - Baseline: 10 Sep 2020 - 08:35
* Package commits:
    - Target: 459505
    - Baseline: 22a2fb
* Julia commits:
    - Target: dbd3d4
    - Baseline: dbd3d4
* Julia command flags:
    - Target: None
    - Baseline: None
* Environment variables:
    - Target: None
    - Baseline: None

## Results
A ratio greater than `1.0` denotes a possible regression (marked with :x:), while a ratio less
than `1.0` denotes a possible improvement (marked with :white_check_mark:). Only significant results - results
that indicate possible regressions or improvements - are shown below (thus, an empty table means that all
benchmark results remained invariant between builds).

| ID                                                 | time ratio                   | memory ratio |
|----------------------------------------------------|------------------------------|--------------|
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   | 0.94 (5%) :white_check_mark: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", 0.0)"]` |                1.07 (5%) :x: |   1.00 (1%)  |
| `["utf8", "replace"]`                              |                1.09 (5%) :x: |   1.00 (1%)  |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo

### Target
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2336 MHz  9070251547 s    9356004 s  1463035313 s  11741228331 s          0 s
       
  Memory: 376.59027099609375 GB (12617.765625 MB free)
  Uptime: 5.584988e6 sec
  Load Avg:  49.47119140625  49.66259765625  48.74267578125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```

### Baseline
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2499 MHz  9070410602 s    9356020 s  1463054286 s  11741249483 s          0 s
       
  Memory: 376.59027099609375 GB (13921.23046875 MB free)
  Uptime: 5.585039e6 sec
  Load Avg:  43.890625  48.18310546875  48.291015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```# Benchmark Report for *Example*

## Job Properties
* Time of benchmarks:
    - Target: 10 Sep 2020 - 08:34
    - Baseline: 10 Sep 2020 - 08:35
* Package commits:
    - Target: 459505
    - Baseline: 22a2fb
* Julia commits:
    - Target: dbd3d4
    - Baseline: dbd3d4
* Julia command flags:
    - Target: None
    - Baseline: None
* Environment variables:
    - Target: None
    - Baseline: None

## Results
A ratio greater than `1.0` denotes a possible regression (marked with :x:), while a ratio less
than `1.0` denotes a possible improvement (marked with :white_check_mark:). All results are shown below.

| ID                                                 | time ratio                   | memory ratio |
|----------------------------------------------------|------------------------------|--------------|
| `["trigonometry", "circular", "(\"cos\", 0.0)"]`   |                   1.00 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"cos\", π)"]`     |                   0.97 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"sin\", 0.0)"]`   |                   0.98 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"sin\", π)"]`     |                   1.00 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"tan\", 0.0)"]`   |                   1.02 (5%)  |   1.00 (1%)  |
| `["trigonometry", "circular", "(\"tan\", π)"]`     |                   0.97 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"cos\", 0.0)"]` |                   1.02 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"cos\", π)"]`   |                   0.96 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"sin\", 0.0)"]` |                   1.02 (5%)  |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"sin\", π)"]`   | 0.94 (5%) :white_check_mark: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", 0.0)"]` |                1.07 (5%) :x: |   1.00 (1%)  |
| `["trigonometry", "hyperbolic", "(\"tan\", π)"]`   |                   1.03 (5%)  |   1.00 (1%)  |
| `["utf8", "join"]`                                 |                   1.01 (5%)  |   1.00 (1%)  |
| `["utf8", "replace"]`                              |                1.09 (5%) :x: |   1.00 (1%)  |

## Benchmark Group List
Here's a list of all the benchmark groups executed by this job:

- `["trigonometry", "circular"]`
- `["trigonometry", "hyperbolic"]`
- `["utf8"]`

## Julia versioninfo

### Target
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2336 MHz  9070251547 s    9356004 s  1463035313 s  11741228331 s          0 s
       
  Memory: 376.59027099609375 GB (12617.765625 MB free)
  Uptime: 5.584988e6 sec
  Load Avg:  49.47119140625  49.66259765625  48.74267578125
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```

### Baseline
```
Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  uname: Linux 4.15.0-109-generic #110-Ubuntu SMP Tue Jun 23 02:39:32 UTC 2020 x86_64 x86_64
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz: 
                 speed         user         nice          sys         idle          irq
       #1-40  2499 MHz  9070410602 s    9356020 s  1463054286 s  11741249483 s          0 s
       
  Memory: 376.59027099609375 GB (13921.23046875 MB free)
  Uptime: 5.585039e6 sec
  Load Avg:  43.890625  48.18310546875  48.291015625
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
```PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /tmp/2HtB0NgF/Example/benchmark/tune.json
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
│     [14] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [15] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [16] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [17] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [18] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [19] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [20] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [21] top-level scope
│        @ none:3
│     [22] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [23] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [24] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:75
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(1/2) benchmarking "utf8"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/3) benchmarking "join"...
  done (took 6.336383046 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/3) benchmarking "plots"...
  done (took 0.522047753 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (3/3) benchmarking "replace"...
  done (took 3.638838788 seconds)
done (took 13.071926618 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [15] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [16] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [17] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [18] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [19] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [20] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [21] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [22] top-level scope
│        @ none:3
│     [23] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [24] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [25] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
(2/2) benchmarking "trigonometry"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (1/2) benchmarking "circular"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 1.022750763 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.876880873 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.765287289 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
    done (took 0.677897148 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (5/6) benchmarking ("cos", π)...
    done (took 0.71976219 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (6/6) benchmarking ("tan", 0.0)...
    done (took 0.703912126 seconds)
  done (took 6.069397193 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [20] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [21] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [22] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [23] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [24] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [25] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [26] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [27] top-level scope
│        @ none:3
│     [28] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [29] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [30] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
  (2/2) benchmarking "hyperbolic"...
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (1/6) benchmarking ("tan", π)...
    done (took 0.584489558 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (2/6) benchmarking ("cos", 0.0)...
    done (took 0.588526079 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (3/6) benchmarking ("sin", π)...
    done (took 0.582671967 seconds)
┌ Error: Exception while generating log record in module BenchmarkTools at
│ /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│   exception =
│    ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
│    Stacktrace:
│      [1] argmismatch(a::Int64, b::Int64)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
│      [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
│        @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
│      [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
│        @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
│      [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
│      [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
│      [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
│      [7] foldtree
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
│      [8] (::TerminalLoggers.var"#21#26"{TerminalLoggers.TerminalLogger})(io::IOContext{IOBuffer})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
│      [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
│        @ Base ./strings/io.jl:103
│     [10] handle_progress(logger::TerminalLoggers.TerminalLogger, progress::ProgressLogging.Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
│        @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
│     [11] #handle_message#30
│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
│     [12] macro expansion
│        @ ./logging.jl:297 [inlined]
│     [13] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
│     [14] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [15] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [16] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [17] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [18] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [19] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Base.UUID, nleaves::Int64, ndone::Int64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:71
│     [20] run(::BenchmarkGroup; verbose::Bool, pad::String, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:progressid, :nleaves, :ndone), Tuple{Base.UUID, Int64, Int64}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97
│     [21] macro expansion
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:107 [inlined]
│     [22] macro expansion
│        @ ./timing.jl:233 [inlined]
│     [23] (::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}})(progressid::Base.UUID, nleaves::Int64, ndone::Int64)
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:106
│     [24] _withprogress(f::BenchmarkTools.var"#42#43"{Bool, String, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, BenchmarkGroup, Tuple{}}, name::String, group::BenchmarkGroup; progressid::Nothing, nleaves::Float64, ndone::Float64, #unused#::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ BenchmarkTools ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:77
│     [25] _withprogress
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:70 [inlined]
│     [26] #run#41
│        @ ~/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:97 [inlined]
│     [27] __runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:286
│     [28] (::PkgBenchmark.var"#30#31"{String, String, String, Bool, NamedTuple{(:verbose,), Tuple{Bool}}})()
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:262
│     [29] with_logstate(f::Function, logstate::Any)
│        @ Base.CoreLogging ./logging.jl:430
│     [30] with_logger(f::Function, logger::TerminalLoggers.TerminalLogger)
│        @ Base.CoreLogging ./logging.jl:542
│     [31] _runbenchmark_local(file::String, output::String, tunefile::String, retune::Bool, runoptions::NamedTuple{(:verbose,), Tuple{Bool}}, logger_factory_path::Tuple{String, String, Symbol})
│        @ PkgBenchmark ~/.julia/packages/PkgBenchmark/zKgzD/src/runbenchmark.jl:261
│     [32] top-level scope
│        @ none:3
│     [33] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [34] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [35] _start()
│        @ Base ./client.jl:485
└ @ BenchmarkTools /home/pkgeval/.julia/packages/BenchmarkTools/eCEpo/src/execution.jl:103
    (4/6) benchmarking ("sin", 0.0)...
