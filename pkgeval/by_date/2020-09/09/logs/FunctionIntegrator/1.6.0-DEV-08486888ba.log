Julia Version 1.6.0-DEV.878
Commit 08486888ba (2020-09-09 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_wAlB7I/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_wAlB7I/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.825000 seconds (1.37 M allocations: 72.610 MiB, 1.82% gc time)
Running: chebyshev_quadrature with k=1
  1.759870 seconds (2.16 M allocations: 123.982 MiB, 6.79% gc time)
Running: chebyshev_quadrature with k=2
  0.270700 seconds (410.94 k allocations: 23.596 MiB, 7.73% gc time)
Running: chebyshev_quadrature with k=3
  0.304114 seconds (524.65 k allocations: 28.767 MiB)
Running: chebyshev_quadrature with k=4
  0.343862 seconds (469.05 k allocations: 25.378 MiB, 11.36% gc time)
Running: jacobi_quadrature with α=β=1
 40.959521 seconds (37.26 M allocations: 3.043 GiB, 8.53% gc time)
Running: laguerre_quadrature with k=1
  2.819421 seconds (3.20 M allocations: 177.806 MiB, 2.20% gc time)
Running: legendre_quadrature
  0.269723 seconds (207.16 k allocations: 11.932 MiB, 14.91% gc time)
Running: lobatto_quadrature
  0.335613 seconds (332.13 k allocations: 19.990 MiB)
Running: radau_quadrature
  0.274263 seconds (314.89 k allocations: 19.006 MiB, 9.74% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 74.650526 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.140749 seconds (172.85 k allocations: 3.842 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 76.087487 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time)
Running: rombergs_method
  0.534078 seconds (726.29 k allocations: 41.822 MiB)
Running: simpsons_rule
  0.065579 seconds (46.21 k allocations: 2.061 MiB, 41.32% gc time)
Running: simpsons38_rule
  0.092945 seconds (109.80 k allocations: 5.799 MiB)
Running: trapezoidal_rule
  0.273736 seconds (1.51 M allocations: 25.700 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.097650 seconds (31.52 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.532569 seconds (274.18 k allocations: 14.216 MiB)
Running: chebyshev_quadrature with k=2
  0.189108 seconds (93.97 k allocations: 2.681 MiB)
Running: chebyshev_quadrature with k=3
  0.196859 seconds (82.22 k allocations: 2.482 MiB)
Running: chebyshev_quadrature with k=4
  0.177991 seconds (64.83 k allocations: 2.128 MiB)
Running: jacobi_quadrature with α=β=1
  2.348109 seconds (500.52 k allocations: 161.645 MiB, 8.50% gc time)
Running: legendre_quadrature
  0.124945 seconds (41.84 k allocations: 2.412 MiB)
Running: lobatto_quadrature
  0.016287 seconds (16.20 k allocations: 1.006 MiB)
Running: radau_quadrature
  0.016277 seconds (16.18 k allocations: 1.005 MiB)
Running: rectangle_rule_left
 30.180089 seconds (471.41 M allocations: 7.025 GiB, 3.60% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.224588 seconds (476.96 M allocations: 7.107 GiB, 3.81% gc time)
Running: rombergs_method
  0.392356 seconds (328.42 k allocations: 18.608 MiB, 2.74% gc time)
Running: simpsons_rule
  0.000037 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.060538 seconds (19.27 k allocations: 1.161 MiB)
Running: trapezoidal_rule
  0.059383 seconds (17.75 k allocations: 1.067 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033867 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.101168 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.104231 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.132103 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.144581 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.304457 seconds (363.38 k allocations: 18.937 MiB)
Running: legendre_quadrature
  0.081459 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000083 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000037 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000484 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000337 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000478 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.130896 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000038 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.040402 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022069 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.088712 seconds (73.32 k allocations: 4.254 MiB, 33.56% gc time)
Running: chebyshev_quadrature with k=1
  0.180524 seconds (231.21 k allocations: 12.989 MiB)
Running: chebyshev_quadrature with k=2
  0.233640 seconds (284.06 k allocations: 15.893 MiB)
Running: chebyshev_quadrature with k=3
  0.221645 seconds (263.44 k allocations: 14.314 MiB, 11.79% gc time)
Running: chebyshev_quadrature with k=4
  0.196718 seconds (263.46 k allocations: 14.227 MiB)
Running: jacobi_quadrature with α=β=1
  2.655550 seconds (447.41 k allocations: 163.222 MiB, 6.12% gc time)
Running: legendre_quadrature
  0.140060 seconds (186.06 k allocations: 10.714 MiB)
Running: lobatto_quadrature
  0.159252 seconds (196.99 k allocations: 11.421 MiB)
Running: radau_quadrature
  0.148861 seconds (196.98 k allocations: 11.408 MiB)
Running: rectangle_rule_left
  1.056260 seconds (19.09 k allocations: 1.158 MiB)
Running: rectangle_rule_midpoint
  0.024325 seconds (25.05 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  1.231720 seconds (17.64 k allocations: 1.073 MiB)
Running: rombergs_method
  0.171547 seconds (134.40 k allocations: 7.756 MiB)
Running: simpsons_rule
  0.054680 seconds (27.97 k allocations: 1.747 MiB, 43.25% gc time)
Running: simpsons38_rule
  0.034293 seconds (43.06 k allocations: 2.705 MiB)
Running: trapezoidal_rule
  0.026335 seconds (44.46 k allocations: 1.786 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041258 seconds (100.03 k allocations: 2.999 MiB)
Running: chebyshev_quadrature with k=1
  0.203800 seconds (237.80 k allocations: 13.034 MiB)
Running: chebyshev_quadrature with k=2
  0.204495 seconds (291.08 k allocations: 15.949 MiB)
Running: chebyshev_quadrature with k=3
  0.241263 seconds (270.17 k allocations: 14.313 MiB, 9.48% gc time)
Running: chebyshev_quadrature with k=4
  0.218505 seconds (270.19 k allocations: 14.323 MiB)
Running: hermite_quadrature with k=2
 13.853775 seconds (20.95 M allocations: 1.089 GiB, 8.90% gc time)
Running: jacobi_quadrature with α=β=1
  0.375600 seconds (456.63 k allocations: 49.399 MiB, 8.03% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.191414 seconds (277.29 k allocations: 15.263 MiB)
Running: legendre_quadrature
  0.177278 seconds (192.63 k allocations: 11.043 MiB)
Running: lobatto_quadrature
  0.295585 seconds (217.81 k allocations: 37.177 MiB, 9.75% gc time)
Running: radau_quadrature
  0.241396 seconds (214.40 k allocations: 29.841 MiB)
Running: rectangle_rule_left
  0.029369 seconds (22.05 k allocations: 1.306 MiB)
Running: rectangle_rule_midpoint
  0.045648 seconds (26.89 k allocations: 1.660 MiB, 44.37% gc time)
Running: rectangle_rule_right
  0.024923 seconds (18.79 k allocations: 1.129 MiB)
Running: rombergs_method
  0.117188 seconds (136.88 k allocations: 7.790 MiB)
Running: simpsons_rule
  0.044316 seconds (39.87 k allocations: 2.080 MiB)
Running: simpsons38_rule
  0.039508 seconds (58.09 k allocations: 3.092 MiB)
Running: trapezoidal_rule
  0.030366 seconds (30.55 k allocations: 1.714 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040319 seconds (60.38 k allocations: 2.298 MiB)
Running: chebyshev_quadrature with k=1
  0.196291 seconds (233.32 k allocations: 12.823 MiB)
Running: chebyshev_quadrature with k=2
  0.236851 seconds (286.28 k allocations: 15.647 MiB)
Running: chebyshev_quadrature with k=3
  0.255111 seconds (265.58 k allocations: 14.109 MiB, 11.57% gc time)
Running: chebyshev_quadrature with k=4
  0.223887 seconds (265.60 k allocations: 14.111 MiB)
Running: hermite_quadrature with k=2
  0.183661 seconds (171.23 k allocations: 9.790 MiB)
Running: jacobi_quadrature with α=β=1
 10.552441 seconds (449.86 k allocations: 1.175 GiB, 15.53% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.237420 seconds (272.56 k allocations: 15.089 MiB)
Running: legendre_quadrature
  0.161722 seconds (188.18 k allocations: 10.822 MiB)
Running: lobatto_quadrature
  0.213753 seconds (208.56 k allocations: 22.909 MiB, 7.59% gc time)
Running: radau_quadrature
  0.204694 seconds (207.71 k allocations: 20.845 MiB)
Running: rectangle_rule_left
  0.025202 seconds (19.81 k allocations: 1.200 MiB)
Running: rectangle_rule_midpoint
  0.026437 seconds (25.76 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.022258 seconds (17.63 k allocations: 1.073 MiB)
Running: rombergs_method
  0.111623 seconds (132.69 k allocations: 7.610 MiB)
Running: simpsons_rule
  0.028971 seconds (32.36 k allocations: 1.871 MiB)
Running: simpsons38_rule
  0.075125 seconds (48.87 k allocations: 2.851 MiB)
Running: trapezoidal_rule
  0.027814 seconds (25.43 k allocations: 1.550 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034420 seconds (31.33 k allocations: 1.893 MiB)
Running: chebyshev_quadrature with k=1
  0.209450 seconds (231.70 k allocations: 13.045 MiB, 8.88% gc time)
Running: chebyshev_quadrature with k=2
  0.218334 seconds (284.56 k allocations: 15.989 MiB)
Running: chebyshev_quadrature with k=3
  0.203390 seconds (263.95 k allocations: 14.324 MiB)
Running: chebyshev_quadrature with k=4
  0.199222 seconds (263.97 k allocations: 14.162 MiB)
Running: jacobi_quadrature with α=β=1
  2.080192 seconds (447.95 k allocations: 194.216 MiB, 4.43% gc time)
Running: legendre_quadrature
  0.124712 seconds (186.56 k allocations: 10.746 MiB)
Running: lobatto_quadrature
  0.146074 seconds (197.49 k allocations: 11.452 MiB)
Running: radau_quadrature
  0.133158 seconds (197.49 k allocations: 11.493 MiB)
Running: rectangle_rule_left
  0.305519 seconds (19.61 k allocations: 1.184 MiB)
Running: rectangle_rule_midpoint
  0.020766 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  0.093723 seconds (17.99 k allocations: 1.092 MiB)
Running: rombergs_method
  0.092694 seconds (145.33 k allocations: 8.500 MiB)
Running: simpsons_rule
  0.028237 seconds (28.67 k allocations: 1.776 MiB)
Running: simpsons38_rule
  0.032021 seconds (43.78 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.044512 seconds (45.40 k allocations: 1.820 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032950 seconds (32.09 k allocations: 1.844 MiB)
Running: chebyshev_quadrature with k=1
  0.221151 seconds (232.29 k allocations: 12.990 MiB, 9.17% gc time)
Running: chebyshev_quadrature with k=2
  0.314259 seconds (285.19 k allocations: 15.915 MiB)
Running: chebyshev_quadrature with k=3
  0.233783 seconds (264.53 k allocations: 14.248 MiB)
Running: chebyshev_quadrature with k=4
  0.217402 seconds (264.55 k allocations: 14.326 MiB)
Running: jacobi_quadrature with α=β=1
  2.370172 seconds (448.66 k allocations: 148.966 MiB, 7.74% gc time)
Running: legendre_quadrature
  0.169132 seconds (187.15 k allocations: 10.789 MiB)
Running: lobatto_quadrature
  0.188838 seconds (198.09 k allocations: 11.448 MiB)
Running: radau_quadrature
  0.183064 seconds (198.08 k allocations: 11.514 MiB)
Running: rectangle_rule_left
  1.186103 seconds (19.86 k allocations: 1.197 MiB, 1.54% gc time)
Running: rectangle_rule_midpoint
  0.021787 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  1.119973 seconds (17.95 k allocations: 1.089 MiB)
Running: rombergs_method
  0.114836 seconds (135.63 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.027655 seconds (29.37 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.032573 seconds (44.48 k allocations: 2.761 MiB)
Running: trapezoidal_rule
  0.024932 seconds (57.63 k allocations: 2.020 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.147922 seconds (147.31 k allocations: 8.778 MiB)
Running: chebyshev_quadrature with k=1
  0.129958 seconds (70.10 k allocations: 2.210 MiB)
Running: chebyshev_quadrature with k=2
  0.137379 seconds (105.26 k allocations: 2.874 MiB)
Running: chebyshev_quadrature with k=3
  0.135009 seconds (92.74 k allocations: 2.660 MiB)
Running: chebyshev_quadrature with k=4
  0.133700 seconds (72.27 k allocations: 2.256 MiB)
Running: jacobi_quadrature with α=β=1
  3.000325 seconds (475.90 k allocations: 167.531 MiB, 10.77% gc time)
Running: legendre_quadrature
  0.105078 seconds (18.89 k allocations: 1.097 MiB)
Running: lobatto_quadrature
  0.000140 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000045 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 45.122689 seconds (590.00 M allocations: 8.792 GiB, 4.62% gc time)
Running: rectangle_rule_midpoint
  0.000067 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.722564 seconds (592.75 M allocations: 8.833 GiB, 4.27% gc time)
Running: rombergs_method
  0.127197 seconds (20.67 k allocations: 1.171 MiB)
Running: simpsons_rule
  0.000051 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027882 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022797 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.020765 seconds (629.33 M allocations: 9.387 GiB, 5.92% gc time)
Running: chebyshev_quadrature with k=1
  0.439051 seconds (420.95 k allocations: 23.220 MiB)
Running: chebyshev_quadrature with k=2
 12.715108 seconds (475.86 k allocations: 4.041 GiB, 4.28% gc time)
Running: chebyshev_quadrature with k=3
  5.800545 seconds (277.89 k allocations: 1.643 GiB, 4.89% gc time)
Running: chebyshev_quadrature with k=4
  8.014469 seconds (277.91 k allocations: 2.261 GiB, 2.54% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 64.413873 seconds (485.47 k allocations: 13.254 GiB, 2.83% gc time)
Running: legendre_quadrature.
  5.729365 seconds (224.39 k allocations: 1.976 GiB, 2.09% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.189431 seconds (8.23 M allocations: 13.383 GiB, 3.69% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.456368 seconds (7.23 M allocations: 13.369 GiB, 2.41% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.936751 seconds (22.55 k allocations: 1.359 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.861005 seconds (30.88 k allocations: 1.901 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.678475 seconds (22.76 k allocations: 1.369 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.119318 seconds (440.36 k allocations: 152.754 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.966178 seconds (600.04 M allocations: 8.943 GiB, 8.61% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.334506 seconds (600.05 M allocations: 8.943 GiB, 8.33% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.224013 seconds (600.03 M allocations: 8.943 GiB, 8.86% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.059292 seconds (180.97 k allocations: 4.427 MiB)
Running: chebyshev_quadrature with k=1
  0.228458 seconds (248.27 k allocations: 13.490 MiB)
Running: chebyshev_quadrature with k=2
  0.192918 seconds (272.84 k allocations: 14.515 MiB)
Running: chebyshev_quadrature with k=3
  0.202133 seconds (248.77 k allocations: 12.811 MiB)
Running: chebyshev_quadrature with k=4
  0.231387 seconds (248.79 k allocations: 12.804 MiB)
Running: jacobi_quadrature with α=β=1
  0.425933 seconds (388.78 k allocations: 34.929 MiB)
Running: laguerre_quadrature with k=2
  0.216549 seconds (181.10 k allocations: 10.530 MiB)
Running: legendre_quadrature
  0.141205 seconds (146.05 k allocations: 8.057 MiB)
Running: lobatto_quadrature
  0.044197 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.041022 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.063698 seconds (19.12 k allocations: 1.132 MiB)
Running: rectangle_rule_midpoint
  0.049858 seconds (25.86 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.056099 seconds (17.73 k allocations: 1.059 MiB)
Running: rombergs_method
  0.274533 seconds (171.80 k allocations: 9.803 MiB)
Running: simpsons_rule
  0.002069 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.068898 seconds (79.55 k allocations: 3.411 MiB)
Running: trapezoidal_rule
  0.216460 seconds (2.39 M allocations: 37.705 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002427 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.136164 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.125066 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.115224 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.114102 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  8.679706 seconds (365.77 k allocations: 904.754 MiB, 5.73% gc time)
Running: legendre_quadrature
  0.059562 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000189 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000134 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.625467 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000475 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.923001 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.074047 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000063 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000927 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000529 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.103644 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.101640 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.119672 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.118691 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.666821 seconds (372.34 k allocations: 252.866 MiB)
Running: legendre_quadrature
  0.069274 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000075 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000033 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.205368 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001192 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.568537 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.107873 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000038 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001474 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
