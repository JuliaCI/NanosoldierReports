Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_pu9qxw/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_pu9qxw/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.586766 seconds (1.47 M allocations: 78.004 MiB, 4.38% gc time)
Running: chebyshev_quadrature with k=1
  1.031724 seconds (2.20 M allocations: 125.602 MiB, 2.59% gc time)
Running: chebyshev_quadrature with k=2
  0.243166 seconds (414.71 k allocations: 23.651 MiB, 19.02% gc time)
Running: chebyshev_quadrature with k=3
  0.223843 seconds (529.17 k allocations: 28.848 MiB, 4.38% gc time)
Running: chebyshev_quadrature with k=4
  0.180748 seconds (472.94 k allocations: 25.450 MiB)
Running: jacobi_quadrature with α=β=1
 25.397261 seconds (37.89 M allocations: 3.063 GiB, 10.34% gc time)
Running: laguerre_quadrature with k=1
  1.591653 seconds (3.24 M allocations: 178.617 MiB, 2.56% gc time)
Running: legendre_quadrature
  0.119975 seconds (210.34 k allocations: 11.964 MiB)
Running: lobatto_quadrature
  0.195766 seconds (341.23 k allocations: 20.416 MiB)
Running: radau_quadrature
  0.178218 seconds (323.86 k allocations: 19.448 MiB, 14.85% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 44.390524 seconds (100.02 M allocations: 1.491 GiB, 0.73% gc time)
Running: rectangle_rule_midpoint.
  0.087919 seconds (173.33 k allocations: 3.851 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 44.725053 seconds (100.02 M allocations: 1.491 GiB, 0.68% gc time)
Running: rombergs_method
  0.331496 seconds (737.70 k allocations: 42.164 MiB)
Running: simpsons_rule
  0.024421 seconds (46.72 k allocations: 2.070 MiB)
Running: simpsons38_rule
  0.084322 seconds (112.20 k allocations: 5.890 MiB, 31.62% gc time)
Running: trapezoidal_rule
  0.176885 seconds (1.52 M allocations: 25.779 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.051741 seconds (32.06 k allocations: 1.894 MiB)
Running: chebyshev_quadrature with k=1
  0.261866 seconds (280.33 k allocations: 14.541 MiB)
Running: chebyshev_quadrature with k=2
  0.091112 seconds (94.34 k allocations: 2.687 MiB)
Running: chebyshev_quadrature with k=3
  0.096387 seconds (82.59 k allocations: 2.488 MiB)
Running: chebyshev_quadrature with k=4
  0.099927 seconds (65.20 k allocations: 2.134 MiB)
Running: jacobi_quadrature with α=β=1
  1.793184 seconds (511.59 k allocations: 162.070 MiB, 7.31% gc time)
Running: legendre_quadrature
  0.100985 seconds (43.17 k allocations: 2.472 MiB)
Running: lobatto_quadrature
  0.013814 seconds (17.16 k allocations: 1.060 MiB)
Running: radau_quadrature
  0.013360 seconds (17.15 k allocations: 1.059 MiB)
Running: rectangle_rule_left
 20.160271 seconds (471.41 M allocations: 7.025 GiB, 6.32% gc time)
Running: rectangle_rule_midpoint
  0.000011 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 20.482344 seconds (476.96 M allocations: 7.107 GiB, 6.37% gc time)
Running: rombergs_method
  0.230133 seconds (334.07 k allocations: 18.763 MiB)
Running: simpsons_rule
  0.000013 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.045282 seconds (19.54 k allocations: 1.164 MiB)
Running: trapezoidal_rule
  0.035740 seconds (18.00 k allocations: 1.071 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.021055 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.060363 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.063908 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.068984 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.064348 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.182303 seconds (367.69 k allocations: 19.076 MiB)
Running: legendre_quadrature
  0.044555 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000088 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000030 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000290 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000217 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000284 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.041886 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000033 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.013910 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.013479 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.037608 seconds (74.50 k allocations: 4.276 MiB)
Running: chebyshev_quadrature with k=1
  0.113759 seconds (233.55 k allocations: 13.035 MiB)
Running: chebyshev_quadrature with k=2
  0.153769 seconds (286.86 k allocations: 15.943 MiB, 10.31% gc time)
Running: chebyshev_quadrature with k=3
  0.123192 seconds (265.80 k allocations: 14.391 MiB)
Running: chebyshev_quadrature with k=4
  0.118811 seconds (265.82 k allocations: 14.279 MiB)
Running: jacobi_quadrature with α=β=1
  1.881271 seconds (452.73 k allocations: 163.308 MiB, 2.23% gc time)
Running: legendre_quadrature
  0.096664 seconds (188.35 k allocations: 10.776 MiB)
Running: lobatto_quadrature
  0.102233 seconds (199.98 k allocations: 11.479 MiB)
Running: radau_quadrature
  0.105060 seconds (199.97 k allocations: 11.477 MiB)
Running: rectangle_rule_left
  0.595977 seconds (19.44 k allocations: 1.165 MiB)
Running: rectangle_rule_midpoint
  0.017403 seconds (25.54 k allocations: 1.579 MiB)
Running: rectangle_rule_right
  0.568177 seconds (17.99 k allocations: 1.080 MiB)
Running: rombergs_method
  0.100491 seconds (136.10 k allocations: 7.788 MiB, 14.18% gc time)
Running: simpsons_rule
  0.018897 seconds (28.48 k allocations: 1.757 MiB)
Running: simpsons38_rule
  0.022616 seconds (43.87 k allocations: 2.719 MiB)
Running: trapezoidal_rule
  0.017276 seconds (44.88 k allocations: 1.794 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.026520 seconds (100.61 k allocations: 3.010 MiB)
Running: chebyshev_quadrature with k=1
  0.121037 seconds (240.18 k allocations: 13.093 MiB)
Running: chebyshev_quadrature with k=2
  0.127879 seconds (293.93 k allocations: 15.939 MiB)
Running: chebyshev_quadrature with k=3
  0.149390 seconds (272.56 k allocations: 14.357 MiB, 10.84% gc time)
Running: chebyshev_quadrature with k=4
  0.123214 seconds (272.59 k allocations: 14.367 MiB)
Running: hermite_quadrature with k=2
  9.031816 seconds (21.15 M allocations: 1.092 GiB, 11.66% gc time)
Running: jacobi_quadrature with α=β=1
  0.306919 seconds (461.98 k allocations: 49.539 MiB, 9.92% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.159261 seconds (280.16 k allocations: 15.312 MiB, 16.14% gc time)
Running: legendre_quadrature
  0.098564 seconds (194.96 k allocations: 11.086 MiB)
Running: lobatto_quadrature
  0.145970 seconds (220.71 k allocations: 37.245 MiB)
Running: radau_quadrature
  0.152300 seconds (217.28 k allocations: 29.909 MiB, 11.65% gc time)
Running: rectangle_rule_left
  0.016990 seconds (22.46 k allocations: 1.314 MiB)
Running: rectangle_rule_midpoint
  0.017702 seconds (27.41 k allocations: 1.670 MiB)
Running: rectangle_rule_right
  0.016330 seconds (19.15 k allocations: 1.135 MiB)
Running: rombergs_method
  0.069954 seconds (138.59 k allocations: 7.823 MiB)
Running: simpsons_rule
  0.022959 seconds (40.45 k allocations: 2.091 MiB)
Running: simpsons38_rule
  0.026029 seconds (58.98 k allocations: 3.108 MiB)
Running: trapezoidal_rule
  0.019268 seconds (31.05 k allocations: 1.724 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043724 seconds (60.92 k allocations: 2.308 MiB, 38.52% gc time)
Running: chebyshev_quadrature with k=1
  0.119305 seconds (235.68 k allocations: 12.929 MiB)
Running: chebyshev_quadrature with k=2
  0.134933 seconds (289.11 k allocations: 15.703 MiB)
Running: chebyshev_quadrature with k=3
  0.124557 seconds (267.95 k allocations: 14.153 MiB)
Running: chebyshev_quadrature with k=4
  0.145572 seconds (267.98 k allocations: 14.163 MiB, 13.10% gc time)
Running: hermite_quadrature with k=2
  0.091908 seconds (173.29 k allocations: 9.828 MiB)
Running: jacobi_quadrature with α=β=1
  7.948041 seconds (455.20 k allocations: 1.175 GiB, 20.58% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.136058 seconds (275.41 k allocations: 15.133 MiB, 6.75% gc time)
Running: legendre_quadrature
  0.099390 seconds (190.49 k allocations: 10.865 MiB)
Running: lobatto_quadrature
  0.154479 seconds (211.43 k allocations: 22.980 MiB, 11.08% gc time)
Running: radau_quadrature
  0.130140 seconds (210.58 k allocations: 20.912 MiB)
Running: rectangle_rule_left
  0.016837 seconds (20.18 k allocations: 1.207 MiB)
Running: rectangle_rule_midpoint
  0.016698 seconds (26.26 k allocations: 1.616 MiB)
Running: rectangle_rule_right
  0.014997 seconds (17.96 k allocations: 1.079 MiB)
Running: rombergs_method
  0.069318 seconds (134.35 k allocations: 7.641 MiB)
Running: simpsons_rule
  0.052061 seconds (32.90 k allocations: 1.881 MiB)
Running: simpsons38_rule
  0.025755 seconds (49.71 k allocations: 2.866 MiB)
Running: trapezoidal_rule
  0.017838 seconds (25.88 k allocations: 1.558 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032733 seconds (31.88 k allocations: 1.903 MiB, 35.20% gc time)
Running: chebyshev_quadrature with k=1
  0.118501 seconds (234.04 k allocations: 13.088 MiB)
Running: chebyshev_quadrature with k=2
  0.137683 seconds (287.38 k allocations: 16.041 MiB)
Running: chebyshev_quadrature with k=3
  0.124833 seconds (266.32 k allocations: 14.369 MiB)
Running: chebyshev_quadrature with k=4
  0.135641 seconds (266.34 k allocations: 14.206 MiB, 9.28% gc time)
Running: jacobi_quadrature with α=β=1
  1.784722 seconds (453.29 k allocations: 194.356 MiB, 5.84% gc time)
Running: legendre_quadrature
  0.091214 seconds (188.86 k allocations: 10.792 MiB)
Running: lobatto_quadrature
  0.113474 seconds (200.49 k allocations: 11.506 MiB, 9.61% gc time)
Running: radau_quadrature
  0.104499 seconds (200.49 k allocations: 11.500 MiB)
Running: rectangle_rule_left
  0.263068 seconds (19.99 k allocations: 1.192 MiB)
Running: rectangle_rule_midpoint
  0.016879 seconds (25.89 k allocations: 1.598 MiB)
Running: rectangle_rule_right
  0.084224 seconds (18.34 k allocations: 1.099 MiB)
Running: rombergs_method
  0.093260 seconds (147.24 k allocations: 8.517 MiB)
Running: simpsons_rule
  0.021317 seconds (29.19 k allocations: 1.786 MiB)
Running: simpsons38_rule
  0.027843 seconds (44.61 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.022140 seconds (45.84 k allocations: 1.828 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.022480 seconds (32.60 k allocations: 1.854 MiB)
Running: chebyshev_quadrature with k=1
  0.114805 seconds (234.63 k allocations: 13.034 MiB)
Running: chebyshev_quadrature with k=2
  0.141249 seconds (288.01 k allocations: 15.968 MiB)
Running: chebyshev_quadrature with k=3
  0.152024 seconds (266.89 k allocations: 14.291 MiB)
Running: chebyshev_quadrature with k=4
  0.157062 seconds (266.92 k allocations: 14.386 MiB, 11.41% gc time)
Running: jacobi_quadrature with α=β=1
  1.151159 seconds (453.99 k allocations: 149.047 MiB, 12.82% gc time)
Running: legendre_quadrature
  0.091936 seconds (189.45 k allocations: 10.832 MiB)
Running: lobatto_quadrature
  0.117579 seconds (201.09 k allocations: 11.580 MiB, 9.54% gc time)
Running: radau_quadrature
  0.106761 seconds (201.08 k allocations: 11.522 MiB)
Running: rectangle_rule_left
  0.615780 seconds (20.23 k allocations: 1.204 MiB)
Running: rectangle_rule_midpoint
  0.016973 seconds (25.89 k allocations: 1.598 MiB)
Running: rectangle_rule_right
  0.587004 seconds (18.30 k allocations: 1.096 MiB)
Running: rombergs_method
  0.079138 seconds (137.34 k allocations: 7.839 MiB)
Running: simpsons_rule
  0.021665 seconds (29.89 k allocations: 1.812 MiB)
Running: simpsons38_rule
  0.023440 seconds (45.30 k allocations: 2.776 MiB)
Running: trapezoidal_rule
  0.017965 seconds (58.07 k allocations: 2.028 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.105353 seconds (150.00 k allocations: 8.833 MiB)
Running: chebyshev_quadrature with k=1
  0.111455 seconds (70.46 k allocations: 2.216 MiB, 19.08% gc time)
Running: chebyshev_quadrature with k=2
  0.096707 seconds (105.62 k allocations: 2.879 MiB)
Running: chebyshev_quadrature with k=3
  0.101540 seconds (93.11 k allocations: 2.666 MiB)
Running: chebyshev_quadrature with k=4
  0.107598 seconds (72.64 k allocations: 2.263 MiB)
Running: jacobi_quadrature with α=β=1
  1.581600 seconds (485.39 k allocations: 167.894 MiB, 12.47% gc time)
Running: legendre_quadrature
  0.076055 seconds (19.26 k allocations: 1.103 MiB)
Running: lobatto_quadrature
  0.000071 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000024 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 28.040194 seconds (590.00 M allocations: 8.792 GiB, 4.40% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 27.031382 seconds (592.75 M allocations: 8.833 GiB, 4.42% gc time)
Running: rombergs_method
  0.079329 seconds (21.04 k allocations: 1.177 MiB)
Running: simpsons_rule
  0.000033 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.020400 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.015639 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.151494 seconds (629.33 M allocations: 9.387 GiB, 6.26% gc time)
Running: chebyshev_quadrature with k=1
  0.311663 seconds (426.43 k allocations: 23.356 MiB)
Running: chebyshev_quadrature with k=2
  9.672719 seconds (481.84 k allocations: 4.041 GiB, 3.79% gc time)
Running: chebyshev_quadrature with k=3
  4.480984 seconds (280.33 k allocations: 1.643 GiB, 4.21% gc time)
Running: chebyshev_quadrature with k=4
  6.373479 seconds (280.36 k allocations: 2.261 GiB, 2.59% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 47.330904 seconds (492.11 k allocations: 13.254 GiB, 3.57% gc time)
Running: legendre_quadrature.
  5.454322 seconds (227.76 k allocations: 1.976 GiB, 2.02% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.010622 seconds (8.24 M allocations: 13.384 GiB, 5.29% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.903276 seconds (7.24 M allocations: 13.369 GiB, 3.47% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.921547 seconds (22.97 k allocations: 1.368 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.788468 seconds (31.47 k allocations: 1.913 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.069291 seconds (23.18 k allocations: 1.378 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.304885 seconds (446.67 k allocations: 152.909 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.162625 seconds (600.04 M allocations: 8.943 GiB, 8.63% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.043613 seconds (600.05 M allocations: 8.943 GiB, 8.55% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.031418 seconds (600.03 M allocations: 8.943 GiB, 9.25% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.042491 seconds (181.57 k allocations: 4.439 MiB)
Running: chebyshev_quadrature with k=1
  0.143173 seconds (250.60 k allocations: 13.537 MiB)
Running: chebyshev_quadrature with k=2
  0.158701 seconds (275.18 k allocations: 14.563 MiB)
Running: chebyshev_quadrature with k=3
  0.136421 seconds (250.66 k allocations: 12.850 MiB)
Running: chebyshev_quadrature with k=4
  0.140928 seconds (250.68 k allocations: 12.839 MiB)
Running: jacobi_quadrature with α=β=1
  0.314488 seconds (393.05 k allocations: 35.052 MiB)
Running: laguerre_quadrature with k=2
  0.149016 seconds (183.32 k allocations: 10.555 MiB)
Running: legendre_quadrature
  0.097874 seconds (147.60 k allocations: 8.086 MiB)
Running: lobatto_quadrature
  0.034764 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.031045 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.040003 seconds (19.44 k allocations: 1.138 MiB)
Running: rectangle_rule_midpoint
  0.030461 seconds (26.33 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.030717 seconds (18.04 k allocations: 1.065 MiB)
Running: rombergs_method
  0.159632 seconds (177.43 k allocations: 10.025 MiB)
Running: simpsons_rule
  0.001348 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.033017 seconds (80.35 k allocations: 3.426 MiB)
Running: trapezoidal_rule
  0.136237 seconds (2.39 M allocations: 37.713 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001408 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.134761 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.132516 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.101739 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.087706 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  5.703870 seconds (369.97 k allocations: 904.876 MiB, 5.52% gc time)
Running: legendre_quadrature
  0.044933 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000150 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000113 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  2.366314 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000330 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.794679 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.050026 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000829 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000721 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.088806 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.072550 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.096645 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.078545 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  1.783071 seconds (376.53 k allocations: 252.987 MiB)
Running: legendre_quadrature
  0.091018 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000122 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000045 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  9.873363 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001068 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  9.307481 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.087055 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001980 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
