Julia Version 1.6.0-DEV.878
Commit 08486888ba (2020-09-09 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed IniFile ────── v0.5.0
  Installed ExprTools ──── v0.1.2
  Installed AdventOfCode ─ v1.0.0
  Installed MbedTLS_jll ── v2.16.8+0
  Installed MbedTLS ────── v1.0.2
  Installed Parsers ────── v1.0.10
  Installed HTTP ───────── v0.8.17
  Installed JSON ───────── v0.21.1
  Installed Mocking ────── v0.7.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7ef4cfdd] + AdventOfCode v1.0.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7ef4cfdd] + AdventOfCode v1.0.0
  [e2ba6199] + ExprTools v0.1.2
  [cd3eb016] + HTTP v0.8.17
  [83e8ac13] + IniFile v0.5.0
  [682c06a0] + JSON v0.21.1
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [78c3b35d] + Mocking v0.7.1
  [69de0a69] + Parsers v1.0.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdventOfCode
Status `/tmp/jl_9UNj68/Project.toml`
  [7ef4cfdd] AdventOfCode v1.0.0
  [cd3eb016] HTTP v0.8.17
  [78c3b35d] Mocking v0.7.1
  [ade2ca70] Dates
  [8dfed614] Test
Status `/tmp/jl_9UNj68/Manifest.toml`
  [7ef4cfdd] AdventOfCode v1.0.0
  [e2ba6199] ExprTools v0.1.2
  [cd3eb016] HTTP v0.8.17
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.1
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [78c3b35d] Mocking v0.7.1
  [69de0a69] Parsers v1.0.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
_is_unlocked: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:6
  Test threw exception
  Expression: AOC._is_unlocked(2018, 1)
  HTTP.ExceptionRequest.StatusError(403, "GET", "/api/json/est/now", HTTP.Messages.Response:
  """
  HTTP/1.1 403 Forbidden
  Content-Type: text/html
  Server: Microsoft-IIS/10.0
  Date: Thu, 10 Sep 2020 03:30:13 GMT
  Content-Length: 2345
  
  ﻿<!DOCTYPE html>
  <html>
  <head>
      <title>Web App - Unavailable</title>
      <style type="text/css">
          html {
              height: 100%;
              width: 100%;
          }
  
          #feature {
              width: 960px;
              margin: 95px auto 0 auto;
              overflow: auto;
          }
  
          #content {
              font-family: "Segoe UI";
              font-weight: normal;
              font-size: 22px;
              color: #ffffff;
              float: left;
              width: 460px;
              margin-top: 68px;
              margin-left: 0px;
              vertical-align: middle;
          }
  
              #content h1 {
                  font-family: "Segoe UI Light";
                  color: #ffffff;
                  font-weight: normal;
                  font-size: 60px;
                  line-height: 48pt;
                  width: 800px;
              }
  
          p a, p a:visited, p a:active, p a:hover {
              color: #ffffff;
          }
  
          #c
  ⋮
  2345-byte body
  """)
  Stacktrace:
    [1] request(::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any, N} where N; kw::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/atT5q/src/ExceptionRequest.jl:22
    [2] (::Base.var"#64#66"{Base.var"#64#65#67"{ExponentialBackOff, HTTP.RetryRequest.var"#2#3"{Bool, HTTP.Messages.Request}, typeof(HTTP.request)}})(::Type, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ Base ./error.jl:301
    [3] #request#1
      @ ~/.julia/packages/HTTP/atT5q/src/RetryRequest.jl:44 [inlined]
    [4] request(::Type{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/atT5q/src/MessageRequest.jl:51
    [5] request(::Type{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/atT5q/src/BasicAuthRequest.jl:28
    [6] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:24
    [7] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:21
    [8] request(method::String, url::String, h::Vector{Pair{SubString{String}, SubString{String}}}, b::Vector{UInt8}; headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314
    [9] request
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314 [inlined]
   [10] #get#12
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [11] get
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [12] _is_unlocked(year::Int64, day::Int64)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:63
   [13] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:6
   [14] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [15] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:6
   [16] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [17] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
_is_unlocked: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:7
  Test threw exception
  Expression: !(AOC._is_unlocked(3000, 1))
  HTTP.ExceptionRequest.StatusError(403, "GET", "/api/json/est/now", HTTP.Messages.Response:
  """
  HTTP/1.1 403 Forbidden
  Content-Type: text/html
  Server: Microsoft-IIS/10.0
  Date: Thu, 10 Sep 2020 03:30:25 GMT
  Content-Length: 2345
  
  ﻿<!DOCTYPE html>
  <html>
  <head>
      <title>Web App - Unavailable</title>
      <style type="text/css">
          html {
              height: 100%;
              width: 100%;
          }
  
          #feature {
              width: 960px;
              margin: 95px auto 0 auto;
              overflow: auto;
          }
  
          #content {
              font-family: "Segoe UI";
              font-weight: normal;
              font-size: 22px;
              color: #ffffff;
              float: left;
              width: 460px;
              margin-top: 68px;
              margin-left: 0px;
              vertical-align: middle;
          }
  
              #content h1 {
                  font-family: "Segoe UI Light";
                  color: #ffffff;
                  font-weight: normal;
                  font-size: 60px;
                  line-height: 48pt;
                  width: 800px;
              }
  
          p a, p a:visited, p a:active, p a:hover {
              color: #ffffff;
          }
  
          #c
  ⋮
  2345-byte body
  """)
  Stacktrace:
    [1] request(::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any, N} where N; kw::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/atT5q/src/ExceptionRequest.jl:22
    [2] (::Base.var"#64#66"{Base.var"#64#65#67"{ExponentialBackOff, HTTP.RetryRequest.var"#2#3"{Bool, HTTP.Messages.Request}, typeof(HTTP.request)}})(::Type, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ Base ./error.jl:301
    [3] #request#1
      @ ~/.julia/packages/HTTP/atT5q/src/RetryRequest.jl:44 [inlined]
    [4] request(::Type{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/atT5q/src/MessageRequest.jl:51
    [5] request(::Type{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/atT5q/src/BasicAuthRequest.jl:28
    [6] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:24
    [7] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:21
    [8] request(method::String, url::String, h::Vector{Pair{SubString{String}, SubString{String}}}, b::Vector{UInt8}; headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314
    [9] request
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314 [inlined]
   [10] #get#12
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [11] get
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [12] _is_unlocked(year::Int64, day::Int64)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:63
   [13] (::var"#1#12"{Module})()
      @ Main ./none:0
   [14] with_logstate(f::Function, logstate::Any)
      @ Base.CoreLogging ./logging.jl:430
   [15] with_logger
      @ ./logging.jl:542 [inlined]
   [16] #collect_test_logs#45
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/logging.jl:51 [inlined]
   [17] collect_test_logs
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/logging.jl:50 [inlined]
   [18] #match_logs#46
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/logging.jl:186 [inlined]
   [19] match_logs(f::Function, patterns::Tuple{Symbol, String})
      @ Test /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/logging.jl:186
   [20] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:7
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:6
   [23] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [24] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
_is_unlocked: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:7
  Expression evaluated to non-Boolean
  Expression: #= /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:7 =# @test_logs (:warn, "Advent of Code for year 3000 and day 1 hasn't unlocked yet.") !(AOC._is_unlocked(3000, 1))
       Value: nothing
_setup_data_file: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:54
  Got exception outside of a @test
  HTTP.ExceptionRequest.StatusError(403, "GET", "/api/json/est/now", HTTP.Messages.Response:
  """
  HTTP/1.1 403 Forbidden
  Content-Type: text/html
  Server: Microsoft-IIS/10.0
  Date: Thu, 10 Sep 2020 03:30:36 GMT
  Content-Length: 2345
  
  ﻿<!DOCTYPE html>
  <html>
  <head>
      <title>Web App - Unavailable</title>
      <style type="text/css">
          html {
              height: 100%;
              width: 100%;
          }
  
          #feature {
              width: 960px;
              margin: 95px auto 0 auto;
              overflow: auto;
          }
  
          #content {
              font-family: "Segoe UI";
              font-weight: normal;
              font-size: 22px;
              color: #ffffff;
              float: left;
              width: 460px;
              margin-top: 68px;
              margin-left: 0px;
              vertical-align: middle;
          }
  
              #content h1 {
                  font-family: "Segoe UI Light";
                  color: #ffffff;
                  font-weight: normal;
                  font-size: 60px;
                  line-height: 48pt;
                  width: 800px;
              }
  
          p a, p a:visited, p a:active, p a:hover {
              color: #ffffff;
          }
  
          #c
  ⋮
  2345-byte body
  """)
  Stacktrace:
    [1] request(::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any, N} where N; kw::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/atT5q/src/ExceptionRequest.jl:22
    [2] (::Base.var"#64#66"{Base.var"#64#65#67"{ExponentialBackOff, HTTP.RetryRequest.var"#2#3"{Bool, HTTP.Messages.Request}, typeof(HTTP.request)}})(::Type, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ Base ./error.jl:301
    [3] #request#1
      @ ~/.julia/packages/HTTP/atT5q/src/RetryRequest.jl:44 [inlined]
    [4] request(::Type{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/atT5q/src/MessageRequest.jl:51
    [5] request(::Type{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/atT5q/src/BasicAuthRequest.jl:28
    [6] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:24
    [7] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:21
    [8] request(method::String, url::String, h::Vector{Pair{SubString{String}, SubString{String}}}, b::Vector{UInt8}; headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314
    [9] request
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314 [inlined]
   [10] #get#12
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [11] get
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [12] _setup_data_file(year::Int64, day::Int64)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:50
   [13] (::var"#6#19")()
      @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:57
   [14] apply(body::var"#6#19", pe::Mocking.PatchEnv)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
   [15] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [16] apply(body::Function, patches::Patch{typeof(HTTP.get)})
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [17] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:55
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:55
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ none:6
   [24] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [25] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [26] _start()
      @ Base ./client.jl:485
works for full method: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68
  Got exception outside of a @test
  HTTP.ExceptionRequest.StatusError(403, "GET", "/api/json/est/now", HTTP.Messages.Response:
  """
  HTTP/1.1 403 Forbidden
  Content-Type: text/html
  Server: Microsoft-IIS/10.0
  Date: Thu, 10 Sep 2020 03:30:45 GMT
  Content-Length: 2345
  
  ﻿<!DOCTYPE html>
  <html>
  <head>
      <title>Web App - Unavailable</title>
      <style type="text/css">
          html {
              height: 100%;
              width: 100%;
          }
  
          #feature {
              width: 960px;
              margin: 95px auto 0 auto;
              overflow: auto;
          }
  
          #content {
              font-family: "Segoe UI";
              font-weight: normal;
              font-size: 22px;
              color: #ffffff;
              float: left;
              width: 460px;
              margin-top: 68px;
              margin-left: 0px;
              vertical-align: middle;
          }
  
              #content h1 {
                  font-family: "Segoe UI Light";
                  color: #ffffff;
                  font-weight: normal;
                  font-size: 60px;
                  line-height: 48pt;
                  width: 800px;
              }
  
          p a, p a:visited, p a:active, p a:hover {
              color: #ffffff;
          }
  
          #c
  ⋮
  2345-byte body
  """)
  Stacktrace:
    [1] request(::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any, N} where N; kw::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/atT5q/src/ExceptionRequest.jl:22
    [2] (::Base.var"#64#66"{Base.var"#64#65#67"{ExponentialBackOff, HTTP.RetryRequest.var"#2#3"{Bool, HTTP.Messages.Request}, typeof(HTTP.request)}})(::Type, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ Base ./error.jl:301
    [3] #request#1
      @ ~/.julia/packages/HTTP/atT5q/src/RetryRequest.jl:44 [inlined]
    [4] request(::Type{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/atT5q/src/MessageRequest.jl:51
    [5] request(::Type{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/atT5q/src/BasicAuthRequest.jl:28
    [6] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:24
    [7] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:21
    [8] request(method::String, url::String, h::Vector{Pair{SubString{String}, SubString{String}}}, b::Vector{UInt8}; headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314
    [9] request
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314 [inlined]
   [10] #get#12
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [11] get
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [12] _is_unlocked(year::Int64, day::Int64)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:63
   [13] setup_files(year::Int64, day::Int64; force::Bool)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:86
   [14] (::var"#8#21")()
      @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:71
   [15] apply(body::var"#8#21", pe::Mocking.PatchEnv)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
   [16] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [17] apply(body::Function, patches::Patch{typeof(HTTP.get)})
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [18] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:69
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:69
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68
   [23] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [24] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
works for convenience method: Error During Test at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:87
  Got exception outside of a @test
  HTTP.ExceptionRequest.StatusError(403, "GET", "/api/json/est/now", HTTP.Messages.Response:
  """
  HTTP/1.1 403 Forbidden
  Content-Type: text/html
  Server: Microsoft-IIS/10.0
  Date: Thu, 10 Sep 2020 03:30:54 GMT
  Content-Length: 2345
  
  ﻿<!DOCTYPE html>
  <html>
  <head>
      <title>Web App - Unavailable</title>
      <style type="text/css">
          html {
              height: 100%;
              width: 100%;
          }
  
          #feature {
              width: 960px;
              margin: 95px auto 0 auto;
              overflow: auto;
          }
  
          #content {
              font-family: "Segoe UI";
              font-weight: normal;
              font-size: 22px;
              color: #ffffff;
              float: left;
              width: 460px;
              margin-top: 68px;
              margin-left: 0px;
              vertical-align: middle;
          }
  
              #content h1 {
                  font-family: "Segoe UI Light";
                  color: #ffffff;
                  font-weight: normal;
                  font-size: 60px;
                  line-height: 48pt;
                  width: 800px;
              }
  
          p a, p a:visited, p a:active, p a:hover {
              color: #ffffff;
          }
  
          #c
  ⋮
  2345-byte body
  """)
  Stacktrace:
    [1] request(::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any, N} where N; kw::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ HTTP.ExceptionRequest ~/.julia/packages/HTTP/atT5q/src/ExceptionRequest.jl:22
    [2] (::Base.var"#64#66"{Base.var"#64#65#67"{ExponentialBackOff, HTTP.RetryRequest.var"#2#3"{Bool, HTTP.Messages.Request}, typeof(HTTP.request)}})(::Type, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:iofunction, :reached_redirect_limit), Tuple{Nothing, Bool}}})
      @ Base ./error.jl:301
    [3] #request#1
      @ ~/.julia/packages/HTTP/atT5q/src/RetryRequest.jl:44 [inlined]
    [4] request(::Type{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.MessageRequest ~/.julia/packages/HTTP/atT5q/src/MessageRequest.jl:51
    [5] request(::Type{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; kw::Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:reached_redirect_limit,), Tuple{Bool}}})
      @ HTTP.BasicAuthRequest ~/.julia/packages/HTTP/atT5q/src/BasicAuthRequest.jl:28
    [6] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:24
    [7] request(::Type{RedirectLayer{BasicAuthLayer{MessageLayer{RetryLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}}}, method::String, url::HTTP.URIs.URI, headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8})
      @ HTTP.RedirectRequest ~/.julia/packages/HTTP/atT5q/src/RedirectRequest.jl:21
    [8] request(method::String, url::String, h::Vector{Pair{SubString{String}, SubString{String}}}, b::Vector{UInt8}; headers::Vector{Pair{SubString{String}, SubString{String}}}, body::Vector{UInt8}, query::Nothing, kw::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ HTTP ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314
    [9] request
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:314 [inlined]
   [10] #get#12
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [11] get
      @ ~/.julia/packages/HTTP/atT5q/src/HTTP.jl:391 [inlined]
   [12] _is_unlocked(year::Int64, day::Int64)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:63
   [13] setup_files(year::Int64, day::Int64; force::Bool)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:86
   [14] setup_files(; force::Bool)
      @ AdventOfCode ~/.julia/packages/AdventOfCode/K5Mov/src/AdventOfCode.jl:100
   [15] (::var"#10#23")()
      @ Main ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:91
   [16] apply(body::var"#10#23", pe::Mocking.PatchEnv)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:64
   [17] apply(body::Function, patches::Patch{typeof(HTTP.get)}; debug::Bool)
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [18] apply(body::Function, patches::Patch{typeof(HTTP.get)})
      @ Mocking ~/.julia/packages/Mocking/U41JO/src/patch.jl:71
   [19] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88
   [20] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:88
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:68
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:4
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
Test Summary:                    | Pass  Error  Total
All tests                        |    6      6     12
  _is_unlocked                   |           3      3
  _get_cookies                   |    2             2
  _base_url                      |    1             1
  _template                      |    1             1
  _download_data                 |    2             2
  _setup_data_file               |           1      1
  setup_files                    |           2      2
    works for full method        |           1      1
    works for convenience method |           1      1
ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AdventOfCode/K5Mov/test/runtests.jl:3
ERROR: Package AdventOfCode errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
