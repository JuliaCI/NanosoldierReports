Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed LeftChildRightSiblingTrees ─ v0.1.2
  Installed ProgressLogging ──────────── v0.1.3
  Installed AbstractTrees ────────────── v0.3.3
  Installed TerminalLoggers ──────────── v0.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d786b92] + TerminalLoggers v0.1.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [33c8b6b6] + ProgressLogging v0.1.3
  [5d786b92] + TerminalLoggers v0.1.2
  [2a0f44e3] + Base64
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [de0858da] + Printf
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing TerminalLoggers
Status `/tmp/jl_gVcnVg/Project.toml`
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [33c8b6b6] ProgressLogging v0.1.3
  [5d786b92] TerminalLoggers v0.1.2
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_gVcnVg/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [33c8b6b6] ProgressLogging v0.1.3
  [5d786b92] TerminalLoggers v0.1.2
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
TerminalLogger: Test Failed at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:190
  Expression: startswith(genmsg("msg", exception = (DivideError(), bt)), "┌ PREFIX msg\n│   exception =\n│    DivideError: integer division error\n│    Stacktrace:\n│     [1] func1() at")
   Evaluated: startswith("┌ PREFIX msg\n│   exception =\n│    DivideError: integer division error\n│    Stacktrace:\n│      [1] func1()\n│        @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:3\n│      [2] top-level scope\n│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:189\n│      [3] top-level scope\n│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113\n│      [4] top-level scope\n│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55\n│      [5] include(fname::String)\n│        @ Base.MainInclude ./client.jl:444\n│      [6] top-level scope\n│        @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/runtests.jl:11\n│      [7] include(fname::String)\n│        @ Base.MainInclude ./client.jl:444\n│      [8] top-level scope\n│        @ none:6\n│      [9] eval(m::Module, e::Any)\n│        @ Core ./boot.jl:345\n│     [10] exec_options(opts::Base.JLOptions)\n│        @ Base ./client.jl:261\n│     [11] _start()\n│        @ Base ./client.jl:485\n└ SUFFIX\n", "┌ PREFIX msg\n│   exception =\n│    DivideError: integer division error\n│    Stacktrace:\n│     [1] func1() at")
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:190
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
Limiting large data structures: Test Failed at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:200
  Expression: genmsg("msg", a = fill(1.00001, 100, 100), b = fill(2.00002, 10, 10)) == replace("┌ PREFIX msg\n│   a =\n│    100×100 Array{Float64,2}:\n│     1.00001  1.00001  1.00001  1.00001  …  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     ⋮                                   ⋱                           EOL\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│   b =\n│    10×10 Array{Float64,2}:\n│     2.00002  2.00002  2.00002  2.00002  …  2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     ⋮                                   ⋱                           EOL\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n└ SUFFIX\n", if VERSION < v"1.4-"
                "EOL"
            else
                "       EOL"
            end => "")
   Evaluated: "┌ PREFIX msg\n│   a =\n│    100×100 Matrix{Float64}:\n│     1.00001  1.00001  1.00001  1.00001  …  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     ⋮                                   ⋱                    \n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│   b =\n│    10×10 Matrix{Float64}:\n│     2.00002  2.00002  2.00002  2.00002  …  2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     ⋮                                   ⋱                    \n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n└ SUFFIX\n" == "┌ PREFIX msg\n│   a =\n│    100×100 Array{Float64,2}:\n│     1.00001  1.00001  1.00001  1.00001  …  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     ⋮                                   ⋱                    \n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001     1.00001  1.00001  1.00001\n│   b =\n│    10×10 Array{Float64,2}:\n│     2.00002  2.00002  2.00002  2.00002  …  2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     ⋮                                   ⋱                    \n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n│     2.00002  2.00002  2.00002  2.00002     2.00002  2.00002  2.00002\n└ SUFFIX\n"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:200
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:200
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
Limiting large data structures: Test Failed at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:226
  Expression: genmsg("msg", a = fill(1.00001, 10, 10), show_limited = false) == "┌ PREFIX msg\n│   a =\n│    10×10 Array{Float64,2}:\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n└ SUFFIX\n"
   Evaluated: "┌ PREFIX msg\n│   a =\n│    10×10 Matrix{Float64}:\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n└ SUFFIX\n" == "┌ PREFIX msg\n│   a =\n│    10×10 Array{Float64,2}:\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n│     1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001  1.00001\n└ SUFFIX\n"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:226
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:200
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
TerminalLogger: Error During Test at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:257
  Test threw exception
  Expression: genmsg("", progress = 0.1, width = 60) ⊏ r"Progress:  10%\|█+.* +\|  ETA: .*"
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
    [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
      @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
    [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
    [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
    [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
    [7] foldtree
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
    [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
    [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
      @ Base ./strings/io.jl:103
   [10] handle_progress(logger::TerminalLogger, progress::Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
   [11] #handle_message#30
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
   [12] (::var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer})(::Tuple{String, Dict{Symbol, Real}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:28
   [13] iterate
      @ ./generator.jl:47 [inlined]
   [14] _collect(c::Vector{Tuple{String, Dict{Symbol, Real}}}, itr::Base.Generator{Vector{Tuple{String, Dict{Symbol, Real}}}, var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [15] collect_similar
      @ ./array.jl:628 [inlined]
   [16] map
      @ ./abstractarray.jl:2233 [inlined]
   [17] #genmsgs#1
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:21 [inlined]
   [18] genmsg(message::String; kwargs::Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol}, NamedTuple{(:progress, :width), Tuple{Float64, Int64}}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:50
   [19] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:257
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
TerminalLogger: Error During Test at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:259
  Test threw exception
  Expression: genmsg("", progress = NaN, width = 60) ⊏ r"Progress:   0%\|. +\|  ETA: .*"
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
    [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Nothing, eta_seconds::Float64)
      @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
    [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
    [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
    [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
    [7] foldtree
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
    [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
    [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
      @ Base ./strings/io.jl:103
   [10] handle_progress(logger::TerminalLogger, progress::Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
   [11] #handle_message#30
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
   [12] (::var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer})(::Tuple{String, Dict{Symbol, Real}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:28
   [13] iterate
      @ ./generator.jl:47 [inlined]
   [14] _collect(c::Vector{Tuple{String, Dict{Symbol, Real}}}, itr::Base.Generator{Vector{Tuple{String, Dict{Symbol, Real}}}, var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [15] collect_similar
      @ ./array.jl:628 [inlined]
   [16] map
      @ ./abstractarray.jl:2233 [inlined]
   [17] #genmsgs#1
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:21 [inlined]
   [18] genmsg(message::String; kwargs::Base.Iterators.Pairs{Symbol, Real, Tuple{Symbol, Symbol}, NamedTuple{(:progress, :width), Tuple{Float64, Int64}}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:50
   [19] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:259
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
TerminalLogger: Error During Test at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:263
  Test threw exception
  Expression: (genmsgs([("", (progress = 0.1,)), ("", (progress = 1.0,))], width = 60))[end] ⊏ r"Progress: 100%\|█+\| Time: .*"
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
    [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
      @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
    [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
    [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
    [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
    [7] foldtree
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
    [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
    [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
      @ Base ./strings/io.jl:103
   [10] handle_progress(logger::TerminalLogger, progress::Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
   [11] #handle_message#30
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
   [12] (::var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer})(::Tuple{String, NamedTuple{(:progress,), Tuple{Float64}}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:28
   [13] iterate
      @ ./generator.jl:47 [inlined]
   [14] _collect(c::Vector{Tuple{String, NamedTuple{(:progress,), Tuple{Float64}}}}, itr::Base.Generator{Vector{Tuple{String, NamedTuple{(:progress,), Tuple{Float64}}}}, var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [15] collect_similar
      @ ./array.jl:628 [inlined]
   [16] map
      @ ./abstractarray.jl:2233 [inlined]
   [17] #genmsgs#1
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:21 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:263
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
TerminalLogger: Error During Test at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:265
  Test threw exception
  Expression: (genmsgs([("", (progress = 0.1,)), ("", (progress = "done",))], width = 60))[end] ⊏ r"Progress: 100%\|█+\| Time: .*"
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
    [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
      @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
    [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
    [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
    [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
    [7] foldtree
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
    [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
    [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
      @ Base ./strings/io.jl:103
   [10] handle_progress(logger::TerminalLogger, progress::Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
   [11] #handle_message#30
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
   [12] (::var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer})(::Tuple{String, NamedTuple{(:progress,), Tuple{Float64}}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:28
   [13] iterate
      @ ./generator.jl:47 [inlined]
   [14] _collect(c::Vector{Tuple{String, NamedTuple{(:progress,), T} where T<:Tuple}}, itr::Base.Generator{Vector{Tuple{String, NamedTuple{(:progress,), T} where T<:Tuple}}, var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [15] collect_similar
      @ ./array.jl:628 [inlined]
   [16] map
      @ ./abstractarray.jl:2233 [inlined]
   [17] #genmsgs#1
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:21 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:265
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
Message formatting: Test Failed at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:289
  Expression: format_message([1 2; 3 4], 6, io_ctx) == ["", "2×2 Array{Int64,2}:", " 1  2", " 3  4"]
   Evaluated: SubString{String}["", "2×2 Matrix{Int64}:", " 1  2", " 3  4"] == ["", "2×2 Array{Int64,2}:", " 1  2", " 3  4"]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:289
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:269
 [4] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
Independent progress bars: Error During Test at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:296
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
    [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
      @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
    [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
    [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
    [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
    [7] foldtree
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
    [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
    [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
      @ Base ./strings/io.jl:103
   [10] handle_progress(logger::TerminalLogger, progress::Progress, kwargs::Base.Iterators.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:progress,), Tuple{Float64}}})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
   [11] #handle_message#30
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
   [12] (::var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer})(::Tuple{String, NamedTuple{(:progress, :_id), Tuple{Float64, Int64}}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:28
   [13] iterate
      @ ./generator.jl:47 [inlined]
   [14] _collect(c::Vector{Tuple{String, NamedTuple{(:progress, :_id), T} where T<:Tuple}}, itr::Base.Generator{Vector{Tuple{String, NamedTuple{(:progress, :_id), T} where T<:Tuple}}, var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [15] collect_similar
      @ ./array.jl:628 [inlined]
   [16] map
      @ ./abstractarray.jl:2233 [inlined]
   [17] #genmsgs#1
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:21 [inlined]
   [18] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:297
   [19] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:297
   [21] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/runtests.jl:11
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ none:6
   [27] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [28] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [29] _start()
      @ Base ./client.jl:485
Nested progress bars: Error During Test at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:336
  Got exception outside of a @test
  ArgumentError: mismatch between # of format specifiers and provided args: 3 != 4
  Stacktrace:
    [1] argmismatch(a::Int64, b::Int64)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:705
    [2] format(::IOContext{IOBuffer}, ::Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Val{'s'}}, Printf.Spec{Val{'u'}}, Printf.Spec{Val{'s'}}}}, ::String, ::Int64, ::Vararg{Any, N} where N)
      @ Printf /workspace/srcdir/usr/share/julia/stdlib/v1.6/Printf/src/Printf.jl:719
    [3] printprogress(io::IOContext{IOBuffer}, barglyphs::TerminalLoggers.ProgressMeter.BarGlyphs, tfirst::Float64, desc::String, progress::Float64, eta_seconds::Float64)
      @ TerminalLoggers.ProgressMeter ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressMeter/ProgressMeter.jl:65
    [4] printprogress(io::IOContext{IOBuffer}, bar::TerminalLoggers.ProgressBar)
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/ProgressBar.jl:42
    [5] (::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}})(isfirst::Bool, node::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:232
    [6] foldtree(op::TerminalLoggers.var"#22#27"{IOContext{IOBuffer}}, acc::Bool, tree::LeftChildRightSiblingTrees.Node{TerminalLoggers.ProgressBar})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:186
    [7] foldtree
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:183 [inlined]
    [8] (::TerminalLoggers.var"#21#26"{TerminalLogger})(io::IOContext{IOBuffer})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:230
    [9] sprint(::Function; context::Pair{Symbol, Tuple{Int64, Int64}}, sizehint::Int64)
      @ Base ./strings/io.jl:103
   [10] handle_progress(logger::TerminalLogger, progress::Progress, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ TerminalLoggers ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:229
   [11] #handle_message#30
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:268 [inlined]
   [12] handle_message
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/src/TerminalLogger.jl:260 [inlined]
   [13] (::var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer})(::Tuple{Progress, Dict{Any, Any}})
      @ Main ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:28
   [14] iterate
      @ ./generator.jl:47 [inlined]
   [15] _collect(c::Vector{Tuple{Progress, Dict{Any, Any}}}, itr::Base.Generator{Vector{Tuple{Progress, Dict{Any, Any}}}, var"#2#3"{Base.CoreLogging.LogLevel, Module, String, Int64, TerminalLogger, IOBuffer}}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})
      @ Base ./array.jl:699
   [16] collect_similar
      @ ./array.jl:628 [inlined]
   [17] map
      @ ./abstractarray.jl:2233 [inlined]
   [18] #genmsgs#1
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:21 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:344
   [20] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [21] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:337
   [22] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:55
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/TerminalLoggers/L4D4Q/test/runtests.jl:11
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ none:6
   [28] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [29] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [30] _start()
      @ Base ./client.jl:485
Test Summary:                          | Pass  Fail  Error  Total
TerminalLogger                         |   35     4      6     45
  Default metadata formatting          |    8                   8
  Prefix and suffix layout             |    4                   4
  Metadata suffix, right justification |    7                   7
  Limiting large data structures       |          2             2
  Message formatting                   |    3     1             4
  Independent progress bars            |                 1      1
  Nested progress bars                 |                 1      1
ERROR: LoadError: LoadError: Some tests did not pass: 35 passed, 4 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/TerminalLogger.jl:53
in expression starting at /home/pkgeval/.julia/packages/TerminalLoggers/L4D4Q/test/runtests.jl:11
ERROR: Package TerminalLoggers errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
