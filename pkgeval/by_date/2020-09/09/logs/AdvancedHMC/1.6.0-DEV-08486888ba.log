Julia Version 1.6.0-DEV.878
Commit 08486888ba (2020-09-09 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Requires ───────────────────── v1.0.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed OrderedCollections ─────────── v1.3.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed Parameters ─────────────────── v0.12.1
  Installed DataStructures ─────────────── v0.18.4
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed ArgCheck ───────────────────── v2.1.0
  Installed DataAPI ────────────────────── v1.3.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed StatsFuns ──────────────────── v0.9.5
  Installed Compat ─────────────────────── v3.15.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed ProgressMeter ──────────────── v1.3.2
  Installed Missings ───────────────────── v0.4.4
  Installed UnPack ─────────────────────── v1.0.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed DocStringExtensions ────────── v0.8.3
  Installed StatsBase ──────────────────── v0.33.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.25
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.25
  [dce04be8] + ArgCheck v2.1.0
  [34da2185] + Compat v3.15.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.4
  [ffbed154] + DocStringExtensions v0.8.3
  [505f98c9] + InplaceOps v0.3.0
  [e1d29d7a] + Missings v0.4.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [92933f4c] + ProgressMeter v1.3.2
  [ae029012] + Requires v1.0.2
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [2913bbd2] + StatsBase v0.33.1
  [4c63d2b9] + StatsFuns v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
Status `/tmp/jl_vEVEqD/Project.toml`
  [0bf59076] AdvancedHMC v0.2.25
  [dce04be8] ArgCheck v2.1.0
  [76274a88] Bijectors v0.8.3
  [31c24e10] Distributions v0.23.11
  [ffbed154] DocStringExtensions v0.8.3
  [f6369f11] ForwardDiff v0.10.12
  [505f98c9] InplaceOps v0.3.0
  [1dea7af3] OrdinaryDiffEq v5.42.7
  [d96e819e] Parameters v0.12.1
  [92933f4c] ProgressMeter v1.3.2
  [ae029012] Requires v1.0.2
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [fce5fe82] Turing v0.14.1
  [b8865327] UnicodePlots v1.3.0
  [e88e6eb3] Zygote v0.5.6
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_vEVEqD/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.0.2
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [b5ca4192] AdvancedVI v0.1.0
  [dce04be8] ArgCheck v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.12.0
  [4c555306] ArrayLayouts v0.4.7
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.8.3
  [b99e7846] BinaryProvider v0.5.10
  [082447d4] ChainRules v0.7.18
  [d360d2e6] ChainRulesCore v0.9.8
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.15.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [adafc99b] CpuId v0.2.2
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.47.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.0
  [31c24e10] Distributions v0.23.11
  [ced4e74d] DistributionsAD v0.6.7
  [ffbed154] DocStringExtensions v0.8.3
  [366bfd00] DynamicPPL v0.9.1
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.8.0
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.9.6
  [6a86dc24] FiniteDiff v2.6.0
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.4.1
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [2ee39098] LabelledArrays v1.3.0
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.1.0
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.2
  [bdcacae8] LoopVectorization v0.8.26
  [c7f686f2] MCMCChains v4.1.0
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.0
  [2774e3e8] NLsolve v4.4.1
  [872c559c] NNlib v0.7.4
  [77ba4419] NaNMath v0.3.4
  [86f7a689] NamedArrays v0.9.4
  [c020b1a1] NaturalSort v1.0.0
  [6fe1bfb0] OffsetArrays v1.1.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [1dea7af3] OrdinaryDiffEq v5.42.7
  [90014a1f] PDMats v0.10.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [08abe8d2] PrettyTables v0.9.1
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.3.2
  [1fd47b50] QuadGK v2.4.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.1.0
  [731186ca] RecursiveArrayTools v2.7.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.25
  [476501e8] SLEEFPirates v0.5.5
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.10.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [5d786b92] TerminalLoggers v0.1.2
  [9f7883ad] Tracker v0.2.11
  [84d833dd] TransformVariables v0.3.10
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.14.1
  [3a884ed6] UnPack v1.0.2
  [b8865327] UnicodePlots v1.3.0
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [e88e6eb3] Zygote v0.5.6
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.359258099
│   t_steps = 0.01153367
└   t_step / t_steps = 31.148636903951648
DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))[ Info: Adaptation tests for HMCDA with StepSizeAdaptor are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐              
            7 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ vectorization
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀│ seperate     
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢱⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⢇│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⠀⡸⠀⠀⠘│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠈⢆⡇⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠑⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠒⢄⣀⣀⡎⠀⠀⠀⠀⠀⠀⠀│              
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⡰⢣⠀⠀⠀⠀⢀⡀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⢠⠃⠀⠱⡠⠒⠉⠁⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⣀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⢠⠔⠁⢀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⢠⣃⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⣀⡠⠔⢪⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
            1 │⠀⠀⠢⠤⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              └────────────────────────────────────────┘              
              0                                       20
                            Num of chains

Sampling  0%%|                               |  ETA: 1:35:38[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00020346568344440595
  log_density:                   -10.645389177214183
  hamiltonian_energy:            15.853991305825868
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.500013199024373
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%%|███████████████████████████████| Time: 0:00:04[K
  iterations:                    2000
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.9821769341977679
  log_density:                   -11.830073635193614
  hamiltonian_energy:            15.453558201179401
  hamiltonian_energy_error:      -0.21525070293123783
  max_hamiltonian_energy_error:  -0.3534038635300565
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6746722264381083
  nom_step_size:                 0.6746722264381083
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9712394463009114, 1.0116 ...])
┌ Info: Finished 2000 sampling steps for 1 chains in 4.199773423 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9712394463009114, 1.0116 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.675), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.055476816470965
└   average_acceptance_rate = 0.8392932916219953
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=WelfordVar,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.5698777505330948),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.57)
└   h.metric = DiagEuclideanMetric([0.35166212544951386, 0.559 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.054698883 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.35166212544951386, 0.559 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.57), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.8702985017702929
└   average_acceptance_rate = 0.9182427221358377
Test Summary: | Pass  Total
AdvancedHMC   | 3324   3324
    Testing AdvancedHMC tests passed 
