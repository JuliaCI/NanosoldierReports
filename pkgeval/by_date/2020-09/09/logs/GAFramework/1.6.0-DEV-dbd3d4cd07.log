Julia Version 1.6.0-DEV.861
Commit dbd3d4cd07 (2020-09-08 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_OiSB8X/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_OiSB8X/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172045187822617
curgen: 20 fitness: 0.21723354072158776
curgen: 30 fitness: 0.21723354072158776
curgen: 40 fitness: 0.21723354072158776
curgen: 50 fitness: 0.21723354072158776
CoordinateCreature{Vector{Float64}}([-0.2225926149820827], -0.21723354072158776) -0.2225926149820827 -0.21723354072158776
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580053648729828
curgen: 100 fitness: 3.258203553303895
curgen: 150 fitness: 3.25825382871553
curgen: 200 fitness: 3.258254488714217
curgen: 250 fitness: 3.2583460441505316
curgen: 300 fitness: 3.258380884524904
curgen: 350 fitness: 3.258380884524904
curgen: 400 fitness: 3.258380884524904
curgen: 450 fitness: 3.258382991862568
curgen: 500 fitness: 3.258439291211301
CoordinateCreature{Vector{Float64}}([-0.2219452166596879, -0.22283179300912687, 0.22268019877575354, 0.22205116067241704, -0.22299060464059373, 0.2224931653908805, 0.2228663300627374, -0.2224338707011352, -0.22247990377986115, -0.22214359511859094, 0.22238895768575528, -0.22250568487021366, -0.22237569067255913, -0.22299163153854437, -0.22238573532075137], -3.258439291211301) [-0.2219452166596879, -0.22283179300912687, 0.22268019877575354, 0.22205116067241704, -0.22299060464059373, 0.2224931653908805, 0.2228663300627374, -0.2224338707011352, -0.22247990377986115, -0.22214359511859094, 0.22238895768575528, -0.22250568487021366, -0.22237569067255913, -0.22299163153854437, -0.22238573532075137] -3.258439291211301
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0022362173023395826
curgen: 100 fitness: -0.0022362173023395826
curgen: 150 fitness: -0.0022362173023395826
curgen: 200 fitness: -0.0022362173023395826
curgen: 250 fitness: -0.0022362173023395826
curgen: 300 fitness: -0.0020840592478350572
curgen: 350 fitness: -0.0017390250570201715
curgen: 400 fitness: -0.0017390250570201715
curgen: 450 fitness: -0.0017390250570201715
curgen: 500 fitness: -0.0017086891851647579
CoordinateCreature{Vector{Float64}}([1.5257119045880216e-5, 0.0006259196838841023, -5.763914173766225e-5, -0.0007225344397775685, -0.0001223948526297182, 0.002328520081412008, 0.0005119070283766811, -7.7661897999817e-5, 0.0009356833213039383, -0.0005519111683704089, 8.328653720678245e-5, 0.0007108002683520814, 0.0003975351243905127, 0.0003148784963511106, -0.00020216645047652256], 0.0017086891851647579) [1.5257119045880216e-5, 0.0006259196838841023, -5.763914173766225e-5, -0.0007225344397775685, -0.0001223948526297182, 0.002328520081412008, 0.0005119070283766811, -7.7661897999817e-5, 0.0009356833213039383, -0.0005519111683704089, 8.328653720678245e-5, 0.0007108002683520814, 0.0003975351243905127, 0.0003148784963511106, -0.00020216645047652256] 0.0017086891851647579
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
