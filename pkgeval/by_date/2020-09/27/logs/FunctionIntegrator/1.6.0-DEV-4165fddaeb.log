Julia Version 1.6.0-DEV.1064
Commit 4165fddaeb (2020-09-27 08:40 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_7RRpug/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_7RRpug/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.825807 seconds (1.39 M allocations: 74.163 MiB, 1.87% gc time)
Running: chebyshev_quadrature with k=1
  1.830782 seconds (2.19 M allocations: 126.495 MiB, 6.44% gc time)
Running: chebyshev_quadrature with k=2
  0.303858 seconds (409.38 k allocations: 23.552 MiB, 14.00% gc time)
Running: chebyshev_quadrature with k=3
  0.332213 seconds (473.74 k allocations: 26.619 MiB)
Running: chebyshev_quadrature with k=4
  0.399761 seconds (418.55 k allocations: 23.254 MiB, 19.18% gc time)
Running: jacobi_quadrature with α=β=1
 40.471611 seconds (36.48 M allocations: 3.005 GiB, 9.66% gc time)
Running: laguerre_quadrature with k=1
  2.757060 seconds (3.17 M allocations: 177.063 MiB, 2.78% gc time)
Running: legendre_quadrature
  0.215444 seconds (206.01 k allocations: 11.890 MiB)
Running: lobatto_quadrature
  0.367660 seconds (329.27 k allocations: 19.873 MiB, 5.96% gc time)
Running: radau_quadrature
  0.381971 seconds (446.54 k allocations: 27.201 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.283769 seconds (100.02 M allocations: 1.491 GiB, 0.23% gc time)
Running: rectangle_rule_midpoint.
  0.147449 seconds (172.46 k allocations: 3.827 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.249142 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.554768 seconds (722.79 k allocations: 41.720 MiB, 6.08% gc time)
Running: simpsons_rule
  0.035333 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.085688 seconds (108.37 k allocations: 5.745 MiB)
Running: trapezoidal_rule
  0.300084 seconds (1.51 M allocations: 25.665 MiB, 5.32% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.156869 seconds (30.98 k allocations: 1.865 MiB, 47.77% gc time)
Running: chebyshev_quadrature with k=1
  0.424522 seconds (290.18 k allocations: 15.315 MiB)
Running: chebyshev_quadrature with k=2
  0.157639 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.167397 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.171498 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  2.509744 seconds (503.57 k allocations: 161.778 MiB, 10.79% gc time)
Running: legendre_quadrature
  0.166778 seconds (41.07 k allocations: 2.363 MiB)
Running: lobatto_quadrature
  0.020708 seconds (15.50 k allocations: 987.950 KiB)
Running: radau_quadrature
  0.020793 seconds (15.61 k allocations: 994.368 KiB)
Running: rectangle_rule_left
 27.503555 seconds (471.41 M allocations: 7.025 GiB, 2.23% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.399983 seconds (476.96 M allocations: 7.107 GiB, 2.34% gc time)
Running: rombergs_method
  0.353402 seconds (326.34 k allocations: 18.520 MiB)
Running: simpsons_rule
  0.000024 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065161 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.056321 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030878 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.118479 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.105952 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.113456 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.184247 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.368138 seconds (363.66 k allocations: 18.977 MiB, 7.79% gc time)
Running: legendre_quadrature
  0.094737 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000101 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000068 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000466 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000315 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000466 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.145235 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000046 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.026505 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023178 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.064377 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.250353 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.434916 seconds (283.16 k allocations: 15.880 MiB, 9.22% gc time)
Running: chebyshev_quadrature with k=3
  0.270141 seconds (234.76 k allocations: 13.133 MiB)
Running: chebyshev_quadrature with k=4
  0.177122 seconds (234.76 k allocations: 13.067 MiB)
Running: jacobi_quadrature with α=β=1
  2.316968 seconds (446.74 k allocations: 163.220 MiB, 10.97% gc time)
Running: legendre_quadrature
  0.178739 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.194638 seconds (196.62 k allocations: 11.411 MiB)
Running: radau_quadrature
  0.211348 seconds (196.61 k allocations: 11.410 MiB, 9.06% gc time)
Running: rectangle_rule_left
  1.207287 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.025757 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  1.083896 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.126553 seconds (134.26 k allocations: 7.763 MiB)
Running: simpsons_rule
  0.028515 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.032139 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.026111 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.038204 seconds (99.53 k allocations: 2.979 MiB)
Running: chebyshev_quadrature with k=1
  0.183916 seconds (237.19 k allocations: 13.054 MiB)
Running: chebyshev_quadrature with k=2
  0.217226 seconds (290.20 k allocations: 15.898 MiB, 8.52% gc time)
Running: chebyshev_quadrature with k=3
  0.184551 seconds (241.33 k allocations: 13.116 MiB)
Running: chebyshev_quadrature with k=4
  0.184750 seconds (241.33 k allocations: 13.120 MiB)
Running: hermite_quadrature with k=2
 14.981306 seconds (20.09 M allocations: 1.055 GiB, 8.63% gc time)
Running: jacobi_quadrature with α=β=1
  0.487119 seconds (455.91 k allocations: 49.389 MiB, 10.39% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.204737 seconds (276.26 k allocations: 15.253 MiB)
Running: legendre_quadrature
  0.197828 seconds (191.98 k allocations: 11.047 MiB, 17.33% gc time)
Running: lobatto_quadrature
  0.259008 seconds (217.27 k allocations: 37.187 MiB)
Running: radau_quadrature
  0.250229 seconds (213.86 k allocations: 29.847 MiB, 8.63% gc time)
Running: rectangle_rule_left
  0.031411 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.028454 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.026140 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.131266 seconds (136.74 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.039168 seconds (39.37 k allocations: 2.062 MiB)
Running: simpsons38_rule
  0.042434 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.031866 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.082172 seconds (59.91 k allocations: 2.280 MiB, 48.50% gc time)
Running: chebyshev_quadrature with k=1
  0.226366 seconds (232.72 k allocations: 12.824 MiB)
Running: chebyshev_quadrature with k=2
  0.227778 seconds (285.38 k allocations: 15.644 MiB)
Running: chebyshev_quadrature with k=3
  0.203656 seconds (236.87 k allocations: 12.928 MiB)
Running: chebyshev_quadrature with k=4
  0.243224 seconds (236.87 k allocations: 12.945 MiB, 20.62% gc time)
Running: hermite_quadrature with k=2
  0.150808 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
  9.904920 seconds (449.18 k allocations: 1.175 GiB, 14.34% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.260637 seconds (271.55 k allocations: 15.066 MiB, 11.46% gc time)
Running: legendre_quadrature
  0.198091 seconds (187.55 k allocations: 10.814 MiB)
Running: lobatto_quadrature
  0.279438 seconds (208.03 k allocations: 22.914 MiB)
Running: radau_quadrature
  0.301705 seconds (207.19 k allocations: 20.848 MiB, 5.39% gc time)
Running: rectangle_rule_left
  0.032775 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.031685 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.035169 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.131826 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.043074 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.052926 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.031022 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032265 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.220450 seconds (231.10 k allocations: 13.043 MiB, 7.44% gc time)
Running: chebyshev_quadrature with k=2
  0.237620 seconds (283.67 k allocations: 15.985 MiB)
Running: chebyshev_quadrature with k=3
  0.283540 seconds (235.25 k allocations: 13.146 MiB)
Running: chebyshev_quadrature with k=4
  0.245909 seconds (235.25 k allocations: 12.971 MiB, 8.09% gc time)
Running: jacobi_quadrature with α=β=1
  2.182593 seconds (447.27 k allocations: 194.236 MiB, 4.75% gc time)
Running: legendre_quadrature
  0.183153 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.202617 seconds (197.11 k allocations: 11.444 MiB, 8.24% gc time)
Running: radau_quadrature
  0.190844 seconds (197.11 k allocations: 11.437 MiB)
Running: rectangle_rule_left
  0.290606 seconds (19.34 k allocations: 1.173 MiB)
Running: rectangle_rule_midpoint
  0.024860 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.163190 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.176202 seconds (145.02 k allocations: 8.483 MiB)
Running: simpsons_rule
  0.039763 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.049947 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.043463 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033995 seconds (31.64 k allocations: 1.826 MiB)
Running: chebyshev_quadrature with k=1
  0.228949 seconds (231.69 k allocations: 12.989 MiB, 11.10% gc time)
Running: chebyshev_quadrature with k=2
  0.255977 seconds (284.30 k allocations: 15.954 MiB)
Running: chebyshev_quadrature with k=3
  0.191979 seconds (235.84 k allocations: 13.128 MiB)
Running: chebyshev_quadrature with k=4
  0.214199 seconds (235.84 k allocations: 13.160 MiB, 9.08% gc time)
Running: jacobi_quadrature with α=β=1
  1.910246 seconds (447.98 k allocations: 148.917 MiB, 4.31% gc time)
Running: legendre_quadrature
  0.174508 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.217563 seconds (197.71 k allocations: 11.457 MiB, 8.95% gc time)
Running: radau_quadrature
  0.204009 seconds (197.70 k allocations: 11.466 MiB)
Running: rectangle_rule_left
  1.098164 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.028139 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  1.036940 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.175812 seconds (135.49 k allocations: 7.815 MiB)
Running: simpsons_rule
  0.037407 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.040041 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.031785 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.172299 seconds (145.07 k allocations: 8.694 MiB)
Running: chebyshev_quadrature with k=1
  0.176395 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.190128 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.197353 seconds (92.58 k allocations: 2.656 MiB)
Running: chebyshev_quadrature with k=4
  0.194736 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.263068 seconds (480.06 k allocations: 167.743 MiB, 8.12% gc time)
Running: legendre_quadrature
  0.122304 seconds (18.73 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000279 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000146 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 45.120824 seconds (590.00 M allocations: 8.792 GiB, 2.98% gc time)
Running: rectangle_rule_midpoint
  0.000128 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.372302 seconds (592.75 M allocations: 8.833 GiB, 2.84% gc time)
Running: rombergs_method
  0.140612 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000052 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027984 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021189 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.618877 seconds (629.32 M allocations: 9.387 GiB, 2.83% gc time)
Running: chebyshev_quadrature with k=1
  0.492524 seconds (413.87 k allocations: 22.942 MiB)
Running: chebyshev_quadrature with k=2
 26.128796 seconds (468.51 k allocations: 4.040 GiB, 2.24% gc time)
Running: chebyshev_quadrature with k=3
 13.188576 seconds (249.12 k allocations: 1.642 GiB, 2.21% gc time)
Running: chebyshev_quadrature with k=4
 17.337973 seconds (249.12 k allocations: 2.260 GiB, 1.33% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 54.720896 seconds (484.00 k allocations: 13.254 GiB, 3.89% gc time)
Running: legendre_quadrature.
 14.621229 seconds (223.16 k allocations: 1.976 GiB, 1.30% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.597273 seconds (8.23 M allocations: 13.383 GiB, 4.36% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.974298 seconds (7.23 M allocations: 13.369 GiB, 4.81% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.514295 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 19.934306 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 21.787412 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.968178 seconds (438.07 k allocations: 152.665 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.333267 seconds (600.04 M allocations: 8.943 GiB, 5.65% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.816618 seconds (600.05 M allocations: 8.943 GiB, 6.25% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.219557 seconds (600.03 M allocations: 8.943 GiB, 5.99% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.061911 seconds (180.45 k allocations: 4.405 MiB)
Running: chebyshev_quadrature with k=1
  0.229166 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.221139 seconds (272.34 k allocations: 14.523 MiB)
Running: chebyshev_quadrature with k=3
  0.196365 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.225382 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.378790 seconds (388.85 k allocations: 34.966 MiB)
Running: laguerre_quadrature with k=2
  0.214339 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.147477 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.035823 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.035383 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.053066 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.042344 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.049022 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.228271 seconds (171.70 k allocations: 9.831 MiB)
Running: simpsons_rule
  0.001264 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.040605 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.186377 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001988 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.108887 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.133532 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.101166 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.107325 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  6.345182 seconds (365.94 k allocations: 904.829 MiB, 3.19% gc time)
Running: legendre_quadrature
  0.101253 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000214 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000214 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.818098 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000477 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.625508 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.097231 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000062 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000948 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000514 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.118223 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.117627 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.118562 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.118543 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  4.217943 seconds (372.50 k allocations: 252.963 MiB)
Running: legendre_quadrature
  0.082020 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000101 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000052 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.137159 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000224 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.945786 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.128819 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000031 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000027 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000626 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
