Julia Version 1.6.0-DEV.1064
Commit 4165fddaeb (2020-09-27 08:40 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ZTQ3TN/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ZTQ3TN/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08043171752901736 -0.028176044334456737; -0.08043171752901736 0.0 0.0007099051988804354; 0.028176044334456737 -0.0007099051988804354 0.0])
dAA = so3([0.0 0.012752619795976517 -0.09326942519332884; -0.012752619795976517 0.0 0.12197268951548922; 0.09326942519332884 -0.12197268951548922 0.0])
dAA = so3([0.0 0.042113888121503594 0.04821668802968932; -0.042113888121503594 0.0 -0.11736091184854394; -0.04821668802968932 0.11736091184854394 0.0])
dAA = Quaternion(0.9970806145321113, [0.0019522246651618546, -0.07220150077229191, 0.02476651427538906])
dAA = SO3([0.9982200978372171 -0.014032414351375403 0.05796315744788875; 0.006439717594323753 0.9916032805548118 0.12915674210137512; -0.05928883799808176 -0.12855358937193112 0.9899286885167187])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9726475415383186 0.06621262013972727 -0.22264916095439713; 0.004014617261429001 0.9535783522851136 0.3011182639785439; 0.23225124927050253 -0.2937757903358274 0.927229821686539]), [-0.007099051988804353, -0.28176044334456735, -0.8043171752901735])
xj = SE3(SO3([0.9278583899910724 -0.12125535935770126 -0.35266974062174605; 0.1209696715072599 0.9923911147020014 -0.022939355613110977; 0.3527678368255822 -0.02137786910694935 0.9354666429188405]), [1.1736091184854394, 0.4821668802968932, -0.4211388812150359])
Dx = SE3(SO3([0.9848955996570559 -0.11891969348527234 -0.12585215245492445; 0.07315534508380656 0.9445743493234539 -0.320043112854882; 0.15693614389884142 0.30600229590894 0.9390067314117719]), [1.2404734125982382, 0.6940738339496264, 0.32244312730204217])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
