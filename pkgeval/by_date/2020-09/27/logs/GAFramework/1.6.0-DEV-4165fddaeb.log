Julia Version 1.6.0-DEV.1064
Commit 4165fddaeb (2020-09-27 08:40 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_1eyKtM/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_1eyKtM/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172312213202101
curgen: 20 fitness: 0.2172312213202101
curgen: 30 fitness: 0.2172312213202101
curgen: 40 fitness: 0.2172312213202101
curgen: 50 fitness: 0.2172312213202101
CoordinateCreature{Vector{Float64}}([0.22231517514010532], -0.2172312213202101) 0.22231517514010532 -0.2172312213202101
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257257407085304
curgen: 100 fitness: 3.257738111070032
curgen: 150 fitness: 3.258239209137166
curgen: 200 fitness: 3.258239379711827
curgen: 250 fitness: 3.2583040859868238
curgen: 300 fitness: 3.2584173820890667
curgen: 350 fitness: 3.2584248964528566
curgen: 400 fitness: 3.2584248964528566
curgen: 450 fitness: 3.2584248964528566
curgen: 500 fitness: 3.258430132972735
CoordinateCreature{Vector{Float64}}([0.22261125220988448, -0.22249701634768904, -0.2220740776821513, 0.22317758597075074, -0.22211025781359625, -0.22253206710422166, -0.22218569312277608, -0.2231302806395508, 0.22258750019865522, -0.22279290077936081, -0.22290764876144378, 0.22298318803465275, -0.22246467534498118, -0.22251421531397841, 0.22259316438618348], -3.258430132972735) [0.22261125220988448, -0.22249701634768904, -0.2220740776821513, 0.22317758597075074, -0.22211025781359625, -0.22253206710422166, -0.22218569312277608, -0.2231302806395508, 0.22258750019865522, -0.22279290077936081, -0.22290764876144378, 0.22298318803465275, -0.22246467534498118, -0.22251421531397841, 0.22259316438618348] -3.258430132972735
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0032738380675709777
curgen: 100 fitness: -0.0007148317385201608
curgen: 150 fitness: -0.00047938489959165054
curgen: 200 fitness: -0.0004619119340816269
curgen: 250 fitness: -0.0004619119340816269
curgen: 300 fitness: -0.0004619119340816269
curgen: 350 fitness: -0.00029059057069957817
curgen: 400 fitness: -0.00029059057069957817
curgen: 450 fitness: -0.00025032644407474436
curgen: 500 fitness: -0.00022088657908625464
CoordinateCreature{Vector{Float64}}([0.00018949118594748987, -0.00014608568575131815, -8.714758769690344e-5, 3.542746150184779e-5, 0.00023361977456221527, 6.550133201169243e-5, 0.00019538750033494263, -0.00019196719412871606, 0.0005147413464770009, -5.8286802598483175e-5, 0.0007089990171578406, -3.2020345278014826e-5, 0.00012192722543682356, -0.0003543133176418336, -3.043043205574208e-5], 0.00022088657908625464) [0.00018949118594748987, -0.00014608568575131815, -8.714758769690344e-5, 3.542746150184779e-5, 0.00023361977456221527, 6.550133201169243e-5, 0.00019538750033494263, -0.00019196719412871606, 0.0005147413464770009, -5.8286802598483175e-5, 0.0007089990171578406, -3.2020345278014826e-5, 0.00012192722543682356, -0.0003543133176418336, -3.043043205574208e-5] 0.00022088657908625464
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
