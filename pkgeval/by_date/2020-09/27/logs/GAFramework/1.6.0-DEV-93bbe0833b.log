Julia Version 1.6.0-DEV.1063
Commit 93bbe0833b (2020-09-26 14:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_TAnWPp/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_TAnWPp/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722793541566077
curgen: 20 fitness: 0.21722793541566077
curgen: 30 fitness: 0.217232854405622
curgen: 40 fitness: 0.217232854405622
curgen: 50 fitness: 0.217232854405622
CoordinateCreature{Vector{Float64}}([-0.22241601562626725], -0.217232854405622) -0.22241601562626725 -0.217232854405622
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258183194205458
curgen: 100 fitness: 3.258241122920781
curgen: 150 fitness: 3.258343751535052
curgen: 200 fitness: 3.258357967025169
curgen: 250 fitness: 3.2583751833862533
curgen: 300 fitness: 3.2583751833862533
curgen: 350 fitness: 3.258400746776753
curgen: 400 fitness: 3.258417430295344
curgen: 450 fitness: 3.258433083803409
curgen: 500 fitness: 3.2584459050660155
CoordinateCreature{Vector{Float64}}([0.2225791523304993, 0.22266517808067063, -0.22191842720632493, -0.22206683632141336, 0.22250864582106147, 0.22253065240218667, 0.22252967764044132, -0.22278957140360242, 0.2223274488625522, 0.2225831511351513, -0.22291643150849522, -0.22274531888970286, -0.22247387963021006, -0.22317082591602852, 0.22256152908994875], -3.2584459050660155) [0.2225791523304993, 0.22266517808067063, -0.22191842720632493, -0.22206683632141336, 0.22250864582106147, 0.22253065240218667, 0.22252967764044132, -0.22278957140360242, 0.2223274488625522, 0.2225831511351513, -0.22291643150849522, -0.22274531888970286, -0.22247387963021006, -0.22317082591602852, 0.22256152908994875] -3.2584459050660155
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0016525935054119145
curgen: 100 fitness: -0.0015864095457800431
curgen: 150 fitness: -0.0014755752560517976
curgen: 200 fitness: -0.0014755752560517976
curgen: 250 fitness: -0.0013931147561550006
curgen: 300 fitness: -0.0013535583840962317
curgen: 350 fitness: -0.0013535583840962317
curgen: 400 fitness: -0.0013535583840962317
curgen: 450 fitness: -0.001234577321042707
curgen: 500 fitness: -0.0009021546720759943
CoordinateCreature{Vector{Float64}}([-0.00048265600690593305, -0.0004803196493303295, -0.0006862304042878178, 0.0008180874159216321, -0.0007226346235596755, -6.167745501418575e-5, -4.203844613865238e-5, 0.0010612919464577182, -0.0002601684903471256, -0.00026931326015424903, -0.00031889604689102485, 0.0006568956384546644, 2.6932531206133245e-5, -0.00052529512105981, 0.0005824954253069597], 0.0009021546720759943) [-0.00048265600690593305, -0.0004803196493303295, -0.0006862304042878178, 0.0008180874159216321, -0.0007226346235596755, -6.167745501418575e-5, -4.203844613865238e-5, 0.0010612919464577182, -0.0002601684903471256, -0.00026931326015424903, -0.00031889604689102485, 0.0006568956384546644, 2.6932531206133245e-5, -0.00052529512105981, 0.0005824954253069597] 0.0009021546720759943
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
