Julia Version 1.6.0-DEV.878
Commit 08486888ba (2020-09-09 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed XML2_jll ───── v2.9.10+2
  Installed Zlib_jll ───── v1.2.11+16
  Installed Libiconv_jll ─ v1.16.0+6
  Installed EzXML ──────── v1.1.0
  Installed ExprTools ──── v0.1.2
  Installed RecipesBase ── v1.1.0
  Installed Intervals ──── v1.4.2
  Installed TimeZones ──── v1.3.2
  Installed Mocking ────── v0.7.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [d8418881] + Intervals v1.4.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e2ba6199] + ExprTools v0.1.2
  [8f5d6c58] + EzXML v1.1.0
  [d8418881] + Intervals v1.4.2
  [94ce4f54] + Libiconv_jll v1.16.0+6
  [78c3b35d] + Mocking v0.7.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [f269a46b] + TimeZones v1.3.2
  [02c8fc9c] + XML2_jll v2.9.10+2
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
    Testing Intervals
Status `/tmp/jl_DmkS6e/Project.toml`
  [e30172f5] Documenter v0.24.11
  [6218d12a] ImageMagick v1.1.6
  [d8418881] Intervals v1.4.2
  [91a5bcdd] Plots v1.6.3
  [3cdcf5f2] RecipesBase v1.1.0
  [f269a46b] TimeZones v1.3.2
  [34922c18] VisualRegressionTests v1.0.0
  [ade2ca70] Dates
  [de0858da] Printf
  [9e88b42a] Serialization
  [8dfed614] Test
Status `/tmp/jl_DmkS6e/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [39de3d68] AxisArrays v0.4.3
  [6e34b625] Bzip2_jll v1.0.6+4
  [aafaddc9] CatIndices v0.2.1
  [35d6a980] ColorSchemes v3.9.0
  [3da002f7] ColorTypes v0.10.9
  [c3611d14] ColorVectorSpace v0.8.5
  [5ae59095] Colors v0.12.4
  [34da2185] Compat v3.15.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [ed09eef8] ComputationalResources v0.3.2
  [d38c429a] Contour v0.5.5
  [dc8bdbbb] CustomUnitRanges v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [e2d170a0] DataValueInterfaces v1.0.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.24.11
  [da5c29d0] EllipsisNotation v0.4.0
  [e2ba6199] ExprTools v0.1.2
  [8f5d6c58] EzXML v1.1.0
  [c87230d0] FFMPEG v0.4.0
  [b22a6f82] FFMPEG_jll v4.3.1+2
  [4f61f5a4] FFTViews v0.3.1
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [5789e2e9] FileIO v1.4.3
  [53c48c17] FixedPointNumbers v0.8.4
  [d7e528f0] FreeType2_jll v2.10.1+4
  [559328eb] FriBidi_jll v1.0.5+5
  [28b8d3ca] GR v0.52.0
  [5c1252a2] GeometryBasics v0.2.15
  [4d00f742] GeometryTypes v0.8.3
  [a2bd30eb] Graphics v1.0.2
  [cd3eb016] HTTP v0.8.17
  [2803e5a7] ImageAxes v0.6.5
  [a09fc81d] ImageCore v0.8.16
  [6a3955dd] ImageFiltering v0.6.15
  [6218d12a] ImageMagick v1.1.6
  [c73af94c] ImageMagick_jll v6.9.10-12+3
  [bc367c6b] ImageMetadata v0.9.2
  [9b13fd28] IndirectArrays v0.5.1
  [83e8ac13] IniFile v0.5.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.5.1
  [d8418881] Intervals v1.4.2
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [aacddb02] JpegTurbo_jll v2.0.1+2
  [c1c5ebd0] LAME_jll v3.100.0+2
  [dd192d2f] LibVPX_jll v1.9.0+0
  [94ce4f54] Libiconv_jll v1.16.0+6
  [89763e89] Libtiff_jll v4.1.0+1
  [856f044c] MKL_jll v2020.2.254+0
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [e94cdb99] MosaicViews v0.2.3
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.1.3
  [e7412a2a] Ogg_jll v1.3.4+1
  [458c3c95] OpenSSL_jll v1.1.1+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [91d4177d] Opus_jll v1.3.1+2
  [bac558e1] OrderedCollections v1.3.0
  [5432bcbf] PaddedViews v0.5.5
  [69de0a69] Parsers v1.0.10
  [ccf2f8ad] PlotThemes v2.0.0
  [995b91a9] PlotUtils v1.0.6
  [91a5bcdd] Plots v1.6.3
  [dca85d43] QuartzImageIO v0.7.3
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.1.0
  [01d81517] RecipesPipeline v0.1.13
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [992d4aef] Showoff v0.3.1
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [09ab397b] StructArrays v0.4.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [06e1c1a7] TiledIteration v0.2.4
  [f269a46b] TimeZones v1.3.2
  [34922c18] VisualRegressionTests v1.0.0
  [02c8fc9c] XML2_jll v2.9.10+2
  [83775a58] Zlib_jll v1.2.11+16
  [3161d3a3] Zstd_jll v1.4.5+1
  [0ac62f75] libass_jll v0.14.0+3
  [f638f0a6] libfdk_aac_jll v0.1.6+3
  [b53b4c65] libpng_jll v1.6.37+5
  [f27f6e37] libvorbis_jll v1.3.6+5
  [1270edf5] x264_jll v2020.7.14+1
  [dfaa095f] x265_jll v3.0.0+2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/interval.jl:144
  Expression: sprint(show, interval) == "Interval{$(Int),Open,Open}(1, 2)"
   Evaluated: "Interval{Int64, Open, Open}(1, 2)" == "Interval{Int64,Open,Open}(1, 2)"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:144
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:141
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:7
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/interval.jl:149
  Expression: sprint(show, interval) == "Interval{Char,Open,Closed}('a', 'b')"
   Evaluated: "Interval{Char, Open, Closed}('a', 'b')" == "Interval{Char,Open,Closed}('a', 'b')"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:149
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:141
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:7
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/interval.jl:162
  Expression: sprint(show, interval) == shown
   Evaluated: "Interval{Date, Closed, Open}(Date(\"2012-01-01\"), Date(\"2013-01-01\"))" == "Interval{Date,Closed,Open}(Date(\"2012-01-01\"), Date(\"2013-01-01\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:162
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:141
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:7
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/interval.jl:167
  Expression: sprint(show, interval) == "Interval{String,Closed,Closed}(\"a\", \"b\")"
   Evaluated: "Interval{String, Closed, Closed}(\"a\", \"b\")" == "Interval{String,Closed,Closed}(\"a\", \"b\")"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:167
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:141
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/interval.jl:7
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:229
  Expression: sprint(show, AnchoredInterval{Hour(-1)}) == "HourEnding{T,L,R} $(where_tlr)"
   Evaluated: "HourEnding{T, L, R} where R<:Bounded where L<:Bounded where T" == "HourEnding{T,L,R} where R<:Bounded where L<:Bounded where T"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:229
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:231
  Expression: sprint(show, AnchoredInterval{Hour(1)}) == "HourBeginning{T,L,R} $(where_tlr)"
   Evaluated: "HourBeginning{T, L, R} where R<:Bounded where L<:Bounded where T" == "HourBeginning{T,L,R} where R<:Bounded where L<:Bounded where T"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:231
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:240
  Expression: sprint(show, AnchoredInterval{Day(-1)}) == "AnchoredInterval{$(repr(Day(-1))),T,L,R} $(where_tlr)"
   Evaluated: "AnchoredInterval{Day(-1), T, L, R} where R<:Bounded where L<:Bounded where T" == "AnchoredInterval{Day(-1),T,L,R} where R<:Bounded where L<:Bounded where T"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:240
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:242
  Expression: sprint(show, AnchoredInterval{Day(1)}) == "AnchoredInterval{$(repr(Day(1))),T,L,R} $(where_tlr)"
   Evaluated: "AnchoredInterval{Day(1), T, L, R} where R<:Bounded where L<:Bounded where T" == "AnchoredInterval{Day(1),T,L,R} where R<:Bounded where L<:Bounded where T"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:242
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:244
  Expression: sprint(show, AnchoredInterval{Day(-1), DateTime}) == "AnchoredInterval{$(repr(Day(-1))),DateTime,L,R} $(where_lr)"
   Evaluated: "AnchoredInterval{Day(-1), DateTime, L, R} where R<:Bounded where L<:Bounded" == "AnchoredInterval{Day(-1),DateTime,L,R} where R<:Bounded where L<:Bounded"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:244
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:246
  Expression: sprint(show, AnchoredInterval{Day(1), DateTime}) == "AnchoredInterval{$(repr(Day(1))),DateTime,L,R} $(where_lr)"
   Evaluated: "AnchoredInterval{Day(1), DateTime, L, R} where R<:Bounded where L<:Bounded" == "AnchoredInterval{Day(1),DateTime,L,R} where R<:Bounded where L<:Bounded"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:246
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime, Closed, Open}(DateTime(\"2013-02-13T00:00:00\"))" == "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime, Closed, Open}(DateTime(\"2013-02-13T00:00:00\"))" == "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime, Open, Closed}(DateTime(\"2016-08-11T02:15:30\"))" == "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:15:30\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime, Open, Closed}(DateTime(\"2016-08-11T02:15:30\"))" == "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:15:30\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00.002\"))" == "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00.002\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00.002\"))" == "HourEnding{DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00.002\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{DateTime, Closed, Open}(DateTime(\"2013-02-13T00:01:00\"))" == "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:01:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{DateTime, Closed, Open}(DateTime(\"2013-02-13T00:01:00\"))" == "HourEnding{DateTime,Closed,Open}(DateTime(\"2013-02-13T00:01:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourBeginning{DateTime, Closed, Open}(DateTime(\"2016-08-11T02:00:00\"))" == "HourBeginning{DateTime,Closed,Open}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourBeginning{DateTime, Closed, Open}(DateTime(\"2016-08-11T02:00:00\"))" == "HourBeginning{DateTime,Closed,Open}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourBeginning{DateTime, Open, Closed}(DateTime(\"2013-02-13T00:00:00\"))" == "HourBeginning{DateTime,Open,Closed}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourBeginning{DateTime, Open, Closed}(DateTime(\"2013-02-13T00:00:00\"))" == "HourBeginning{DateTime,Open,Closed}(DateTime(\"2013-02-13T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))" == "HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))" == "HourEnding{ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 11, 2, tz\"America/Winnipeg\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Year(-1), Date, Open, Closed}(Date(\"2016-08-11\"))" == "AnchoredInterval{Year(-1),Date,Open,Closed}(Date(\"2016-08-11\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Year(-1), Date, Open, Closed}(Date(\"2016-08-11\"))" == "AnchoredInterval{Year(-1),Date,Open,Closed}(Date(\"2016-08-11\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Year(-1), Date, Open, Closed}(Date(\"2017-01-01\"))" == "AnchoredInterval{Year(-1),Date,Open,Closed}(Date(\"2017-01-01\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Year(-1), Date, Open, Closed}(Date(\"2017-01-01\"))" == "AnchoredInterval{Year(-1),Date,Open,Closed}(Date(\"2017-01-01\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Month(-1), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Month(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Month(-1), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Month(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Month(-1), DateTime, Open, Closed}(DateTime(\"2016-09-01T00:00:00\"))" == "AnchoredInterval{Month(-1),DateTime,Open,Closed}(DateTime(\"2016-09-01T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Month(-1), DateTime, Open, Closed}(DateTime(\"2016-09-01T00:00:00\"))" == "AnchoredInterval{Month(-1),DateTime,Open,Closed}(DateTime(\"2016-09-01T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Day(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Day(-1),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), DateTime, Open, Closed}(DateTime(\"2016-08-12T00:00:00\"))" == "AnchoredInterval{Day(-1),DateTime,Open,Closed}(DateTime(\"2016-08-12T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), DateTime, Open, Closed}(DateTime(\"2016-08-12T00:00:00\"))" == "AnchoredInterval{Day(-1),DateTime,Open,Closed}(DateTime(\"2016-08-12T00:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), Date, Open, Closed}(Date(\"2016-08-11\"))" == "AnchoredInterval{Day(-1),Date,Open,Closed}(Date(\"2016-08-11\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), Date, Open, Closed}(Date(\"2016-08-11\"))" == "AnchoredInterval{Day(-1),Date,Open,Closed}(Date(\"2016-08-11\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), ZonedDateTime, Open, Closed}(ZonedDateTime(2016, 8, 12, tz\"America/Winnipeg\"))" == "AnchoredInterval{Day(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 12, tz\"America/Winnipeg\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Day(-1), ZonedDateTime, Open, Closed}(ZonedDateTime(2016, 8, 12, tz\"America/Winnipeg\"))" == "AnchoredInterval{Day(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2016, 8, 12, tz\"America/Winnipeg\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Minute(-5), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Minute(-5),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Minute(-5), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Minute(-5),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Second(-30), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Second(-30),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Second(-30), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Second(-30),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
  Expression: sprint(show, interval) == shown
   Evaluated: "AnchoredInterval{Millisecond(-10), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Millisecond(-10),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:445
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
  Expression: repr(interval) == shown
   Evaluated: "AnchoredInterval{Millisecond(-10), DateTime, Open, Closed}(DateTime(\"2016-08-11T02:00:00\"))" == "AnchoredInterval{Millisecond(-10),DateTime,Open,Closed}(DateTime(\"2016-08-11T02:00:00\"))"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:447
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:457
  Expression: sprint(show, interval) == "AnchoredInterval{-10,$(Int),Open,Closed}(10)"
   Evaluated: "AnchoredInterval{-10, Int64, Open, Closed}(10)" == "AnchoredInterval{-10,Int64,Open,Closed}(10)"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:457
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
display: Test Failed at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:463
  Expression: sprint(show, interval) == "AnchoredInterval{25,Char,Closed,Open}('a')"
   Evaluated: "AnchoredInterval{25, Char, Closed, Open}('a')" == "AnchoredInterval{25,Char,Closed,Open}('a')"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:463
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:225
 [4] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [5] top-level scope
   @ ~/.julia/packages/Intervals/T6hJb/test/anchoredinterval.jl:4
Interval{Float64,Closed,Closed}: Error During Test at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
  Got exception outside of a @test
  UndefVarError: Grisu not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] plain_precision_heuristic(xs::Vector{Float64})
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:84
    [3] showoff(xs::Vector{Float64}, style::Symbol)
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:117
    [4] optimal_ticks_and_labels(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis, ticks::Nothing)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:193
    [5] optimal_ticks_and_labels
      @ ~/.julia/packages/Plots/M1wcx/src/axes.jl:135 [inlined]
    [6] get_ticks(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:239
    [7] _update_min_padding!(sp::Plots.Subplot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/backends/gr.jl:890
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Matrix{AbstractLayout}, itr::Base.Generator{Matrix{AbstractLayout}, typeof(Plots._update_min_padding!)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{2})
      @ Base ./array.jl:699
   [10] collect_similar
      @ ./array.jl:628 [inlined]
   [11] map
      @ ./abstractarray.jl:2233 [inlined]
   [12] _update_min_padding!(layout::Plots.GridLayout)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/layouts.jl:310
   [13] prepare_output(plt::Plots.Plot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/plot.jl:184
   [14] show
      @ ~/.julia/packages/Plots/M1wcx/src/output.jl:214 [inlined]
   [15] png(plt::Plots.Plot{Plots.GRBackend}, fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:7
   [16] png(fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:10
   [17] top-level scope
      @ ~/.julia/packages/VisualRegressionTests/lXJ3R/src/macros.jl:17
   [18] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:9
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [20] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:19
   [25] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] top-level scope
      @ none:6
   [29] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [30] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [31] _start()
      @ Base ./client.jl:485
Interval{Float64,Open,Closed}: Error During Test at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
  Got exception outside of a @test
  UndefVarError: Grisu not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] plain_precision_heuristic(xs::Vector{Float64})
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:84
    [3] showoff(xs::Vector{Float64}, style::Symbol)
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:117
    [4] optimal_ticks_and_labels(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis, ticks::Nothing)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:193
    [5] optimal_ticks_and_labels
      @ ~/.julia/packages/Plots/M1wcx/src/axes.jl:135 [inlined]
    [6] get_ticks(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:239
    [7] _update_min_padding!(sp::Plots.Subplot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/backends/gr.jl:890
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Matrix{AbstractLayout}, itr::Base.Generator{Matrix{AbstractLayout}, typeof(Plots._update_min_padding!)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{2})
      @ Base ./array.jl:699
   [10] collect_similar
      @ ./array.jl:628 [inlined]
   [11] map
      @ ./abstractarray.jl:2233 [inlined]
   [12] _update_min_padding!(layout::Plots.GridLayout)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/layouts.jl:310
   [13] prepare_output(plt::Plots.Plot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/plot.jl:184
   [14] show
      @ ~/.julia/packages/Plots/M1wcx/src/output.jl:214 [inlined]
   [15] png(plt::Plots.Plot{Plots.GRBackend}, fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:7
   [16] png(fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:10
   [17] top-level scope
      @ ~/.julia/packages/VisualRegressionTests/lXJ3R/src/macros.jl:17
   [18] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:9
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [20] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:19
   [25] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] top-level scope
      @ none:6
   [29] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [30] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [31] _start()
      @ Base ./client.jl:485
Interval{Float64,Closed,Open}: Error During Test at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
  Got exception outside of a @test
  UndefVarError: Grisu not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] plain_precision_heuristic(xs::Vector{Float64})
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:84
    [3] showoff(xs::Vector{Float64}, style::Symbol)
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:117
    [4] optimal_ticks_and_labels(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis, ticks::Nothing)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:193
    [5] optimal_ticks_and_labels
      @ ~/.julia/packages/Plots/M1wcx/src/axes.jl:135 [inlined]
    [6] get_ticks(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:239
    [7] _update_min_padding!(sp::Plots.Subplot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/backends/gr.jl:890
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Matrix{AbstractLayout}, itr::Base.Generator{Matrix{AbstractLayout}, typeof(Plots._update_min_padding!)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{2})
      @ Base ./array.jl:699
   [10] collect_similar
      @ ./array.jl:628 [inlined]
   [11] map
      @ ./abstractarray.jl:2233 [inlined]
   [12] _update_min_padding!(layout::Plots.GridLayout)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/layouts.jl:310
   [13] prepare_output(plt::Plots.Plot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/plot.jl:184
   [14] show
      @ ~/.julia/packages/Plots/M1wcx/src/output.jl:214 [inlined]
   [15] png(plt::Plots.Plot{Plots.GRBackend}, fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:7
   [16] png(fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:10
   [17] top-level scope
      @ ~/.julia/packages/VisualRegressionTests/lXJ3R/src/macros.jl:17
   [18] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:9
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [20] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:19
   [25] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] top-level scope
      @ none:6
   [29] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [30] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [31] _start()
      @ Base ./client.jl:485
Interval{Float64,Open,Open}: Error During Test at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
  Got exception outside of a @test
  UndefVarError: Grisu not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] plain_precision_heuristic(xs::Vector{Float64})
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:84
    [3] showoff(xs::Vector{Float64}, style::Symbol)
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:117
    [4] optimal_ticks_and_labels(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis, ticks::Nothing)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:193
    [5] optimal_ticks_and_labels
      @ ~/.julia/packages/Plots/M1wcx/src/axes.jl:135 [inlined]
    [6] get_ticks(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:239
    [7] _update_min_padding!(sp::Plots.Subplot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/backends/gr.jl:890
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Matrix{AbstractLayout}, itr::Base.Generator{Matrix{AbstractLayout}, typeof(Plots._update_min_padding!)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{2})
      @ Base ./array.jl:699
   [10] collect_similar
      @ ./array.jl:628 [inlined]
   [11] map
      @ ./abstractarray.jl:2233 [inlined]
   [12] _update_min_padding!(layout::Plots.GridLayout)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/layouts.jl:310
   [13] prepare_output(plt::Plots.Plot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/plot.jl:184
   [14] show
      @ ~/.julia/packages/Plots/M1wcx/src/output.jl:214 [inlined]
   [15] png(plt::Plots.Plot{Plots.GRBackend}, fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:7
   [16] png(fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:10
   [17] top-level scope
      @ ~/.julia/packages/VisualRegressionTests/lXJ3R/src/macros.jl:17
   [18] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:9
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188
   [20] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [23] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [24] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:19
   [25] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [26] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
   [27] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [28] top-level scope
      @ none:6
   [29] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [30] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [31] _start()
      @ Base ./client.jl:485
Interval{DateTime}: Error During Test at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/plotting.jl:23
  Got exception outside of a @test
  UndefVarError: Grisu not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] plain_precision_heuristic(xs::Vector{Float64})
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:84
    [3] showoff(xs::Vector{Float64}, style::Symbol)
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:117
    [4] optimal_ticks_and_labels(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis, ticks::Nothing)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:193
    [5] optimal_ticks_and_labels
      @ ~/.julia/packages/Plots/M1wcx/src/axes.jl:135 [inlined]
    [6] get_ticks(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:239
    [7] _update_min_padding!(sp::Plots.Subplot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/backends/gr.jl:890
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Matrix{AbstractLayout}, itr::Base.Generator{Matrix{AbstractLayout}, typeof(Plots._update_min_padding!)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{2})
      @ Base ./array.jl:699
   [10] collect_similar
      @ ./array.jl:628 [inlined]
   [11] map
      @ ./abstractarray.jl:2233 [inlined]
   [12] _update_min_padding!(layout::Plots.GridLayout)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/layouts.jl:310
   [13] prepare_output(plt::Plots.Plot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/plot.jl:184
   [14] show
      @ ~/.julia/packages/Plots/M1wcx/src/output.jl:214 [inlined]
   [15] png(plt::Plots.Plot{Plots.GRBackend}, fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:7
   [16] png(fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:10
   [17] top-level scope
      @ ~/.julia/packages/VisualRegressionTests/lXJ3R/src/macros.jl:17
   [18] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:25
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:24
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:19
   [23] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [24] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:19
   [27] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [28] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
   [29] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [30] top-level scope
      @ none:6
   [31] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [32] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [33] _start()
      @ Base ./client.jl:485
AnchoredInterval: Error During Test at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/plotting.jl:28
  Got exception outside of a @test
  UndefVarError: Grisu not defined
  Stacktrace:
    [1] getproperty
      @ ./Base.jl:26 [inlined]
    [2] plain_precision_heuristic(xs::Vector{Float64})
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:84
    [3] showoff(xs::Vector{Float64}, style::Symbol)
      @ Showoff ~/.julia/packages/Showoff/RaPxi/src/Showoff.jl:117
    [4] optimal_ticks_and_labels(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis, ticks::Nothing)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:193
    [5] optimal_ticks_and_labels
      @ ~/.julia/packages/Plots/M1wcx/src/axes.jl:135 [inlined]
    [6] get_ticks(sp::Plots.Subplot{Plots.GRBackend}, axis::Plots.Axis)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/axes.jl:239
    [7] _update_min_padding!(sp::Plots.Subplot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/backends/gr.jl:890
    [8] iterate
      @ ./generator.jl:47 [inlined]
    [9] _collect(c::Matrix{AbstractLayout}, itr::Base.Generator{Matrix{AbstractLayout}, typeof(Plots._update_min_padding!)}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{2})
      @ Base ./array.jl:699
   [10] collect_similar
      @ ./array.jl:628 [inlined]
   [11] map
      @ ./abstractarray.jl:2233 [inlined]
   [12] _update_min_padding!(layout::Plots.GridLayout)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/layouts.jl:310
   [13] prepare_output(plt::Plots.Plot{Plots.GRBackend})
      @ Plots ~/.julia/packages/Plots/M1wcx/src/plot.jl:184
   [14] show
      @ ~/.julia/packages/Plots/M1wcx/src/output.jl:214 [inlined]
   [15] png(plt::Plots.Plot{Plots.GRBackend}, fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:7
   [16] png(fn::String)
      @ Plots ~/.julia/packages/Plots/M1wcx/src/output.jl:10
   [17] top-level scope
      @ ~/.julia/packages/VisualRegressionTests/lXJ3R/src/macros.jl:17
   [18] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:29
   [19] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [20] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:29
   [21] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [22] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:19
   [23] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [24] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/plotting.jl:6
   [25] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [26] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:19
   [27] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [28] top-level scope
      @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
   [29] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [30] top-level scope
      @ none:6
   [31] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [32] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [33] _start()
      @ Base ./client.jl:485
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:33-42
│ 
│ ```jldoctest
│ julia> a = 1..10
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = 5..15
│ Interval{Int64,Closed,Closed}(5, 15)
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Closed,Closed}(5, 10)
│ ```
│ 
│ Subexpression:
│ 
│ a = 1..10
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Closed, Closed}(1, 10)
│ 
│ Expected output:
│ 
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Closed,Closed}(1, Interval{Int64, Closed, Closed}(1, 10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:33-42
│ 
│ ```jldoctest
│ julia> a = 1..10
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = 5..15
│ Interval{Int64,Closed,Closed}(5, 15)
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Closed,Closed}(5, 10)
│ ```
│ 
│ Subexpression:
│ 
│ b = 5..15
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Closed, Closed}(5, 15)
│ 
│ Expected output:
│ 
│ Interval{Int64,Closed,Closed}(5, 15)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Closed,Closed}(5, Interval{Int64, Closed, Closed}(5, 15)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:33-42
│ 
│ ```jldoctest
│ julia> a = 1..10
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = 5..15
│ Interval{Int64,Closed,Closed}(5, 15)
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Closed,Closed}(5, 10)
│ ```
│ 
│ Subexpression:
│ 
│ intersect(a, b)
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Closed, Closed}(5, 10)
│ 
│ Expected output:
│ 
│ Interval{Int64,Closed,Closed}(5, 10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Closed,Closed}(5, Interval{Int64, Closed, Closed}(5, 10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:46-67
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Closed}(1, 10)
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = Interval{Open,Open}(5, 15)
│ Interval{Int64,Open,Open}(5, 15)
│ 
│ julia> 5 in a
│ true
│ 
│ julia> 5 in b
│ false
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Open,Closed}(5, 10)
│ 
│ julia> c = Interval(15, 20)
│ Interval{Int64,Closed,Closed}(15, 20)
│ 
│ julia> isempty(intersect(b, c))
│ true
│ ```
│ 
│ Subexpression:
│ 
│ a = Interval{Closed,Closed}(1, 10)
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Closed, Closed}(1, 10)
│ 
│ Expected output:
│ 
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Closed,Closed}(1, Interval{Int64, Closed, Closed}(1, 10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:46-67
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Closed}(1, 10)
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = Interval{Open,Open}(5, 15)
│ Interval{Int64,Open,Open}(5, 15)
│ 
│ julia> 5 in a
│ true
│ 
│ julia> 5 in b
│ false
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Open,Closed}(5, 10)
│ 
│ julia> c = Interval(15, 20)
│ Interval{Int64,Closed,Closed}(15, 20)
│ 
│ julia> isempty(intersect(b, c))
│ true
│ ```
│ 
│ Subexpression:
│ 
│ b = Interval{Open,Open}(5, 15)
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Open, Open}(5, 15)
│ 
│ Expected output:
│ 
│ Interval{Int64,Open,Open}(5, 15)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Open,Open}(5, Interval{Int64, Open, Open}(5, 15)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:46-67
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Closed}(1, 10)
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = Interval{Open,Open}(5, 15)
│ Interval{Int64,Open,Open}(5, 15)
│ 
│ julia> 5 in a
│ true
│ 
│ julia> 5 in b
│ false
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Open,Closed}(5, 10)
│ 
│ julia> c = Interval(15, 20)
│ Interval{Int64,Closed,Closed}(15, 20)
│ 
│ julia> isempty(intersect(b, c))
│ true
│ ```
│ 
│ Subexpression:
│ 
│ intersect(a, b)
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Open, Closed}(5, 10)
│ 
│ Expected output:
│ 
│ Interval{Int64,Open,Closed}(5, 10)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Open,Closed}(5, Interval{Int64, Open, Closed}(5, 10)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:46-67
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Closed}(1, 10)
│ Interval{Int64,Closed,Closed}(1, 10)
│ 
│ julia> b = Interval{Open,Open}(5, 15)
│ Interval{Int64,Open,Open}(5, 15)
│ 
│ julia> 5 in a
│ true
│ 
│ julia> 5 in b
│ false
│ 
│ julia> intersect(a, b)
│ Interval{Int64,Open,Closed}(5, 10)
│ 
│ julia> c = Interval(15, 20)
│ Interval{Int64,Closed,Closed}(15, 20)
│ 
│ julia> isempty(intersect(b, c))
│ true
│ ```
│ 
│ Subexpression:
│ 
│ c = Interval(15, 20)
│ 
│ Evaluated output:
│ 
│ Interval{Int64, Closed, Closed}(15, 20)
│ 
│ Expected output:
│ 
│ Interval{Int64,Closed,Closed}(15, 20)
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Int64,Closed,Closed}(15, Interval{Int64, Closed, Closed}(15, 20)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:71-91
│ 
│ ```jldoctest
│ julia> a = Interval('a', 'z')
│ Interval{Char,Closed,Closed}('a', 'z')
│ 
│ julia> string(a)
│ "[a .. z]"
│ 
│ julia> using Dates
│ 
│ julia> b = Interval{Closed,Open}(Date(2013), Date(2016))
│ Interval{Date,Closed,Open}(Date("2013-01-01"), Date("2016-01-01"))
│ 
│ julia> string(b)
│ "[2013-01-01 .. 2016-01-01)"
│ 
│ julia> c = HourEnding(DateTime(2016, 8, 11))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))
│ 
│ julia> string(c)
│ "(2016-08-10 HE24]"
│ ```
│ 
│ Subexpression:
│ 
│ a = Interval('a', 'z')
│ 
│ Evaluated output:
│ 
│ Interval{Char, Closed, Closed}('a', 'z')
│ 
│ Expected output:
│ 
│ Interval{Char,Closed,Closed}('a', 'z')
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Char,Closed,Closed}('a', Interval{Char, Closed, Closed}('a', 'z')
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:71-91
│ 
│ ```jldoctest
│ julia> a = Interval('a', 'z')
│ Interval{Char,Closed,Closed}('a', 'z')
│ 
│ julia> string(a)
│ "[a .. z]"
│ 
│ julia> using Dates
│ 
│ julia> b = Interval{Closed,Open}(Date(2013), Date(2016))
│ Interval{Date,Closed,Open}(Date("2013-01-01"), Date("2016-01-01"))
│ 
│ julia> string(b)
│ "[2013-01-01 .. 2016-01-01)"
│ 
│ julia> c = HourEnding(DateTime(2016, 8, 11))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))
│ 
│ julia> string(c)
│ "(2016-08-10 HE24]"
│ ```
│ 
│ Subexpression:
│ 
│ b = Interval{Closed,Open}(Date(2013), Date(2016))
│ 
│ Evaluated output:
│ 
│ Interval{Date, Closed, Open}(Date("2013-01-01"), Date("2016-01-01"))
│ 
│ Expected output:
│ 
│ Interval{Date,Closed,Open}(Date("2013-01-01"), Date("2016-01-01"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{Date,Closed,Open}(Date("2013-01-01"), Interval{Date, Closed, Open}(Date("2013-01-01"), Date("2016-01-01"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:71-91
│ 
│ ```jldoctest
│ julia> a = Interval('a', 'z')
│ Interval{Char,Closed,Closed}('a', 'z')
│ 
│ julia> string(a)
│ "[a .. z]"
│ 
│ julia> using Dates
│ 
│ julia> b = Interval{Closed,Open}(Date(2013), Date(2016))
│ Interval{Date,Closed,Open}(Date("2013-01-01"), Date("2016-01-01"))
│ 
│ julia> string(b)
│ "[2013-01-01 .. 2016-01-01)"
│ 
│ julia> c = HourEnding(DateTime(2016, 8, 11))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))
│ 
│ julia> string(c)
│ "(2016-08-10 HE24]"
│ ```
│ 
│ Subexpression:
│ 
│ c = HourEnding(DateTime(2016, 8, 11))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T00:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T00:00:00"))HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T00:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:95-136
│ 
│ ```jldoctest
│ julia> using TimeZones, Dates
│ 
│ julia> unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ julia> he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ julia> he + Hour(1)
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ julia> foreach(println, he:he + Day(1))
│ (2013-02-13 HE01-06:00]
│ (2013-02-13 HE02-06:00]
│ (2013-02-13 HE03-06:00]
│ (2013-02-13 HE04-06:00]
│ (2013-02-13 HE05-06:00]
│ (2013-02-13 HE06-06:00]
│ (2013-02-13 HE07-06:00]
│ (2013-02-13 HE08-06:00]
│ (2013-02-13 HE09-06:00]
│ (2013-02-13 HE10-06:00]
│ (2013-02-13 HE11-06:00]
│ (2013-02-13 HE12-06:00]
│ (2013-02-13 HE13-06:00]
│ (2013-02-13 HE14-06:00]
│ (2013-02-13 HE15-06:00]
│ (2013-02-13 HE16-06:00]
│ (2013-02-13 HE17-06:00]
│ (2013-02-13 HE18-06:00]
│ (2013-02-13 HE19-06:00]
│ (2013-02-13 HE20-06:00]
│ (2013-02-13 HE21-06:00]
│ (2013-02-13 HE22-06:00]
│ (2013-02-13 HE23-06:00]
│ (2013-02-13 HE24-06:00]
│ (2013-02-14 HE01-06:00]
│ 
│ julia> anchor(he)
│ 2013-02-13T01:00:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ Evaluated output:
│ 
│ HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:95-136
│ 
│ ```jldoctest
│ julia> using TimeZones, Dates
│ 
│ julia> unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ julia> he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ julia> he + Hour(1)
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ julia> foreach(println, he:he + Day(1))
│ (2013-02-13 HE01-06:00]
│ (2013-02-13 HE02-06:00]
│ (2013-02-13 HE03-06:00]
│ (2013-02-13 HE04-06:00]
│ (2013-02-13 HE05-06:00]
│ (2013-02-13 HE06-06:00]
│ (2013-02-13 HE07-06:00]
│ (2013-02-13 HE08-06:00]
│ (2013-02-13 HE09-06:00]
│ (2013-02-13 HE10-06:00]
│ (2013-02-13 HE11-06:00]
│ (2013-02-13 HE12-06:00]
│ (2013-02-13 HE13-06:00]
│ (2013-02-13 HE14-06:00]
│ (2013-02-13 HE15-06:00]
│ (2013-02-13 HE16-06:00]
│ (2013-02-13 HE17-06:00]
│ (2013-02-13 HE18-06:00]
│ (2013-02-13 HE19-06:00]
│ (2013-02-13 HE20-06:00]
│ (2013-02-13 HE21-06:00]
│ (2013-02-13 HE22-06:00]
│ (2013-02-13 HE23-06:00]
│ (2013-02-13 HE24-06:00]
│ (2013-02-14 HE01-06:00]
│ 
│ julia> anchor(he)
│ 2013-02-13T01:00:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ Evaluated output:
│ 
│ HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:95-136
│ 
│ ```jldoctest
│ julia> using TimeZones, Dates
│ 
│ julia> unrounded = HourEnding(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ 
│ julia> he = HE(ZonedDateTime(2013, 2, 13, 0, 30, tz"America/Winnipeg"))
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 1, tz"America/Winnipeg"))
│ 
│ julia> he + Hour(1)
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ julia> foreach(println, he:he + Day(1))
│ (2013-02-13 HE01-06:00]
│ (2013-02-13 HE02-06:00]
│ (2013-02-13 HE03-06:00]
│ (2013-02-13 HE04-06:00]
│ (2013-02-13 HE05-06:00]
│ (2013-02-13 HE06-06:00]
│ (2013-02-13 HE07-06:00]
│ (2013-02-13 HE08-06:00]
│ (2013-02-13 HE09-06:00]
│ (2013-02-13 HE10-06:00]
│ (2013-02-13 HE11-06:00]
│ (2013-02-13 HE12-06:00]
│ (2013-02-13 HE13-06:00]
│ (2013-02-13 HE14-06:00]
│ (2013-02-13 HE15-06:00]
│ (2013-02-13 HE16-06:00]
│ (2013-02-13 HE17-06:00]
│ (2013-02-13 HE18-06:00]
│ (2013-02-13 HE19-06:00]
│ (2013-02-13 HE20-06:00]
│ (2013-02-13 HE21-06:00]
│ (2013-02-13 HE22-06:00]
│ (2013-02-13 HE23-06:00]
│ (2013-02-13 HE24-06:00]
│ (2013-02-14 HE01-06:00]
│ 
│ julia> anchor(he)
│ 2013-02-13T01:00:00-06:00
│ ```
│ 
│ Subexpression:
│ 
│ he + Hour(1)
│ 
│ Evaluated output:
│ 
│ HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),ZonedDateTime,Open,Closed}(ZonedDateTime(2013, HourEnding{ZonedDateTime, Open, Closed}(ZonedDateTime(2013, 2, 13, 2, tz"America/Winnipeg"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:170-185
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ julia> b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ julia> c = HourEnding(DateTime(2013, 2, 13, 1))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))
│ 
│ julia> a == b
│ false
│ 
│ julia> b == c
│ true
│ ```
│ 
│ Subexpression:
│ 
│ a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ 
│ Evaluated output:
│ 
│ Interval{DateTime, Closed, Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ Expected output:
│ 
│ Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), Interval{DateTime, Closed, Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:170-185
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ julia> b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ julia> c = HourEnding(DateTime(2013, 2, 13, 1))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))
│ 
│ julia> a == b
│ false
│ 
│ julia> b == c
│ true
│ ```
│ 
│ Subexpression:
│ 
│ b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ 
│ Evaluated output:
│ 
│ Interval{DateTime, Open, Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ Expected output:
│ 
│ Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), Interval{DateTime, Open, Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/docs/src/index.md:170-185
│ 
│ ```jldoctest
│ julia> a = Interval{Closed,Open}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Closed,Open}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ julia> b = Interval{Open,Closed}(DateTime(2013, 2, 13), DateTime(2013, 2, 13, 1))
│ Interval{DateTime,Open,Closed}(DateTime("2013-02-13T00:00:00"), DateTime("2013-02-13T01:00:00"))
│ 
│ julia> c = HourEnding(DateTime(2013, 2, 13, 1))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))
│ 
│ julia> a == b
│ false
│ 
│ julia> b == c
│ true
│ ```
│ 
│ Subexpression:
│ 
│ c = HourEnding(DateTime(2013, 2, 13, 1))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime, Open, Closed}(DateTime("2013-02-13T01:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2013-02-13T01:00:00"))HourEnding{DateTime, Open, Closed}(DateTime("2013-02-13T01:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/src/anchoredinterval.jl:30-33
│ 
│ ```jldoctest; setup = :(using Intervals, Dates), filter = r"AnchoredInterval\{(Day|Hour|Minute)\(-?\d+\),|Hour(Ending|Beginning)\{"
│ julia> HourEnding(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T02:30:00"))
│ ```
│ 
│ Subexpression:
│ 
│ HourEnding(DateTime(2016, 8, 11, 2, 30))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T02:30:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T02:30:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T02:30:00"))HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T02:30:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/src/anchoredinterval.jl:38-44
│ 
│ ```jldoctest; setup = :(using Intervals, Dates), filter = r"AnchoredInterval\{(Day|Hour|Minute)\(-?\d+\),|Hour(Ending|Beginning)\{"
│ julia> HE(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T03:00:00"))
│ 
│ julia> HB(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{Hour(1),DateTime,Closed,Open}(DateTime("2016-08-11T02:00:00"))
│ ```
│ 
│ Subexpression:
│ 
│ HE(DateTime(2016, 8, 11, 2, 30))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T03:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T03:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T03:00:00"))HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T03:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/src/anchoredinterval.jl:38-44
│ 
│ ```jldoctest; setup = :(using Intervals, Dates), filter = r"AnchoredInterval\{(Day|Hour|Minute)\(-?\d+\),|Hour(Ending|Beginning)\{"
│ julia> HE(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T03:00:00"))
│ 
│ julia> HB(DateTime(2016, 8, 11, 2, 30))
│ AnchoredInterval{Hour(1),DateTime,Closed,Open}(DateTime("2016-08-11T02:00:00"))
│ ```
│ 
│ Subexpression:
│ 
│ HB(DateTime(2016, 8, 11, 2, 30))
│ 
│ Evaluated output:
│ 
│ HourBeginning{DateTime, Closed, Open}(DateTime("2016-08-11T02:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(1),DateTime,Closed,Open}(DateTime("2016-08-11T02:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(1),DateTime,Closed,Open}(DateTime("2016-08-11T02:00:00"))HourBeginning{DateTime, Closed, Open}(DateTime("2016-08-11T02:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/src/anchoredinterval.jl:48-57
│ 
│ ```jldoctest; setup = :(using Intervals, Dates), filter = r"AnchoredInterval\{(Day|Hour|Minute)\(-?\d+\),|Hour(Ending|Beginning)\{"
│ julia> AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))
│ 
│ julia> AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))
│ 
│ julia> AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))
│ ```
│ 
│ Subexpression:
│ 
│ AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ 
│ Evaluated output:
│ 
│ HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T12:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))HourEnding{DateTime, Open, Closed}(DateTime("2016-08-11T12:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/src/anchoredinterval.jl:48-57
│ 
│ ```jldoctest; setup = :(using Intervals, Dates), filter = r"AnchoredInterval\{(Day|Hour|Minute)\(-?\d+\),|Hour(Ending|Beginning)\{"
│ julia> AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))
│ 
│ julia> AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))
│ 
│ julia> AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))
│ ```
│ 
│ Subexpression:
│ 
│ AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ 
│ Evaluated output:
│ 
│ AnchoredInterval{Day(1), DateTime, Closed, Open}(DateTime("2016-08-11T00:00:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))AnchoredInterval{Day(1), DateTime, Closed, Open}(DateTime("2016-08-11T00:00:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Intervals/T6hJb/src/anchoredinterval.jl:48-57
│ 
│ ```jldoctest; setup = :(using Intervals, Dates), filter = r"AnchoredInterval\{(Day|Hour|Minute)\(-?\d+\),|Hour(Ending|Beginning)\{"
│ julia> AnchoredInterval{Hour(-1)}(DateTime(2016, 8, 11, 12))
│ AnchoredInterval{Hour(-1),DateTime,Open,Closed}(DateTime("2016-08-11T12:00:00"))
│ 
│ julia> AnchoredInterval{Day(1)}(DateTime(2016, 8, 11))
│ AnchoredInterval{Day(1),DateTime,Closed,Open}(DateTime("2016-08-11T00:00:00"))
│ 
│ julia> AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))
│ ```
│ 
│ Subexpression:
│ 
│ AnchoredInterval{Minute(5),Closed,Closed}(DateTime(2016, 8, 11, 12, 30))
│ 
│ Evaluated output:
│ 
│ AnchoredInterval{Minute(5), DateTime, Closed, Closed}(DateTime("2016-08-11T12:30:00"))
│ 
│ Expected output:
│ 
│ AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))
│ 
│   diff =
│    Warning: Diff output requires color.
│    AnchoredInterval{Minute(5),DateTime,Closed,Closed}(DateTime("2016-08-11T12:30:00"))AnchoredInterval{Minute(5), DateTime, Closed, Closed}(DateTime("2016-08-11T12:30:00"))
└ @ Documenter.DocTests ~/.julia/packages/Documenter/PLD7m/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/PLD7m/src/Builder.jl:204
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/PLD7m/src/Utilities/Selectors.jl:167
│      [4] #2
│        @ ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:240 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules), Tuple{String, String, String, Symbol, Vector{Module}}}})
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:239
│      [7] (::Documenter.var"#all_doctests#30"{Bool, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:728
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744 [inlined]
│      [9] macro expansion
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
│     [10] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:687
│     [12] doctest(package::Module)
│        @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:674
│     [13] top-level scope
│        @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:24
│     [14] top-level scope
│        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
│     [15] top-level scope
│        @ ~/.julia/packages/Intervals/T6hJb/test/runtests.jl:14
│     [16] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [17] top-level scope
│        @ none:6
│     [18] eval(m::Module, e::Any)
│        @ Core ./boot.jl:345
│     [19] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [20] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:737
Doctests: Intervals: Test Failed at /home/pkgeval/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] doctest(source::String, modules::Vector{Module}; fix::Bool, testset::String)
   @ Documenter ~/.julia/packages/Documenter/PLD7m/src/Documenter.jl:744
Test Summary:                                                                                                                                                                                                            | Pass  Fail  Error  Total
Intervals                                                                                                                                                                                                                | 8056    51      6   8113
  Inclusivity                                                                                                                                                                                                            |  126                 126
  Endpoint                                                                                                                                                                                                               |  344                 344
  Interval                                                                                                                                                                                                               | 2480     4          2484
    constructor                                                                                                                                                                                                          |  146                 146
    non-ordered                                                                                                                                                                                                          |    5                   5
    hash                                                                                                                                                                                                                 |    1                   1
    conversion                                                                                                                                                                                                           |   15                  15
    eltype                                                                                                                                                                                                               |    2                   2
    accessors                                                                                                                                                                                                            |  202                 202
    display                                                                                                                                                                                                              |    8     4            12
    equality                                                                                                                                                                                                             | 1454                1454
    broadcasting                                                                                                                                                                                                         |    1                   1
    sort                                                                                                                                                                                                                 |    2                   2
    arithmetic                                                                                                                                                                                                           |  224                 224
    isempty                                                                                                                                                                                                              |   15                  15
    in                                                                                                                                                                                                                   |  250                 250
    issubset                                                                                                                                                                                                             |   16                  16
    intersect                                                                                                                                                                                                            |   32                  32
    astimezone                                                                                                                                                                                                           |   12                  12
    timezone                                                                                                                                                                                                             |    2                   2
    merge                                                                                                                                                                                                                |    5                   5
    union                                                                                                                                                                                                                |    6                   6
    legacy deserialization                                                                                                                                                                                               |    2                   2
    parse                                                                                                                                                                                                                |   80                  80
  AnchoredInterval                                                                                                                                                                                                       |  414    46           460
    constructor                                                                                                                                                                                                          |   28                  28
    zero-span                                                                                                                                                                                                            |    4                   4
    infinite                                                                                                                                                                                                             |   10                  10
    nan                                                                                                                                                                                                                  |    3                   3
    non-bounded                                                                                                                                                                                                          |    9                   9
    hash                                                                                                                                                                                                                 |    1                   1
    conversion                                                                                                                                                                                                           |   19                  19
    eltype                                                                                                                                                                                                               |    5                   5
    accessors                                                                                                                                                                                                            |   27                  27
    display                                                                                                                                                                                                              |   62    46           108
    equality                                                                                                                                                                                                             |   50                  50
    broadcasting                                                                                                                                                                                                         |    1                   1
    sort                                                                                                                                                                                                                 |    2                   2
    arithmetic                                                                                                                                                                                                           |   26                  26
    range                                                                                                                                                                                                                |   32                  32
    isempty                                                                                                                                                                                                              |   72                  72
    in                                                                                                                                                                                                                   |   19                  19
    intersect                                                                                                                                                                                                            |   10                  10
    canonicalize                                                                                                                                                                                                         |   16                  16
    astimezone                                                                                                                                                                                                           |   15                  15
    timezone                                                                                                                                                                                                             |    1                   1
    legacy deserialization                                                                                                                                                                                               |    2                   2
  comparisons: Interval vs. Interval                                                                                                                                                                                     | 1649                1649
  comparisons: Interval vs. AnchoredInterval{Intervals.Direction{:Right}(), T, L, R} where R<:Bounded where L<:Bounded where T                                                                                           |  595                 595
  comparisons: Interval vs. AnchoredInterval{Intervals.Direction{:Left}(), T, L, R} where R<:Bounded where L<:Bounded where T                                                                                            |  901                 901
  comparisons: AnchoredInterval{Intervals.Direction{:Right}(), T, L, R} where R<:Bounded where L<:Bounded where T vs. AnchoredInterval{Intervals.Direction{:Right}(), T, L, R} where R<:Bounded where L<:Bounded where T |  493                 493
  comparisons: AnchoredInterval{Intervals.Direction{:Right}(), T, L, R} where R<:Bounded where L<:Bounded where T vs. AnchoredInterval{Intervals.Direction{:Left}(), T, L, R} where R<:Bounded where L<:Bounded where T  |  561                 561
  comparisons: AnchoredInterval{Intervals.Direction{:Left}(), T, L, R} where R<:Bounded where L<:Bounded where T vs. AnchoredInterval{Intervals.Direction{:Left}(), T, L, R} where R<:Bounded where L<:Bounded where T   |  493                 493
  plotting                                                                                                                                                                                                               |                 6      6
    Interval{Float64,Closed,Closed}                                                                                                                                                                                      |                 1      1
    Interval{Float64,Open,Closed}                                                                                                                                                                                        |                 1      1
    Interval{Float64,Closed,Open}                                                                                                                                                                                        |                 1      1
    Interval{Float64,Open,Open}                                                                                                                                                                                          |                 1      1
    DateTime intervals                                                                                                                                                                                                   |                 2      2
      Interval{DateTime}                                                                                                                                                                                                 |                 1      1
      AnchoredInterval                                                                                                                                                                                                   |                 1      1
  Doctests: Intervals                                                                                                                                                                                                    |          1             1
ERROR: LoadError: Some tests did not pass: 8056 passed, 51 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Intervals/T6hJb/test/runtests.jl:13
ERROR: Package Intervals errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
