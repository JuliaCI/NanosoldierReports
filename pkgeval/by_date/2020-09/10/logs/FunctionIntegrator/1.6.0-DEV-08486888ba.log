Julia Version 1.6.0-DEV.878
Commit 08486888ba (2020-09-09 16:27 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_2bzE45/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_2bzE45/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.805160 seconds (1.37 M allocations: 72.610 MiB, 2.55% gc time)
Running: chebyshev_quadrature with k=1
  1.668165 seconds (2.16 M allocations: 123.982 MiB, 4.70% gc time)
Running: chebyshev_quadrature with k=2
  0.280160 seconds (410.94 k allocations: 23.596 MiB, 7.47% gc time)
Running: chebyshev_quadrature with k=3
  0.313558 seconds (524.65 k allocations: 28.767 MiB)
Running: chebyshev_quadrature with k=4
  0.347963 seconds (469.05 k allocations: 25.378 MiB, 15.61% gc time)
Running: jacobi_quadrature with α=β=1
 39.470573 seconds (37.26 M allocations: 3.043 GiB, 9.76% gc time)
Running: laguerre_quadrature with k=1
  2.627972 seconds (3.20 M allocations: 177.804 MiB, 3.23% gc time)
Running: legendre_quadrature
  0.181486 seconds (207.16 k allocations: 11.932 MiB)
Running: lobatto_quadrature
  0.308838 seconds (332.13 k allocations: 19.990 MiB, 7.22% gc time)
Running: radau_quadrature
  0.225662 seconds (314.89 k allocations: 19.006 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 75.920951 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rectangle_rule_midpoint.
  0.147535 seconds (172.85 k allocations: 3.842 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.503405 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.548711 seconds (726.29 k allocations: 41.822 MiB, 5.79% gc time)
Running: simpsons_rule
  0.039524 seconds (46.21 k allocations: 2.061 MiB)
Running: simpsons38_rule
  0.094777 seconds (109.80 k allocations: 5.799 MiB)
Running: trapezoidal_rule
  0.317980 seconds (1.51 M allocations: 25.700 MiB, 4.84% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.091136 seconds (31.52 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.468824 seconds (274.18 k allocations: 14.216 MiB)
Running: chebyshev_quadrature with k=2
  0.150482 seconds (93.97 k allocations: 2.681 MiB)
Running: chebyshev_quadrature with k=3
  0.168510 seconds (82.22 k allocations: 2.482 MiB)
Running: chebyshev_quadrature with k=4
  0.157210 seconds (64.83 k allocations: 2.128 MiB)
Running: jacobi_quadrature with α=β=1
  2.617639 seconds (500.52 k allocations: 161.645 MiB, 6.73% gc time)
Running: legendre_quadrature
  0.177950 seconds (41.84 k allocations: 2.412 MiB)
Running: lobatto_quadrature
  0.020140 seconds (16.20 k allocations: 1.006 MiB)
Running: radau_quadrature
  0.020294 seconds (16.18 k allocations: 1.005 MiB)
Running: rectangle_rule_left
 29.284412 seconds (471.41 M allocations: 7.025 GiB, 2.08% gc time)
Running: rectangle_rule_midpoint
  0.000032 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.910701 seconds (476.96 M allocations: 7.107 GiB, 2.25% gc time)
Running: rombergs_method
  0.373086 seconds (328.42 k allocations: 18.608 MiB)
Running: simpsons_rule
  0.000092 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.071966 seconds (19.27 k allocations: 1.161 MiB)
Running: trapezoidal_rule
  0.063520 seconds (17.75 k allocations: 1.067 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030742 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.113115 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.107592 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.133442 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.125115 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.303162 seconds (363.38 k allocations: 18.937 MiB)
Running: legendre_quadrature
  0.068753 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000140 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000107 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000519 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000395 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000598 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074950 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000066 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025862 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022978 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.068433 seconds (73.32 k allocations: 4.254 MiB)
Running: chebyshev_quadrature with k=1
  0.206476 seconds (231.21 k allocations: 12.989 MiB)
Running: chebyshev_quadrature with k=2
  0.248862 seconds (284.06 k allocations: 15.893 MiB, 12.22% gc time)
Running: chebyshev_quadrature with k=3
  0.206967 seconds (263.44 k allocations: 14.314 MiB)
Running: chebyshev_quadrature with k=4
  0.203963 seconds (263.46 k allocations: 14.227 MiB)
Running: jacobi_quadrature with α=β=1
  2.277665 seconds (447.41 k allocations: 163.222 MiB, 5.91% gc time)
Running: legendre_quadrature
  0.194594 seconds (186.06 k allocations: 10.714 MiB)
Running: lobatto_quadrature
  0.205521 seconds (196.99 k allocations: 11.421 MiB, 10.11% gc time)
Running: radau_quadrature
  0.185592 seconds (196.98 k allocations: 11.408 MiB)
Running: rectangle_rule_left
  1.274131 seconds (19.09 k allocations: 1.158 MiB)
Running: rectangle_rule_midpoint
  0.026275 seconds (25.05 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  1.127090 seconds (17.64 k allocations: 1.073 MiB)
Running: rombergs_method
  0.120537 seconds (134.40 k allocations: 7.756 MiB)
Running: simpsons_rule
  0.028994 seconds (27.97 k allocations: 1.746 MiB)
Running: simpsons38_rule
  0.034665 seconds (43.06 k allocations: 2.706 MiB)
Running: trapezoidal_rule
  0.026205 seconds (44.46 k allocations: 1.786 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040875 seconds (100.03 k allocations: 2.999 MiB)
Running: chebyshev_quadrature with k=1
  0.293372 seconds (237.80 k allocations: 13.034 MiB, 8.51% gc time)
Running: chebyshev_quadrature with k=2
  0.259568 seconds (291.08 k allocations: 15.949 MiB)
Running: chebyshev_quadrature with k=3
  0.232394 seconds (270.17 k allocations: 14.313 MiB)
Running: chebyshev_quadrature with k=4
  0.253510 seconds (270.19 k allocations: 14.323 MiB, 9.83% gc time)
Running: hermite_quadrature with k=2
 15.535945 seconds (20.95 M allocations: 1.089 GiB, 9.66% gc time)
Running: jacobi_quadrature with α=β=1
  0.510000 seconds (456.63 k allocations: 49.402 MiB, 6.62% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.255117 seconds (277.29 k allocations: 15.263 MiB)
Running: legendre_quadrature
  0.220695 seconds (192.63 k allocations: 11.043 MiB, 16.77% gc time)
Running: lobatto_quadrature
  0.235859 seconds (217.81 k allocations: 37.177 MiB)
Running: radau_quadrature
  0.258643 seconds (214.40 k allocations: 29.841 MiB, 10.62% gc time)
Running: rectangle_rule_left
  0.031555 seconds (22.05 k allocations: 1.306 MiB)
Running: rectangle_rule_midpoint
  0.031882 seconds (26.89 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.028602 seconds (18.79 k allocations: 1.129 MiB)
Running: rombergs_method
  0.133944 seconds (136.88 k allocations: 7.791 MiB)
Running: simpsons_rule
  0.041552 seconds (39.87 k allocations: 2.080 MiB)
Running: simpsons38_rule
  0.041362 seconds (58.09 k allocations: 3.092 MiB)
Running: trapezoidal_rule
  0.032193 seconds (30.55 k allocations: 1.714 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034284 seconds (60.38 k allocations: 2.298 MiB)
Running: chebyshev_quadrature with k=1
  0.214144 seconds (233.32 k allocations: 12.823 MiB, 10.45% gc time)
Running: chebyshev_quadrature with k=2
  0.307778 seconds (286.28 k allocations: 15.647 MiB)
Running: chebyshev_quadrature with k=3
  0.260837 seconds (265.58 k allocations: 14.109 MiB)
Running: chebyshev_quadrature with k=4
  0.298587 seconds (265.60 k allocations: 14.111 MiB, 9.17% gc time)
Running: hermite_quadrature with k=2
  0.165463 seconds (171.23 k allocations: 9.790 MiB)
Running: jacobi_quadrature with α=β=1
 11.028880 seconds (449.86 k allocations: 1.175 GiB, 16.61% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.249251 seconds (272.56 k allocations: 15.085 MiB)
Running: legendre_quadrature
  0.261210 seconds (188.18 k allocations: 10.822 MiB, 12.26% gc time)
Running: lobatto_quadrature
  0.303104 seconds (208.56 k allocations: 22.909 MiB)
Running: radau_quadrature
  0.231083 seconds (207.71 k allocations: 20.844 MiB, 6.60% gc time)
Running: rectangle_rule_left
  0.036755 seconds (19.81 k allocations: 1.200 MiB)
Running: rectangle_rule_midpoint
  0.037342 seconds (25.76 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.041332 seconds (17.63 k allocations: 1.073 MiB)
Running: rombergs_method
  0.151864 seconds (132.69 k allocations: 7.610 MiB)
Running: simpsons_rule
  0.042066 seconds (32.36 k allocations: 1.871 MiB)
Running: simpsons38_rule
  0.106069 seconds (48.87 k allocations: 2.851 MiB)
Running: trapezoidal_rule
  0.034572 seconds (25.43 k allocations: 1.550 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.047026 seconds (31.33 k allocations: 1.893 MiB)
Running: chebyshev_quadrature with k=1
  0.252161 seconds (231.70 k allocations: 13.045 MiB)
Running: chebyshev_quadrature with k=2
  0.300671 seconds (284.56 k allocations: 15.989 MiB, 14.06% gc time)
Running: chebyshev_quadrature with k=3
  0.218516 seconds (263.95 k allocations: 14.324 MiB)
Running: chebyshev_quadrature with k=4
  0.239102 seconds (263.97 k allocations: 14.162 MiB)
Running: jacobi_quadrature with α=β=1
  2.435543 seconds (447.96 k allocations: 194.216 MiB, 4.66% gc time)
Running: legendre_quadrature
  0.166584 seconds (186.56 k allocations: 10.746 MiB)
Running: lobatto_quadrature
  0.185885 seconds (197.49 k allocations: 11.452 MiB)
Running: radau_quadrature
  0.214715 seconds (197.49 k allocations: 11.497 MiB, 9.42% gc time)
Running: rectangle_rule_left
  0.307480 seconds (19.61 k allocations: 1.184 MiB)
Running: rectangle_rule_midpoint
  0.029797 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  0.115476 seconds (17.99 k allocations: 1.092 MiB)
Running: rombergs_method
  0.175796 seconds (145.33 k allocations: 8.496 MiB)
Running: simpsons_rule
  0.033288 seconds (28.67 k allocations: 1.776 MiB)
Running: simpsons38_rule
  0.036417 seconds (43.78 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.027220 seconds (45.40 k allocations: 1.820 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034391 seconds (32.09 k allocations: 1.844 MiB)
Running: chebyshev_quadrature with k=1
  0.192372 seconds (232.29 k allocations: 12.990 MiB)
Running: chebyshev_quadrature with k=2
  0.247178 seconds (285.19 k allocations: 15.915 MiB, 7.60% gc time)
Running: chebyshev_quadrature with k=3
  0.213717 seconds (264.53 k allocations: 14.248 MiB)
Running: chebyshev_quadrature with k=4
  0.209871 seconds (264.55 k allocations: 14.326 MiB)
Running: jacobi_quadrature with α=β=1
  2.942532 seconds (448.66 k allocations: 148.904 MiB, 10.18% gc time)
Running: legendre_quadrature
  0.154184 seconds (187.15 k allocations: 10.789 MiB)
Running: lobatto_quadrature
  0.175295 seconds (198.09 k allocations: 11.448 MiB)
Running: radau_quadrature
  0.191385 seconds (198.08 k allocations: 11.514 MiB, 8.94% gc time)
Running: rectangle_rule_left
  1.200387 seconds (19.86 k allocations: 1.197 MiB)
Running: rectangle_rule_midpoint
  0.040513 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  1.281840 seconds (17.95 k allocations: 1.089 MiB)
Running: rombergs_method
  0.151428 seconds (135.63 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.035395 seconds (29.37 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.048166 seconds (44.48 k allocations: 2.761 MiB)
Running: trapezoidal_rule
  0.031122 seconds (57.63 k allocations: 2.020 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.171120 seconds (147.31 k allocations: 8.778 MiB)
Running: chebyshev_quadrature with k=1
  0.155098 seconds (70.10 k allocations: 2.210 MiB)
Running: chebyshev_quadrature with k=2
  0.160448 seconds (105.26 k allocations: 2.874 MiB)
Running: chebyshev_quadrature with k=3
  0.162075 seconds (92.74 k allocations: 2.660 MiB)
Running: chebyshev_quadrature with k=4
  0.158635 seconds (72.27 k allocations: 2.256 MiB)
Running: jacobi_quadrature with α=β=1
  2.071621 seconds (475.90 k allocations: 167.531 MiB, 8.90% gc time)
Running: legendre_quadrature
  0.131533 seconds (18.89 k allocations: 1.097 MiB)
Running: lobatto_quadrature
  0.000105 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000070 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 44.625824 seconds (590.00 M allocations: 8.792 GiB, 2.63% gc time)
Running: rectangle_rule_midpoint
  0.000081 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 44.181853 seconds (592.75 M allocations: 8.833 GiB, 2.69% gc time)
Running: rombergs_method
  0.138837 seconds (20.67 k allocations: 1.171 MiB)
Running: simpsons_rule
  0.000063 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029449 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022219 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.800761 seconds (629.33 M allocations: 9.387 GiB, 3.97% gc time)
Running: chebyshev_quadrature with k=1
  0.532525 seconds (420.95 k allocations: 23.224 MiB, 3.62% gc time)
Running: chebyshev_quadrature with k=2
 14.023760 seconds (475.86 k allocations: 4.041 GiB, 4.08% gc time)
Running: chebyshev_quadrature with k=3
  6.089177 seconds (277.89 k allocations: 1.643 GiB, 4.87% gc time)
Running: chebyshev_quadrature with k=4
  8.310983 seconds (277.91 k allocations: 2.261 GiB, 2.49% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.485838 seconds (485.47 k allocations: 13.254 GiB, 2.96% gc time)
Running: legendre_quadrature.
  5.763868 seconds (224.39 k allocations: 1.976 GiB, 1.25% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.778473 seconds (8.23 M allocations: 13.383 GiB, 2.96% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.804029 seconds (7.23 M allocations: 13.369 GiB, 2.42% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.975531 seconds (22.55 k allocations: 1.359 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.010328 seconds (30.88 k allocations: 1.901 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.068876 seconds (22.76 k allocations: 1.369 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.153965 seconds (440.36 k allocations: 152.754 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.419307 seconds (600.04 M allocations: 8.943 GiB, 8.44% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.365540 seconds (600.05 M allocations: 8.943 GiB, 8.11% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.318487 seconds (600.03 M allocations: 8.943 GiB, 8.42% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.076402 seconds (180.97 k allocations: 4.427 MiB)
Running: chebyshev_quadrature with k=1
  0.250389 seconds (248.27 k allocations: 13.490 MiB)
Running: chebyshev_quadrature with k=2
  0.241456 seconds (272.84 k allocations: 14.578 MiB)
Running: chebyshev_quadrature with k=3
  0.207277 seconds (248.77 k allocations: 12.811 MiB)
Running: chebyshev_quadrature with k=4
  0.204319 seconds (248.79 k allocations: 12.804 MiB)
Running: jacobi_quadrature with α=β=1
  0.375517 seconds (388.78 k allocations: 34.929 MiB)
Running: laguerre_quadrature with k=2
  0.178723 seconds (181.10 k allocations: 10.514 MiB)
Running: legendre_quadrature
  0.125815 seconds (146.05 k allocations: 8.057 MiB)
Running: lobatto_quadrature
  0.036851 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.032771 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.054250 seconds (19.12 k allocations: 1.132 MiB)
Running: rectangle_rule_midpoint
  0.048275 seconds (25.86 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.053019 seconds (17.73 k allocations: 1.059 MiB)
Running: rombergs_method
  0.271840 seconds (171.80 k allocations: 9.803 MiB)
Running: simpsons_rule
  0.001965 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.052262 seconds (79.55 k allocations: 3.411 MiB)
Running: trapezoidal_rule
  0.209155 seconds (2.39 M allocations: 37.705 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002053 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.133752 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.124773 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.127129 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.115160 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  9.309411 seconds (365.77 k allocations: 904.754 MiB, 6.09% gc time)
Running: legendre_quadrature
  0.070028 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000178 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000169 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.780485 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000491 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.977274 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.068133 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000060 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000956 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000688 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.129873 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.129333 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.139331 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.158589 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.170859 seconds (372.34 k allocations: 252.866 MiB)
Running: legendre_quadrature
  0.075754 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000110 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000059 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.865726 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001117 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.525734 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.077428 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000039 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001691 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
