Julia Version 1.6.0-DEV.888
Commit 0d7dc9621e (2020-09-10 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_wPtRjz/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_wPtRjz/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.958092 seconds (1.37 M allocations: 72.710 MiB, 1.84% gc time)
Running: chebyshev_quadrature with k=1
  1.791456 seconds (2.16 M allocations: 123.968 MiB, 5.75% gc time)
Running: chebyshev_quadrature with k=2
  0.341979 seconds (410.94 k allocations: 23.596 MiB, 15.91% gc time)
Running: chebyshev_quadrature with k=3
  0.294674 seconds (524.65 k allocations: 28.749 MiB)
Running: chebyshev_quadrature with k=4
  0.385986 seconds (469.05 k allocations: 25.373 MiB, 18.09% gc time)
Running: jacobi_quadrature with α=β=1
 40.582739 seconds (37.26 M allocations: 3.042 GiB, 9.00% gc time)
Running: laguerre_quadrature with k=1
  3.251484 seconds (3.20 M allocations: 177.813 MiB, 5.46% gc time)
Running: legendre_quadrature
  0.283537 seconds (207.28 k allocations: 11.877 MiB, 15.46% gc time)
Running: lobatto_quadrature
  0.351092 seconds (332.09 k allocations: 19.976 MiB)
Running: radau_quadrature
  0.226739 seconds (314.93 k allocations: 19.008 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.610906 seconds (100.02 M allocations: 1.491 GiB, 0.34% gc time)
Running: rectangle_rule_midpoint.
  0.151251 seconds (172.85 k allocations: 3.842 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.908526 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time)
Running: rombergs_method
  0.535571 seconds (726.44 k allocations: 41.829 MiB, 5.51% gc time)
Running: simpsons_rule
  0.041741 seconds (46.21 k allocations: 2.061 MiB)
Running: simpsons38_rule
  0.094810 seconds (109.97 k allocations: 5.809 MiB)
Running: trapezoidal_rule
  0.353065 seconds (1.51 M allocations: 25.709 MiB, 4.79% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.106172 seconds (31.52 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.547403 seconds (276.24 k allocations: 14.323 MiB)
Running: chebyshev_quadrature with k=2
  0.226081 seconds (93.97 k allocations: 2.681 MiB)
Running: chebyshev_quadrature with k=3
  0.214715 seconds (82.22 k allocations: 2.482 MiB)
Running: chebyshev_quadrature with k=4
  0.194713 seconds (64.83 k allocations: 2.128 MiB)
Running: jacobi_quadrature with α=β=1
  1.529630 seconds (500.85 k allocations: 161.694 MiB, 11.09% gc time)
Running: legendre_quadrature
  0.160784 seconds (41.96 k allocations: 2.419 MiB)
Running: lobatto_quadrature
  0.020978 seconds (16.32 k allocations: 1.012 MiB)
Running: radau_quadrature
  0.020798 seconds (16.30 k allocations: 1.012 MiB)
Running: rectangle_rule_left
 27.723380 seconds (471.41 M allocations: 7.025 GiB, 2.91% gc time)
Running: rectangle_rule_midpoint
  0.000055 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 27.912319 seconds (476.96 M allocations: 7.107 GiB, 2.64% gc time)
Running: rombergs_method
  0.396092 seconds (328.55 k allocations: 18.615 MiB)
Running: simpsons_rule
  0.000070 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.067701 seconds (19.27 k allocations: 1.161 MiB)
Running: trapezoidal_rule
  0.058247 seconds (17.75 k allocations: 1.068 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030053 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.102967 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.106666 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.112054 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.115582 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.298798 seconds (363.41 k allocations: 18.938 MiB)
Running: legendre_quadrature
  0.068432 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000099 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000507 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000356 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000513 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075536 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000037 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025032 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022548 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059263 seconds (73.32 k allocations: 4.254 MiB)
Running: chebyshev_quadrature with k=1
  0.185161 seconds (231.21 k allocations: 12.989 MiB)
Running: chebyshev_quadrature with k=2
  0.305522 seconds (284.05 k allocations: 15.893 MiB, 24.34% gc time)
Running: chebyshev_quadrature with k=3
  0.225171 seconds (263.44 k allocations: 14.318 MiB)
Running: chebyshev_quadrature with k=4
  0.370248 seconds (263.46 k allocations: 14.227 MiB, 42.12% gc time)
Running: jacobi_quadrature with α=β=1
  2.234192 seconds (447.44 k allocations: 163.192 MiB, 7.10% gc time)
Running: legendre_quadrature
  0.160193 seconds (186.06 k allocations: 10.714 MiB)
Running: lobatto_quadrature
  0.177644 seconds (197.00 k allocations: 11.410 MiB, 6.65% gc time)
Running: radau_quadrature
  0.173012 seconds (196.99 k allocations: 11.408 MiB)
Running: rectangle_rule_left
  1.053457 seconds (19.09 k allocations: 1.158 MiB)
Running: rectangle_rule_midpoint
  0.023465 seconds (25.05 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  1.009418 seconds (17.64 k allocations: 1.073 MiB)
Running: rombergs_method
  0.140024 seconds (134.40 k allocations: 7.752 MiB)
Running: simpsons_rule
  0.032361 seconds (27.97 k allocations: 1.747 MiB)
Running: simpsons38_rule
  0.037289 seconds (43.06 k allocations: 2.705 MiB)
Running: trapezoidal_rule
  0.027998 seconds (44.46 k allocations: 1.786 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044674 seconds (100.03 k allocations: 2.999 MiB)
Running: chebyshev_quadrature with k=1
  0.228529 seconds (237.80 k allocations: 13.033 MiB, 14.94% gc time)
Running: chebyshev_quadrature with k=2
  0.204832 seconds (291.08 k allocations: 15.964 MiB)
Running: chebyshev_quadrature with k=3
  0.230434 seconds (270.17 k allocations: 14.313 MiB)
Running: chebyshev_quadrature with k=4
  0.228714 seconds (270.19 k allocations: 14.323 MiB, 7.06% gc time)
Running: hermite_quadrature with k=2
 14.811709 seconds (20.95 M allocations: 1.089 GiB, 8.58% gc time)
Running: jacobi_quadrature with α=β=1
  0.469048 seconds (456.66 k allocations: 49.400 MiB, 7.87% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.218177 seconds (277.29 k allocations: 15.259 MiB)
Running: legendre_quadrature
  0.187563 seconds (192.63 k allocations: 11.043 MiB, 16.73% gc time)
Running: lobatto_quadrature
  0.213034 seconds (217.82 k allocations: 37.178 MiB)
Running: radau_quadrature
  0.244505 seconds (214.41 k allocations: 29.841 MiB, 9.33% gc time)
Running: rectangle_rule_left
  0.030799 seconds (22.05 k allocations: 1.306 MiB)
Running: rectangle_rule_midpoint
  0.029519 seconds (26.89 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.026745 seconds (18.79 k allocations: 1.129 MiB)
Running: rombergs_method
  0.118394 seconds (136.88 k allocations: 7.791 MiB)
Running: simpsons_rule
  0.037770 seconds (39.87 k allocations: 2.080 MiB)
Running: simpsons38_rule
  0.042440 seconds (58.09 k allocations: 3.092 MiB)
Running: trapezoidal_rule
  0.031471 seconds (30.55 k allocations: 1.714 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.075232 seconds (60.38 k allocations: 2.298 MiB, 38.01% gc time)
Running: chebyshev_quadrature with k=1
  0.195002 seconds (233.32 k allocations: 12.823 MiB)
Running: chebyshev_quadrature with k=2
  0.222576 seconds (286.28 k allocations: 15.709 MiB)
Running: chebyshev_quadrature with k=3
  0.187429 seconds (265.58 k allocations: 14.109 MiB)
Running: chebyshev_quadrature with k=4
  0.219790 seconds (265.60 k allocations: 14.111 MiB, 12.11% gc time)
Running: hermite_quadrature with k=2
  0.159118 seconds (171.23 k allocations: 9.790 MiB)
Running: jacobi_quadrature with α=β=1
  9.372486 seconds (449.89 k allocations: 1.175 GiB, 16.91% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.225965 seconds (272.56 k allocations: 15.081 MiB, 5.52% gc time)
Running: legendre_quadrature
  0.156728 seconds (188.18 k allocations: 10.822 MiB)
Running: lobatto_quadrature
  0.218855 seconds (208.57 k allocations: 22.910 MiB, 6.86% gc time)
Running: radau_quadrature
  0.207158 seconds (207.72 k allocations: 20.845 MiB)
Running: rectangle_rule_left
  0.028291 seconds (19.81 k allocations: 1.200 MiB)
Running: rectangle_rule_midpoint
  0.028385 seconds (25.76 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.025631 seconds (17.63 k allocations: 1.073 MiB)
Running: rombergs_method
  0.119630 seconds (132.69 k allocations: 7.611 MiB)
Running: simpsons_rule
  0.037964 seconds (32.36 k allocations: 1.871 MiB)
Running: simpsons38_rule
  0.082313 seconds (48.87 k allocations: 2.851 MiB)
Running: trapezoidal_rule
  0.028258 seconds (25.43 k allocations: 1.550 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034762 seconds (31.33 k allocations: 1.893 MiB)
Running: chebyshev_quadrature with k=1
  0.203522 seconds (231.70 k allocations: 13.045 MiB, 7.69% gc time)
Running: chebyshev_quadrature with k=2
  0.224836 seconds (284.56 k allocations: 15.989 MiB)
Running: chebyshev_quadrature with k=3
  0.208945 seconds (263.95 k allocations: 14.324 MiB)
Running: chebyshev_quadrature with k=4
  0.229881 seconds (263.97 k allocations: 14.162 MiB, 7.61% gc time)
Running: jacobi_quadrature with α=β=1
  1.881654 seconds (447.99 k allocations: 194.220 MiB, 6.57% gc time)
Running: legendre_quadrature
  0.164626 seconds (186.56 k allocations: 10.746 MiB)
Running: lobatto_quadrature
  0.188374 seconds (197.50 k allocations: 11.437 MiB)
Running: radau_quadrature
  0.189384 seconds (197.50 k allocations: 11.431 MiB)
Running: rectangle_rule_left
  0.298594 seconds (19.61 k allocations: 1.184 MiB)
Running: rectangle_rule_midpoint
  0.027071 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  0.142044 seconds (17.99 k allocations: 1.092 MiB)
Running: rombergs_method
  0.143390 seconds (145.33 k allocations: 8.496 MiB)
Running: simpsons_rule
  0.033889 seconds (28.67 k allocations: 1.776 MiB)
Running: simpsons38_rule
  0.037816 seconds (43.78 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.028515 seconds (45.40 k allocations: 1.820 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.040022 seconds (32.09 k allocations: 1.844 MiB)
Running: chebyshev_quadrature with k=1
  0.233305 seconds (232.29 k allocations: 13.053 MiB, 9.77% gc time)
Running: chebyshev_quadrature with k=2
  0.243669 seconds (285.19 k allocations: 15.915 MiB)
Running: chebyshev_quadrature with k=3
  0.208227 seconds (264.53 k allocations: 14.247 MiB)
Running: chebyshev_quadrature with k=4
  0.365411 seconds (264.55 k allocations: 14.326 MiB, 5.57% gc time)
Running: jacobi_quadrature with α=β=1
  2.518191 seconds (448.70 k allocations: 148.917 MiB, 4.56% gc time)
Running: legendre_quadrature
  0.154134 seconds (187.15 k allocations: 10.789 MiB)
Running: lobatto_quadrature
  0.217378 seconds (198.10 k allocations: 11.512 MiB)
Running: radau_quadrature
  0.175933 seconds (198.09 k allocations: 11.452 MiB)
Running: rectangle_rule_left
  1.171846 seconds (19.86 k allocations: 1.197 MiB)
Running: rectangle_rule_midpoint
  0.027577 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  1.129162 seconds (17.95 k allocations: 1.089 MiB)
Running: rombergs_method
  0.137458 seconds (135.63 k allocations: 7.808 MiB)
Running: simpsons_rule
  0.033240 seconds (29.37 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.037441 seconds (44.48 k allocations: 2.761 MiB)
Running: trapezoidal_rule
  0.029042 seconds (57.63 k allocations: 2.020 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.155639 seconds (147.31 k allocations: 8.779 MiB)
Running: chebyshev_quadrature with k=1
  0.146110 seconds (70.10 k allocations: 2.210 MiB)
Running: chebyshev_quadrature with k=2
  0.151619 seconds (105.25 k allocations: 2.873 MiB)
Running: chebyshev_quadrature with k=3
  0.189548 seconds (92.74 k allocations: 2.661 MiB, 14.91% gc time)
Running: chebyshev_quadrature with k=4
  0.177358 seconds (72.27 k allocations: 2.256 MiB)
Running: jacobi_quadrature with α=β=1
  1.765665 seconds (476.08 k allocations: 167.539 MiB, 3.38% gc time)
Running: legendre_quadrature
  0.177347 seconds (18.89 k allocations: 1.097 MiB)
Running: lobatto_quadrature
  0.000203 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000167 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.945745 seconds (590.00 M allocations: 8.792 GiB, 3.52% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.278825 seconds (592.75 M allocations: 8.833 GiB, 3.39% gc time)
Running: rombergs_method
  0.142337 seconds (20.67 k allocations: 1.171 MiB)
Running: simpsons_rule
  0.000053 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031428 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024700 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.419768 seconds (629.33 M allocations: 9.387 GiB, 5.06% gc time)
Running: chebyshev_quadrature with k=1
  0.613740 seconds (421.07 k allocations: 23.239 MiB)
Running: chebyshev_quadrature with k=2
 13.003888 seconds (475.98 k allocations: 4.041 GiB, 4.15% gc time)
Running: chebyshev_quadrature with k=3
  5.851482 seconds (277.89 k allocations: 1.643 GiB, 4.54% gc time)
Running: chebyshev_quadrature with k=4
  8.151556 seconds (277.91 k allocations: 2.261 GiB, 2.57% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 60.552130 seconds (485.65 k allocations: 13.254 GiB, 3.28% gc time)
Running: legendre_quadrature.
  5.226103 seconds (224.51 k allocations: 1.976 GiB, 1.23% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.355560 seconds (8.23 M allocations: 13.383 GiB, 4.03% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.169510 seconds (7.23 M allocations: 13.369 GiB, 2.56% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.267668 seconds (22.55 k allocations: 1.359 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.101417 seconds (30.88 k allocations: 1.901 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.056794 seconds (22.76 k allocations: 1.369 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.102584 seconds (440.48 k allocations: 152.761 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.117437 seconds (600.04 M allocations: 8.943 GiB, 8.11% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.042181 seconds (600.05 M allocations: 8.943 GiB, 7.87% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.941714 seconds (600.03 M allocations: 8.943 GiB, 8.03% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065322 seconds (180.97 k allocations: 4.428 MiB)
Running: chebyshev_quadrature with k=1
  0.238239 seconds (248.27 k allocations: 13.490 MiB)
Running: chebyshev_quadrature with k=2
  0.230461 seconds (272.84 k allocations: 14.515 MiB)
Running: chebyshev_quadrature with k=3
  0.230408 seconds (248.77 k allocations: 12.811 MiB)
Running: chebyshev_quadrature with k=4
  0.202970 seconds (248.79 k allocations: 12.804 MiB)
Running: jacobi_quadrature with α=β=1
  0.412104 seconds (388.81 k allocations: 34.934 MiB)
Running: laguerre_quadrature with k=2
  0.221116 seconds (181.10 k allocations: 10.514 MiB)
Running: legendre_quadrature
  0.134696 seconds (146.05 k allocations: 8.057 MiB)
Running: lobatto_quadrature
  0.037367 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.032198 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.059386 seconds (19.12 k allocations: 1.132 MiB)
Running: rectangle_rule_midpoint
  0.049517 seconds (25.86 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.051798 seconds (17.73 k allocations: 1.059 MiB)
Running: rombergs_method
  0.284671 seconds (171.91 k allocations: 9.810 MiB)
Running: simpsons_rule
  0.002002 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.056107 seconds (79.55 k allocations: 3.411 MiB)
Running: trapezoidal_rule
  0.211705 seconds (2.39 M allocations: 37.705 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001877 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.114154 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.126325 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.121117 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.122199 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  7.805112 seconds (365.81 k allocations: 904.756 MiB, 3.25% gc time)
Running: legendre_quadrature
  0.075009 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000191 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000134 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.769144 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000516 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.047934 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065884 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000094 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000064 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000879 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000740 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.121802 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.113002 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.122971 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.132599 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.867689 seconds (372.37 k allocations: 252.867 MiB)
Running: legendre_quadrature
  0.071556 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000056 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.766453 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001216 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.755978 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.100325 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000120 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000074 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001985 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
